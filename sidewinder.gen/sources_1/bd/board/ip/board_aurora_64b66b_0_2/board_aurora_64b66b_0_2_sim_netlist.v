// Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2021.1 (lin64) Build 3247384 Thu Jun 10 19:36:07 MDT 2021
// Date        : Sun Nov  6 17:58:04 2022
// Host        : simtool5-2 running 64-bit Ubuntu 20.04.5 LTS
// Command     : write_verilog -force -mode funcsim
//               /fpga/eecd/sidewinder.gen/sources_1/bd/board/ip/board_aurora_64b66b_0_2/board_aurora_64b66b_0_2_sim_netlist.v
// Design      : board_aurora_64b66b_0_2
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xczu19eg-ffvc1760-2-i
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "aurora_64b66b_v12_0_6, Coregen v14.3_ip3, Number of lanes = 4, Line rate is double25.78125Gbps, Reference Clock is double322.265625MHz, Interface is Streaming, Flow Control is None and is operating in DUPLEX configuration" *) 
(* NotValidForBitStream *)
module board_aurora_64b66b_0_2
   (s_axi_tx_tdata,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    gt_refclk1_p,
    gt_refclk1_n,
    gt_refclk1_out,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    user_clk_out,
    mmcm_not_locked_out,
    sync_clk_out,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt_pll_lock,
    init_clk,
    link_reset_out,
    gt_powergood,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_qplllock_quad1_out,
    gt_qpllrefclklost_quad1_out,
    sys_reset_out,
    gt_reset_out,
    tx_out_clk);
  input [0:255]s_axi_tx_tdata;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:255]m_axi_rx_tdata;
  output m_axi_rx_tvalid;
  input [0:3]rxp;
  input [0:3]rxn;
  output [0:3]txp;
  output [0:3]txn;
  input gt_refclk1_p;
  input gt_refclk1_n;
  output gt_refclk1_out;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:3]lane_up;
  output user_clk_out;
  output mmcm_not_locked_out;
  output sync_clk_out;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output gt_pll_lock;
  input init_clk;
  output link_reset_out;
  output [3:0]gt_powergood;
  output gt_qpllclk_quad1_out;
  output gt_qpllrefclk_quad1_out;
  output gt_qplllock_quad1_out;
  output gt_qpllrefclklost_quad1_out;
  output sys_reset_out;
  output gt_reset_out;
  output tx_out_clk;

  wire channel_up;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_qpllrefclklost_quad1_out;
  wire gt_refclk1_n;
  wire gt_refclk1_out;
  wire gt_refclk1_p;
  wire gt_reset_out;
  wire gt_rxcdrovrden_in;
  wire hard_err;
  wire init_clk;
  wire [0:3]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out;
  wire pma_init;
  wire power_down;
  wire reset_pb;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire sync_clk_out;
  wire sys_reset_out;
  wire tx_out_clk;
  wire [0:3]txn;
  wire [0:3]txp;
  wire user_clk_out;
  wire NLW_inst_gt0_drprdy_UNCONNECTED;
  wire NLW_inst_gt1_drprdy_UNCONNECTED;
  wire NLW_inst_gt2_drprdy_UNCONNECTED;
  wire NLW_inst_gt3_drprdy_UNCONNECTED;
  wire NLW_inst_mmcm_not_locked_out_UNCONNECTED;
  wire [15:0]NLW_inst_gt0_drpdo_UNCONNECTED;
  wire [15:0]NLW_inst_gt1_drpdo_UNCONNECTED;
  wire [15:0]NLW_inst_gt2_drpdo_UNCONNECTED;
  wire [15:0]NLW_inst_gt3_drpdo_UNCONNECTED;

  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  board_aurora_64b66b_0_2_support inst
       (.channel_up(channel_up),
        .gt0_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt0_drpdo(NLW_inst_gt0_drpdo_UNCONNECTED[15:0]),
        .gt0_drpen(1'b0),
        .gt0_drprdy(NLW_inst_gt0_drprdy_UNCONNECTED),
        .gt0_drpwe(1'b0),
        .gt1_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt1_drpdo(NLW_inst_gt1_drpdo_UNCONNECTED[15:0]),
        .gt1_drpen(1'b0),
        .gt1_drprdy(NLW_inst_gt1_drprdy_UNCONNECTED),
        .gt1_drpwe(1'b0),
        .gt2_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt2_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt2_drpdo(NLW_inst_gt2_drpdo_UNCONNECTED[15:0]),
        .gt2_drpen(1'b0),
        .gt2_drprdy(NLW_inst_gt2_drprdy_UNCONNECTED),
        .gt2_drpwe(1'b0),
        .gt3_drpaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt3_drpdi({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gt3_drpdo(NLW_inst_gt3_drpdo_UNCONNECTED[15:0]),
        .gt3_drpen(1'b0),
        .gt3_drprdy(NLW_inst_gt3_drprdy_UNCONNECTED),
        .gt3_drpwe(1'b0),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_qpllrefclklost_quad1_out(gt_qpllrefclklost_quad1_out),
        .gt_refclk1_n(gt_refclk1_n),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_refclk1_p(gt_refclk1_p),
        .gt_reset_out(gt_reset_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up(lane_up),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked_out(NLW_inst_mmcm_not_locked_out_UNCONNECTED),
        .mmcm_not_locked_out2(mmcm_not_locked_out),
        .pma_init(pma_init),
        .power_down(power_down),
        .reset_pb(reset_pb),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .soft_err(soft_err),
        .sync_clk_out(sync_clk_out),
        .sys_reset_out(sys_reset_out),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp),
        .user_clk_out(user_clk_out));
endmodule

module board_aurora_64b66b_0_2_AURORA_LANE
   (lane_up_flop_i,
    tx_reset_i_3,
    rst_pma_init_usrclk,
    RXDATAVALID_IN_REG,
    RX_IDLES,
    soft_err_i,
    RX_PE_DATA_V,
    hard_err_i,
    rx_polarity_r_reg,
    check_polarity_r_reg,
    D,
    \remote_rdy_cntr_reg[0] ,
    \TX_DATA_reg[63] ,
    \RX_PE_DATA_reg[0] ,
    in0,
    stg4_reg,
    SR,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    rxdatavalid_to_lanes_i,
    rx_header_err_i_3,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    Q,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i,
    gen_cc_i,
    gen_ch_bond_i,
    TX_HEADER_1_reg,
    \TX_DATA_reg[54] ,
    \TX_DATA_reg[55] ,
    remote_ready_r_reg,
    remote_ready_r_reg_0,
    remote_ready_r_reg_1,
    SOFT_ERR_reg,
    reset_lanes_i,
    rx_lossofsync_i_3,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[59] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[58] ,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[56] ,
    \TX_DATA_reg[51] ,
    \TX_DATA_reg[50] ,
    \TX_DATA_reg[49] ,
    \TX_DATA_reg[48] ,
    \TX_DATA_reg[47] ,
    \TX_DATA_reg[46] ,
    \TX_DATA_reg[45] ,
    \TX_DATA_reg[44] ,
    \TX_DATA_reg[43] ,
    \TX_DATA_reg[42] ,
    \TX_DATA_reg[41] ,
    \TX_DATA_reg[40] ,
    \TX_DATA_reg[39] ,
    \TX_DATA_reg[38] ,
    \TX_DATA_reg[37] ,
    \TX_DATA_reg[36] ,
    \TX_DATA_reg[35] ,
    \TX_DATA_reg[34] ,
    \TX_DATA_reg[33] ,
    \TX_DATA_reg[32] ,
    \TX_DATA_reg[31] ,
    \TX_DATA_reg[30] ,
    \TX_DATA_reg[29] ,
    \TX_DATA_reg[28] ,
    \TX_DATA_reg[27] ,
    \TX_DATA_reg[26] ,
    \TX_DATA_reg[25] ,
    \TX_DATA_reg[24] ,
    \TX_DATA_reg[23] ,
    \TX_DATA_reg[22] ,
    \TX_DATA_reg[21] ,
    \TX_DATA_reg[20] ,
    \TX_DATA_reg[19] ,
    \TX_DATA_reg[18] ,
    \TX_DATA_reg[17] ,
    \TX_DATA_reg[16] ,
    \TX_DATA_reg[15] ,
    \TX_DATA_reg[14] ,
    \TX_DATA_reg[13] ,
    \TX_DATA_reg[12] ,
    \TX_DATA_reg[11] ,
    \TX_DATA_reg[10] ,
    \TX_DATA_reg[9] ,
    \TX_DATA_reg[8] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[6] ,
    \TX_DATA_reg[5] ,
    \TX_DATA_reg[4] ,
    \TX_DATA_reg[3] ,
    \TX_DATA_reg[2] ,
    \TX_DATA_reg[1] ,
    \TX_DATA_reg[0] ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output tx_reset_i_3;
  output rst_pma_init_usrclk;
  output RXDATAVALID_IN_REG;
  output [0:0]RX_IDLES;
  output [0:0]soft_err_i;
  output [0:0]RX_PE_DATA_V;
  output [0:0]hard_err_i;
  output rx_polarity_r_reg;
  output check_polarity_r_reg;
  output [1:0]D;
  output \remote_rdy_cntr_reg[0] ;
  output [63:0]\TX_DATA_reg[63] ;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input in0;
  input stg4_reg;
  input [0:0]SR;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input rxdatavalid_to_lanes_i;
  input rx_header_err_i_3;
  input HARD_ERR_reg;
  input \RX_DATA_REG_reg[0] ;
  input [65:0]Q;
  input TX_HEADER_0_reg;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input TX_HEADER_1_reg;
  input [2:0]\TX_DATA_reg[54] ;
  input [0:0]\TX_DATA_reg[55] ;
  input remote_ready_r_reg;
  input remote_ready_r_reg_0;
  input remote_ready_r_reg_1;
  input SOFT_ERR_reg;
  input reset_lanes_i;
  input rx_lossofsync_i_3;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[59] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[58] ;
  input \TX_DATA_reg[57] ;
  input \TX_DATA_reg[56] ;
  input \TX_DATA_reg[51] ;
  input \TX_DATA_reg[50] ;
  input \TX_DATA_reg[49] ;
  input \TX_DATA_reg[48] ;
  input \TX_DATA_reg[47] ;
  input \TX_DATA_reg[46] ;
  input \TX_DATA_reg[45] ;
  input \TX_DATA_reg[44] ;
  input \TX_DATA_reg[43] ;
  input \TX_DATA_reg[42] ;
  input \TX_DATA_reg[41] ;
  input \TX_DATA_reg[40] ;
  input \TX_DATA_reg[39] ;
  input \TX_DATA_reg[38] ;
  input \TX_DATA_reg[37] ;
  input \TX_DATA_reg[36] ;
  input \TX_DATA_reg[35] ;
  input \TX_DATA_reg[34] ;
  input \TX_DATA_reg[33] ;
  input \TX_DATA_reg[32] ;
  input \TX_DATA_reg[31] ;
  input \TX_DATA_reg[30] ;
  input \TX_DATA_reg[29] ;
  input \TX_DATA_reg[28] ;
  input \TX_DATA_reg[27] ;
  input \TX_DATA_reg[26] ;
  input \TX_DATA_reg[25] ;
  input \TX_DATA_reg[24] ;
  input \TX_DATA_reg[23] ;
  input \TX_DATA_reg[22] ;
  input \TX_DATA_reg[21] ;
  input \TX_DATA_reg[20] ;
  input \TX_DATA_reg[19] ;
  input \TX_DATA_reg[18] ;
  input \TX_DATA_reg[17] ;
  input \TX_DATA_reg[16] ;
  input \TX_DATA_reg[15] ;
  input \TX_DATA_reg[14] ;
  input \TX_DATA_reg[13] ;
  input \TX_DATA_reg[12] ;
  input \TX_DATA_reg[11] ;
  input \TX_DATA_reg[10] ;
  input \TX_DATA_reg[9] ;
  input \TX_DATA_reg[8] ;
  input \TX_DATA_reg[7] ;
  input \TX_DATA_reg[6] ;
  input \TX_DATA_reg[5] ;
  input \TX_DATA_reg[4] ;
  input \TX_DATA_reg[3] ;
  input \TX_DATA_reg[2] ;
  input \TX_DATA_reg[1] ;
  input \TX_DATA_reg[0] ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire [1:0]D;
  wire HARD_ERR_reg;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]RX_IDLES;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire \TX_DATA_reg[0] ;
  wire \TX_DATA_reg[10] ;
  wire \TX_DATA_reg[11] ;
  wire \TX_DATA_reg[12] ;
  wire \TX_DATA_reg[13] ;
  wire \TX_DATA_reg[14] ;
  wire \TX_DATA_reg[15] ;
  wire \TX_DATA_reg[16] ;
  wire \TX_DATA_reg[17] ;
  wire \TX_DATA_reg[18] ;
  wire \TX_DATA_reg[19] ;
  wire \TX_DATA_reg[1] ;
  wire \TX_DATA_reg[20] ;
  wire \TX_DATA_reg[21] ;
  wire \TX_DATA_reg[22] ;
  wire \TX_DATA_reg[23] ;
  wire \TX_DATA_reg[24] ;
  wire \TX_DATA_reg[25] ;
  wire \TX_DATA_reg[26] ;
  wire \TX_DATA_reg[27] ;
  wire \TX_DATA_reg[28] ;
  wire \TX_DATA_reg[29] ;
  wire \TX_DATA_reg[2] ;
  wire \TX_DATA_reg[30] ;
  wire \TX_DATA_reg[31] ;
  wire \TX_DATA_reg[32] ;
  wire \TX_DATA_reg[33] ;
  wire \TX_DATA_reg[34] ;
  wire \TX_DATA_reg[35] ;
  wire \TX_DATA_reg[36] ;
  wire \TX_DATA_reg[37] ;
  wire \TX_DATA_reg[38] ;
  wire \TX_DATA_reg[39] ;
  wire \TX_DATA_reg[3] ;
  wire \TX_DATA_reg[40] ;
  wire \TX_DATA_reg[41] ;
  wire \TX_DATA_reg[42] ;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[44] ;
  wire \TX_DATA_reg[45] ;
  wire \TX_DATA_reg[46] ;
  wire \TX_DATA_reg[47] ;
  wire \TX_DATA_reg[48] ;
  wire \TX_DATA_reg[49] ;
  wire \TX_DATA_reg[4] ;
  wire \TX_DATA_reg[50] ;
  wire \TX_DATA_reg[51] ;
  wire [2:0]\TX_DATA_reg[54] ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[56] ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[5] ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[6] ;
  wire \TX_DATA_reg[7] ;
  wire \TX_DATA_reg[8] ;
  wire \TX_DATA_reg[9] ;
  wire TX_HEADER_0_reg;
  wire TX_HEADER_1_reg;
  wire check_polarity_r_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[0] ;
  wire remote_ready_r_reg;
  wire remote_ready_r_reg_0;
  wire remote_ready_r_reg_1;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rx_header_err_i_3;
  wire rx_header_err_r;
  wire rx_lossofsync_i_3;
  wire rx_polarity_r_reg;
  wire rxdatavalid_to_lanes_i;
  wire [0:0]soft_err_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg4_reg;
  wire tx_reset_i_3;
  wire txdatavalid_symgen_i;

  board_aurora_64b66b_0_2_ERR_DETECT_114 err_detect_i
       (.HARD_ERR_reg_0(HARD_ERR_reg),
        .SOFT_ERR0(SOFT_ERR0),
        .SR(SR),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .ready_r_reg0(ready_r_reg0),
        .rx_header_err_i_3(rx_header_err_i_3),
        .rx_header_err_r(rx_header_err_r),
        .rx_header_err_r_reg_0(stg4_reg),
        .soft_err_i(soft_err_i));
  board_aurora_64b66b_0_2_LANE_INIT_SM_115 lane_init_sm_i
       (.SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg(SOFT_ERR_reg),
        .SR(SR),
        .check_polarity_r_reg_0(check_polarity_r_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .illegal_btf_i(illegal_btf_i),
        .in0(in0),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_lanes_i(reset_lanes_i),
        .rst_r_reg_0(tx_reset_i_3),
        .rx_header_err_r(rx_header_err_r),
        .rx_lossofsync_i_3(rx_lossofsync_i_3),
        .rx_polarity_r_reg_0(rx_polarity_r_reg),
        .s_level_out_d6_reg(stg4_reg));
  board_aurora_64b66b_0_2_SYM_DEC_116 sym_dec_i
       (.Q(Q),
        .RXDATAVALID_IN_REG_reg_0(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .RX_IDLES(RX_IDLES),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .SR(SR),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[0]_0 (\remote_rdy_cntr_reg[0] ),
        .\remote_rdy_cntr_reg[0]_1 (lane_up_flop_i),
        .remote_ready_r_reg(remote_ready_r_reg),
        .remote_ready_r_reg_0(remote_ready_r_reg_0),
        .remote_ready_r_reg_1(remote_ready_r_reg_1),
        .\rx_na_idles_cntr_reg[0]_0 (stg4_reg),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i));
  board_aurora_64b66b_0_2_SYM_GEN_117 sym_gen_i
       (.D(D),
        .\TX_DATA_reg[0]_0 (\TX_DATA_reg[0] ),
        .\TX_DATA_reg[10]_0 (\TX_DATA_reg[10] ),
        .\TX_DATA_reg[11]_0 (\TX_DATA_reg[11] ),
        .\TX_DATA_reg[12]_0 (\TX_DATA_reg[12] ),
        .\TX_DATA_reg[13]_0 (\TX_DATA_reg[13] ),
        .\TX_DATA_reg[14]_0 (\TX_DATA_reg[14] ),
        .\TX_DATA_reg[15]_0 (\TX_DATA_reg[15] ),
        .\TX_DATA_reg[16]_0 (\TX_DATA_reg[16] ),
        .\TX_DATA_reg[17]_0 (\TX_DATA_reg[17] ),
        .\TX_DATA_reg[18]_0 (\TX_DATA_reg[18] ),
        .\TX_DATA_reg[19]_0 (\TX_DATA_reg[19] ),
        .\TX_DATA_reg[1]_0 (\TX_DATA_reg[1] ),
        .\TX_DATA_reg[20]_0 (\TX_DATA_reg[20] ),
        .\TX_DATA_reg[21]_0 (\TX_DATA_reg[21] ),
        .\TX_DATA_reg[22]_0 (\TX_DATA_reg[22] ),
        .\TX_DATA_reg[23]_0 (\TX_DATA_reg[23] ),
        .\TX_DATA_reg[24]_0 (\TX_DATA_reg[24] ),
        .\TX_DATA_reg[25]_0 (\TX_DATA_reg[25] ),
        .\TX_DATA_reg[26]_0 (\TX_DATA_reg[26] ),
        .\TX_DATA_reg[27]_0 (\TX_DATA_reg[27] ),
        .\TX_DATA_reg[28]_0 (\TX_DATA_reg[28] ),
        .\TX_DATA_reg[29]_0 (\TX_DATA_reg[29] ),
        .\TX_DATA_reg[2]_0 (\TX_DATA_reg[2] ),
        .\TX_DATA_reg[30]_0 (\TX_DATA_reg[30] ),
        .\TX_DATA_reg[31]_0 (\TX_DATA_reg[31] ),
        .\TX_DATA_reg[32]_0 (\TX_DATA_reg[32] ),
        .\TX_DATA_reg[33]_0 (\TX_DATA_reg[33] ),
        .\TX_DATA_reg[34]_0 (\TX_DATA_reg[34] ),
        .\TX_DATA_reg[35]_0 (\TX_DATA_reg[35] ),
        .\TX_DATA_reg[36]_0 (\TX_DATA_reg[36] ),
        .\TX_DATA_reg[37]_0 (\TX_DATA_reg[37] ),
        .\TX_DATA_reg[38]_0 (\TX_DATA_reg[38] ),
        .\TX_DATA_reg[39]_0 (\TX_DATA_reg[39] ),
        .\TX_DATA_reg[3]_0 (\TX_DATA_reg[3] ),
        .\TX_DATA_reg[40]_0 (\TX_DATA_reg[40] ),
        .\TX_DATA_reg[41]_0 (\TX_DATA_reg[41] ),
        .\TX_DATA_reg[42]_0 (\TX_DATA_reg[42] ),
        .\TX_DATA_reg[43]_0 (\TX_DATA_reg[43] ),
        .\TX_DATA_reg[44]_0 (\TX_DATA_reg[44] ),
        .\TX_DATA_reg[45]_0 (\TX_DATA_reg[45] ),
        .\TX_DATA_reg[46]_0 (\TX_DATA_reg[46] ),
        .\TX_DATA_reg[47]_0 (\TX_DATA_reg[47] ),
        .\TX_DATA_reg[48]_0 (\TX_DATA_reg[48] ),
        .\TX_DATA_reg[49]_0 (\TX_DATA_reg[49] ),
        .\TX_DATA_reg[4]_0 (\TX_DATA_reg[4] ),
        .\TX_DATA_reg[50]_0 (\TX_DATA_reg[50] ),
        .\TX_DATA_reg[51]_0 (\TX_DATA_reg[51] ),
        .\TX_DATA_reg[54]_0 (\TX_DATA_reg[54] ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55] ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_2 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[56]_0 (\TX_DATA_reg[56] ),
        .\TX_DATA_reg[57]_0 (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58]_0 (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[5]_0 (\TX_DATA_reg[5] ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[6]_0 (\TX_DATA_reg[6] ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .\TX_DATA_reg[8]_0 (\TX_DATA_reg[8] ),
        .\TX_DATA_reg[9]_0 (\TX_DATA_reg[9] ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg4_reg(stg4_reg),
        .stg5_reg(rst_pma_init_usrclk),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_AURORA_LANE" *) 
module board_aurora_64b66b_0_2_AURORA_LANE_2
   (lane_up_flop_i,
    tx_reset_i_2,
    rst_pma_init_usrclk,
    RX_IDLES,
    soft_err_i,
    RX_PE_DATA_V,
    hard_err_i,
    rx_polarity_r_reg,
    check_polarity_r_reg,
    D,
    \remote_rdy_cntr_reg[0] ,
    stg5_reg,
    \TX_DATA_reg[63] ,
    \RX_PE_DATA_reg[0] ,
    in0,
    stg5_reg_0,
    SR,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    ready_r_reg0,
    rx_header_err_i_2,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    Q,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i_lane1,
    TX_HEADER_1_reg,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    RXDATAVALID_IN_REG,
    SOFT_ERR_reg,
    rx_lossofsync_i_2,
    reset_lanes_i,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[59] ,
    \TX_DATA_reg[54] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[58] ,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[56] ,
    \TX_DATA_reg[51] ,
    \TX_DATA_reg[50] ,
    \TX_DATA_reg[49] ,
    \TX_DATA_reg[48] ,
    \TX_DATA_reg[47] ,
    \TX_DATA_reg[46] ,
    \TX_DATA_reg[45] ,
    \TX_DATA_reg[44] ,
    \TX_DATA_reg[43] ,
    \TX_DATA_reg[42] ,
    \TX_DATA_reg[41] ,
    \TX_DATA_reg[40] ,
    \TX_DATA_reg[39] ,
    \TX_DATA_reg[38] ,
    \TX_DATA_reg[37] ,
    \TX_DATA_reg[36] ,
    \TX_DATA_reg[35] ,
    \TX_DATA_reg[34] ,
    \TX_DATA_reg[33] ,
    \TX_DATA_reg[32] ,
    \TX_DATA_reg[31] ,
    \TX_DATA_reg[30] ,
    \TX_DATA_reg[29] ,
    \TX_DATA_reg[28] ,
    \TX_DATA_reg[27] ,
    \TX_DATA_reg[26] ,
    \TX_DATA_reg[25] ,
    \TX_DATA_reg[24] ,
    \TX_DATA_reg[23] ,
    \TX_DATA_reg[22] ,
    \TX_DATA_reg[21] ,
    \TX_DATA_reg[20] ,
    \TX_DATA_reg[19] ,
    \TX_DATA_reg[18] ,
    \TX_DATA_reg[17] ,
    \TX_DATA_reg[16] ,
    \TX_DATA_reg[15] ,
    \TX_DATA_reg[14] ,
    \TX_DATA_reg[13] ,
    \TX_DATA_reg[12] ,
    \TX_DATA_reg[11] ,
    \TX_DATA_reg[10] ,
    \TX_DATA_reg[9] ,
    \TX_DATA_reg[8] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[6] ,
    \TX_DATA_reg[5] ,
    \TX_DATA_reg[4] ,
    \TX_DATA_reg[3] ,
    \TX_DATA_reg[2] ,
    \TX_DATA_reg[1] ,
    \TX_DATA_reg[0] ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output tx_reset_i_2;
  output rst_pma_init_usrclk;
  output [0:0]RX_IDLES;
  output [0:0]soft_err_i;
  output [0:0]RX_PE_DATA_V;
  output [0:0]hard_err_i;
  output rx_polarity_r_reg;
  output check_polarity_r_reg;
  output [1:0]D;
  output \remote_rdy_cntr_reg[0] ;
  output stg5_reg;
  output [63:0]\TX_DATA_reg[63] ;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input in0;
  input stg5_reg_0;
  input [0:0]SR;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input ready_r_reg0;
  input rx_header_err_i_2;
  input HARD_ERR_reg;
  input \RX_DATA_REG_reg[0] ;
  input [65:0]Q;
  input TX_HEADER_0_reg;
  input txdatavalid_symgen_i_lane1;
  input TX_HEADER_1_reg;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input RXDATAVALID_IN_REG;
  input SOFT_ERR_reg;
  input rx_lossofsync_i_2;
  input reset_lanes_i;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[59] ;
  input [2:0]\TX_DATA_reg[54] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[58] ;
  input \TX_DATA_reg[57] ;
  input \TX_DATA_reg[56] ;
  input \TX_DATA_reg[51] ;
  input \TX_DATA_reg[50] ;
  input \TX_DATA_reg[49] ;
  input \TX_DATA_reg[48] ;
  input \TX_DATA_reg[47] ;
  input \TX_DATA_reg[46] ;
  input \TX_DATA_reg[45] ;
  input \TX_DATA_reg[44] ;
  input \TX_DATA_reg[43] ;
  input \TX_DATA_reg[42] ;
  input \TX_DATA_reg[41] ;
  input \TX_DATA_reg[40] ;
  input \TX_DATA_reg[39] ;
  input \TX_DATA_reg[38] ;
  input \TX_DATA_reg[37] ;
  input \TX_DATA_reg[36] ;
  input \TX_DATA_reg[35] ;
  input \TX_DATA_reg[34] ;
  input \TX_DATA_reg[33] ;
  input \TX_DATA_reg[32] ;
  input \TX_DATA_reg[31] ;
  input \TX_DATA_reg[30] ;
  input \TX_DATA_reg[29] ;
  input \TX_DATA_reg[28] ;
  input \TX_DATA_reg[27] ;
  input \TX_DATA_reg[26] ;
  input \TX_DATA_reg[25] ;
  input \TX_DATA_reg[24] ;
  input \TX_DATA_reg[23] ;
  input \TX_DATA_reg[22] ;
  input \TX_DATA_reg[21] ;
  input \TX_DATA_reg[20] ;
  input \TX_DATA_reg[19] ;
  input \TX_DATA_reg[18] ;
  input \TX_DATA_reg[17] ;
  input \TX_DATA_reg[16] ;
  input \TX_DATA_reg[15] ;
  input \TX_DATA_reg[14] ;
  input \TX_DATA_reg[13] ;
  input \TX_DATA_reg[12] ;
  input \TX_DATA_reg[11] ;
  input \TX_DATA_reg[10] ;
  input \TX_DATA_reg[9] ;
  input \TX_DATA_reg[8] ;
  input \TX_DATA_reg[7] ;
  input \TX_DATA_reg[6] ;
  input \TX_DATA_reg[5] ;
  input \TX_DATA_reg[4] ;
  input \TX_DATA_reg[3] ;
  input \TX_DATA_reg[2] ;
  input \TX_DATA_reg[1] ;
  input \TX_DATA_reg[0] ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire [1:0]D;
  wire HARD_ERR_reg;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]RX_IDLES;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire \TX_DATA_reg[0] ;
  wire \TX_DATA_reg[10] ;
  wire \TX_DATA_reg[11] ;
  wire \TX_DATA_reg[12] ;
  wire \TX_DATA_reg[13] ;
  wire \TX_DATA_reg[14] ;
  wire \TX_DATA_reg[15] ;
  wire \TX_DATA_reg[16] ;
  wire \TX_DATA_reg[17] ;
  wire \TX_DATA_reg[18] ;
  wire \TX_DATA_reg[19] ;
  wire \TX_DATA_reg[1] ;
  wire \TX_DATA_reg[20] ;
  wire \TX_DATA_reg[21] ;
  wire \TX_DATA_reg[22] ;
  wire \TX_DATA_reg[23] ;
  wire \TX_DATA_reg[24] ;
  wire \TX_DATA_reg[25] ;
  wire \TX_DATA_reg[26] ;
  wire \TX_DATA_reg[27] ;
  wire \TX_DATA_reg[28] ;
  wire \TX_DATA_reg[29] ;
  wire \TX_DATA_reg[2] ;
  wire \TX_DATA_reg[30] ;
  wire \TX_DATA_reg[31] ;
  wire \TX_DATA_reg[32] ;
  wire \TX_DATA_reg[33] ;
  wire \TX_DATA_reg[34] ;
  wire \TX_DATA_reg[35] ;
  wire \TX_DATA_reg[36] ;
  wire \TX_DATA_reg[37] ;
  wire \TX_DATA_reg[38] ;
  wire \TX_DATA_reg[39] ;
  wire \TX_DATA_reg[3] ;
  wire \TX_DATA_reg[40] ;
  wire \TX_DATA_reg[41] ;
  wire \TX_DATA_reg[42] ;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[44] ;
  wire \TX_DATA_reg[45] ;
  wire \TX_DATA_reg[46] ;
  wire \TX_DATA_reg[47] ;
  wire \TX_DATA_reg[48] ;
  wire \TX_DATA_reg[49] ;
  wire \TX_DATA_reg[4] ;
  wire \TX_DATA_reg[50] ;
  wire \TX_DATA_reg[51] ;
  wire [2:0]\TX_DATA_reg[54] ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[56] ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[5] ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[6] ;
  wire \TX_DATA_reg[7] ;
  wire \TX_DATA_reg[8] ;
  wire \TX_DATA_reg[9] ;
  wire TX_HEADER_0_reg;
  wire TX_HEADER_1_reg;
  wire check_polarity_r_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[0] ;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rx_header_err_i_2;
  wire rx_header_err_r;
  wire rx_lossofsync_i_2;
  wire rx_polarity_r_reg;
  wire [0:0]soft_err_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire tx_reset_i_2;
  wire txdatavalid_symgen_i_lane1;

  board_aurora_64b66b_0_2_ERR_DETECT_108 err_detect_i
       (.HARD_ERR_reg_0(HARD_ERR_reg),
        .SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg_0(stg5_reg_0),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .rx_header_err_i_2(rx_header_err_i_2),
        .rx_header_err_r(rx_header_err_r),
        .soft_err_i(soft_err_i));
  board_aurora_64b66b_0_2_LANE_INIT_SM_109 lane_init_sm_i
       (.SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg(SOFT_ERR_reg),
        .SR(SR),
        .check_polarity_r_reg_0(check_polarity_r_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .illegal_btf_i(illegal_btf_i),
        .in0(in0),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_lanes_i(reset_lanes_i),
        .rst_r_reg_0(tx_reset_i_2),
        .rx_header_err_r(rx_header_err_r),
        .rx_lossofsync_i_2(rx_lossofsync_i_2),
        .rx_polarity_r_reg_0(rx_polarity_r_reg),
        .s_level_out_d5_reg(stg5_reg_0));
  board_aurora_64b66b_0_2_SYM_DEC_110 sym_dec_i
       (.Q(Q),
        .RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .RX_IDLES(RX_IDLES),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .SR(SR),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[0]_0 (\remote_rdy_cntr_reg[0] ),
        .\remote_rdy_cntr_reg[2]_0 (lane_up_flop_i),
        .\rx_na_idles_cntr_reg[0]_0 (stg5_reg_0));
  board_aurora_64b66b_0_2_SYM_GEN_111 sym_gen_i
       (.D(D),
        .\TX_DATA_reg[0]_0 (\TX_DATA_reg[0] ),
        .\TX_DATA_reg[10]_0 (\TX_DATA_reg[10] ),
        .\TX_DATA_reg[11]_0 (\TX_DATA_reg[11] ),
        .\TX_DATA_reg[12]_0 (\TX_DATA_reg[12] ),
        .\TX_DATA_reg[13]_0 (\TX_DATA_reg[13] ),
        .\TX_DATA_reg[14]_0 (\TX_DATA_reg[14] ),
        .\TX_DATA_reg[15]_0 (\TX_DATA_reg[15] ),
        .\TX_DATA_reg[16]_0 (\TX_DATA_reg[16] ),
        .\TX_DATA_reg[17]_0 (\TX_DATA_reg[17] ),
        .\TX_DATA_reg[18]_0 (\TX_DATA_reg[18] ),
        .\TX_DATA_reg[19]_0 (\TX_DATA_reg[19] ),
        .\TX_DATA_reg[1]_0 (\TX_DATA_reg[1] ),
        .\TX_DATA_reg[20]_0 (\TX_DATA_reg[20] ),
        .\TX_DATA_reg[21]_0 (\TX_DATA_reg[21] ),
        .\TX_DATA_reg[22]_0 (\TX_DATA_reg[22] ),
        .\TX_DATA_reg[23]_0 (\TX_DATA_reg[23] ),
        .\TX_DATA_reg[24]_0 (\TX_DATA_reg[24] ),
        .\TX_DATA_reg[25]_0 (\TX_DATA_reg[25] ),
        .\TX_DATA_reg[26]_0 (\TX_DATA_reg[26] ),
        .\TX_DATA_reg[27]_0 (\TX_DATA_reg[27] ),
        .\TX_DATA_reg[28]_0 (\TX_DATA_reg[28] ),
        .\TX_DATA_reg[29]_0 (\TX_DATA_reg[29] ),
        .\TX_DATA_reg[2]_0 (\TX_DATA_reg[2] ),
        .\TX_DATA_reg[30]_0 (\TX_DATA_reg[30] ),
        .\TX_DATA_reg[31]_0 (\TX_DATA_reg[31] ),
        .\TX_DATA_reg[32]_0 (\TX_DATA_reg[32] ),
        .\TX_DATA_reg[33]_0 (\TX_DATA_reg[33] ),
        .\TX_DATA_reg[34]_0 (\TX_DATA_reg[34] ),
        .\TX_DATA_reg[35]_0 (\TX_DATA_reg[35] ),
        .\TX_DATA_reg[36]_0 (\TX_DATA_reg[36] ),
        .\TX_DATA_reg[37]_0 (\TX_DATA_reg[37] ),
        .\TX_DATA_reg[38]_0 (\TX_DATA_reg[38] ),
        .\TX_DATA_reg[39]_0 (\TX_DATA_reg[39] ),
        .\TX_DATA_reg[3]_0 (\TX_DATA_reg[3] ),
        .\TX_DATA_reg[40]_0 (\TX_DATA_reg[40] ),
        .\TX_DATA_reg[41]_0 (\TX_DATA_reg[41] ),
        .\TX_DATA_reg[42]_0 (\TX_DATA_reg[42] ),
        .\TX_DATA_reg[43]_0 (\TX_DATA_reg[43] ),
        .\TX_DATA_reg[44]_0 (\TX_DATA_reg[44] ),
        .\TX_DATA_reg[45]_0 (\TX_DATA_reg[45] ),
        .\TX_DATA_reg[46]_0 (\TX_DATA_reg[46] ),
        .\TX_DATA_reg[47]_0 (\TX_DATA_reg[47] ),
        .\TX_DATA_reg[48]_0 (\TX_DATA_reg[48] ),
        .\TX_DATA_reg[49]_0 (\TX_DATA_reg[49] ),
        .\TX_DATA_reg[4]_0 (\TX_DATA_reg[4] ),
        .\TX_DATA_reg[50]_0 (\TX_DATA_reg[50] ),
        .\TX_DATA_reg[51]_0 (\TX_DATA_reg[51] ),
        .\TX_DATA_reg[54]_0 (\TX_DATA_reg[54] ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55] ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_2 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[56]_0 (\TX_DATA_reg[56] ),
        .\TX_DATA_reg[57]_0 (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58]_0 (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[5]_0 (\TX_DATA_reg[5] ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[6]_0 (\TX_DATA_reg[6] ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .\TX_DATA_reg[8]_0 (\TX_DATA_reg[8] ),
        .\TX_DATA_reg[9]_0 (\TX_DATA_reg[9] ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg(rst_pma_init_usrclk),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(stg5_reg_0),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_AURORA_LANE" *) 
module board_aurora_64b66b_0_2_AURORA_LANE_3
   (lane_up_flop_i,
    tx_reset_i_1,
    rst_pma_init_usrclk,
    RX_IDLES,
    soft_err_i,
    RX_PE_DATA_V,
    hard_err_i,
    rx_polarity_r_reg,
    check_polarity_r_reg,
    D,
    \remote_rdy_cntr_reg[0] ,
    stg5_reg,
    \TX_DATA_reg[63] ,
    \RX_PE_DATA_reg[0] ,
    in0,
    stg4_reg,
    SR,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    ready_r_reg0,
    rx_header_err_i_1,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    Q,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i_lane2,
    TX_HEADER_1_reg,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    RXDATAVALID_IN_REG,
    SOFT_ERR_reg,
    rx_lossofsync_i_1,
    reset_lanes_i,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[59] ,
    \TX_DATA_reg[54] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[58] ,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[56] ,
    \TX_DATA_reg[51] ,
    \TX_DATA_reg[50] ,
    \TX_DATA_reg[49] ,
    \TX_DATA_reg[48] ,
    \TX_DATA_reg[47] ,
    \TX_DATA_reg[46] ,
    \TX_DATA_reg[45] ,
    \TX_DATA_reg[44] ,
    \TX_DATA_reg[43] ,
    \TX_DATA_reg[42] ,
    \TX_DATA_reg[41] ,
    \TX_DATA_reg[40] ,
    \TX_DATA_reg[39] ,
    \TX_DATA_reg[38] ,
    \TX_DATA_reg[37] ,
    \TX_DATA_reg[36] ,
    \TX_DATA_reg[35] ,
    \TX_DATA_reg[34] ,
    \TX_DATA_reg[33] ,
    \TX_DATA_reg[32] ,
    \TX_DATA_reg[31] ,
    \TX_DATA_reg[30] ,
    \TX_DATA_reg[29] ,
    \TX_DATA_reg[28] ,
    \TX_DATA_reg[27] ,
    \TX_DATA_reg[26] ,
    \TX_DATA_reg[25] ,
    \TX_DATA_reg[24] ,
    \TX_DATA_reg[23] ,
    \TX_DATA_reg[22] ,
    \TX_DATA_reg[21] ,
    \TX_DATA_reg[20] ,
    \TX_DATA_reg[19] ,
    \TX_DATA_reg[18] ,
    \TX_DATA_reg[17] ,
    \TX_DATA_reg[16] ,
    \TX_DATA_reg[15] ,
    \TX_DATA_reg[14] ,
    \TX_DATA_reg[13] ,
    \TX_DATA_reg[12] ,
    \TX_DATA_reg[11] ,
    \TX_DATA_reg[10] ,
    \TX_DATA_reg[9] ,
    \TX_DATA_reg[8] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[6] ,
    \TX_DATA_reg[5] ,
    \TX_DATA_reg[4] ,
    \TX_DATA_reg[3] ,
    \TX_DATA_reg[2] ,
    \TX_DATA_reg[1] ,
    \TX_DATA_reg[0] ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output tx_reset_i_1;
  output rst_pma_init_usrclk;
  output [0:0]RX_IDLES;
  output [0:0]soft_err_i;
  output [0:0]RX_PE_DATA_V;
  output [0:0]hard_err_i;
  output rx_polarity_r_reg;
  output check_polarity_r_reg;
  output [1:0]D;
  output \remote_rdy_cntr_reg[0] ;
  output stg5_reg;
  output [63:0]\TX_DATA_reg[63] ;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input in0;
  input stg4_reg;
  input [0:0]SR;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input ready_r_reg0;
  input rx_header_err_i_1;
  input HARD_ERR_reg;
  input \RX_DATA_REG_reg[0] ;
  input [65:0]Q;
  input TX_HEADER_0_reg;
  input txdatavalid_symgen_i_lane2;
  input TX_HEADER_1_reg;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input RXDATAVALID_IN_REG;
  input SOFT_ERR_reg;
  input rx_lossofsync_i_1;
  input reset_lanes_i;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[59] ;
  input [2:0]\TX_DATA_reg[54] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[58] ;
  input \TX_DATA_reg[57] ;
  input \TX_DATA_reg[56] ;
  input \TX_DATA_reg[51] ;
  input \TX_DATA_reg[50] ;
  input \TX_DATA_reg[49] ;
  input \TX_DATA_reg[48] ;
  input \TX_DATA_reg[47] ;
  input \TX_DATA_reg[46] ;
  input \TX_DATA_reg[45] ;
  input \TX_DATA_reg[44] ;
  input \TX_DATA_reg[43] ;
  input \TX_DATA_reg[42] ;
  input \TX_DATA_reg[41] ;
  input \TX_DATA_reg[40] ;
  input \TX_DATA_reg[39] ;
  input \TX_DATA_reg[38] ;
  input \TX_DATA_reg[37] ;
  input \TX_DATA_reg[36] ;
  input \TX_DATA_reg[35] ;
  input \TX_DATA_reg[34] ;
  input \TX_DATA_reg[33] ;
  input \TX_DATA_reg[32] ;
  input \TX_DATA_reg[31] ;
  input \TX_DATA_reg[30] ;
  input \TX_DATA_reg[29] ;
  input \TX_DATA_reg[28] ;
  input \TX_DATA_reg[27] ;
  input \TX_DATA_reg[26] ;
  input \TX_DATA_reg[25] ;
  input \TX_DATA_reg[24] ;
  input \TX_DATA_reg[23] ;
  input \TX_DATA_reg[22] ;
  input \TX_DATA_reg[21] ;
  input \TX_DATA_reg[20] ;
  input \TX_DATA_reg[19] ;
  input \TX_DATA_reg[18] ;
  input \TX_DATA_reg[17] ;
  input \TX_DATA_reg[16] ;
  input \TX_DATA_reg[15] ;
  input \TX_DATA_reg[14] ;
  input \TX_DATA_reg[13] ;
  input \TX_DATA_reg[12] ;
  input \TX_DATA_reg[11] ;
  input \TX_DATA_reg[10] ;
  input \TX_DATA_reg[9] ;
  input \TX_DATA_reg[8] ;
  input \TX_DATA_reg[7] ;
  input \TX_DATA_reg[6] ;
  input \TX_DATA_reg[5] ;
  input \TX_DATA_reg[4] ;
  input \TX_DATA_reg[3] ;
  input \TX_DATA_reg[2] ;
  input \TX_DATA_reg[1] ;
  input \TX_DATA_reg[0] ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire [1:0]D;
  wire HARD_ERR_reg;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]RX_IDLES;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire \TX_DATA_reg[0] ;
  wire \TX_DATA_reg[10] ;
  wire \TX_DATA_reg[11] ;
  wire \TX_DATA_reg[12] ;
  wire \TX_DATA_reg[13] ;
  wire \TX_DATA_reg[14] ;
  wire \TX_DATA_reg[15] ;
  wire \TX_DATA_reg[16] ;
  wire \TX_DATA_reg[17] ;
  wire \TX_DATA_reg[18] ;
  wire \TX_DATA_reg[19] ;
  wire \TX_DATA_reg[1] ;
  wire \TX_DATA_reg[20] ;
  wire \TX_DATA_reg[21] ;
  wire \TX_DATA_reg[22] ;
  wire \TX_DATA_reg[23] ;
  wire \TX_DATA_reg[24] ;
  wire \TX_DATA_reg[25] ;
  wire \TX_DATA_reg[26] ;
  wire \TX_DATA_reg[27] ;
  wire \TX_DATA_reg[28] ;
  wire \TX_DATA_reg[29] ;
  wire \TX_DATA_reg[2] ;
  wire \TX_DATA_reg[30] ;
  wire \TX_DATA_reg[31] ;
  wire \TX_DATA_reg[32] ;
  wire \TX_DATA_reg[33] ;
  wire \TX_DATA_reg[34] ;
  wire \TX_DATA_reg[35] ;
  wire \TX_DATA_reg[36] ;
  wire \TX_DATA_reg[37] ;
  wire \TX_DATA_reg[38] ;
  wire \TX_DATA_reg[39] ;
  wire \TX_DATA_reg[3] ;
  wire \TX_DATA_reg[40] ;
  wire \TX_DATA_reg[41] ;
  wire \TX_DATA_reg[42] ;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[44] ;
  wire \TX_DATA_reg[45] ;
  wire \TX_DATA_reg[46] ;
  wire \TX_DATA_reg[47] ;
  wire \TX_DATA_reg[48] ;
  wire \TX_DATA_reg[49] ;
  wire \TX_DATA_reg[4] ;
  wire \TX_DATA_reg[50] ;
  wire \TX_DATA_reg[51] ;
  wire [2:0]\TX_DATA_reg[54] ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[56] ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[5] ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[6] ;
  wire \TX_DATA_reg[7] ;
  wire \TX_DATA_reg[8] ;
  wire \TX_DATA_reg[9] ;
  wire TX_HEADER_0_reg;
  wire TX_HEADER_1_reg;
  wire check_polarity_r_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[0] ;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rx_header_err_i_1;
  wire rx_header_err_r;
  wire rx_lossofsync_i_1;
  wire rx_polarity_r_reg;
  wire [0:0]soft_err_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg4_reg;
  wire stg5_reg;
  wire tx_reset_i_1;
  wire txdatavalid_symgen_i_lane2;

  board_aurora_64b66b_0_2_ERR_DETECT_102 err_detect_i
       (.HARD_ERR_reg_0(HARD_ERR_reg),
        .SOFT_ERR0(SOFT_ERR0),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .rx_header_err_i_1(rx_header_err_i_1),
        .rx_header_err_r(rx_header_err_r),
        .rx_header_err_r_reg_0(stg4_reg),
        .soft_err_i(soft_err_i));
  board_aurora_64b66b_0_2_LANE_INIT_SM_103 lane_init_sm_i
       (.SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg(SOFT_ERR_reg),
        .SR(SR),
        .check_polarity_r_reg_0(check_polarity_r_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .illegal_btf_i(illegal_btf_i),
        .in0(in0),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_lanes_i(reset_lanes_i),
        .rst_r_reg_0(tx_reset_i_1),
        .rx_header_err_r(rx_header_err_r),
        .rx_lossofsync_i_1(rx_lossofsync_i_1),
        .rx_polarity_r_reg_0(rx_polarity_r_reg),
        .s_level_out_d6_reg(stg4_reg));
  board_aurora_64b66b_0_2_SYM_DEC_104 sym_dec_i
       (.Q(Q),
        .RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .RX_IDLES(RX_IDLES),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .SR(SR),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[0]_0 (\remote_rdy_cntr_reg[0] ),
        .\remote_rdy_cntr_reg[0]_1 (lane_up_flop_i),
        .\rx_na_idles_cntr_reg[0]_0 (stg4_reg));
  board_aurora_64b66b_0_2_SYM_GEN_105 sym_gen_i
       (.D(D),
        .\TX_DATA_reg[0]_0 (\TX_DATA_reg[0] ),
        .\TX_DATA_reg[10]_0 (\TX_DATA_reg[10] ),
        .\TX_DATA_reg[11]_0 (\TX_DATA_reg[11] ),
        .\TX_DATA_reg[12]_0 (\TX_DATA_reg[12] ),
        .\TX_DATA_reg[13]_0 (\TX_DATA_reg[13] ),
        .\TX_DATA_reg[14]_0 (\TX_DATA_reg[14] ),
        .\TX_DATA_reg[15]_0 (\TX_DATA_reg[15] ),
        .\TX_DATA_reg[16]_0 (\TX_DATA_reg[16] ),
        .\TX_DATA_reg[17]_0 (\TX_DATA_reg[17] ),
        .\TX_DATA_reg[18]_0 (\TX_DATA_reg[18] ),
        .\TX_DATA_reg[19]_0 (\TX_DATA_reg[19] ),
        .\TX_DATA_reg[1]_0 (\TX_DATA_reg[1] ),
        .\TX_DATA_reg[20]_0 (\TX_DATA_reg[20] ),
        .\TX_DATA_reg[21]_0 (\TX_DATA_reg[21] ),
        .\TX_DATA_reg[22]_0 (\TX_DATA_reg[22] ),
        .\TX_DATA_reg[23]_0 (\TX_DATA_reg[23] ),
        .\TX_DATA_reg[24]_0 (\TX_DATA_reg[24] ),
        .\TX_DATA_reg[25]_0 (\TX_DATA_reg[25] ),
        .\TX_DATA_reg[26]_0 (\TX_DATA_reg[26] ),
        .\TX_DATA_reg[27]_0 (\TX_DATA_reg[27] ),
        .\TX_DATA_reg[28]_0 (\TX_DATA_reg[28] ),
        .\TX_DATA_reg[29]_0 (\TX_DATA_reg[29] ),
        .\TX_DATA_reg[2]_0 (\TX_DATA_reg[2] ),
        .\TX_DATA_reg[30]_0 (\TX_DATA_reg[30] ),
        .\TX_DATA_reg[31]_0 (\TX_DATA_reg[31] ),
        .\TX_DATA_reg[32]_0 (\TX_DATA_reg[32] ),
        .\TX_DATA_reg[33]_0 (\TX_DATA_reg[33] ),
        .\TX_DATA_reg[34]_0 (\TX_DATA_reg[34] ),
        .\TX_DATA_reg[35]_0 (\TX_DATA_reg[35] ),
        .\TX_DATA_reg[36]_0 (\TX_DATA_reg[36] ),
        .\TX_DATA_reg[37]_0 (\TX_DATA_reg[37] ),
        .\TX_DATA_reg[38]_0 (\TX_DATA_reg[38] ),
        .\TX_DATA_reg[39]_0 (\TX_DATA_reg[39] ),
        .\TX_DATA_reg[3]_0 (\TX_DATA_reg[3] ),
        .\TX_DATA_reg[40]_0 (\TX_DATA_reg[40] ),
        .\TX_DATA_reg[41]_0 (\TX_DATA_reg[41] ),
        .\TX_DATA_reg[42]_0 (\TX_DATA_reg[42] ),
        .\TX_DATA_reg[43]_0 (\TX_DATA_reg[43] ),
        .\TX_DATA_reg[44]_0 (\TX_DATA_reg[44] ),
        .\TX_DATA_reg[45]_0 (\TX_DATA_reg[45] ),
        .\TX_DATA_reg[46]_0 (\TX_DATA_reg[46] ),
        .\TX_DATA_reg[47]_0 (\TX_DATA_reg[47] ),
        .\TX_DATA_reg[48]_0 (\TX_DATA_reg[48] ),
        .\TX_DATA_reg[49]_0 (\TX_DATA_reg[49] ),
        .\TX_DATA_reg[4]_0 (\TX_DATA_reg[4] ),
        .\TX_DATA_reg[50]_0 (\TX_DATA_reg[50] ),
        .\TX_DATA_reg[51]_0 (\TX_DATA_reg[51] ),
        .\TX_DATA_reg[54]_0 (\TX_DATA_reg[54] ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55] ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_2 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[56]_0 (\TX_DATA_reg[56] ),
        .\TX_DATA_reg[57]_0 (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58]_0 (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[5]_0 (\TX_DATA_reg[5] ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[6]_0 (\TX_DATA_reg[6] ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .\TX_DATA_reg[8]_0 (\TX_DATA_reg[8] ),
        .\TX_DATA_reg[9]_0 (\TX_DATA_reg[9] ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg4_reg(stg4_reg),
        .stg5_reg(rst_pma_init_usrclk),
        .stg5_reg_0(stg5_reg),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_AURORA_LANE" *) 
module board_aurora_64b66b_0_2_AURORA_LANE_4
   (lane_up_flop_i,
    rst_pma_init_usrclk,
    RX_IDLES,
    soft_err_i,
    RX_PE_DATA_V,
    hard_err_i,
    rx_polarity_r_reg,
    check_polarity_r_reg,
    D,
    \remote_rdy_cntr_reg[0] ,
    reset_lanes_c,
    rxreset_for_lanes,
    channel_hard_err_c,
    stg5_reg,
    \TX_DATA_reg[63] ,
    \RX_PE_DATA_reg[0] ,
    in0,
    stg5_reg_0,
    SR,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    ready_r_reg0,
    rx_header_err_i_0,
    HARD_ERR_reg,
    \RX_DATA_REG_reg[0] ,
    Q,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i_lane3,
    TX_HEADER_1_reg,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    RXDATAVALID_IN_REG,
    SOFT_ERR_reg,
    rx_lossofsync_i_0,
    reset_lanes_i,
    reset_lanes_flop_0_i,
    reset_lanes_flop_0_i_0,
    reset_lanes_flop_0_i_1,
    wait_for_lane_up_r,
    tx_reset_i_3,
    tx_reset_i_1,
    tx_reset_i_2,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    CHANNEL_HARD_ERR_reg,
    \TX_DATA_reg[59] ,
    \TX_DATA_reg[54] ,
    \TX_DATA_reg[63]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[58] ,
    \TX_DATA_reg[57] ,
    \TX_DATA_reg[56] ,
    \TX_DATA_reg[51] ,
    \TX_DATA_reg[50] ,
    \TX_DATA_reg[49] ,
    \TX_DATA_reg[48] ,
    \TX_DATA_reg[47] ,
    \TX_DATA_reg[46] ,
    \TX_DATA_reg[45] ,
    \TX_DATA_reg[44] ,
    \TX_DATA_reg[43] ,
    \TX_DATA_reg[42] ,
    \TX_DATA_reg[41] ,
    \TX_DATA_reg[40] ,
    \TX_DATA_reg[39] ,
    \TX_DATA_reg[38] ,
    \TX_DATA_reg[37] ,
    \TX_DATA_reg[36] ,
    \TX_DATA_reg[35] ,
    \TX_DATA_reg[34] ,
    \TX_DATA_reg[33] ,
    \TX_DATA_reg[32] ,
    \TX_DATA_reg[31] ,
    \TX_DATA_reg[30] ,
    \TX_DATA_reg[29] ,
    \TX_DATA_reg[28] ,
    \TX_DATA_reg[27] ,
    \TX_DATA_reg[26] ,
    \TX_DATA_reg[25] ,
    \TX_DATA_reg[24] ,
    \TX_DATA_reg[23] ,
    \TX_DATA_reg[22] ,
    \TX_DATA_reg[21] ,
    \TX_DATA_reg[20] ,
    \TX_DATA_reg[19] ,
    \TX_DATA_reg[18] ,
    \TX_DATA_reg[17] ,
    \TX_DATA_reg[16] ,
    \TX_DATA_reg[15] ,
    \TX_DATA_reg[14] ,
    \TX_DATA_reg[13] ,
    \TX_DATA_reg[12] ,
    \TX_DATA_reg[11] ,
    \TX_DATA_reg[10] ,
    \TX_DATA_reg[9] ,
    \TX_DATA_reg[8] ,
    \TX_DATA_reg[7] ,
    \TX_DATA_reg[6] ,
    \TX_DATA_reg[5] ,
    \TX_DATA_reg[4] ,
    \TX_DATA_reg[3] ,
    \TX_DATA_reg[2] ,
    \TX_DATA_reg[1] ,
    \TX_DATA_reg[0] ,
    \TX_DATA_reg[62] ,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[60] ,
    \TX_DATA_reg[59]_0 );
  output lane_up_flop_i;
  output rst_pma_init_usrclk;
  output [0:0]RX_IDLES;
  output [0:0]soft_err_i;
  output [0:0]RX_PE_DATA_V;
  output [0:0]hard_err_i;
  output rx_polarity_r_reg;
  output check_polarity_r_reg;
  output [1:0]D;
  output \remote_rdy_cntr_reg[0] ;
  output reset_lanes_c;
  output rxreset_for_lanes;
  output channel_hard_err_c;
  output stg5_reg;
  output [63:0]\TX_DATA_reg[63] ;
  output [63:0]\RX_PE_DATA_reg[0] ;
  input in0;
  input stg5_reg_0;
  input [0:0]SR;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input ready_r_reg0;
  input rx_header_err_i_0;
  input HARD_ERR_reg;
  input \RX_DATA_REG_reg[0] ;
  input [65:0]Q;
  input TX_HEADER_0_reg;
  input txdatavalid_symgen_i_lane3;
  input TX_HEADER_1_reg;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input RXDATAVALID_IN_REG;
  input SOFT_ERR_reg;
  input rx_lossofsync_i_0;
  input reset_lanes_i;
  input reset_lanes_flop_0_i;
  input reset_lanes_flop_0_i_0;
  input reset_lanes_flop_0_i_1;
  input wait_for_lane_up_r;
  input tx_reset_i_3;
  input tx_reset_i_1;
  input tx_reset_i_2;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input [2:0]CHANNEL_HARD_ERR_reg;
  input \TX_DATA_reg[59] ;
  input [2:0]\TX_DATA_reg[54] ;
  input \TX_DATA_reg[63]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[58] ;
  input \TX_DATA_reg[57] ;
  input \TX_DATA_reg[56] ;
  input \TX_DATA_reg[51] ;
  input \TX_DATA_reg[50] ;
  input \TX_DATA_reg[49] ;
  input \TX_DATA_reg[48] ;
  input \TX_DATA_reg[47] ;
  input \TX_DATA_reg[46] ;
  input \TX_DATA_reg[45] ;
  input \TX_DATA_reg[44] ;
  input \TX_DATA_reg[43] ;
  input \TX_DATA_reg[42] ;
  input \TX_DATA_reg[41] ;
  input \TX_DATA_reg[40] ;
  input \TX_DATA_reg[39] ;
  input \TX_DATA_reg[38] ;
  input \TX_DATA_reg[37] ;
  input \TX_DATA_reg[36] ;
  input \TX_DATA_reg[35] ;
  input \TX_DATA_reg[34] ;
  input \TX_DATA_reg[33] ;
  input \TX_DATA_reg[32] ;
  input \TX_DATA_reg[31] ;
  input \TX_DATA_reg[30] ;
  input \TX_DATA_reg[29] ;
  input \TX_DATA_reg[28] ;
  input \TX_DATA_reg[27] ;
  input \TX_DATA_reg[26] ;
  input \TX_DATA_reg[25] ;
  input \TX_DATA_reg[24] ;
  input \TX_DATA_reg[23] ;
  input \TX_DATA_reg[22] ;
  input \TX_DATA_reg[21] ;
  input \TX_DATA_reg[20] ;
  input \TX_DATA_reg[19] ;
  input \TX_DATA_reg[18] ;
  input \TX_DATA_reg[17] ;
  input \TX_DATA_reg[16] ;
  input \TX_DATA_reg[15] ;
  input \TX_DATA_reg[14] ;
  input \TX_DATA_reg[13] ;
  input \TX_DATA_reg[12] ;
  input \TX_DATA_reg[11] ;
  input \TX_DATA_reg[10] ;
  input \TX_DATA_reg[9] ;
  input \TX_DATA_reg[8] ;
  input \TX_DATA_reg[7] ;
  input \TX_DATA_reg[6] ;
  input \TX_DATA_reg[5] ;
  input \TX_DATA_reg[4] ;
  input \TX_DATA_reg[3] ;
  input \TX_DATA_reg[2] ;
  input \TX_DATA_reg[1] ;
  input \TX_DATA_reg[0] ;
  input \TX_DATA_reg[62] ;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[60] ;
  input \TX_DATA_reg[59]_0 ;

  wire [2:0]CHANNEL_HARD_ERR_reg;
  wire [1:0]D;
  wire HARD_ERR_reg;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0] ;
  wire [0:0]RX_IDLES;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0] ;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire \TX_DATA_reg[0] ;
  wire \TX_DATA_reg[10] ;
  wire \TX_DATA_reg[11] ;
  wire \TX_DATA_reg[12] ;
  wire \TX_DATA_reg[13] ;
  wire \TX_DATA_reg[14] ;
  wire \TX_DATA_reg[15] ;
  wire \TX_DATA_reg[16] ;
  wire \TX_DATA_reg[17] ;
  wire \TX_DATA_reg[18] ;
  wire \TX_DATA_reg[19] ;
  wire \TX_DATA_reg[1] ;
  wire \TX_DATA_reg[20] ;
  wire \TX_DATA_reg[21] ;
  wire \TX_DATA_reg[22] ;
  wire \TX_DATA_reg[23] ;
  wire \TX_DATA_reg[24] ;
  wire \TX_DATA_reg[25] ;
  wire \TX_DATA_reg[26] ;
  wire \TX_DATA_reg[27] ;
  wire \TX_DATA_reg[28] ;
  wire \TX_DATA_reg[29] ;
  wire \TX_DATA_reg[2] ;
  wire \TX_DATA_reg[30] ;
  wire \TX_DATA_reg[31] ;
  wire \TX_DATA_reg[32] ;
  wire \TX_DATA_reg[33] ;
  wire \TX_DATA_reg[34] ;
  wire \TX_DATA_reg[35] ;
  wire \TX_DATA_reg[36] ;
  wire \TX_DATA_reg[37] ;
  wire \TX_DATA_reg[38] ;
  wire \TX_DATA_reg[39] ;
  wire \TX_DATA_reg[3] ;
  wire \TX_DATA_reg[40] ;
  wire \TX_DATA_reg[41] ;
  wire \TX_DATA_reg[42] ;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[44] ;
  wire \TX_DATA_reg[45] ;
  wire \TX_DATA_reg[46] ;
  wire \TX_DATA_reg[47] ;
  wire \TX_DATA_reg[48] ;
  wire \TX_DATA_reg[49] ;
  wire \TX_DATA_reg[4] ;
  wire \TX_DATA_reg[50] ;
  wire \TX_DATA_reg[51] ;
  wire [2:0]\TX_DATA_reg[54] ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[56] ;
  wire \TX_DATA_reg[57] ;
  wire \TX_DATA_reg[58] ;
  wire \TX_DATA_reg[59] ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[5] ;
  wire \TX_DATA_reg[60] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_DATA_reg[62] ;
  wire [63:0]\TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[6] ;
  wire \TX_DATA_reg[7] ;
  wire \TX_DATA_reg[8] ;
  wire \TX_DATA_reg[9] ;
  wire TX_HEADER_0_reg;
  wire TX_HEADER_1_reg;
  wire channel_hard_err_c;
  wire check_polarity_r_reg;
  wire enable_err_detect_i;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire [0:0]hard_err_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i;
  wire ready_r_reg0;
  wire \remote_rdy_cntr_reg[0] ;
  wire reset_lanes_c;
  wire reset_lanes_flop_0_i;
  wire reset_lanes_flop_0_i_0;
  wire reset_lanes_flop_0_i_1;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rx_header_err_i_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i_0;
  wire rx_polarity_r_reg;
  wire rxreset_for_lanes;
  wire [0:0]soft_err_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire tx_reset_i_1;
  wire tx_reset_i_2;
  wire tx_reset_i_3;
  wire txdatavalid_symgen_i_lane3;
  wire wait_for_lane_up_r;

  board_aurora_64b66b_0_2_ERR_DETECT err_detect_i
       (.CHANNEL_HARD_ERR_reg(CHANNEL_HARD_ERR_reg),
        .HARD_ERR_reg_0(HARD_ERR_reg),
        .SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg_0(stg5_reg_0),
        .channel_hard_err_c(channel_hard_err_c),
        .enable_err_detect_i(enable_err_detect_i),
        .hard_err_i(hard_err_i),
        .rx_header_err_i_0(rx_header_err_i_0),
        .rx_header_err_r(rx_header_err_r),
        .soft_err_i(soft_err_i));
  board_aurora_64b66b_0_2_LANE_INIT_SM lane_init_sm_i
       (.SOFT_ERR0(SOFT_ERR0),
        .SOFT_ERR_reg(SOFT_ERR_reg),
        .SR(SR),
        .check_polarity_r_reg_0(check_polarity_r_reg),
        .enable_err_detect_i(enable_err_detect_i),
        .illegal_btf_i(illegal_btf_i),
        .in0(in0),
        .lane_up_flop_i_0(lane_up_flop_i),
        .ready_r_reg0(ready_r_reg0),
        .reset_lanes_c(reset_lanes_c),
        .reset_lanes_flop_0_i(reset_lanes_flop_0_i),
        .reset_lanes_flop_0_i_0(reset_lanes_flop_0_i_0),
        .reset_lanes_flop_0_i_1(reset_lanes_flop_0_i_1),
        .reset_lanes_i(reset_lanes_i),
        .rx_header_err_r(rx_header_err_r),
        .rx_lossofsync_i_0(rx_lossofsync_i_0),
        .rx_polarity_r_reg_0(rx_polarity_r_reg),
        .rxreset_for_lanes(rxreset_for_lanes),
        .s_level_out_d5_reg(stg5_reg_0),
        .tx_reset_i_1(tx_reset_i_1),
        .tx_reset_i_2(tx_reset_i_2),
        .tx_reset_i_3(tx_reset_i_3),
        .wait_for_lane_up_r(wait_for_lane_up_r));
  board_aurora_64b66b_0_2_SYM_DEC sym_dec_i
       (.ILLEGAL_BTF_reg_0(lane_up_flop_i),
        .Q(Q),
        .RXDATAVALID_IN_REG(RXDATAVALID_IN_REG),
        .\RX_DATA_REG_reg[0]_0 (\RX_DATA_REG_reg[0] ),
        .RX_IDLES(RX_IDLES),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .\RX_PE_DATA_reg[0]_0 (\RX_PE_DATA_reg[0] ),
        .SR(SR),
        .illegal_btf_i(illegal_btf_i),
        .\remote_rdy_cntr_reg[0]_0 (\remote_rdy_cntr_reg[0] ),
        .\rx_na_idles_cntr_reg[0]_0 (stg5_reg_0));
  board_aurora_64b66b_0_2_SYM_GEN sym_gen_i
       (.D(D),
        .\TX_DATA_reg[0]_0 (\TX_DATA_reg[0] ),
        .\TX_DATA_reg[10]_0 (\TX_DATA_reg[10] ),
        .\TX_DATA_reg[11]_0 (\TX_DATA_reg[11] ),
        .\TX_DATA_reg[12]_0 (\TX_DATA_reg[12] ),
        .\TX_DATA_reg[13]_0 (\TX_DATA_reg[13] ),
        .\TX_DATA_reg[14]_0 (\TX_DATA_reg[14] ),
        .\TX_DATA_reg[15]_0 (\TX_DATA_reg[15] ),
        .\TX_DATA_reg[16]_0 (\TX_DATA_reg[16] ),
        .\TX_DATA_reg[17]_0 (\TX_DATA_reg[17] ),
        .\TX_DATA_reg[18]_0 (\TX_DATA_reg[18] ),
        .\TX_DATA_reg[19]_0 (\TX_DATA_reg[19] ),
        .\TX_DATA_reg[1]_0 (\TX_DATA_reg[1] ),
        .\TX_DATA_reg[20]_0 (\TX_DATA_reg[20] ),
        .\TX_DATA_reg[21]_0 (\TX_DATA_reg[21] ),
        .\TX_DATA_reg[22]_0 (\TX_DATA_reg[22] ),
        .\TX_DATA_reg[23]_0 (\TX_DATA_reg[23] ),
        .\TX_DATA_reg[24]_0 (\TX_DATA_reg[24] ),
        .\TX_DATA_reg[25]_0 (\TX_DATA_reg[25] ),
        .\TX_DATA_reg[26]_0 (\TX_DATA_reg[26] ),
        .\TX_DATA_reg[27]_0 (\TX_DATA_reg[27] ),
        .\TX_DATA_reg[28]_0 (\TX_DATA_reg[28] ),
        .\TX_DATA_reg[29]_0 (\TX_DATA_reg[29] ),
        .\TX_DATA_reg[2]_0 (\TX_DATA_reg[2] ),
        .\TX_DATA_reg[30]_0 (\TX_DATA_reg[30] ),
        .\TX_DATA_reg[31]_0 (\TX_DATA_reg[31] ),
        .\TX_DATA_reg[32]_0 (\TX_DATA_reg[32] ),
        .\TX_DATA_reg[33]_0 (\TX_DATA_reg[33] ),
        .\TX_DATA_reg[34]_0 (\TX_DATA_reg[34] ),
        .\TX_DATA_reg[35]_0 (\TX_DATA_reg[35] ),
        .\TX_DATA_reg[36]_0 (\TX_DATA_reg[36] ),
        .\TX_DATA_reg[37]_0 (\TX_DATA_reg[37] ),
        .\TX_DATA_reg[38]_0 (\TX_DATA_reg[38] ),
        .\TX_DATA_reg[39]_0 (\TX_DATA_reg[39] ),
        .\TX_DATA_reg[3]_0 (\TX_DATA_reg[3] ),
        .\TX_DATA_reg[40]_0 (\TX_DATA_reg[40] ),
        .\TX_DATA_reg[41]_0 (\TX_DATA_reg[41] ),
        .\TX_DATA_reg[42]_0 (\TX_DATA_reg[42] ),
        .\TX_DATA_reg[43]_0 (\TX_DATA_reg[43] ),
        .\TX_DATA_reg[44]_0 (\TX_DATA_reg[44] ),
        .\TX_DATA_reg[45]_0 (\TX_DATA_reg[45] ),
        .\TX_DATA_reg[46]_0 (\TX_DATA_reg[46] ),
        .\TX_DATA_reg[47]_0 (\TX_DATA_reg[47] ),
        .\TX_DATA_reg[48]_0 (\TX_DATA_reg[48] ),
        .\TX_DATA_reg[49]_0 (\TX_DATA_reg[49] ),
        .\TX_DATA_reg[4]_0 (\TX_DATA_reg[4] ),
        .\TX_DATA_reg[50]_0 (\TX_DATA_reg[50] ),
        .\TX_DATA_reg[51]_0 (\TX_DATA_reg[51] ),
        .\TX_DATA_reg[54]_0 (\TX_DATA_reg[54] ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55] ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_2 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[56]_0 (\TX_DATA_reg[56] ),
        .\TX_DATA_reg[57]_0 (\TX_DATA_reg[57] ),
        .\TX_DATA_reg[58]_0 (\TX_DATA_reg[58] ),
        .\TX_DATA_reg[59]_0 (\TX_DATA_reg[59] ),
        .\TX_DATA_reg[59]_1 (\TX_DATA_reg[59]_0 ),
        .\TX_DATA_reg[5]_0 (\TX_DATA_reg[5] ),
        .\TX_DATA_reg[60]_0 (\TX_DATA_reg[60] ),
        .\TX_DATA_reg[61]_0 (\TX_DATA_reg[61] ),
        .\TX_DATA_reg[62]_0 (\TX_DATA_reg[62] ),
        .\TX_DATA_reg[63]_0 (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[6]_0 (\TX_DATA_reg[6] ),
        .\TX_DATA_reg[7]_0 (\TX_DATA_reg[7] ),
        .\TX_DATA_reg[8]_0 (\TX_DATA_reg[8] ),
        .\TX_DATA_reg[9]_0 (\TX_DATA_reg[9] ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg(rst_pma_init_usrclk),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(stg5_reg_0),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3));
endmodule

module board_aurora_64b66b_0_2_BLOCK_SYNC_SM
   (D,
    system_reset_r2,
    blocksync_out_i,
    gtwiz_userclk_rx_usrclk_out,
    SR,
    Q,
    rxheadervalid_i);
  output [0:0]D;
  output system_reset_r2;
  output blocksync_out_i;
  input gtwiz_userclk_rx_usrclk_out;
  input [0:0]SR;
  input [1:0]Q;
  input rxheadervalid_i;

  wire BLOCKSYNC_OUT_i_1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10_n_0;
  wire RXGEARBOXSLIP_OUT_i_11_n_0;
  wire RXGEARBOXSLIP_OUT_i_12_n_0;
  wire RXGEARBOXSLIP_OUT_i_13_n_0;
  wire RXGEARBOXSLIP_OUT_i_2_n_0;
  wire RXGEARBOXSLIP_OUT_i_5_n_0;
  wire RXGEARBOXSLIP_OUT_i_6_n_0;
  wire RXGEARBOXSLIP_OUT_i_7_n_0;
  wire RXGEARBOXSLIP_OUT_i_8_n_0;
  wire RXGEARBOXSLIP_OUT_i_9_n_0;
  wire [0:0]SR;
  wire begin_r;
  wire begin_r_i_2__3_n_0;
  wire blocksync_out_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__12;
  wire [9:0]p_0_in__13;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_2_n_0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire \sync_header_count_i[15]_i_1_n_0 ;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2_n_0;
  wire test_sh_r_i_3_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1
       (.I0(p_1_in[1]),
        .I1(system_reset_r2),
        .I2(blocksync_out_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1_n_0),
        .Q(blocksync_out_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    RXGEARBOXSLIP_OUT_i_1
       (.I0(RXGEARBOXSLIP_OUT_i_2_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6_n_0),
        .O(slip_pulse_i));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_10
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_10_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_11
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_11_n_0));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12_n_0));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    RXGEARBOXSLIP_OUT_i_13
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_13_n_0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2
       (.I0(test_sh_r_i_2_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    RXGEARBOXSLIP_OUT_i_3
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(RXGEARBOXSLIP_OUT_i_7_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_4
       (.I0(RXGEARBOXSLIP_OUT_i_8_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_9_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_10_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_11_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    RXGEARBOXSLIP_OUT_i_5
       (.I0(RXGEARBOXSLIP_OUT_i_7_n_0),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[4]),
        .I3(RXGEARBOXSLIP_OUT_i_12_n_0),
        .I4(blocksync_out_i),
        .O(RXGEARBOXSLIP_OUT_i_5_n_0));
  LUT6 #(
    .INIT(64'hF4444444F4F4F4F4)) 
    RXGEARBOXSLIP_OUT_i_6
       (.I0(data2),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_7_n_0),
        .I4(RXGEARBOXSLIP_OUT_i_13_n_0),
        .I5(blocksync_out_i),
        .O(RXGEARBOXSLIP_OUT_i_6_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_7
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_7_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_8
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_9
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_9_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__3
       (.I0(begin_r_i_2__3_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(RXGEARBOXSLIP_OUT_i_5_n_0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__3
       (.I0(test_sh_r_i_2_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__3_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2
       (.I0(sync_done_r),
        .I1(rxheadervalid_i),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .O(sh_invalid_r_i_2_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    slip_r_i_1
       (.I0(test_sh_r_i_2_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1
       (.I0(sh_count_equals_max_i__14),
        .I1(sync_done_r_i_2_n_0),
        .I2(sh_invalid_cnt_equals_zero_i__4),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_2
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_2_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__12[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__12[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__12[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(\sync_header_count_i[15]_i_1_n_0 ));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1_n_0 ),
        .D(p_0_in__12[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__13[0]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__13[1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__13[2]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__13[3]));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__13[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__13[5]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__13[6]));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1 
       (.I0(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__13[7]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__13[8]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__13[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__13[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  FDRE system_reset_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(system_reset_r),
        .Q(system_reset_r2),
        .R(1'b0));
  FDRE system_reset_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(SR),
        .Q(system_reset_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAA2222AAAA0020)) 
    test_sh_r_i_1
       (.I0(test_sh_r_i_2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_5_n_0),
        .I4(test_sh_r_i_3_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3
       (.I0(rxheadervalid_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_BLOCK_SYNC_SM" *) 
module board_aurora_64b66b_0_2_BLOCK_SYNC_SM_10
   (D,
    blocksync_out_lane3_i,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane3_i);
  output [0:0]D;
  output blocksync_out_lane3_i;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane3_i;

  wire BLOCKSYNC_OUT_i_1__2_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_13__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__2_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__2_n_0;
  wire begin_r;
  wire begin_r_i_2__6_n_0;
  wire blocksync_out_lane3_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__24;
  wire [9:0]p_0_in__25;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane3_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__2_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_2__2_n_0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire \sync_header_count_i[15]_i_1__2_n_0 ;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__2_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__2_n_0;
  wire test_sh_r_i_3__2_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__2
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane3_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__2_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__2_n_0),
        .Q(blocksync_out_lane3_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_10__2
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_10__2_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_11__2
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_11__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__2
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    RXGEARBOXSLIP_OUT_i_13__2
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_13__2_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    RXGEARBOXSLIP_OUT_i_1__2
       (.I0(RXGEARBOXSLIP_OUT_i_2__2_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__2_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    RXGEARBOXSLIP_OUT_i_3__2
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(RXGEARBOXSLIP_OUT_i_7__2_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_4__2
       (.I0(RXGEARBOXSLIP_OUT_i_8__2_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_9__2_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_10__2_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_11__2_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    RXGEARBOXSLIP_OUT_i_5__2
       (.I0(RXGEARBOXSLIP_OUT_i_7__2_n_0),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[4]),
        .I3(RXGEARBOXSLIP_OUT_i_12__2_n_0),
        .I4(blocksync_out_lane3_i),
        .O(RXGEARBOXSLIP_OUT_i_5__2_n_0));
  LUT6 #(
    .INIT(64'hF4444444F4F4F4F4)) 
    RXGEARBOXSLIP_OUT_i_6__2
       (.I0(data2),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_7__2_n_0),
        .I4(RXGEARBOXSLIP_OUT_i_13__2_n_0),
        .I5(blocksync_out_lane3_i),
        .O(RXGEARBOXSLIP_OUT_i_6__2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_7__2
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_7__2_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_8__2
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_8__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_9__2
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_9__2_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__6
       (.I0(begin_r_i_2__6_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__6
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__6_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__2
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__2
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane3_i),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .O(sh_invalid_r_i_2__2_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__2
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__2_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__2 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    slip_r_i_1__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__2_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__2
       (.I0(sh_count_equals_max_i__14),
        .I1(sync_done_r_i_2__2_n_0),
        .I2(sh_invalid_cnt_equals_zero_i__4),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_2__2
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_2__2_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__24[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__24[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__2 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__24[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__2 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(\sync_header_count_i[15]_i_1__2_n_0 ));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__2_n_0 ),
        .D(p_0_in__24[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__25[0]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__25[1]));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__25[2]));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__25[3]));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__25[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__25[5]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__2 
       (.I0(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__25[6]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__2 
       (.I0(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__25[7]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__25[8]));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__2 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__2_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__25[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__2 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__2_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__25[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA2222AAAA0020)) 
    test_sh_r_i_1__2
       (.I0(test_sh_r_i_2__2_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_5__2_n_0),
        .I4(test_sh_r_i_3__2_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__2
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__2_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__2
       (.I0(rxheadervalid_lane3_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__2_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_BLOCK_SYNC_SM" *) 
module board_aurora_64b66b_0_2_BLOCK_SYNC_SM_8
   (D,
    blocksync_out_lane1_i,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane1_i);
  output [0:0]D;
  output blocksync_out_lane1_i;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane1_i;

  wire BLOCKSYNC_OUT_i_1__0_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_13__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__0_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__0_n_0;
  wire begin_r;
  wire begin_r_i_2__4_n_0;
  wire blocksync_out_lane1_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__16;
  wire [9:0]p_0_in__17;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane1_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__0_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_2__0_n_0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire \sync_header_count_i[15]_i_1__0_n_0 ;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__0_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__0_n_0;
  wire test_sh_r_i_3__0_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__0
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane1_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__0_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__0_n_0),
        .Q(blocksync_out_lane1_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_10__0
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_10__0_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_11__0
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_11__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__0
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    RXGEARBOXSLIP_OUT_i_13__0
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_13__0_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    RXGEARBOXSLIP_OUT_i_1__0
       (.I0(RXGEARBOXSLIP_OUT_i_2__0_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__0_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__0_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    RXGEARBOXSLIP_OUT_i_3__0
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(RXGEARBOXSLIP_OUT_i_7__0_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_4__0
       (.I0(RXGEARBOXSLIP_OUT_i_8__0_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_9__0_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_10__0_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_11__0_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    RXGEARBOXSLIP_OUT_i_5__0
       (.I0(RXGEARBOXSLIP_OUT_i_7__0_n_0),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[4]),
        .I3(RXGEARBOXSLIP_OUT_i_12__0_n_0),
        .I4(blocksync_out_lane1_i),
        .O(RXGEARBOXSLIP_OUT_i_5__0_n_0));
  LUT6 #(
    .INIT(64'hF4444444F4F4F4F4)) 
    RXGEARBOXSLIP_OUT_i_6__0
       (.I0(data2),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_7__0_n_0),
        .I4(RXGEARBOXSLIP_OUT_i_13__0_n_0),
        .I5(blocksync_out_lane1_i),
        .O(RXGEARBOXSLIP_OUT_i_6__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_7__0
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_8__0
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_8__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_9__0
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_9__0_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__4
       (.I0(begin_r_i_2__4_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__4
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__4_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__0
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__0_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__0
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane1_i),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .O(sh_invalid_r_i_2__0_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__0
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__0_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__0 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    slip_r_i_1__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__0_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__0
       (.I0(sh_count_equals_max_i__14),
        .I1(sync_done_r_i_2__0_n_0),
        .I2(sh_invalid_cnt_equals_zero_i__4),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_2__0
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_2__0_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__16[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__16[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__0 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__16[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__0 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(\sync_header_count_i[15]_i_1__0_n_0 ));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__0_n_0 ),
        .D(p_0_in__16[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__17[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__17[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__17[2]));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__17[3]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__17[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__17[5]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__0 
       (.I0(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__17[6]));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__0 
       (.I0(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__17[7]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__17[8]));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__0 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__0_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__17[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__0 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__0_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__17[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA2222AAAA0020)) 
    test_sh_r_i_1__0
       (.I0(test_sh_r_i_2__0_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_5__0_n_0),
        .I4(test_sh_r_i_3__0_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__0
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__0_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__0
       (.I0(rxheadervalid_lane1_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__0_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_BLOCK_SYNC_SM" *) 
module board_aurora_64b66b_0_2_BLOCK_SYNC_SM_9
   (D,
    blocksync_out_lane2_i,
    blocksync_all_lanes_inrxclk,
    gtwiz_userclk_rx_usrclk_out,
    system_reset_r2,
    Q,
    rxheadervalid_lane2_i,
    blocksync_out_lane3_i,
    blocksync_out_i,
    blocksync_out_lane1_i);
  output [0:0]D;
  output blocksync_out_lane2_i;
  output blocksync_all_lanes_inrxclk;
  input gtwiz_userclk_rx_usrclk_out;
  input system_reset_r2;
  input [1:0]Q;
  input rxheadervalid_lane2_i;
  input blocksync_out_lane3_i;
  input blocksync_out_i;
  input blocksync_out_lane1_i;

  wire BLOCKSYNC_OUT_i_1__1_n_0;
  wire [0:0]D;
  wire [1:0]Q;
  wire RXGEARBOXSLIP_OUT_i_10__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_11__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_12__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_13__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_2__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_5__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_6__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_7__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_8__1_n_0;
  wire RXGEARBOXSLIP_OUT_i_9__1_n_0;
  wire begin_r;
  wire begin_r_i_2__5_n_0;
  wire blocksync_all_lanes_inrxclk;
  wire blocksync_out_i;
  wire blocksync_out_lane1_i;
  wire blocksync_out_lane2_i;
  wire blocksync_out_lane3_i;
  wire data2;
  wire gtwiz_userclk_rx_usrclk_out;
  wire next_begin_c;
  wire next_sh_invalid_c;
  wire next_sh_valid_c;
  wire next_slip_c;
  wire next_sync_done_c;
  wire next_test_sh_c;
  wire p_0_in;
  wire [15:0]p_0_in__20;
  wire [9:0]p_0_in__21;
  wire [3:1]p_1_in;
  wire [15:1]p_1_in__0;
  wire rxheadervalid_lane2_i;
  wire sh_count_equals_max_i__14;
  wire sh_invalid_cnt_equals_zero_i__4;
  wire sh_invalid_r_i_2__1_n_0;
  wire slip_pulse_i;
  wire sync_done_r;
  wire sync_done_r_i_2__1_n_0;
  wire sync_header_count_i0_carry__0_n_2;
  wire sync_header_count_i0_carry__0_n_3;
  wire sync_header_count_i0_carry__0_n_4;
  wire sync_header_count_i0_carry__0_n_5;
  wire sync_header_count_i0_carry__0_n_6;
  wire sync_header_count_i0_carry__0_n_7;
  wire sync_header_count_i0_carry_n_0;
  wire sync_header_count_i0_carry_n_1;
  wire sync_header_count_i0_carry_n_2;
  wire sync_header_count_i0_carry_n_3;
  wire sync_header_count_i0_carry_n_4;
  wire sync_header_count_i0_carry_n_5;
  wire sync_header_count_i0_carry_n_6;
  wire sync_header_count_i0_carry_n_7;
  wire \sync_header_count_i[15]_i_1__1_n_0 ;
  wire [15:0]sync_header_count_i_reg;
  wire \sync_header_invalid_count_i[9]_i_2__1_n_0 ;
  wire [9:0]sync_header_invalid_count_i_reg;
  wire system_reset_r2;
  wire test_sh_r;
  wire test_sh_r_i_2__1_n_0;
  wire test_sh_r_i_3__1_n_0;
  wire [7:6]NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED;
  wire [7:7]NLW_sync_header_count_i0_carry__0_O_UNCONNECTED;

  LUT4 #(
    .INIT(16'h1110)) 
    BLOCKSYNC_OUT_i_1__1
       (.I0(system_reset_r2),
        .I1(p_1_in[1]),
        .I2(blocksync_out_lane2_i),
        .I3(sync_done_r),
        .O(BLOCKSYNC_OUT_i_1__1_n_0));
  FDRE BLOCKSYNC_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(BLOCKSYNC_OUT_i_1__1_n_0),
        .Q(blocksync_out_lane2_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_10__1
       (.I0(sync_header_count_i_reg[10]),
        .I1(sync_header_count_i_reg[11]),
        .I2(sync_header_count_i_reg[8]),
        .I3(sync_header_count_i_reg[9]),
        .O(RXGEARBOXSLIP_OUT_i_10__1_n_0));
  LUT4 #(
    .INIT(16'h0800)) 
    RXGEARBOXSLIP_OUT_i_11__1
       (.I0(sync_header_count_i_reg[15]),
        .I1(sync_header_count_i_reg[14]),
        .I2(sync_header_count_i_reg[12]),
        .I3(sync_header_count_i_reg[13]),
        .O(RXGEARBOXSLIP_OUT_i_11__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h01)) 
    RXGEARBOXSLIP_OUT_i_12__1
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .O(RXGEARBOXSLIP_OUT_i_12__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    RXGEARBOXSLIP_OUT_i_13__1
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[4]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[1]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_13__1_n_0));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    RXGEARBOXSLIP_OUT_i_1__1
       (.I0(RXGEARBOXSLIP_OUT_i_2__1_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__1_n_0),
        .O(slip_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h2)) 
    RXGEARBOXSLIP_OUT_i_2__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(p_1_in[1]),
        .O(RXGEARBOXSLIP_OUT_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    RXGEARBOXSLIP_OUT_i_3__1
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(RXGEARBOXSLIP_OUT_i_7__1_n_0),
        .O(sh_invalid_cnt_equals_zero_i__4));
  LUT4 #(
    .INIT(16'h8000)) 
    RXGEARBOXSLIP_OUT_i_4__1
       (.I0(RXGEARBOXSLIP_OUT_i_8__1_n_0),
        .I1(RXGEARBOXSLIP_OUT_i_9__1_n_0),
        .I2(RXGEARBOXSLIP_OUT_i_10__1_n_0),
        .I3(RXGEARBOXSLIP_OUT_i_11__1_n_0),
        .O(sh_count_equals_max_i__14));
  LUT5 #(
    .INIT(32'h2000FFFF)) 
    RXGEARBOXSLIP_OUT_i_5__1
       (.I0(RXGEARBOXSLIP_OUT_i_7__1_n_0),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[4]),
        .I3(RXGEARBOXSLIP_OUT_i_12__1_n_0),
        .I4(blocksync_out_lane2_i),
        .O(RXGEARBOXSLIP_OUT_i_5__1_n_0));
  LUT6 #(
    .INIT(64'hF4444444F4F4F4F4)) 
    RXGEARBOXSLIP_OUT_i_6__1
       (.I0(data2),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_7__1_n_0),
        .I4(RXGEARBOXSLIP_OUT_i_13__1_n_0),
        .I5(blocksync_out_lane2_i),
        .O(RXGEARBOXSLIP_OUT_i_6__1_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    RXGEARBOXSLIP_OUT_i_7__1
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[9]),
        .I4(sync_header_invalid_count_i_reg[8]),
        .O(RXGEARBOXSLIP_OUT_i_7__1_n_0));
  LUT4 #(
    .INIT(16'h0400)) 
    RXGEARBOXSLIP_OUT_i_8__1
       (.I0(sync_header_count_i_reg[7]),
        .I1(sync_header_count_i_reg[6]),
        .I2(sync_header_count_i_reg[4]),
        .I3(sync_header_count_i_reg[5]),
        .O(RXGEARBOXSLIP_OUT_i_8__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    RXGEARBOXSLIP_OUT_i_9__1
       (.I0(sync_header_count_i_reg[1]),
        .I1(sync_header_count_i_reg[0]),
        .I2(sync_header_count_i_reg[3]),
        .I3(sync_header_count_i_reg[2]),
        .O(RXGEARBOXSLIP_OUT_i_9__1_n_0));
  FDRE RXGEARBOXSLIP_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(slip_pulse_i),
        .Q(D),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFBAAAAA)) 
    begin_r_i_1__5
       (.I0(begin_r_i_2__5_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .I4(sh_count_equals_max_i__14),
        .I5(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .O(next_begin_c));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'hFDDD)) 
    begin_r_i_2__5
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(sync_done_r),
        .I2(data2),
        .I3(p_1_in[1]),
        .O(begin_r_i_2__5_n_0));
  FDSE begin_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(system_reset_r2));
  LUT4 #(
    .INIT(16'h8000)) 
    blocksync_all_lanes_inrxclk_q_i_1
       (.I0(blocksync_out_lane2_i),
        .I1(blocksync_out_lane3_i),
        .I2(blocksync_out_i),
        .I3(blocksync_out_lane1_i),
        .O(blocksync_all_lanes_inrxclk));
  LUT6 #(
    .INIT(64'h0000000000009000)) 
    sh_invalid_r_i_1__1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__1_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_invalid_c));
  LUT4 #(
    .INIT(16'h0004)) 
    sh_invalid_r_i_2__1
       (.I0(sync_done_r),
        .I1(rxheadervalid_lane2_i),
        .I2(p_1_in[3]),
        .I3(p_1_in[2]),
        .O(sh_invalid_r_i_2__1_n_0));
  FDRE sh_invalid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_invalid_c),
        .Q(p_1_in[2]),
        .R(system_reset_r2));
  LUT6 #(
    .INIT(64'h0000000000006000)) 
    sh_valid_r_i_1__1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(sh_invalid_r_i_2__1_n_0),
        .I3(test_sh_r),
        .I4(begin_r),
        .I5(p_1_in[1]),
        .O(next_sh_valid_c));
  FDRE sh_valid_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sh_valid_c),
        .Q(p_1_in[3]),
        .R(system_reset_r2));
  LUT1 #(
    .INIT(2'h1)) 
    \slip_count_i[15]_i_1__1 
       (.I0(p_1_in[1]),
        .O(p_0_in));
  FDRE \slip_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D),
        .Q(p_1_in__0[1]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[10]),
        .Q(p_1_in__0[11]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[11]),
        .Q(p_1_in__0[12]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[12]),
        .Q(p_1_in__0[13]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[13]),
        .Q(p_1_in__0[14]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[14]),
        .Q(p_1_in__0[15]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[15]),
        .Q(data2),
        .R(p_0_in));
  FDRE \slip_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[1]),
        .Q(p_1_in__0[2]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[2]),
        .Q(p_1_in__0[3]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[3]),
        .Q(p_1_in__0[4]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[4]),
        .Q(p_1_in__0[5]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[5]),
        .Q(p_1_in__0[6]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[6]),
        .Q(p_1_in__0[7]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[7]),
        .Q(p_1_in__0[8]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[8]),
        .Q(p_1_in__0[9]),
        .R(p_0_in));
  FDRE \slip_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_1_in__0[9]),
        .Q(p_1_in__0[10]),
        .R(p_0_in));
  LUT6 #(
    .INIT(64'hAAAAAAAA20000000)) 
    slip_r_i_1__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(sh_invalid_cnt_equals_zero_i__4),
        .I2(sh_count_equals_max_i__14),
        .I3(p_1_in[3]),
        .I4(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .I5(RXGEARBOXSLIP_OUT_i_6__1_n_0),
        .O(next_slip_c));
  FDRE slip_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_slip_c),
        .Q(p_1_in[1]),
        .R(system_reset_r2));
  LUT3 #(
    .INIT(8'h80)) 
    sync_done_r_i_1__1
       (.I0(sh_count_equals_max_i__14),
        .I1(sync_done_r_i_2__1_n_0),
        .I2(sh_invalid_cnt_equals_zero_i__4),
        .O(next_sync_done_c));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    sync_done_r_i_2__1
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .I2(sync_done_r),
        .I3(p_1_in[1]),
        .I4(begin_r),
        .I5(test_sh_r),
        .O(sync_done_r_i_2__1_n_0));
  FDRE sync_done_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_sync_done_c),
        .Q(sync_done_r),
        .R(system_reset_r2));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry
       (.CI(sync_header_count_i_reg[0]),
        .CI_TOP(1'b0),
        .CO({sync_header_count_i0_carry_n_0,sync_header_count_i0_carry_n_1,sync_header_count_i0_carry_n_2,sync_header_count_i0_carry_n_3,sync_header_count_i0_carry_n_4,sync_header_count_i0_carry_n_5,sync_header_count_i0_carry_n_6,sync_header_count_i0_carry_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O(p_0_in__20[8:1]),
        .S(sync_header_count_i_reg[8:1]));
  (* ADDER_THRESHOLD = "35" *) 
  CARRY8 sync_header_count_i0_carry__0
       (.CI(sync_header_count_i0_carry_n_0),
        .CI_TOP(1'b0),
        .CO({NLW_sync_header_count_i0_carry__0_CO_UNCONNECTED[7:6],sync_header_count_i0_carry__0_n_2,sync_header_count_i0_carry__0_n_3,sync_header_count_i0_carry__0_n_4,sync_header_count_i0_carry__0_n_5,sync_header_count_i0_carry__0_n_6,sync_header_count_i0_carry__0_n_7}),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({NLW_sync_header_count_i0_carry__0_O_UNCONNECTED[7],p_0_in__20[15:9]}),
        .S({1'b0,sync_header_count_i_reg[15:9]}));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_count_i[0]_i_1__1 
       (.I0(sync_header_count_i_reg[0]),
        .O(p_0_in__20[0]));
  LUT2 #(
    .INIT(4'hE)) 
    \sync_header_count_i[15]_i_1__1 
       (.I0(p_1_in[3]),
        .I1(p_1_in[2]),
        .O(\sync_header_count_i[15]_i_1__1_n_0 ));
  FDRE \sync_header_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[0]),
        .Q(sync_header_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[10]),
        .Q(sync_header_count_i_reg[10]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[11]),
        .Q(sync_header_count_i_reg[11]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[12]),
        .Q(sync_header_count_i_reg[12]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[13]),
        .Q(sync_header_count_i_reg[13]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[14]),
        .Q(sync_header_count_i_reg[14]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[15]),
        .Q(sync_header_count_i_reg[15]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[1]),
        .Q(sync_header_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[2]),
        .Q(sync_header_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[3]),
        .Q(sync_header_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[4]),
        .Q(sync_header_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[5]),
        .Q(sync_header_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[6]),
        .Q(sync_header_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[7]),
        .Q(sync_header_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[8]),
        .Q(sync_header_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(\sync_header_count_i[15]_i_1__1_n_0 ),
        .D(p_0_in__20[9]),
        .Q(sync_header_count_i_reg[9]),
        .R(begin_r));
  LUT1 #(
    .INIT(2'h1)) 
    \sync_header_invalid_count_i[0]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .O(p_0_in__21[0]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[1]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .O(p_0_in__21[1]));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[2]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[0]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .O(p_0_in__21[2]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[3]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[1]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[2]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .O(p_0_in__21[3]));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[4]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[2]),
        .I1(sync_header_invalid_count_i_reg[0]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[3]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .O(p_0_in__21[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sync_header_invalid_count_i[5]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[3]),
        .I1(sync_header_invalid_count_i_reg[1]),
        .I2(sync_header_invalid_count_i_reg[0]),
        .I3(sync_header_invalid_count_i_reg[2]),
        .I4(sync_header_invalid_count_i_reg[4]),
        .I5(sync_header_invalid_count_i_reg[5]),
        .O(p_0_in__21[5]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sync_header_invalid_count_i[6]_i_1__1 
       (.I0(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .O(p_0_in__21[6]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sync_header_invalid_count_i[7]_i_1__1 
       (.I0(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I1(sync_header_invalid_count_i_reg[6]),
        .I2(sync_header_invalid_count_i_reg[7]),
        .O(p_0_in__21[7]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sync_header_invalid_count_i[8]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[6]),
        .I1(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I2(sync_header_invalid_count_i_reg[7]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .O(p_0_in__21[8]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sync_header_invalid_count_i[9]_i_1__1 
       (.I0(sync_header_invalid_count_i_reg[7]),
        .I1(\sync_header_invalid_count_i[9]_i_2__1_n_0 ),
        .I2(sync_header_invalid_count_i_reg[6]),
        .I3(sync_header_invalid_count_i_reg[8]),
        .I4(sync_header_invalid_count_i_reg[9]),
        .O(p_0_in__21[9]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sync_header_invalid_count_i[9]_i_2__1 
       (.I0(sync_header_invalid_count_i_reg[5]),
        .I1(sync_header_invalid_count_i_reg[3]),
        .I2(sync_header_invalid_count_i_reg[1]),
        .I3(sync_header_invalid_count_i_reg[0]),
        .I4(sync_header_invalid_count_i_reg[2]),
        .I5(sync_header_invalid_count_i_reg[4]),
        .O(\sync_header_invalid_count_i[9]_i_2__1_n_0 ));
  FDRE \sync_header_invalid_count_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[0]),
        .Q(sync_header_invalid_count_i_reg[0]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[1]),
        .Q(sync_header_invalid_count_i_reg[1]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[2]),
        .Q(sync_header_invalid_count_i_reg[2]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[3]),
        .Q(sync_header_invalid_count_i_reg[3]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[4]),
        .Q(sync_header_invalid_count_i_reg[4]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[5]),
        .Q(sync_header_invalid_count_i_reg[5]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[6]),
        .Q(sync_header_invalid_count_i_reg[6]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[7]),
        .Q(sync_header_invalid_count_i_reg[7]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[8]),
        .Q(sync_header_invalid_count_i_reg[8]),
        .R(begin_r));
  FDRE \sync_header_invalid_count_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(p_1_in[2]),
        .D(p_0_in__21[9]),
        .Q(sync_header_invalid_count_i_reg[9]),
        .R(begin_r));
  LUT6 #(
    .INIT(64'hAAAA2222AAAA0020)) 
    test_sh_r_i_1__1
       (.I0(test_sh_r_i_2__1_n_0),
        .I1(sh_count_equals_max_i__14),
        .I2(p_1_in[2]),
        .I3(RXGEARBOXSLIP_OUT_i_5__1_n_0),
        .I4(test_sh_r_i_3__1_n_0),
        .I5(p_1_in[3]),
        .O(next_test_sh_c));
  LUT6 #(
    .INIT(64'h0000000100010116)) 
    test_sh_r_i_2__1
       (.I0(sync_done_r),
        .I1(p_1_in[1]),
        .I2(p_1_in[2]),
        .I3(p_1_in[3]),
        .I4(test_sh_r),
        .I5(begin_r),
        .O(test_sh_r_i_2__1_n_0));
  LUT3 #(
    .INIT(8'hF4)) 
    test_sh_r_i_3__1
       (.I0(rxheadervalid_lane2_i),
        .I1(test_sh_r),
        .I2(begin_r),
        .O(test_sh_r_i_3__1_n_0));
  FDRE test_sh_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(next_test_sh_c),
        .Q(test_sh_r),
        .R(system_reset_r2));
endmodule

module board_aurora_64b66b_0_2_CHANNEL_BOND_GEN
   (gen_ch_bond_int_reg_0,
    \gen_cc_blk[0].gen_cc_flop ,
    \free_count_r_reg[0]_0 ,
    txdatavalid_i,
    gen_cc_i,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i,
    TX_HEADER_0_reg_0,
    rst_pma_init_usrclk_2,
    SR,
    gen_ch_bond_int_reg_1);
  output gen_ch_bond_int_reg_0;
  output \gen_cc_blk[0].gen_cc_flop ;
  input \free_count_r_reg[0]_0 ;
  input txdatavalid_i;
  input [0:0]gen_cc_i;
  input TX_HEADER_0_reg;
  input txdatavalid_symgen_i;
  input [0:0]TX_HEADER_0_reg_0;
  input rst_pma_init_usrclk_2;
  input [0:0]SR;
  input gen_ch_bond_int_reg_1;

  wire [0:0]SR;
  wire TX_HEADER_0_reg;
  wire [0:0]TX_HEADER_0_reg_0;
  wire \free_count_r[0]_i_1_n_0 ;
  wire \free_count_r[0]_i_3_n_0 ;
  wire [0:4]free_count_r_reg;
  wire \free_count_r_reg[0]_0 ;
  wire \gen_cc_blk[0].gen_cc_flop ;
  wire [0:0]gen_cc_i;
  wire gen_ch_bond_int_i_1_n_0;
  wire gen_ch_bond_int_reg_0;
  wire gen_ch_bond_int_reg_1;
  wire [4:0]p_0_in__9;
  wire rst_pma_init_usrclk_2;
  wire txdatavalid_i;
  wire txdatavalid_in_r1;
  wire txdatavalid_symgen_i;

  LUT6 #(
    .INIT(64'h0000000010FF1000)) 
    TX_HEADER_0_i_1__2
       (.I0(gen_cc_i),
        .I1(gen_ch_bond_int_reg_0),
        .I2(TX_HEADER_0_reg),
        .I3(txdatavalid_symgen_i),
        .I4(TX_HEADER_0_reg_0),
        .I5(rst_pma_init_usrclk_2),
        .O(\gen_cc_blk[0].gen_cc_flop ));
  LUT3 #(
    .INIT(8'hBA)) 
    \free_count_r[0]_i_1 
       (.I0(SR),
        .I1(\free_count_r[0]_i_3_n_0 ),
        .I2(txdatavalid_in_r1),
        .O(\free_count_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \free_count_r[0]_i_2 
       (.I0(free_count_r_reg[0]),
        .I1(free_count_r_reg[2]),
        .I2(free_count_r_reg[3]),
        .I3(free_count_r_reg[4]),
        .I4(free_count_r_reg[1]),
        .O(p_0_in__9[4]));
  (* SOFT_HLUTNM = "soft_lutpair363" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    \free_count_r[0]_i_3 
       (.I0(free_count_r_reg[4]),
        .I1(free_count_r_reg[3]),
        .I2(free_count_r_reg[2]),
        .I3(free_count_r_reg[0]),
        .I4(free_count_r_reg[1]),
        .O(\free_count_r[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \free_count_r[1]_i_1 
       (.I0(free_count_r_reg[1]),
        .I1(free_count_r_reg[4]),
        .I2(free_count_r_reg[3]),
        .I3(free_count_r_reg[2]),
        .O(p_0_in__9[3]));
  (* SOFT_HLUTNM = "soft_lutpair364" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \free_count_r[2]_i_1 
       (.I0(free_count_r_reg[2]),
        .I1(free_count_r_reg[3]),
        .I2(free_count_r_reg[4]),
        .O(p_0_in__9[2]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \free_count_r[3]_i_1 
       (.I0(free_count_r_reg[4]),
        .I1(free_count_r_reg[3]),
        .O(p_0_in__9[1]));
  (* SOFT_HLUTNM = "soft_lutpair365" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \free_count_r[4]_i_1 
       (.I0(free_count_r_reg[4]),
        .O(p_0_in__9[0]));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[0] 
       (.C(\free_count_r_reg[0]_0 ),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__9[4]),
        .Q(free_count_r_reg[0]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[1] 
       (.C(\free_count_r_reg[0]_0 ),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__9[3]),
        .Q(free_count_r_reg[1]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[2] 
       (.C(\free_count_r_reg[0]_0 ),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__9[2]),
        .Q(free_count_r_reg[2]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[3] 
       (.C(\free_count_r_reg[0]_0 ),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__9[1]),
        .Q(free_count_r_reg[3]),
        .R(\free_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \free_count_r_reg[4] 
       (.C(\free_count_r_reg[0]_0 ),
        .CE(txdatavalid_in_r1),
        .D(p_0_in__9[0]),
        .Q(free_count_r_reg[4]),
        .R(\free_count_r[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000400000000)) 
    gen_ch_bond_int_i_1
       (.I0(gen_ch_bond_int_reg_1),
        .I1(free_count_r_reg[1]),
        .I2(free_count_r_reg[0]),
        .I3(free_count_r_reg[2]),
        .I4(free_count_r_reg[3]),
        .I5(free_count_r_reg[4]),
        .O(gen_ch_bond_int_i_1_n_0));
  FDRE gen_ch_bond_int_reg
       (.C(\free_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(gen_ch_bond_int_i_1_n_0),
        .Q(gen_ch_bond_int_reg_0),
        .R(1'b0));
  FDRE txdatavalid_in_r1_reg
       (.C(\free_count_r_reg[0]_0 ),
        .CE(1'b1),
        .D(txdatavalid_i),
        .Q(txdatavalid_in_r1),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_CHANNEL_ERR_DETECT
   (hard_err,
    channel_hard_err_c,
    CHANNEL_HARD_ERR_reg_0);
  output hard_err;
  input channel_hard_err_c;
  input CHANNEL_HARD_ERR_reg_0;

  wire CHANNEL_HARD_ERR_reg_0;
  wire channel_hard_err_c;
  wire hard_err;

  FDRE CHANNEL_HARD_ERR_reg
       (.C(CHANNEL_HARD_ERR_reg_0),
        .CE(1'b1),
        .D(channel_hard_err_c),
        .Q(hard_err),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_CHANNEL_INIT_SM
   (reset_lanes_i,
    en_chan_sync_i,
    channel_bond_r_reg_0,
    wait_for_lane_up_r_reg_0,
    in0,
    CHANNEL_UP_RX_IF_reg_0,
    channel_up_tx_if,
    CHANNEL_UP_TX_IF_reg_rep_0,
    CHANNEL_UP_TX_IF_reg_rep__0_0,
    \TX_PE_DATA_reg[241] ,
    \TX_PE_DATA_reg[177] ,
    \TX_PE_DATA_reg[113] ,
    \TX_PE_DATA_V_reg[0]_rep__0 ,
    \TX_PE_DATA_reg[49] ,
    \gen_cc_blk[3].gen_cc_flop ,
    \gen_cc_blk[2].gen_cc_flop ,
    \gen_cc_blk[1].gen_cc_flop ,
    R0,
    CHANNEL_UP_RX_IF_reg_1,
    CHANNEL_UP_TX_IF_reg_0,
    gen_ch_bond_int_reg,
    gen_ch_bond_int_reg_0,
    gen_ch_bond_int_reg_1,
    \TX_PE_DATA_V_reg[0]_rep__0_0 ,
    reset_lanes_c,
    CHANNEL_UP_RX_IF_reg_2,
    ch_bond_done_i,
    SR,
    remote_ready_r_reg_0,
    RX_IDLES,
    \TX_DATA_reg[53] ,
    Q,
    tx_pe_data_v_i,
    \TX_DATA_reg[53]_0 ,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[53]_1 ,
    \TX_DATA_reg[63]_0 ,
    gen_cc_i,
    rst_pma_init_usrclk,
    rst_pma_init_usrclk_0,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    txdatavalid_symgen_i_lane3,
    D,
    txdatavalid_symgen_i_lane2,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i_lane1,
    TX_HEADER_0_reg_0,
    \TX_DATA_reg[63]_1 ,
    ready_r_reg_0,
    soft_err_i,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[63]_3 ,
    \TX_DATA_reg[63]_4 ,
    \TX_DATA_reg[63]_5 );
  output reset_lanes_i;
  output en_chan_sync_i;
  output channel_bond_r_reg_0;
  output wait_for_lane_up_r_reg_0;
  output in0;
  output CHANNEL_UP_RX_IF_reg_0;
  output channel_up_tx_if;
  output CHANNEL_UP_TX_IF_reg_rep_0;
  output CHANNEL_UP_TX_IF_reg_rep__0_0;
  output [2:0]\TX_PE_DATA_reg[241] ;
  output [2:0]\TX_PE_DATA_reg[177] ;
  output [2:0]\TX_PE_DATA_reg[113] ;
  output \TX_PE_DATA_V_reg[0]_rep__0 ;
  output [1:0]\TX_PE_DATA_reg[49] ;
  output \gen_cc_blk[3].gen_cc_flop ;
  output \gen_cc_blk[2].gen_cc_flop ;
  output \gen_cc_blk[1].gen_cc_flop ;
  output R0;
  output CHANNEL_UP_RX_IF_reg_1;
  output CHANNEL_UP_TX_IF_reg_0;
  output gen_ch_bond_int_reg;
  output gen_ch_bond_int_reg_0;
  output gen_ch_bond_int_reg_1;
  output \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  input reset_lanes_c;
  input CHANNEL_UP_RX_IF_reg_2;
  input [0:3]ch_bond_done_i;
  input [0:0]SR;
  input remote_ready_r_reg_0;
  input [0:3]RX_IDLES;
  input \TX_DATA_reg[53] ;
  input [10:0]Q;
  input [0:0]tx_pe_data_v_i;
  input \TX_DATA_reg[53]_0 ;
  input \TX_DATA_reg[63] ;
  input \TX_DATA_reg[53]_1 ;
  input \TX_DATA_reg[63]_0 ;
  input [0:3]gen_cc_i;
  input rst_pma_init_usrclk;
  input rst_pma_init_usrclk_0;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input txdatavalid_symgen_i_lane3;
  input [0:0]D;
  input txdatavalid_symgen_i_lane2;
  input [0:0]TX_HEADER_0_reg;
  input txdatavalid_symgen_i_lane1;
  input [0:0]TX_HEADER_0_reg_0;
  input \TX_DATA_reg[63]_1 ;
  input ready_r_reg_0;
  input [0:3]soft_err_i;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[63]_3 ;
  input \TX_DATA_reg[63]_4 ;
  input \TX_DATA_reg[63]_5 ;

  wire CHANNEL_UP_RX_IF_reg_0;
  wire CHANNEL_UP_RX_IF_reg_1;
  wire CHANNEL_UP_RX_IF_reg_2;
  wire CHANNEL_UP_TX_IF_reg_0;
  wire CHANNEL_UP_TX_IF_reg_rep_0;
  wire CHANNEL_UP_TX_IF_reg_rep__0_0;
  wire CHANNEL_UP_TX_IF_rep__0_i_1_n_0;
  wire CHANNEL_UP_TX_IF_rep_i_1_n_0;
  wire [0:0]D;
  wire [10:0]Q;
  wire R0;
  wire [0:3]RX_IDLES;
  wire [0:0]SR;
  wire \TX_DATA[54]_i_2_n_0 ;
  wire \TX_DATA_reg[53] ;
  wire \TX_DATA_reg[53]_0 ;
  wire \TX_DATA_reg[53]_1 ;
  wire \TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[63]_3 ;
  wire \TX_DATA_reg[63]_4 ;
  wire \TX_DATA_reg[63]_5 ;
  wire [0:0]TX_HEADER_0_reg;
  wire [0:0]TX_HEADER_0_reg_0;
  wire \TX_PE_DATA_V_reg[0]_rep__0 ;
  wire \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  wire [2:0]\TX_PE_DATA_reg[113] ;
  wire [2:0]\TX_PE_DATA_reg[177] ;
  wire [2:0]\TX_PE_DATA_reg[241] ;
  wire [1:0]\TX_PE_DATA_reg[49] ;
  wire all_ch_bond_done_c__0;
  wire any_idles_r;
  wire any_idles_r0_n_0;
  wire bond_passed_r;
  wire [0:3]ch_bond_done_i;
  wire chan_bond_reset_i;
  (* RTL_KEEP = "true" *) wire [8:0]chan_bond_timeout_val;
  wire [8:0]chan_bond_timer;
  wire \chan_bond_timer[0]_i_1_n_0 ;
  wire \chan_bond_timer[8]_i_3_n_0 ;
  wire [8:8]chan_bond_timer_0;
  wire channel_bond_q;
  wire channel_bond_qq;
  wire channel_bond_r_reg_0;
  wire channel_up_c;
  wire channel_up_rx_c;
  wire channel_up_tx_if;
  wire en_chan_sync_i;
  wire \gen_cc_blk[1].gen_cc_flop ;
  wire \gen_cc_blk[2].gen_cc_flop ;
  wire \gen_cc_blk[3].gen_cc_flop ;
  wire [0:3]gen_cc_i;
  wire gen_ch_bond_int_reg;
  wire gen_ch_bond_int_reg_0;
  wire gen_ch_bond_int_reg_1;
  wire idle_xmit_cntr;
  wire \idle_xmit_cntr[0]_i_1_n_0 ;
  wire \idle_xmit_cntr[0]_i_3_n_0 ;
  wire \idle_xmit_cntr[0]_i_4_n_0 ;
  wire \idle_xmit_cntr[1]_i_1_n_0 ;
  wire \idle_xmit_cntr[2]_i_1_n_0 ;
  wire \idle_xmit_cntr[3]_i_1_n_0 ;
  wire \idle_xmit_cntr[4]_i_1_n_0 ;
  wire \idle_xmit_cntr[5]_i_1_n_0 ;
  wire \idle_xmit_cntr_reg_n_0_[0] ;
  wire \idle_xmit_cntr_reg_n_0_[1] ;
  wire \idle_xmit_cntr_reg_n_0_[2] ;
  wire \idle_xmit_cntr_reg_n_0_[3] ;
  wire \idle_xmit_cntr_reg_n_0_[4] ;
  wire \idle_xmit_cntr_reg_n_0_[5] ;
  wire in0;
  wire next_channel_bond_c;
  wire next_ready_c;
  wire next_wait_for_remote_c;
  wire [8:1]p_2_in;
  wire ready_r;
  wire ready_r_reg_0;
  wire remote_ready_r;
  wire remote_ready_r_reg_0;
  wire reset_lanes_c;
  wire reset_lanes_i;
  (* RTL_KEEP = "true" *) wire reset_watchdog;
  wire reset_watchdog_i_1_n_0;
  wire reset_watchdog_i_2_n_0;
  wire reset_watchdog_i_3_n_0;
  wire reset_watchdog_i_4_n_0;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:3]soft_err_i;
  wire [0:0]tx_pe_data_v_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire wait_for_lane_up_r0;
  wire wait_for_lane_up_r_reg_0;
  wire wait_for_remote_r;
  wire wait_for_remote_r_i_2_n_0;
  wire [0:2]watchdog_count_r;
  wire \watchdog_count_r[0]_i_1_n_0 ;
  wire \watchdog_count_r[0]_i_2_n_0 ;
  wire \watchdog_count_r[1]_i_1_n_0 ;
  wire \watchdog_count_r[2]_i_1_n_0 ;

  LUT3 #(
    .INIT(8'hDC)) 
    CHANNEL_UP_RX_IF_i_1
       (.I0(bond_passed_r),
        .I1(remote_ready_r),
        .I2(ready_r),
        .O(channel_up_rx_c));
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_RX_IF_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(channel_up_rx_c),
        .Q(CHANNEL_UP_RX_IF_reg_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h08AA00AA08AA08AA)) 
    CHANNEL_UP_TX_IF_i_1
       (.I0(ready_r),
        .I1(remote_ready_r),
        .I2(channel_bond_r_reg_0),
        .I3(bond_passed_r),
        .I4(wait_for_remote_r_i_2_n_0),
        .I5(wait_for_remote_r),
        .O(channel_up_c));
  (* ORIG_CELL_NAME = "CHANNEL_UP_TX_IF_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(channel_up_c),
        .Q(channel_up_tx_if),
        .R(SR));
  (* ORIG_CELL_NAME = "CHANNEL_UP_TX_IF_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg_rep
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(CHANNEL_UP_TX_IF_rep_i_1_n_0),
        .Q(CHANNEL_UP_TX_IF_reg_rep_0),
        .R(SR));
  (* ORIG_CELL_NAME = "CHANNEL_UP_TX_IF_reg" *) 
  FDRE #(
    .INIT(1'b0)) 
    CHANNEL_UP_TX_IF_reg_rep__0
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(CHANNEL_UP_TX_IF_rep__0_i_1_n_0),
        .Q(CHANNEL_UP_TX_IF_reg_rep__0_0),
        .R(SR));
  LUT6 #(
    .INIT(64'h08AA00AA08AA08AA)) 
    CHANNEL_UP_TX_IF_rep__0_i_1
       (.I0(ready_r),
        .I1(remote_ready_r),
        .I2(channel_bond_r_reg_0),
        .I3(bond_passed_r),
        .I4(wait_for_remote_r_i_2_n_0),
        .I5(wait_for_remote_r),
        .O(CHANNEL_UP_TX_IF_rep__0_i_1_n_0));
  LUT6 #(
    .INIT(64'h08AA00AA08AA08AA)) 
    CHANNEL_UP_TX_IF_rep_i_1
       (.I0(ready_r),
        .I1(remote_ready_r),
        .I2(channel_bond_r_reg_0),
        .I3(bond_passed_r),
        .I4(wait_for_remote_r_i_2_n_0),
        .I5(wait_for_remote_r),
        .O(CHANNEL_UP_TX_IF_rep_i_1_n_0));
  LUT3 #(
    .INIT(8'hFE)) 
    CHAN_BOND_RESET_i_1
       (.I0(watchdog_count_r[0]),
        .I1(watchdog_count_r[1]),
        .I2(watchdog_count_r[2]),
        .O(chan_bond_reset_i));
  FDRE #(
    .INIT(1'b0)) 
    CHAN_BOND_RESET_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(chan_bond_reset_i),
        .Q(in0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000010001010101)) 
    \TX_DATA[52]_i_1 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_cc_i[3]),
        .I2(rst_pma_init_usrclk),
        .I3(Q[0]),
        .I4(\TX_DATA[54]_i_2_n_0 ),
        .I5(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .O(\TX_PE_DATA_reg[241] [0]));
  LUT6 #(
    .INIT(64'h0000010001010101)) 
    \TX_DATA[52]_i_1__0 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_cc_i[2]),
        .I2(rst_pma_init_usrclk_0),
        .I3(Q[3]),
        .I4(\TX_DATA[54]_i_2_n_0 ),
        .I5(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .O(\TX_PE_DATA_reg[177] [0]));
  LUT6 #(
    .INIT(64'h0000010001010101)) 
    \TX_DATA[52]_i_1__1 
       (.I0(\TX_DATA_reg[63]_0 ),
        .I1(gen_cc_i[1]),
        .I2(rst_pma_init_usrclk_1),
        .I3(Q[6]),
        .I4(\TX_DATA[54]_i_2_n_0 ),
        .I5(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .O(\TX_PE_DATA_reg[113] [0]));
  LUT6 #(
    .INIT(64'h0000010001010101)) 
    \TX_DATA[52]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(\TX_DATA_reg[63]_0 ),
        .I2(gen_cc_i[0]),
        .I3(Q[9]),
        .I4(\TX_DATA[54]_i_2_n_0 ),
        .I5(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .O(\TX_PE_DATA_reg[49] [0]));
  LUT6 #(
    .INIT(64'hAAA8A8A8A8A8A8A8)) 
    \TX_DATA[53]_i_1 
       (.I0(\TX_DATA_reg[53] ),
        .I1(wait_for_lane_up_r_reg_0),
        .I2(channel_bond_r_reg_0),
        .I3(Q[1]),
        .I4(CHANNEL_UP_TX_IF_reg_rep__0_0),
        .I5(tx_pe_data_v_i),
        .O(\TX_PE_DATA_reg[241] [1]));
  LUT6 #(
    .INIT(64'hAAA8A8A8A8A8A8A8)) 
    \TX_DATA[53]_i_1__0 
       (.I0(\TX_DATA_reg[53]_0 ),
        .I1(wait_for_lane_up_r_reg_0),
        .I2(channel_bond_r_reg_0),
        .I3(Q[4]),
        .I4(CHANNEL_UP_TX_IF_reg_rep__0_0),
        .I5(\TX_DATA_reg[63] ),
        .O(\TX_PE_DATA_reg[177] [1]));
  LUT6 #(
    .INIT(64'hAAA8A8A8A8A8A8A8)) 
    \TX_DATA[53]_i_1__1 
       (.I0(\TX_DATA_reg[53]_1 ),
        .I1(wait_for_lane_up_r_reg_0),
        .I2(channel_bond_r_reg_0),
        .I3(Q[7]),
        .I4(CHANNEL_UP_TX_IF_reg_rep_0),
        .I5(\TX_DATA_reg[63] ),
        .O(\TX_PE_DATA_reg[113] [1]));
  LUT6 #(
    .INIT(64'h000000000000FF08)) 
    \TX_DATA[54]_i_1 
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(Q[2]),
        .I2(\TX_DATA[54]_i_2_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(gen_cc_i[3]),
        .I5(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[241] [2]));
  LUT6 #(
    .INIT(64'h000000000000FF08)) 
    \TX_DATA[54]_i_1__0 
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(Q[5]),
        .I2(\TX_DATA[54]_i_2_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(gen_cc_i[2]),
        .I5(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[177] [2]));
  LUT6 #(
    .INIT(64'h000000000000FF08)) 
    \TX_DATA[54]_i_1__1 
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(Q[8]),
        .I2(\TX_DATA[54]_i_2_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(gen_cc_i[1]),
        .I5(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[113] [2]));
  LUT6 #(
    .INIT(64'h000000000000FF08)) 
    \TX_DATA[54]_i_1__2 
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(Q[10]),
        .I2(\TX_DATA[54]_i_2_n_0 ),
        .I3(\TX_DATA_reg[63]_0 ),
        .I4(gen_cc_i[0]),
        .I5(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[49] [1]));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \TX_DATA[54]_i_2 
       (.I0(CHANNEL_UP_TX_IF_reg_rep_0),
        .I1(\TX_DATA_reg[63]_1 ),
        .O(\TX_DATA[54]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair368" *) 
  LUT3 #(
    .INIT(8'h02)) 
    \TX_DATA[55]_i_4 
       (.I0(\TX_DATA_reg[63]_1 ),
        .I1(channel_bond_r_reg_0),
        .I2(wait_for_lane_up_r_reg_0),
        .O(\TX_PE_DATA_V_reg[0]_rep__0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \TX_DATA[63]_i_1 
       (.I0(\TX_DATA_reg[63]_2 ),
        .I1(\TX_DATA_reg[63]_0 ),
        .I2(gen_cc_i[3]),
        .I3(tx_pe_data_v_i),
        .I4(channel_bond_r_reg_0),
        .I5(wait_for_lane_up_r_reg_0),
        .O(gen_ch_bond_int_reg));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \TX_DATA[63]_i_1__0 
       (.I0(\TX_DATA_reg[63]_3 ),
        .I1(\TX_DATA_reg[63]_0 ),
        .I2(gen_cc_i[2]),
        .I3(\TX_DATA_reg[63] ),
        .I4(channel_bond_r_reg_0),
        .I5(wait_for_lane_up_r_reg_0),
        .O(gen_ch_bond_int_reg_0));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAA8AA)) 
    \TX_DATA[63]_i_1__1 
       (.I0(\TX_DATA_reg[63]_4 ),
        .I1(\TX_DATA_reg[63]_0 ),
        .I2(gen_cc_i[1]),
        .I3(\TX_DATA_reg[63] ),
        .I4(channel_bond_r_reg_0),
        .I5(wait_for_lane_up_r_reg_0),
        .O(gen_ch_bond_int_reg_1));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA2)) 
    \TX_DATA[63]_i_1__2 
       (.I0(\TX_DATA_reg[63]_5 ),
        .I1(\TX_DATA_reg[63]_1 ),
        .I2(channel_bond_r_reg_0),
        .I3(wait_for_lane_up_r_reg_0),
        .I4(\TX_DATA_reg[63]_0 ),
        .I5(gen_cc_i[0]),
        .O(\TX_PE_DATA_V_reg[0]_rep__0_0 ));
  LUT6 #(
    .INIT(64'h0000000002FF0200)) 
    TX_HEADER_0_i_1
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(gen_cc_i[3]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(txdatavalid_symgen_i_lane3),
        .I4(D),
        .I5(rst_pma_init_usrclk),
        .O(\gen_cc_blk[3].gen_cc_flop ));
  LUT6 #(
    .INIT(64'h0000000002FF0200)) 
    TX_HEADER_0_i_1__0
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(gen_cc_i[2]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(txdatavalid_symgen_i_lane2),
        .I4(TX_HEADER_0_reg),
        .I5(rst_pma_init_usrclk_0),
        .O(\gen_cc_blk[2].gen_cc_flop ));
  LUT6 #(
    .INIT(64'h0000000002FF0200)) 
    TX_HEADER_0_i_1__1
       (.I0(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .I1(gen_cc_i[1]),
        .I2(\TX_DATA_reg[63]_0 ),
        .I3(txdatavalid_symgen_i_lane1),
        .I4(TX_HEADER_0_reg_0),
        .I5(rst_pma_init_usrclk_1),
        .O(\gen_cc_blk[1].gen_cc_flop ));
  LUT4 #(
    .INIT(16'h8000)) 
    all_ch_bond_done_c
       (.I0(ch_bond_done_i[2]),
        .I1(ch_bond_done_i[3]),
        .I2(ch_bond_done_i[0]),
        .I3(ch_bond_done_i[1]),
        .O(all_ch_bond_done_c__0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    any_idles_r0
       (.I0(RX_IDLES[2]),
        .I1(RX_IDLES[3]),
        .I2(RX_IDLES[0]),
        .I3(RX_IDLES[1]),
        .O(any_idles_r0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    any_idles_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(any_idles_r0_n_0),
        .Q(any_idles_r),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    bond_passed_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(all_ch_bond_done_c__0),
        .Q(bond_passed_r),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h000000000000005D)) 
    \chan_bond_timer[0]_i_1 
       (.I0(chan_bond_timer[0]),
        .I1(channel_bond_qq),
        .I2(channel_bond_q),
        .I3(ready_r_reg_0),
        .I4(bond_passed_r),
        .I5(wait_for_lane_up_r_reg_0),
        .O(\chan_bond_timer[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \chan_bond_timer[1]_i_1 
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timer[1]),
        .O(p_2_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair369" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \chan_bond_timer[2]_i_1 
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timer[1]),
        .I2(chan_bond_timer[2]),
        .O(p_2_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \chan_bond_timer[3]_i_1 
       (.I0(chan_bond_timer[1]),
        .I1(chan_bond_timer[0]),
        .I2(chan_bond_timer[2]),
        .I3(chan_bond_timer[3]),
        .O(p_2_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair366" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \chan_bond_timer[4]_i_1 
       (.I0(chan_bond_timer[2]),
        .I1(chan_bond_timer[0]),
        .I2(chan_bond_timer[1]),
        .I3(chan_bond_timer[3]),
        .I4(chan_bond_timer[4]),
        .O(p_2_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \chan_bond_timer[5]_i_1 
       (.I0(chan_bond_timer[3]),
        .I1(chan_bond_timer[1]),
        .I2(chan_bond_timer[0]),
        .I3(chan_bond_timer[2]),
        .I4(chan_bond_timer[4]),
        .I5(chan_bond_timer[5]),
        .O(p_2_in[5]));
  LUT2 #(
    .INIT(4'h6)) 
    \chan_bond_timer[6]_i_1 
       (.I0(\chan_bond_timer[8]_i_3_n_0 ),
        .I1(chan_bond_timer[6]),
        .O(p_2_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \chan_bond_timer[7]_i_1 
       (.I0(\chan_bond_timer[8]_i_3_n_0 ),
        .I1(chan_bond_timer[6]),
        .I2(chan_bond_timer[7]),
        .O(p_2_in[7]));
  LUT5 #(
    .INIT(32'hFFFFFFF4)) 
    \chan_bond_timer[8]_i_1 
       (.I0(channel_bond_q),
        .I1(channel_bond_qq),
        .I2(ready_r_reg_0),
        .I3(bond_passed_r),
        .I4(wait_for_lane_up_r_reg_0),
        .O(chan_bond_timer_0));
  (* SOFT_HLUTNM = "soft_lutpair367" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \chan_bond_timer[8]_i_2 
       (.I0(chan_bond_timer[6]),
        .I1(\chan_bond_timer[8]_i_3_n_0 ),
        .I2(chan_bond_timer[7]),
        .I3(chan_bond_timer[8]),
        .O(p_2_in[8]));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \chan_bond_timer[8]_i_3 
       (.I0(chan_bond_timer[5]),
        .I1(chan_bond_timer[3]),
        .I2(chan_bond_timer[1]),
        .I3(chan_bond_timer[0]),
        .I4(chan_bond_timer[2]),
        .I5(chan_bond_timer[4]),
        .O(\chan_bond_timer[8]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[0] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(\chan_bond_timer[0]_i_1_n_0 ),
        .Q(chan_bond_timer[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[1] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[1]),
        .Q(chan_bond_timer[1]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[2] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[2]),
        .Q(chan_bond_timer[2]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[3] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[3]),
        .Q(chan_bond_timer[3]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[4] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[4]),
        .Q(chan_bond_timer[4]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[5] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[5]),
        .Q(chan_bond_timer[5]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[6] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[6]),
        .Q(chan_bond_timer[6]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[7] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[7]),
        .Q(chan_bond_timer[7]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    \chan_bond_timer_reg[8] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(p_2_in[8]),
        .Q(chan_bond_timer[8]),
        .R(chan_bond_timer_0));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_q_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(channel_bond_r_reg_0),
        .Q(channel_bond_q),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_qq_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(channel_bond_q),
        .Q(channel_bond_qq),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hB)) 
    channel_bond_r_i_1
       (.I0(wait_for_lane_up_r_reg_0),
        .I1(bond_passed_r),
        .O(next_channel_bond_c));
  FDRE #(
    .INIT(1'b0)) 
    channel_bond_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(next_channel_bond_c),
        .Q(channel_bond_r_reg_0),
        .R(wait_for_lane_up_r0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b0)) 
    en_chan_sync_flop_i
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(channel_bond_r_reg_0),
        .Q(en_chan_sync_i),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b1),
        .O(chan_bond_timeout_val[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b1),
        .O(chan_bond_timeout_val[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b1),
        .O(chan_bond_timeout_val[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b1),
        .O(chan_bond_timeout_val[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b1),
        .O(chan_bond_timeout_val[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(chan_bond_timeout_val[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b1),
        .O(chan_bond_timeout_val[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(chan_bond_timeout_val[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(chan_bond_timeout_val[0]));
  LUT4 #(
    .INIT(16'hAAEA)) 
    \idle_xmit_cntr[0]_i_1 
       (.I0(wait_for_lane_up_r_reg_0),
        .I1(bond_passed_r),
        .I2(ready_r),
        .I3(remote_ready_r),
        .O(\idle_xmit_cntr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFBAA)) 
    \idle_xmit_cntr[0]_i_2 
       (.I0(wait_for_remote_r_i_2_n_0),
        .I1(\idle_xmit_cntr[0]_i_4_n_0 ),
        .I2(any_idles_r),
        .I3(wait_for_remote_r),
        .O(idle_xmit_cntr));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \idle_xmit_cntr[0]_i_3 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \idle_xmit_cntr[0]_i_4 
       (.I0(\idle_xmit_cntr_reg_n_0_[4] ),
        .I1(\idle_xmit_cntr_reg_n_0_[5] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[0] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFFC0000000)) 
    \idle_xmit_cntr[1]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[2] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[1] ),
        .O(\idle_xmit_cntr[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8FFFFFFFF0000000)) 
    \idle_xmit_cntr[2]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[4] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[3] ),
        .I5(\idle_xmit_cntr_reg_n_0_[2] ),
        .O(\idle_xmit_cntr[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80FFFFFFFF000000)) 
    \idle_xmit_cntr[3]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[5] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[3] ),
        .O(\idle_xmit_cntr[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000FFFFFFFF0000)) 
    \idle_xmit_cntr[4]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[3] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h80000000FFFFFFFF)) 
    \idle_xmit_cntr[5]_i_1 
       (.I0(\idle_xmit_cntr_reg_n_0_[0] ),
        .I1(\idle_xmit_cntr_reg_n_0_[1] ),
        .I2(\idle_xmit_cntr_reg_n_0_[2] ),
        .I3(\idle_xmit_cntr_reg_n_0_[3] ),
        .I4(\idle_xmit_cntr_reg_n_0_[4] ),
        .I5(\idle_xmit_cntr_reg_n_0_[5] ),
        .O(\idle_xmit_cntr[5]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[0] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[0]_i_3_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[0] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[1] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[1]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[1] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[2] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[2]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[2] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[3] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[3]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[3] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[4] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[4]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[4] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \idle_xmit_cntr_reg[5] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(idle_xmit_cntr),
        .D(\idle_xmit_cntr[5]_i_1_n_0 ),
        .Q(\idle_xmit_cntr_reg_n_0_[5] ),
        .R(\idle_xmit_cntr[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    m_axi_rx_tvalid_i_1
       (.I0(CHANNEL_UP_RX_IF_reg_0),
        .O(CHANNEL_UP_RX_IF_reg_1));
  LUT5 #(
    .INIT(32'hAA008000)) 
    ready_r_i_1__0
       (.I0(remote_ready_r),
        .I1(wait_for_remote_r_i_2_n_0),
        .I2(wait_for_remote_r),
        .I3(bond_passed_r),
        .I4(ready_r),
        .O(next_ready_c));
  FDRE #(
    .INIT(1'b0)) 
    ready_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(wait_for_lane_up_r0));
  FDRE #(
    .INIT(1'b0)) 
    remote_ready_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(remote_ready_r_reg_0),
        .Q(remote_ready_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FD" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_lanes_flop_0_i
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(reset_lanes_c),
        .Q(reset_lanes_i),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    reset_watchdog_i_1
       (.I0(reset_watchdog_i_2_n_0),
        .I1(reset_watchdog_i_3_n_0),
        .I2(reset_watchdog_i_4_n_0),
        .O(reset_watchdog_i_1_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_2
       (.I0(chan_bond_timer[0]),
        .I1(chan_bond_timeout_val[0]),
        .I2(chan_bond_timeout_val[2]),
        .I3(chan_bond_timer[2]),
        .I4(chan_bond_timeout_val[1]),
        .I5(chan_bond_timer[1]),
        .O(reset_watchdog_i_2_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_3
       (.I0(chan_bond_timer[6]),
        .I1(chan_bond_timeout_val[6]),
        .I2(chan_bond_timeout_val[8]),
        .I3(chan_bond_timer[8]),
        .I4(chan_bond_timeout_val[7]),
        .I5(chan_bond_timer[7]),
        .O(reset_watchdog_i_3_n_0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    reset_watchdog_i_4
       (.I0(chan_bond_timer[3]),
        .I1(chan_bond_timeout_val[3]),
        .I2(chan_bond_timeout_val[5]),
        .I3(chan_bond_timer[5]),
        .I4(chan_bond_timeout_val[4]),
        .I5(chan_bond_timer[4]),
        .O(reset_watchdog_i_4_n_0));
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    reset_watchdog_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(reset_watchdog_i_1_n_0),
        .Q(reset_watchdog),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    s_axi_tx_tready_i_1
       (.I0(CHANNEL_UP_TX_IF_reg_rep_0),
        .O(R0));
  LUT5 #(
    .INIT(32'hAAAAAAA8)) 
    soft_err_i_1
       (.I0(channel_up_tx_if),
        .I1(soft_err_i[0]),
        .I2(soft_err_i[3]),
        .I3(soft_err_i[1]),
        .I4(soft_err_i[2]),
        .O(CHANNEL_UP_TX_IF_reg_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    wait_for_lane_up_r_i_1
       (.I0(ready_r_reg_0),
        .I1(watchdog_count_r[2]),
        .I2(watchdog_count_r[1]),
        .I3(watchdog_count_r[0]),
        .O(wait_for_lane_up_r0));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_lane_up_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(wait_for_lane_up_r0),
        .Q(wait_for_lane_up_r_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hF020F0F0F020F0A0)) 
    wait_for_remote_r_i_1
       (.I0(wait_for_remote_r),
        .I1(wait_for_remote_r_i_2_n_0),
        .I2(bond_passed_r),
        .I3(channel_bond_r_reg_0),
        .I4(remote_ready_r),
        .I5(ready_r),
        .O(next_wait_for_remote_c));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    wait_for_remote_r_i_2
       (.I0(\idle_xmit_cntr_reg_n_0_[4] ),
        .I1(\idle_xmit_cntr_reg_n_0_[5] ),
        .I2(\idle_xmit_cntr_reg_n_0_[3] ),
        .I3(\idle_xmit_cntr_reg_n_0_[2] ),
        .I4(\idle_xmit_cntr_reg_n_0_[1] ),
        .I5(\idle_xmit_cntr_reg_n_0_[0] ),
        .O(wait_for_remote_r_i_2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    wait_for_remote_r_reg
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(1'b1),
        .D(next_wait_for_remote_c),
        .Q(wait_for_remote_r),
        .R(wait_for_lane_up_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \watchdog_count_r[0]_i_1 
       (.I0(watchdog_count_r[2]),
        .I1(watchdog_count_r[1]),
        .I2(watchdog_count_r[0]),
        .I3(reset_watchdog),
        .O(\watchdog_count_r[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hFFE1)) 
    \watchdog_count_r[0]_i_2 
       (.I0(watchdog_count_r[2]),
        .I1(watchdog_count_r[1]),
        .I2(watchdog_count_r[0]),
        .I3(reset_watchdog),
        .O(\watchdog_count_r[0]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hF9)) 
    \watchdog_count_r[1]_i_1 
       (.I0(watchdog_count_r[1]),
        .I1(watchdog_count_r[2]),
        .I2(reset_watchdog),
        .O(\watchdog_count_r[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \watchdog_count_r[2]_i_1 
       (.I0(reset_watchdog),
        .I1(watchdog_count_r[2]),
        .O(\watchdog_count_r[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[0] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[0]_i_2_n_0 ),
        .Q(watchdog_count_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[1] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[1]_i_1_n_0 ),
        .Q(watchdog_count_r[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \watchdog_count_r_reg[2] 
       (.C(CHANNEL_UP_RX_IF_reg_2),
        .CE(\watchdog_count_r[0]_i_1_n_0 ),
        .D(\watchdog_count_r[2]_i_1_n_0 ),
        .Q(watchdog_count_r[2]),
        .R(SR));
endmodule

module board_aurora_64b66b_0_2_CH_BOND_MASTER
   (rxchanisaligned,
    D,
    do_rd_en_reg,
    rxchanisaligned_reg_0,
    cbcc_reset_cbstg2_rd_clk,
    rxchanisaligned1_out,
    enchansync_dlyd_i_1,
    Q,
    master_do_rd_en,
    CB_align_ver,
    CB_flag_flopped,
    master_do_rd_en_out_reg);
  output rxchanisaligned;
  output [1:0]D;
  output do_rd_en_reg;
  input rxchanisaligned_reg_0;
  input cbcc_reset_cbstg2_rd_clk;
  input rxchanisaligned1_out;
  input enchansync_dlyd_i_1;
  input [3:0]Q;
  input master_do_rd_en;
  input CB_align_ver;
  input CB_flag_flopped;
  input master_do_rd_en_out_reg;

  wire CB_align_ver;
  wire CB_flag_flopped;
  wire [1:0]D;
  wire [3:0]Q;
  wire alignment_done_r;
  wire alignment_done_r_i_1_n_0;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4__2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_3__1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__2_n_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [2:0]count_maxskew_load;
  wire \count_maxskew_load[0]_i_1_n_0 ;
  wire \count_maxskew_load[1]_i_1_n_0 ;
  wire \count_maxskew_load[2]_i_1_n_0 ;
  wire \count_maxskew_load[2]_i_2_n_0 ;
  wire do_rd_en_reg;
  wire enchansync_dlyd_i_1;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__1_n_0;
  wire master_do_rd_en;
  wire master_do_rd_en_out_reg;
  wire rxchanisaligned;
  wire rxchanisaligned1_out;
  wire rxchanisaligned_reg_0;

  LUT5 #(
    .INIT(32'h10FF1010)) 
    \CHBONDO[0]_i_1 
       (.I0(count_maxskew_load[0]),
        .I1(count_maxskew_load[2]),
        .I2(count_maxskew_load[1]),
        .I3(enchansync_dlyd_i_1),
        .I4(CB_align_ver),
        .O(D[0]));
  LUT5 #(
    .INIT(32'h444F4444)) 
    \CHBONDO[1]_i_1 
       (.I0(alignment_done_r),
        .I1(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I2(count_maxskew_load[0]),
        .I3(count_maxskew_load[2]),
        .I4(count_maxskew_load[1]),
        .O(D[1]));
  LUT5 #(
    .INIT(32'hFF020202)) 
    alignment_done_r_i_1
       (.I0(count_maxskew_load[2]),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(enchansync_dlyd_i_1),
        .I4(alignment_done_r),
        .O(alignment_done_r_i_1_n_0));
  FDCE alignment_done_r_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(alignment_done_r_i_1_n_0),
        .Q(alignment_done_r));
  LUT6 #(
    .INIT(64'h00000000FE0E0E0E)) 
    \cb_rxdatavalid_cnt[0]_i_1__1 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__1_n_0 ),
        .I1(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ),
        .I2(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I3(Q[0]),
        .I4(master_do_rd_en),
        .I5(\cb_rxdatavalid_cnt[0]_i_4__2_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h2F00A0002000A000)) 
    \cb_rxdatavalid_cnt[0]_i_2__1 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(Q[0]),
        .I2(cb_rxdatavalid_cnt[0]),
        .I3(cb_rxdatavalid_cnt[1]),
        .I4(master_do_rd_en),
        .I5(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_2__1_n_0 ));
  LUT5 #(
    .INIT(32'h707F0000)) 
    \cb_rxdatavalid_cnt[0]_i_3__1 
       (.I0(master_do_rd_en),
        .I1(Q[1]),
        .I2(cb_rxdatavalid_cnt[0]),
        .I3(cb_rxdatavalid_cnt[1]),
        .I4(cb_rxdatavalid_cnt[2]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__1_n_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \cb_rxdatavalid_cnt[0]_i_4__2 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF0080)) 
    \cb_rxdatavalid_cnt[1]_i_1__1 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ),
        .I5(\cb_rxdatavalid_cnt[1]_i_3__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_1__1_n_0 ));
  LUT5 #(
    .INIT(32'h80888080)) 
    \cb_rxdatavalid_cnt[1]_i_2__2 
       (.I0(enchansync_dlyd_i_1),
        .I1(master_do_rd_en),
        .I2(Q[3]),
        .I3(CB_flag_flopped),
        .I4(Q[2]),
        .O(\cb_rxdatavalid_cnt[1]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h9830303018303030)) 
    \cb_rxdatavalid_cnt[1]_i_3__1 
       (.I0(Q[1]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(cb_rxdatavalid_cnt[0]),
        .I4(master_do_rd_en),
        .I5(Q[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1__1 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__2_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hDFCC000000000000)) 
    \cb_rxdatavalid_cnt[2]_i_2__2 
       (.I0(CB_flag_flopped),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(master_do_rd_en),
        .I5(enchansync_dlyd_i_1),
        .O(\cb_rxdatavalid_cnt[2]_i_2__2_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__1_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h000E)) 
    \count_maxskew_load[0]_i_1 
       (.I0(count_maxskew_load[2]),
        .I1(count_maxskew_load[1]),
        .I2(count_maxskew_load[0]),
        .I3(\count_maxskew_load[2]_i_2_n_0 ),
        .O(\count_maxskew_load[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT4 #(
    .INIT(16'h0098)) 
    \count_maxskew_load[1]_i_1 
       (.I0(count_maxskew_load[0]),
        .I1(count_maxskew_load[1]),
        .I2(count_maxskew_load[2]),
        .I3(\count_maxskew_load[2]_i_2_n_0 ),
        .O(\count_maxskew_load[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'hFEAA)) 
    \count_maxskew_load[2]_i_1 
       (.I0(\count_maxskew_load[2]_i_2_n_0 ),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(count_maxskew_load[2]),
        .O(\count_maxskew_load[2]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \count_maxskew_load[2]_i_2 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(cb_rxdatavalid_cnt[0]),
        .I3(enchansync_dlyd_i_1),
        .I4(alignment_done_r),
        .O(\count_maxskew_load[2]_i_2_n_0 ));
  FDCE \count_maxskew_load_reg[0] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[0]_i_1_n_0 ),
        .Q(count_maxskew_load[0]));
  FDCE \count_maxskew_load_reg[1] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[1]_i_1_n_0 ),
        .Q(count_maxskew_load[1]));
  FDCE \count_maxskew_load_reg[2] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\count_maxskew_load[2]_i_1_n_0 ),
        .Q(count_maxskew_load[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane2_i_inferred_i_1
       (.I0(master_do_rd_en_out_reg),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'hABFE)) 
    hold_rd_ptr_i_1__1
       (.I0(\count_maxskew_load[2]_i_2_n_0 ),
        .I1(count_maxskew_load[0]),
        .I2(count_maxskew_load[1]),
        .I3(count_maxskew_load[2]),
        .O(hold_rd_ptr_i_1__1_n_0));
  FDCE hold_rd_ptr_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__1_n_0),
        .Q(hold_rd_ptr_i));
  FDCE rxchanisaligned_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned1_out),
        .Q(rxchanisaligned));
endmodule

module board_aurora_64b66b_0_2_CH_BOND_SLAVE
   (master_stop_prev_cb_r,
    rxchanisaligned,
    do_rd_en_reg,
    rxchanisaligned_reg_0,
    cbcc_reset_cbstg2_rd_clk,
    master_stop_prev_cb_r_reg_0,
    Q,
    master_do_rd_en,
    \cb_rxdatavalid_cnt_reg[1]_0 ,
    CB_av_s_r_reg_0,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_lane3_i_inferred_i_1_0,
    rxchanisaligned_reg_1,
    empty);
  output master_stop_prev_cb_r;
  output rxchanisaligned;
  output do_rd_en_reg;
  input rxchanisaligned_reg_0;
  input cbcc_reset_cbstg2_rd_clk;
  input master_stop_prev_cb_r_reg_0;
  input [3:0]Q;
  input master_do_rd_en;
  input \cb_rxdatavalid_cnt_reg[1]_0 ;
  input CB_av_s_r_reg_0;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_lane3_i_inferred_i_1_0;
  input [1:0]rxchanisaligned_reg_1;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_av_s_r_reg_0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4__1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__2_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__1_n_0 ;
  wire \cb_rxdatavalid_cnt_reg[1]_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_lane3_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__2_n_0;
  wire \master_ack_cnt[0]_i_1__1_n_0 ;
  wire \master_ack_cnt[1]_i_1__1_n_0 ;
  wire \master_ack_cnt[1]_i_2__1_n_0 ;
  wire \master_ack_cnt[1]_i_3__1_n_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1__1_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__2_n_0;
  wire rxchanisaligned_reg_0;
  wire [1:0]rxchanisaligned_reg_1;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1__1_n_0;
  wire slave_stop_cb_r_i_2__1_n_0;

  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1__1
       (.I0(CB_align_ver),
        .I1(CB_av_s_r_reg_0),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h5555404055004040)) 
    \cb_rxdatavalid_cnt[0]_i_1__2 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__2_n_0 ),
        .I1(Q[0]),
        .I2(master_do_rd_en),
        .I3(\cb_rxdatavalid_cnt[0]_i_3__2_n_0 ),
        .I4(\cb_rxdatavalid_cnt[0]_i_4__1_n_0 ),
        .I5(\cb_rxdatavalid_cnt[1]_i_2__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \cb_rxdatavalid_cnt[0]_i_2__2 
       (.I0(Q[2]),
        .I1(master_do_rd_en),
        .I2(CB_av_s_r_reg_0),
        .I3(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_2__2_n_0 ));
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_3__2 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h0DFF)) 
    \cb_rxdatavalid_cnt[0]_i_4__1 
       (.I0(Q[2]),
        .I1(CB_flag_flopped),
        .I2(Q[3]),
        .I3(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'hAABABBAAAABAAABA)) 
    \cb_rxdatavalid_cnt[1]_i_1__2 
       (.I0(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ),
        .I1(\cb_rxdatavalid_cnt[1]_i_2__1_n_0 ),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(cb_rxdatavalid_cnt[1]),
        .I4(\cb_rxdatavalid_cnt_reg[1]_0 ),
        .I5(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT5 #(
    .INIT(32'h00808080)) 
    \cb_rxdatavalid_cnt[1]_i_2__1 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[0]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(master_do_rd_en),
        .I4(Q[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1__2 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'hF040F0F0F000F000)) 
    \cb_rxdatavalid_cnt[2]_i_2__1 
       (.I0(Q[1]),
        .I1(CB_av_s_r_reg_0),
        .I2(master_do_rd_en),
        .I3(Q[3]),
        .I4(CB_flag_flopped),
        .I5(Q[2]),
        .O(\cb_rxdatavalid_cnt[2]_i_2__1_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__2_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane3_i_inferred_i_1
       (.I0(do_rd_en_lane3_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    hold_rd_ptr_i_1__2
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(CB_av_s_r_reg_0),
        .I2(slave_stop_cb_r_i_2__1_n_0),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1__2_n_0));
  FDCE hold_rd_ptr_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__2_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h0051555555555555)) 
    \master_ack_cnt[0]_i_1__1 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(Q[2]),
        .I2(CB_flag_flopped),
        .I3(Q[3]),
        .I4(master_do_rd_en),
        .I5(CB_av_s_r_reg_0),
        .O(\master_ack_cnt[0]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \master_ack_cnt[1]_i_1__1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3__1_n_0 ),
        .O(\master_ack_cnt[1]_i_1__1_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \master_ack_cnt[1]_i_2__1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3__1_n_0 ),
        .O(\master_ack_cnt[1]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT5 #(
    .INIT(32'h80888080)) 
    \master_ack_cnt[1]_i_3__1 
       (.I0(CB_av_s_r_reg_0),
        .I1(master_do_rd_en),
        .I2(Q[3]),
        .I3(CB_flag_flopped),
        .I4(Q[2]),
        .O(\master_ack_cnt[1]_i_3__1_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(rxchanisaligned_reg_0),
        .CE(\master_ack_cnt[1]_i_1__1_n_0 ),
        .D(\master_ack_cnt[0]_i_1__1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(rxchanisaligned_reg_0),
        .CE(\master_ack_cnt[1]_i_1__1_n_0 ),
        .D(\master_ack_cnt[1]_i_2__1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h3F3F3F3F00080808)) 
    master_stop_next_cb_r_i_1__1
       (.I0(CB_av_s_r_reg_0),
        .I1(rxchanisaligned_reg_1[1]),
        .I2(rxchanisaligned_reg_1[0]),
        .I3(\master_ack_cnt_reg_n_0_[0] ),
        .I4(\master_ack_cnt_reg_n_0_[1] ),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1__1_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1__1_n_0),
        .Q(master_stop_next_cb_r));
  FDCE master_stop_prev_cb_r_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_reg_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__2
       (.I0(rxchanisaligned_reg_1[1]),
        .I1(rxchanisaligned_reg_1[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__2_n_0));
  FDCE rxchanisaligned_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__2_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0E00000E0EE0000)) 
    slave_stop_cb_r_i_1__1
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(slave_stop_cb_r_i_2__1_n_0),
        .I4(CB_av_s_r_reg_0),
        .I5(cb_rxdatavalid_cnt[2]),
        .O(slave_stop_cb_r_i_1__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT2 #(
    .INIT(4'h7)) 
    slave_stop_cb_r_i_2__1
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(slave_stop_cb_r_i_2__1_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(rxchanisaligned_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1__1_n_0),
        .Q(slave_stop_cb_r));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_CH_BOND_SLAVE" *) 
module board_aurora_64b66b_0_2_CH_BOND_SLAVE_50
   (master_stop_prev_cb_r,
    rxchanisaligned,
    do_rd_en_reg,
    hold_rd_ptr_reg_0,
    cbcc_reset_cbstg2_rd_clk,
    master_stop_prev_cb_r_reg_0,
    Q,
    master_do_rd_en,
    \cb_rxdatavalid_cnt_reg[1]_0 ,
    CB_av_s_r_reg_0,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_lane1_i_inferred_i_1_0,
    rxchanisaligned_reg_0,
    empty);
  output master_stop_prev_cb_r;
  output rxchanisaligned;
  output do_rd_en_reg;
  input hold_rd_ptr_reg_0;
  input cbcc_reset_cbstg2_rd_clk;
  input master_stop_prev_cb_r_reg_0;
  input [3:0]Q;
  input master_do_rd_en;
  input \cb_rxdatavalid_cnt_reg[1]_0 ;
  input CB_av_s_r_reg_0;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_lane1_i_inferred_i_1_0;
  input [1:0]rxchanisaligned_reg_0;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_av_s_r_reg_0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3__0_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4__0_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1__0_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2__0_n_0 ;
  wire \cb_rxdatavalid_cnt_reg[1]_0 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_lane1_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1__0_n_0;
  wire hold_rd_ptr_reg_0;
  wire \master_ack_cnt[0]_i_1__0_n_0 ;
  wire \master_ack_cnt[1]_i_1__0_n_0 ;
  wire \master_ack_cnt[1]_i_2__0_n_0 ;
  wire \master_ack_cnt[1]_i_3__0_n_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1__0_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__1_n_0;
  wire [1:0]rxchanisaligned_reg_0;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1__0_n_0;
  wire slave_stop_cb_r_i_2__0_n_0;

  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1__0
       (.I0(CB_align_ver),
        .I1(CB_av_s_r_reg_0),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h5555404055004040)) 
    \cb_rxdatavalid_cnt[0]_i_1__0 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2__0_n_0 ),
        .I1(Q[0]),
        .I2(master_do_rd_en),
        .I3(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ),
        .I4(\cb_rxdatavalid_cnt[0]_i_4__0_n_0 ),
        .I5(\cb_rxdatavalid_cnt[1]_i_2__0_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \cb_rxdatavalid_cnt[0]_i_2__0 
       (.I0(Q[2]),
        .I1(master_do_rd_en),
        .I2(CB_av_s_r_reg_0),
        .I3(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_3__0 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT4 #(
    .INIT(16'h0DFF)) 
    \cb_rxdatavalid_cnt[0]_i_4__0 
       (.I0(Q[2]),
        .I1(CB_flag_flopped),
        .I2(Q[3]),
        .I3(master_do_rd_en),
        .O(\cb_rxdatavalid_cnt[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'hAABABBAAAABAAABA)) 
    \cb_rxdatavalid_cnt[1]_i_1__0 
       (.I0(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ),
        .I1(\cb_rxdatavalid_cnt[1]_i_2__0_n_0 ),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(cb_rxdatavalid_cnt[1]),
        .I4(\cb_rxdatavalid_cnt_reg[1]_0 ),
        .I5(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT5 #(
    .INIT(32'h00808080)) 
    \cb_rxdatavalid_cnt[1]_i_2__0 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[0]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(master_do_rd_en),
        .I4(Q[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1__0 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(master_do_rd_en),
        .I3(Q[1]),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hF040F0F0F000F000)) 
    \cb_rxdatavalid_cnt[2]_i_2__0 
       (.I0(Q[1]),
        .I1(CB_av_s_r_reg_0),
        .I2(master_do_rd_en),
        .I3(Q[3]),
        .I4(CB_flag_flopped),
        .I5(Q[2]),
        .O(\cb_rxdatavalid_cnt[2]_i_2__0_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1__0_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_lane1_i_inferred_i_1
       (.I0(do_rd_en_lane1_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    hold_rd_ptr_i_1__0
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(CB_av_s_r_reg_0),
        .I2(slave_stop_cb_r_i_2__0_n_0),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1__0_n_0));
  FDCE hold_rd_ptr_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1__0_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h0051555555555555)) 
    \master_ack_cnt[0]_i_1__0 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(Q[2]),
        .I2(CB_flag_flopped),
        .I3(Q[3]),
        .I4(master_do_rd_en),
        .I5(CB_av_s_r_reg_0),
        .O(\master_ack_cnt[0]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \master_ack_cnt[1]_i_1__0 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3__0_n_0 ),
        .O(\master_ack_cnt[1]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \master_ack_cnt[1]_i_2__0 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3__0_n_0 ),
        .O(\master_ack_cnt[1]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT5 #(
    .INIT(32'h80888080)) 
    \master_ack_cnt[1]_i_3__0 
       (.I0(CB_av_s_r_reg_0),
        .I1(master_do_rd_en),
        .I2(Q[3]),
        .I3(CB_flag_flopped),
        .I4(Q[2]),
        .O(\master_ack_cnt[1]_i_3__0_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(hold_rd_ptr_reg_0),
        .CE(\master_ack_cnt[1]_i_1__0_n_0 ),
        .D(\master_ack_cnt[0]_i_1__0_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(hold_rd_ptr_reg_0),
        .CE(\master_ack_cnt[1]_i_1__0_n_0 ),
        .D(\master_ack_cnt[1]_i_2__0_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h3F3F3F3F00080808)) 
    master_stop_next_cb_r_i_1__0
       (.I0(CB_av_s_r_reg_0),
        .I1(rxchanisaligned_reg_0[1]),
        .I2(rxchanisaligned_reg_0[0]),
        .I3(\master_ack_cnt_reg_n_0_[0] ),
        .I4(\master_ack_cnt_reg_n_0_[1] ),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1__0_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1__0_n_0),
        .Q(master_stop_next_cb_r));
  FDCE master_stop_prev_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_reg_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__1
       (.I0(rxchanisaligned_reg_0[1]),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__1_n_0));
  FDCE rxchanisaligned_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__1_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0E00000E0EE0000)) 
    slave_stop_cb_r_i_1__0
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(slave_stop_cb_r_i_2__0_n_0),
        .I4(CB_av_s_r_reg_0),
        .I5(cb_rxdatavalid_cnt[2]),
        .O(slave_stop_cb_r_i_1__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h7)) 
    slave_stop_cb_r_i_2__0
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(slave_stop_cb_r_i_2__0_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1__0_n_0),
        .Q(slave_stop_cb_r));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_CH_BOND_SLAVE" *) 
module board_aurora_64b66b_0_2_CH_BOND_SLAVE_61
   (rxchanisaligned,
    do_rd_en_reg,
    master_do_rd_en_reg,
    master_do_rd_en_reg_0,
    hold_rd_ptr_reg_0,
    cbcc_reset_cbstg2_rd_clk,
    Q,
    \master_ack_cnt_reg[0]_0 ,
    enchansync_dlyd_i,
    CB_flag_flopped,
    CB_align_ver,
    do_rd_en_i_inferred_i_1_0,
    \cb_rxdatavalid_cnt_reg[1]_0 ,
    \cb_rxdatavalid_cnt_reg[1]_1 ,
    rxchanisaligned_reg_0,
    empty);
  output rxchanisaligned;
  output do_rd_en_reg;
  output master_do_rd_en_reg;
  output master_do_rd_en_reg_0;
  input hold_rd_ptr_reg_0;
  input cbcc_reset_cbstg2_rd_clk;
  input [3:0]Q;
  input \master_ack_cnt_reg[0]_0 ;
  input enchansync_dlyd_i;
  input CB_flag_flopped;
  input CB_align_ver;
  input do_rd_en_i_inferred_i_1_0;
  input [0:0]\cb_rxdatavalid_cnt_reg[1]_0 ;
  input [0:0]\cb_rxdatavalid_cnt_reg[1]_1 ;
  input [1:0]rxchanisaligned_reg_0;
  input empty;

  wire CB_align_ver;
  wire CB_av_s_r;
  wire CB_av_s_r0;
  wire CB_flag_flopped;
  wire [3:0]Q;
  wire [2:0]cb_rxdatavalid_cnt;
  wire \cb_rxdatavalid_cnt[0]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_2_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_3_n_0 ;
  wire \cb_rxdatavalid_cnt[0]_i_4_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_2_n_0 ;
  wire \cb_rxdatavalid_cnt[1]_i_3_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_1_n_0 ;
  wire \cb_rxdatavalid_cnt[2]_i_2_n_0 ;
  wire [0:0]\cb_rxdatavalid_cnt_reg[1]_0 ;
  wire [0:0]\cb_rxdatavalid_cnt_reg[1]_1 ;
  wire cbcc_reset_cbstg2_rd_clk;
  wire do_rd_en_i_inferred_i_1_0;
  wire do_rd_en_reg;
  wire empty;
  wire enchansync_dlyd_i;
  wire hold_rd_ptr_i;
  wire hold_rd_ptr_i_1_n_0;
  wire hold_rd_ptr_reg_0;
  wire \master_ack_cnt[0]_i_1_n_0 ;
  wire \master_ack_cnt[1]_i_1_n_0 ;
  wire \master_ack_cnt[1]_i_2_n_0 ;
  wire \master_ack_cnt[1]_i_3_n_0 ;
  wire \master_ack_cnt_reg[0]_0 ;
  wire \master_ack_cnt_reg_n_0_[0] ;
  wire \master_ack_cnt_reg_n_0_[1] ;
  wire master_do_rd_en_reg;
  wire master_do_rd_en_reg_0;
  wire master_stop_next_cb_r;
  wire master_stop_next_cb_r_i_1_n_0;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_i_1_n_0;
  wire rxchanisaligned;
  wire rxchanisaligned_i_1__0_n_0;
  wire [1:0]rxchanisaligned_reg_0;
  wire slave_stop_cb_r;
  wire slave_stop_cb_r_i_1_n_0;
  wire slave_stop_cb_r_i_2_n_0;

  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT2 #(
    .INIT(4'h2)) 
    CB_av_s_r_i_1
       (.I0(CB_align_ver),
        .I1(enchansync_dlyd_i),
        .O(CB_av_s_r0));
  FDCE CB_av_s_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(CB_av_s_r0),
        .Q(CB_av_s_r));
  LUT6 #(
    .INIT(64'h5555404055004040)) 
    \cb_rxdatavalid_cnt[0]_i_1 
       (.I0(\cb_rxdatavalid_cnt[0]_i_2_n_0 ),
        .I1(Q[0]),
        .I2(\master_ack_cnt_reg[0]_0 ),
        .I3(\cb_rxdatavalid_cnt[0]_i_3_n_0 ),
        .I4(\cb_rxdatavalid_cnt[0]_i_4_n_0 ),
        .I5(\cb_rxdatavalid_cnt[1]_i_2_n_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \cb_rxdatavalid_cnt[0]_i_2 
       (.I0(Q[2]),
        .I1(\master_ack_cnt_reg[0]_0 ),
        .I2(enchansync_dlyd_i),
        .I3(Q[1]),
        .O(\cb_rxdatavalid_cnt[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT5 #(
    .INIT(32'h0CCCE444)) 
    \cb_rxdatavalid_cnt[0]_i_3 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[2]),
        .I2(Q[1]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h0DFF)) 
    \cb_rxdatavalid_cnt[0]_i_4 
       (.I0(Q[2]),
        .I1(CB_flag_flopped),
        .I2(Q[3]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .O(\cb_rxdatavalid_cnt[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAABABBAAAABAAABA)) 
    \cb_rxdatavalid_cnt[1]_i_1 
       (.I0(\cb_rxdatavalid_cnt[2]_i_2_n_0 ),
        .I1(\cb_rxdatavalid_cnt[1]_i_2_n_0 ),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(cb_rxdatavalid_cnt[1]),
        .I4(\cb_rxdatavalid_cnt[1]_i_3_n_0 ),
        .I5(cb_rxdatavalid_cnt[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'h00808080)) 
    \cb_rxdatavalid_cnt[1]_i_2 
       (.I0(cb_rxdatavalid_cnt[1]),
        .I1(cb_rxdatavalid_cnt[0]),
        .I2(cb_rxdatavalid_cnt[2]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(Q[0]),
        .O(\cb_rxdatavalid_cnt[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \cb_rxdatavalid_cnt[1]_i_3 
       (.I0(Q[1]),
        .I1(\master_ack_cnt_reg[0]_0 ),
        .O(\cb_rxdatavalid_cnt[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \cb_rxdatavalid_cnt[1]_i_3__0 
       (.I0(\master_ack_cnt_reg[0]_0 ),
        .I1(\cb_rxdatavalid_cnt_reg[1]_0 ),
        .O(master_do_rd_en_reg));
  LUT2 #(
    .INIT(4'h7)) 
    \cb_rxdatavalid_cnt[1]_i_3__2 
       (.I0(\master_ack_cnt_reg[0]_0 ),
        .I1(\cb_rxdatavalid_cnt_reg[1]_1 ),
        .O(master_do_rd_en_reg_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFA8888888)) 
    \cb_rxdatavalid_cnt[2]_i_1 
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(cb_rxdatavalid_cnt[1]),
        .I2(Q[1]),
        .I3(\master_ack_cnt_reg[0]_0 ),
        .I4(cb_rxdatavalid_cnt[0]),
        .I5(\cb_rxdatavalid_cnt[2]_i_2_n_0 ),
        .O(\cb_rxdatavalid_cnt[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hF040F0F0F000F000)) 
    \cb_rxdatavalid_cnt[2]_i_2 
       (.I0(Q[1]),
        .I1(enchansync_dlyd_i),
        .I2(\master_ack_cnt_reg[0]_0 ),
        .I3(Q[3]),
        .I4(CB_flag_flopped),
        .I5(Q[2]),
        .O(\cb_rxdatavalid_cnt[2]_i_2_n_0 ));
  FDCE \cb_rxdatavalid_cnt_reg[0] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[0]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[0]));
  FDCE \cb_rxdatavalid_cnt_reg[1] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[1]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[1]));
  FDCE \cb_rxdatavalid_cnt_reg[2] 
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(\cb_rxdatavalid_cnt[2]_i_1_n_0 ),
        .Q(cb_rxdatavalid_cnt[2]));
  LUT2 #(
    .INIT(4'h2)) 
    do_rd_en_i_inferred_i_1
       (.I0(do_rd_en_i_inferred_i_1_0),
        .I1(hold_rd_ptr_i),
        .O(do_rd_en_reg));
  LUT6 #(
    .INIT(64'hFF04FF04FF040000)) 
    hold_rd_ptr_i_1
       (.I0(cb_rxdatavalid_cnt[2]),
        .I1(enchansync_dlyd_i),
        .I2(slave_stop_cb_r_i_2_n_0),
        .I3(slave_stop_cb_r),
        .I4(master_stop_prev_cb_r),
        .I5(master_stop_next_cb_r),
        .O(hold_rd_ptr_i_1_n_0));
  FDCE hold_rd_ptr_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(hold_rd_ptr_i_1_n_0),
        .Q(hold_rd_ptr_i));
  LUT6 #(
    .INIT(64'h0051555555555555)) 
    \master_ack_cnt[0]_i_1 
       (.I0(\master_ack_cnt_reg_n_0_[0] ),
        .I1(Q[2]),
        .I2(CB_flag_flopped),
        .I3(Q[3]),
        .I4(\master_ack_cnt_reg[0]_0 ),
        .I5(enchansync_dlyd_i),
        .O(\master_ack_cnt[0]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hF7)) 
    \master_ack_cnt[1]_i_1 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3_n_0 ),
        .O(\master_ack_cnt[1]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'h06)) 
    \master_ack_cnt[1]_i_2 
       (.I0(\master_ack_cnt_reg_n_0_[1] ),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt[1]_i_3_n_0 ),
        .O(\master_ack_cnt[1]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'h80888080)) 
    \master_ack_cnt[1]_i_3 
       (.I0(enchansync_dlyd_i),
        .I1(\master_ack_cnt_reg[0]_0 ),
        .I2(Q[3]),
        .I3(CB_flag_flopped),
        .I4(Q[2]),
        .O(\master_ack_cnt[1]_i_3_n_0 ));
  FDPE \master_ack_cnt_reg[0] 
       (.C(hold_rd_ptr_reg_0),
        .CE(\master_ack_cnt[1]_i_1_n_0 ),
        .D(\master_ack_cnt[0]_i_1_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[0] ));
  FDPE \master_ack_cnt_reg[1] 
       (.C(hold_rd_ptr_reg_0),
        .CE(\master_ack_cnt[1]_i_1_n_0 ),
        .D(\master_ack_cnt[1]_i_2_n_0 ),
        .PRE(cbcc_reset_cbstg2_rd_clk),
        .Q(\master_ack_cnt_reg_n_0_[1] ));
  LUT6 #(
    .INIT(64'h00FFFFFF002A0000)) 
    master_stop_next_cb_r_i_1
       (.I0(enchansync_dlyd_i),
        .I1(\master_ack_cnt_reg_n_0_[0] ),
        .I2(\master_ack_cnt_reg_n_0_[1] ),
        .I3(rxchanisaligned_reg_0[0]),
        .I4(rxchanisaligned_reg_0[1]),
        .I5(master_stop_next_cb_r),
        .O(master_stop_next_cb_r_i_1_n_0));
  FDCE master_stop_next_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_next_cb_r_i_1_n_0),
        .Q(master_stop_next_cb_r));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT4 #(
    .INIT(16'h3F20)) 
    master_stop_prev_cb_r_i_1
       (.I0(enchansync_dlyd_i),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(rxchanisaligned_reg_0[1]),
        .I3(master_stop_prev_cb_r),
        .O(master_stop_prev_cb_r_i_1_n_0));
  FDCE master_stop_prev_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(master_stop_prev_cb_r_i_1_n_0),
        .Q(master_stop_prev_cb_r));
  LUT6 #(
    .INIT(64'h0000FFFB0000FF00)) 
    rxchanisaligned_i_1__0
       (.I0(rxchanisaligned_reg_0[1]),
        .I1(rxchanisaligned_reg_0[0]),
        .I2(CB_av_s_r),
        .I3(hold_rd_ptr_i),
        .I4(empty),
        .I5(rxchanisaligned),
        .O(rxchanisaligned_i_1__0_n_0));
  FDCE rxchanisaligned_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(rxchanisaligned_i_1__0_n_0),
        .Q(rxchanisaligned));
  LUT6 #(
    .INIT(64'hE0E00000E0EE0000)) 
    slave_stop_cb_r_i_1
       (.I0(master_stop_next_cb_r),
        .I1(master_stop_prev_cb_r),
        .I2(slave_stop_cb_r),
        .I3(slave_stop_cb_r_i_2_n_0),
        .I4(enchansync_dlyd_i),
        .I5(cb_rxdatavalid_cnt[2]),
        .O(slave_stop_cb_r_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h7)) 
    slave_stop_cb_r_i_2
       (.I0(cb_rxdatavalid_cnt[0]),
        .I1(cb_rxdatavalid_cnt[1]),
        .O(slave_stop_cb_r_i_2_n_0));
  FDCE slave_stop_cb_r_reg
       (.C(hold_rd_ptr_reg_0),
        .CE(1'b1),
        .CLR(cbcc_reset_cbstg2_rd_clk),
        .D(slave_stop_cb_r_i_1_n_0),
        .Q(slave_stop_cb_r));
endmodule

module board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING
   (enchansync_dlyd_i,
    rx_header_err_i_0,
    rx_lossofsync_i_0,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_3_c,
    master_stop_prev_cb_r,
    any_vld_btf_lane3_i,
    bit_err_chan_bond_lane3_i,
    valid_btf_detect_dlyd1,
    Q,
    do_rd_en_lane3_i,
    wr_err_rd_clk_sync_reg_0,
    hold_reg_r_reg_0,
    rxfsm_reset_i,
    final_gater_for_fifo_din_lane3_i,
    srst,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d6_reg,
    out,
    in0,
    en_chan_sync_i,
    rxdatavalid_to_fifo_lane3_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    init_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    CB_flag_direct,
    master_stop_prev_cb_r_reg,
    \count_for_reset_r_reg[23]_0 ,
    master_do_rd_en,
    \cb_rxdatavalid_cnt_reg[1] ,
    rxbuferr_out_i,
    hard_err_usr_i_3,
    hard_err_usr_i_3_0,
    rxbuferr_out_lane2_i,
    rxchanisaligned_reg,
    hard_err_rst_int,
    \count_for_reset_r_reg[23]_1 ,
    \count_for_reset_r_reg[23]_2 ,
    link_reset_0_c,
    link_reset_1_c,
    link_reset_2_c,
    FINAL_GATER_FOR_FIFO_DIN_i_2__1_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    D,
    CB_detect,
    \valid_btf_detect_extend_r_reg[4]_0 );
  output enchansync_dlyd_i;
  output rx_header_err_i_0;
  output rx_lossofsync_i_0;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_3_c;
  output master_stop_prev_cb_r;
  output any_vld_btf_lane3_i;
  output bit_err_chan_bond_lane3_i;
  output valid_btf_detect_dlyd1;
  output [67:0]Q;
  output do_rd_en_lane3_i;
  output wr_err_rd_clk_sync_reg_0;
  output hold_reg_r_reg_0;
  output rxfsm_reset_i;
  output final_gater_for_fifo_din_lane3_i;
  input srst;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d6_reg;
  input out;
  input in0;
  input en_chan_sync_i;
  input rxdatavalid_to_fifo_lane3_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input init_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input CB_flag_direct;
  input master_stop_prev_cb_r_reg;
  input \count_for_reset_r_reg[23]_0 ;
  input master_do_rd_en;
  input \cb_rxdatavalid_cnt_reg[1] ;
  input [0:0]rxbuferr_out_i;
  input hard_err_usr_i_3;
  input [0:0]hard_err_usr_i_3_0;
  input [0:0]rxbuferr_out_lane2_i;
  input [1:0]rxchanisaligned_reg;
  input hard_err_rst_int;
  input \count_for_reset_r_reg[23]_1 ;
  input \count_for_reset_r_reg[23]_2 ;
  input link_reset_0_c;
  input link_reset_1_c;
  input link_reset_2_c;
  input FINAL_GATER_FOR_FIFO_DIN_i_2__1_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input [65:0]D;
  input CB_detect;
  input [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;

  wire ANY_VLD_BTF_FLAG_i_1__2_n_0;
  wire ANY_VLD_BTF_FLAG_i_3__2_n_0;
  wire ANY_VLD_BTF_FLAG_i_4__1_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__2_n_0;
  wire CB_align_ver_i_3__2_n_0;
  wire CB_align_ver_i_4__2_n_0;
  wire CB_align_ver_i_5__2_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [65:0]D;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2__1_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0;
  wire \LINK_RESET[0]_i_2__2_n_0 ;
  wire \LINK_RESET[0]_i_3__2_n_0 ;
  wire \LINK_RESET[0]_i_4__2_n_0 ;
  wire \LINK_RESET[0]_i_5__2_n_0 ;
  wire \LINK_RESET[0]_i_6__2_n_0 ;
  wire [67:0]Q;
  wire any_vld_btf_lane3_i;
  wire bit_err_chan_bond_lane3_i;
  wire buffer_too_empty_c;
  wire \cb_rxdatavalid_cnt_reg[1] ;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3__2_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__2_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[23]_1 ;
  wire \count_for_reset_r_reg[23]_2 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__2_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane3_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__2_n_0;
  wire en_chan_sync_i;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1__2_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire final_gater_for_fifo_din_lane3_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_rst_int;
  wire hard_err_usr_i_3;
  wire [0:0]hard_err_usr_i_3_0;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__2_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire p_0_in10_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire p_0_in9_in;
  wire [5:0]p_0_in__26;
  wire [4:0]p_0_in__27;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_err_i_0;
  wire rx_lossofsync_i_0;
  wire [0:0]rxbuferr_out_i;
  wire [0:0]rxbuferr_out_lane2_i;
  wire [1:0]rxbuferr_out_lane3_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_lane3_i;
  wire rxfsm_reset_i;
  wire rxfsm_reset_i_inferred_i_2_n_0;
  wire s_level_out_d6_reg;
  wire sel;
  wire srst;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1__2_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_err_rd_clk_sync_reg_0;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__2_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h00EA)) 
    ANY_VLD_BTF_FLAG_i_1__2
       (.I0(any_vld_btf_lane3_i),
        .I1(p_7_in),
        .I2(p_0_in3_in),
        .I3(ANY_VLD_BTF_FLAG_i_3__2_n_0),
        .O(ANY_VLD_BTF_FLAG_i_1__2_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_2__2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ANY_VLD_BTF_FLAG_i_3__2
       (.I0(ANY_VLD_BTF_FLAG_i_4__1_n_0),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .O(ANY_VLD_BTF_FLAG_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    ANY_VLD_BTF_FLAG_i_4__1
       (.I0(wait_for_wr_en_wr4[2]),
        .I1(wait_for_wr_en_wr4[4]),
        .I2(wait_for_wr_en_wr4[5]),
        .I3(wait_for_wr_en_wr4[0]),
        .O(ANY_VLD_BTF_FLAG_i_4__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__2_n_0),
        .Q(any_vld_btf_lane3_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00200000)) 
    CB_align_ver_i_1__2
       (.I0(CB_align_ver_i_2__2_n_0),
        .I1(CB_align_ver_i_3__2_n_0),
        .I2(master_do_rd_en),
        .I3(Q[58]),
        .I4(Q[60]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000010)) 
    CB_align_ver_i_2__2
       (.I0(Q[55]),
        .I1(Q[50]),
        .I2(Q[62]),
        .I3(Q[63]),
        .I4(CB_align_ver_i_4__2_n_0),
        .O(CB_align_ver_i_2__2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CB_align_ver_i_3__2
       (.I0(Q[53]),
        .I1(Q[54]),
        .I2(Q[57]),
        .I3(Q[59]),
        .I4(CB_align_ver_i_5__2_n_0),
        .O(CB_align_ver_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    CB_align_ver_i_4__2
       (.I0(Q[65]),
        .I1(Q[64]),
        .I2(Q[49]),
        .I3(Q[51]),
        .O(CB_align_ver_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hFFFD)) 
    CB_align_ver_i_5__2
       (.I0(Q[61]),
        .I1(Q[52]),
        .I2(Q[48]),
        .I3(Q[56]),
        .O(CB_align_ver_i_5__2_n_0));
  FDRE CB_align_ver_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__2
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i_0),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h9F000000)) 
    CC_RX_HEADER_OUT_ERR_i_1__2
       (.I0(Q[64]),
        .I1(Q[65]),
        .I2(hold_reg_r),
        .I3(Q[66]),
        .I4(master_do_rd_en),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i_0),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__2
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_lane3_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2__1
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3__1
       (.I0(p_0_in3_in),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_2__1_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4__1
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5__1
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6__1
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6__1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7__1
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7__1_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8__1
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__2_n_0),
        .Q(final_gater_for_fifo_din_lane3_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT5 #(
    .INIT(32'h0000E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__2
       (.I0(bit_err_chan_bond_lane3_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__2
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__2
       (.I0(wr_monitor_flag_reg[3]),
        .I1(wr_monitor_flag_reg[4]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__2_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__2
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__2_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__2
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__2_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__2
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__2_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__2
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__2_n_0),
        .Q(bit_err_chan_bond_lane3_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1__2 
       (.I0(\LINK_RESET[0]_i_2__2_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3__2_n_0 ),
        .I4(\LINK_RESET[0]_i_4__2_n_0 ),
        .I5(\LINK_RESET[0]_i_5__2_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2__2 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__2 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3__2_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__2 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6__2_n_0 ),
        .O(\LINK_RESET[0]_i_4__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__2 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__2_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6__2 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6__2_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_3_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RX_DATA_REG[63]_i_1__2 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d6_reg),
        .D(en_chan_sync_i),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_lane3_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__2 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__2_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__2_n_0 ,\count_for_reset_r_reg[0]_i_2__2_n_1 ,\count_for_reset_r_reg[0]_i_2__2_n_2 ,\count_for_reset_r_reg[0]_i_2__2_n_3 ,\count_for_reset_r_reg[0]_i_2__2_n_4 ,\count_for_reset_r_reg[0]_i_2__2_n_5 ,\count_for_reset_r_reg[0]_i_2__2_n_6 ,\count_for_reset_r_reg[0]_i_2__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__2_n_8 ,\count_for_reset_r_reg[0]_i_2__2_n_9 ,\count_for_reset_r_reg[0]_i_2__2_n_10 ,\count_for_reset_r_reg[0]_i_2__2_n_11 ,\count_for_reset_r_reg[0]_i_2__2_n_12 ,\count_for_reset_r_reg[0]_i_2__2_n_13 ,\count_for_reset_r_reg[0]_i_2__2_n_14 ,\count_for_reset_r_reg[0]_i_2__2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__2_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__2 
       (.CI(\count_for_reset_r_reg[8]_i_1__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__2_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__2_n_1 ,\count_for_reset_r_reg[16]_i_1__2_n_2 ,\count_for_reset_r_reg[16]_i_1__2_n_3 ,\count_for_reset_r_reg[16]_i_1__2_n_4 ,\count_for_reset_r_reg[16]_i_1__2_n_5 ,\count_for_reset_r_reg[16]_i_1__2_n_6 ,\count_for_reset_r_reg[16]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__2_n_8 ,\count_for_reset_r_reg[16]_i_1__2_n_9 ,\count_for_reset_r_reg[16]_i_1__2_n_10 ,\count_for_reset_r_reg[16]_i_1__2_n_11 ,\count_for_reset_r_reg[16]_i_1__2_n_12 ,\count_for_reset_r_reg[16]_i_1__2_n_13 ,\count_for_reset_r_reg[16]_i_1__2_n_14 ,\count_for_reset_r_reg[16]_i_1__2_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__2_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__2 
       (.CI(\count_for_reset_r_reg[0]_i_2__2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__2_n_0 ,\count_for_reset_r_reg[8]_i_1__2_n_1 ,\count_for_reset_r_reg[8]_i_1__2_n_2 ,\count_for_reset_r_reg[8]_i_1__2_n_3 ,\count_for_reset_r_reg[8]_i_1__2_n_4 ,\count_for_reset_r_reg[8]_i_1__2_n_5 ,\count_for_reset_r_reg[8]_i_1__2_n_6 ,\count_for_reset_r_reg[8]_i_1__2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__2_n_8 ,\count_for_reset_r_reg[8]_i_1__2_n_9 ,\count_for_reset_r_reg[8]_i_1__2_n_10 ,\count_for_reset_r_reg[8]_i_1__2_n_11 ,\count_for_reset_r_reg[8]_i_1__2_n_12 ,\count_for_reset_r_reg[8]_i_1__2_n_13 ,\count_for_reset_r_reg[8]_i_1__2_n_14 ,\count_for_reset_r_reg[8]_i_1__2_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__2_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__2
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT5 #(
    .INIT(32'h000C0008)) 
    do_wr_en_i_1__2
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(ANY_VLD_BTF_FLAG_i_3__2_n_0),
        .I4(final_gater_for_fifo_din_lane3_i),
        .O(do_wr_en_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__2_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1__2 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1__2_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in9_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[67]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    hard_err_usr_i_4
       (.I0(rxbuferr_out_lane3_i[1]),
        .I1(rxbuferr_out_i),
        .I2(hard_err_usr_i_3),
        .I3(rxbuferr_out_lane3_i[0]),
        .I4(hard_err_usr_i_3_0),
        .I5(rxbuferr_out_lane2_i),
        .O(wr_err_rd_clk_sync_reg_0));
  FDRE hold_reg_r_reg
       (.C(s_level_out_d6_reg),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(s_level_out_d6_reg),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  LUT3 #(
    .INIT(8'h0E)) 
    new_do_wr_en_i_1__2
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .I2(ANY_VLD_BTF_FLAG_i_3__2_n_0),
        .O(new_do_wr_en_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__2_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1__1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_lane3_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_lane3_i[0]),
        .R(do_rd_en));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxfsm_reset_i_inferred_i_1
       (.I0(rxfsm_reset_i_inferred_i_2_n_0),
        .I1(hard_err_rst_int),
        .I2(\count_for_reset_r_reg[23]_1 ),
        .I3(\count_for_reset_r_reg[23]_2 ),
        .O(rxfsm_reset_i));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxfsm_reset_i_inferred_i_2
       (.I0(link_reset_3_c),
        .I1(link_reset_0_c),
        .I2(link_reset_1_c),
        .I3(link_reset_2_c),
        .O(rxfsm_reset_i_inferred_i_2_n_0));
  board_aurora_64b66b_0_2_CH_BOND_SLAVE \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_av_s_r_reg_0(enchansync_dlyd_i),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({Q[67],p_0_in10_in,Q[66],p_0_in9_in}),
        .\cb_rxdatavalid_cnt_reg[1]_0 (\cb_rxdatavalid_cnt_reg[1] ),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_lane3_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_lane3_i),
        .empty(underflow_flag_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(master_stop_prev_cb_r),
        .master_stop_prev_cb_r_reg_0(master_stop_prev_cb_r_reg),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(s_level_out_d6_reg),
        .rxchanisaligned_reg_1(rxchanisaligned_reg));
  (* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
  board_aurora_64b66b_0_2_fifo_gen_slave \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(s_level_out_d6_reg),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_43 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_44 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_45 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__1
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__2 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__2_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__26[0]));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__26[1]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__2 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__26[2]));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__2 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__26[3]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__2 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__26[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__2 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__2 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__26[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__26[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane3_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__27[0]));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__27[1]));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__2 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__27[2]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__2 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__27[3]));
  LUT6 #(
    .INIT(64'h0000000000AA2AAA)) 
    \wr_monitor_flag[4]_i_1__2 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__2 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__27[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__27[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__27[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__27[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__27[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__27[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__parameterized0
   (rxbuferr_out_lane2_i,
    rx_header_err_i_1,
    rx_lossofsync_i_1,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    start_cb_writes_lane2_i,
    link_reset_2_c,
    any_vld_btf_lane2_i,
    bit_err_chan_bond_lane2_i,
    valid_btf_detect_dlyd1,
    Q,
    \CHBONDO_reg[0]_0 ,
    \CHBONDO_reg[1]_0 ,
    do_rd_en_lane2_i,
    \CHBONDO_reg[0]_1 ,
    hold_reg_r_reg_0,
    LINK_RESET_OUT0,
    SR,
    final_gater_for_fifo_din_lane2_i,
    srst,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d6_reg,
    out,
    in0,
    en_chan_sync_i,
    D,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    init_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_9_in,
    CB_detect0,
    CB_flag_direct,
    \count_for_reset_r_reg[23]_0 ,
    master_do_rd_en,
    enchansync_dlyd_i,
    master_stop_prev_cb_r,
    enchansync_dlyd_i_0,
    master_stop_prev_cb_r_1,
    link_reset_1_c,
    link_reset_0_c,
    link_reset_3_c,
    LINK_RESET_OUT_reg,
    allow_block_sync_propagation_reg,
    hard_err_rst_int,
    FINAL_GATER_FOR_FIFO_DIN_reg_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    start_cb_writes_mastr_reg_0,
    CB_detect,
    \valid_btf_detect_extend_r_reg[4]_0 );
  output [1:0]rxbuferr_out_lane2_i;
  output rx_header_err_i_1;
  output rx_lossofsync_i_1;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output start_cb_writes_lane2_i;
  output link_reset_2_c;
  output any_vld_btf_lane2_i;
  output bit_err_chan_bond_lane2_i;
  output valid_btf_detect_dlyd1;
  output [67:0]Q;
  output \CHBONDO_reg[0]_0 ;
  output [1:0]\CHBONDO_reg[1]_0 ;
  output do_rd_en_lane2_i;
  output \CHBONDO_reg[0]_1 ;
  output hold_reg_r_reg_0;
  output LINK_RESET_OUT0;
  output [0:0]SR;
  output final_gater_for_fifo_din_lane2_i;
  input srst;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d6_reg;
  input out;
  input in0;
  input en_chan_sync_i;
  input [66:0]D;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input init_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_9_in;
  input CB_detect0;
  input CB_flag_direct;
  input \count_for_reset_r_reg[23]_0 ;
  input master_do_rd_en;
  input enchansync_dlyd_i;
  input master_stop_prev_cb_r;
  input enchansync_dlyd_i_0;
  input master_stop_prev_cb_r_1;
  input link_reset_1_c;
  input link_reset_0_c;
  input link_reset_3_c;
  input LINK_RESET_OUT_reg;
  input allow_block_sync_propagation_reg;
  input hard_err_rst_int;
  input FINAL_GATER_FOR_FIFO_DIN_reg_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input start_cb_writes_mastr_reg_0;
  input CB_detect;
  input [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;

  wire ANY_VLD_BTF_FLAG_i_1__1_n_0;
  wire ANY_VLD_BTF_FLAG_i_2__1_n_0;
  wire ANY_VLD_BTF_FLAG_i_3__1_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__1_n_0;
  wire CB_align_ver_i_3__1_n_0;
  wire CB_align_ver_i_4__1_n_0;
  wire CB_align_ver_i_5__1_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire \CHBONDO_reg[0]_0 ;
  wire \CHBONDO_reg[0]_1 ;
  wire [1:0]\CHBONDO_reg[1]_0 ;
  wire [66:0]D;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_reg_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0;
  wire \LINK_RESET[0]_i_2__1_n_0 ;
  wire \LINK_RESET[0]_i_3__1_n_0 ;
  wire \LINK_RESET[0]_i_4__1_n_0 ;
  wire \LINK_RESET[0]_i_5__1_n_0 ;
  wire \LINK_RESET[0]_i_6__1_n_0 ;
  wire LINK_RESET_OUT0;
  wire LINK_RESET_OUT_reg;
  wire [67:0]Q;
  wire [0:0]SR;
  wire allow_block_sync_propagation_reg;
  wire any_vld_btf_lane2_i;
  wire bit_err_chan_bond_lane2_i;
  wire buffer_too_empty_c;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire [1:0]ch_bond_m;
  wire \count_for_reset_r[0]_i_3__1_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__1_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__1_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__1_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__1_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane2_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__1_n_0;
  wire en_chan_sync_i;
  wire enchansync_dlyd_i;
  wire enchansync_dlyd_i_0;
  wire enchansync_dlyd_i_1;
  wire [71:0]fifo_din_i_reg;
  wire \fifo_din_i_reg[71]_i_1__1_n_0 ;
  wire [70:0]fifo_dout_i;
  wire final_gater_for_fifo_din_lane2_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_rst_int;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_1;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__1_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire p_0_in11_in;
  wire p_0_in12_in;
  wire p_0_in4_in;
  wire [5:0]p_0_in__22;
  wire [4:0]p_0_in__23;
  wire p_7_in;
  wire p_9_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_err_i_1;
  wire rx_lossofsync_i_1;
  wire [1:0]rxbuferr_out_lane2_i;
  wire rxchanisaligned;
  wire rxchanisaligned1_out;
  wire rxdatavalid_lookahead_i;
  wire s_level_out_d6_reg;
  wire sel;
  wire srst;
  wire start_cb_writes_lane2_i;
  wire start_cb_writes_mastr;
  wire start_cb_writes_mastr_i_1_n_0;
  wire start_cb_writes_mastr_i_3_n_0;
  wire start_cb_writes_mastr_i_4_n_0;
  wire start_cb_writes_mastr_i_5_n_0;
  wire start_cb_writes_mastr_i_6_n_0;
  wire start_cb_writes_mastr_i_7_n_0;
  wire start_cb_writes_mastr_reg_0;
  wire start_cb_writes_stg1;
  wire start_cb_writes_stg2;
  wire start_cb_writes_stg3;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [0:0]\valid_btf_detect_extend_r_reg[4]_0 ;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[0]_i_1_n_0 ;
  wire \wait_for_rd_en[1]_i_1_n_0 ;
  wire \wait_for_rd_en[2]_i_1__1_n_0 ;
  wire \wait_for_rd_en[2]_i_2_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__1_CO_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_master_fifo.data_fifo_dout_UNCONNECTED ;

  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    ANY_VLD_BTF_FLAG_i_1__1
       (.I0(any_vld_btf_lane2_i),
        .I1(p_7_in),
        .I2(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .O(ANY_VLD_BTF_FLAG_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ANY_VLD_BTF_FLAG_i_2__1
       (.I0(ANY_VLD_BTF_FLAG_i_3__1_n_0),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .O(ANY_VLD_BTF_FLAG_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    ANY_VLD_BTF_FLAG_i_3__1
       (.I0(wait_for_wr_en_wr4[2]),
        .I1(wait_for_wr_en_wr4[4]),
        .I2(wait_for_wr_en_wr4[5]),
        .I3(wait_for_wr_en_wr4[0]),
        .O(ANY_VLD_BTF_FLAG_i_3__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__1_n_0),
        .Q(any_vld_btf_lane2_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000002)) 
    CB_align_ver_i_1__1
       (.I0(CB_align_ver_i_2__1_n_0),
        .I1(CB_align_ver_i_3__1_n_0),
        .I2(Q[53]),
        .I3(Q[57]),
        .I4(Q[56]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CB_align_ver_i_2__1
       (.I0(Q[55]),
        .I1(Q[50]),
        .I2(Q[49]),
        .I3(Q[52]),
        .I4(CB_align_ver_i_4__1_n_0),
        .O(CB_align_ver_i_2__1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CB_align_ver_i_3__1
       (.I0(Q[58]),
        .I1(Q[60]),
        .I2(Q[51]),
        .I3(Q[59]),
        .I4(CB_align_ver_i_5__1_n_0),
        .O(CB_align_ver_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4__1
       (.I0(Q[65]),
        .I1(Q[64]),
        .I2(Q[61]),
        .I3(master_do_rd_en),
        .O(CB_align_ver_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CB_align_ver_i_5__1
       (.I0(Q[62]),
        .I1(Q[63]),
        .I2(Q[54]),
        .I3(Q[48]),
        .O(CB_align_ver_i_5__1_n_0));
  FDRE CB_align_ver_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__1
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i_1),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT5 #(
    .INIT(32'h9F000000)) 
    CC_RX_HEADER_OUT_ERR_i_1__1
       (.I0(Q[64]),
        .I1(Q[65]),
        .I2(hold_reg_r),
        .I3(Q[66]),
        .I4(master_do_rd_en),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i_1),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  FDRE \CHBONDO_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ch_bond_m[0]),
        .Q(\CHBONDO_reg[1]_0 [0]),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE \CHBONDO_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ch_bond_m[1]),
        .Q(\CHBONDO_reg[1]_0 [1]),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__1
       (.I0(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I1(p_7_in),
        .I2(final_gater_for_fifo_din_lane2_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__1_n_0),
        .Q(final_gater_for_fifo_din_lane2_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT5 #(
    .INIT(32'h0000E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__1
       (.I0(bit_err_chan_bond_lane2_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__1
       (.I0(fifo_din_i_reg[50]),
        .I1(fifo_din_i_reg[49]),
        .I2(fifo_din_i_reg[48]),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__1
       (.I0(wr_monitor_flag_reg[3]),
        .I1(wr_monitor_flag_reg[4]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__1_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__1
       (.I0(fifo_din_i_reg[53]),
        .I1(fifo_din_i_reg[54]),
        .I2(fifo_din_i_reg[52]),
        .I3(fifo_din_i_reg[51]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__1_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__1
       (.I0(fifo_din_i_reg[58]),
        .I1(fifo_din_i_reg[57]),
        .I2(fifo_din_i_reg[56]),
        .I3(fifo_din_i_reg[55]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__1_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__1
       (.I0(fifo_din_i_reg[59]),
        .I1(fifo_din_i_reg[60]),
        .I2(fifo_din_i_reg[61]),
        .I3(fifo_din_i_reg[62]),
        .I4(fifo_din_i_reg[63]),
        .I5(fifo_din_i_reg[68]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__1_n_0),
        .Q(bit_err_chan_bond_lane2_i),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_1 
       (.I0(allow_block_sync_propagation_reg),
        .I1(hard_err_rst_int),
        .I2(link_reset_2_c),
        .I3(link_reset_1_c),
        .I4(link_reset_0_c),
        .I5(link_reset_3_c),
        .O(SR));
  LUT6 #(
    .INIT(64'hABA8000000000000)) 
    \LINK_RESET[0]_i_1__1 
       (.I0(\LINK_RESET[0]_i_2__1_n_0 ),
        .I1(count_for_reset_r_reg[1]),
        .I2(count_for_reset_r_reg[2]),
        .I3(\LINK_RESET[0]_i_3__1_n_0 ),
        .I4(\LINK_RESET[0]_i_4__1_n_0 ),
        .I5(\LINK_RESET[0]_i_5__1_n_0 ),
        .O(link_reset_0));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \LINK_RESET[0]_i_2__1 
       (.I0(count_for_reset_r_reg[3]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[7]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[4]),
        .O(\LINK_RESET[0]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__1 
       (.I0(count_for_reset_r_reg[6]),
        .I1(count_for_reset_r_reg[7]),
        .I2(count_for_reset_r_reg[4]),
        .I3(count_for_reset_r_reg[5]),
        .I4(count_for_reset_r_reg[3]),
        .I5(count_for_reset_r_reg[0]),
        .O(\LINK_RESET[0]_i_3__1_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__1 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_6__1_n_0 ),
        .O(\LINK_RESET[0]_i_4__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__1 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_6__1 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_6__1_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    LINK_RESET_OUT_i_1
       (.I0(link_reset_2_c),
        .I1(link_reset_1_c),
        .I2(link_reset_0_c),
        .I3(link_reset_3_c),
        .I4(LINK_RESET_OUT_reg),
        .O(LINK_RESET_OUT0));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_2_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RX_DATA_REG[63]_i_1__1 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d6_reg),
        .D(en_chan_sync_i),
        .Q(enchansync_dlyd_i_1),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(D[66]),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg3),
        .Q(start_cb_writes_lane2_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__1 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__1_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__1 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__1_n_0 ,\count_for_reset_r_reg[0]_i_2__1_n_1 ,\count_for_reset_r_reg[0]_i_2__1_n_2 ,\count_for_reset_r_reg[0]_i_2__1_n_3 ,\count_for_reset_r_reg[0]_i_2__1_n_4 ,\count_for_reset_r_reg[0]_i_2__1_n_5 ,\count_for_reset_r_reg[0]_i_2__1_n_6 ,\count_for_reset_r_reg[0]_i_2__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__1_n_8 ,\count_for_reset_r_reg[0]_i_2__1_n_9 ,\count_for_reset_r_reg[0]_i_2__1_n_10 ,\count_for_reset_r_reg[0]_i_2__1_n_11 ,\count_for_reset_r_reg[0]_i_2__1_n_12 ,\count_for_reset_r_reg[0]_i_2__1_n_13 ,\count_for_reset_r_reg[0]_i_2__1_n_14 ,\count_for_reset_r_reg[0]_i_2__1_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__1_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__1 
       (.CI(\count_for_reset_r_reg[8]_i_1__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__1_n_1 ,\count_for_reset_r_reg[16]_i_1__1_n_2 ,\count_for_reset_r_reg[16]_i_1__1_n_3 ,\count_for_reset_r_reg[16]_i_1__1_n_4 ,\count_for_reset_r_reg[16]_i_1__1_n_5 ,\count_for_reset_r_reg[16]_i_1__1_n_6 ,\count_for_reset_r_reg[16]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__1_n_8 ,\count_for_reset_r_reg[16]_i_1__1_n_9 ,\count_for_reset_r_reg[16]_i_1__1_n_10 ,\count_for_reset_r_reg[16]_i_1__1_n_11 ,\count_for_reset_r_reg[16]_i_1__1_n_12 ,\count_for_reset_r_reg[16]_i_1__1_n_13 ,\count_for_reset_r_reg[16]_i_1__1_n_14 ,\count_for_reset_r_reg[16]_i_1__1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__1_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__1 
       (.CI(\count_for_reset_r_reg[0]_i_2__1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__1_n_0 ,\count_for_reset_r_reg[8]_i_1__1_n_1 ,\count_for_reset_r_reg[8]_i_1__1_n_2 ,\count_for_reset_r_reg[8]_i_1__1_n_3 ,\count_for_reset_r_reg[8]_i_1__1_n_4 ,\count_for_reset_r_reg[8]_i_1__1_n_5 ,\count_for_reset_r_reg[8]_i_1__1_n_6 ,\count_for_reset_r_reg[8]_i_1__1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__1_n_8 ,\count_for_reset_r_reg[8]_i_1__1_n_9 ,\count_for_reset_r_reg[8]_i_1__1_n_10 ,\count_for_reset_r_reg[8]_i_1__1_n_11 ,\count_for_reset_r_reg[8]_i_1__1_n_12 ,\count_for_reset_r_reg[8]_i_1__1_n_13 ,\count_for_reset_r_reg[8]_i_1__1_n_14 ,\count_for_reset_r_reg[8]_i_1__1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__1
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT6 #(
    .INIT(64'h000000F000000080)) 
    do_wr_en_i_1__1
       (.I0(p_7_in),
        .I1(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I2(raw_data_r[66]),
        .I3(overflow_flag_c),
        .I4(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .I5(final_gater_for_fifo_din_lane2_i),
        .O(do_wr_en_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h15)) 
    \fifo_din_i_reg[71]_i_1__1 
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .O(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(fifo_din_i_reg[0]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(fifo_din_i_reg[10]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(fifo_din_i_reg[11]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(fifo_din_i_reg[12]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(fifo_din_i_reg[13]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(fifo_din_i_reg[14]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(fifo_din_i_reg[15]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(fifo_din_i_reg[16]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(fifo_din_i_reg[17]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(fifo_din_i_reg[18]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(fifo_din_i_reg[19]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(fifo_din_i_reg[1]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(fifo_din_i_reg[20]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(fifo_din_i_reg[21]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(fifo_din_i_reg[22]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(fifo_din_i_reg[23]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(fifo_din_i_reg[24]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(fifo_din_i_reg[25]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(fifo_din_i_reg[26]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(fifo_din_i_reg[27]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(fifo_din_i_reg[28]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(fifo_din_i_reg[29]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(fifo_din_i_reg[2]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(fifo_din_i_reg[30]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(fifo_din_i_reg[31]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(fifo_din_i_reg[32]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(fifo_din_i_reg[33]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(fifo_din_i_reg[34]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(fifo_din_i_reg[35]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(fifo_din_i_reg[36]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(fifo_din_i_reg[37]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(fifo_din_i_reg[38]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(fifo_din_i_reg[39]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(fifo_din_i_reg[3]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(fifo_din_i_reg[40]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(fifo_din_i_reg[41]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(fifo_din_i_reg[42]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(fifo_din_i_reg[43]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(fifo_din_i_reg[44]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(fifo_din_i_reg[45]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(fifo_din_i_reg[46]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(fifo_din_i_reg[47]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(fifo_din_i_reg[48]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(fifo_din_i_reg[49]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(fifo_din_i_reg[4]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(fifo_din_i_reg[50]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(fifo_din_i_reg[51]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(fifo_din_i_reg[52]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(fifo_din_i_reg[53]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(fifo_din_i_reg[54]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(fifo_din_i_reg[55]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(fifo_din_i_reg[56]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(fifo_din_i_reg[57]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(fifo_din_i_reg[58]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(fifo_din_i_reg[59]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(fifo_din_i_reg[5]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(fifo_din_i_reg[60]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(fifo_din_i_reg[61]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(fifo_din_i_reg[62]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(fifo_din_i_reg[63]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(fifo_din_i_reg[64]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(fifo_din_i_reg[65]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(fifo_din_i_reg[66]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(fifo_din_i_reg[67]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in4_in),
        .Q(fifo_din_i_reg[68]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(fifo_din_i_reg[69]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(fifo_din_i_reg[6]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(fifo_din_i_reg[70]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(fifo_din_i_reg[71]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(fifo_din_i_reg[7]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(fifo_din_i_reg[8]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(fifo_din_i_reg[9]),
        .R(\fifo_din_i_reg[71]_i_1__1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in11_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in12_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[67]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE hold_reg_r_reg
       (.C(s_level_out_d6_reg),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(s_level_out_d6_reg),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  board_aurora_64b66b_0_2_CH_BOND_MASTER \master.master 
       (.CB_align_ver(CB_align_ver),
        .CB_flag_flopped(CB_flag_flopped),
        .D(ch_bond_m),
        .Q({Q[67],p_0_in12_in,Q[66],p_0_in11_in}),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_reg(do_rd_en_lane2_i),
        .enchansync_dlyd_i_1(enchansync_dlyd_i_1),
        .master_do_rd_en(master_do_rd_en),
        .master_do_rd_en_out_reg(do_rd_en_reg_n_0),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned1_out(rxchanisaligned1_out),
        .rxchanisaligned_reg_0(s_level_out_d6_reg));
  (* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_master,fifo_generator_v13_2_5,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
  board_aurora_64b66b_0_2_fifo_gen_master \master_fifo.data_fifo 
       (.din(fifo_din_i_reg),
        .dout({\NLW_master_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_master_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(s_level_out_d6_reg),
        .rd_en(out),
        .rd_rst_busy(\NLW_master_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_master_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  LUT4 #(
    .INIT(16'h7740)) 
    master_stop_prev_cb_r_i_1__0
       (.I0(\CHBONDO_reg[1]_0 [0]),
        .I1(\CHBONDO_reg[1]_0 [1]),
        .I2(enchansync_dlyd_i),
        .I3(master_stop_prev_cb_r),
        .O(\CHBONDO_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h7740)) 
    master_stop_prev_cb_r_i_1__1
       (.I0(\CHBONDO_reg[1]_0 [0]),
        .I1(\CHBONDO_reg[1]_0 [1]),
        .I2(enchansync_dlyd_i_0),
        .I3(master_stop_prev_cb_r_1),
        .O(\CHBONDO_reg[0]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT4 #(
    .INIT(16'h00EA)) 
    new_do_wr_en_i_1__1
       (.I0(do_wr_en),
        .I1(p_7_in),
        .I2(FINAL_GATER_FOR_FIFO_DIN_reg_0),
        .I3(ANY_VLD_BTF_FLAG_i_2__1_n_0),
        .O(new_do_wr_en_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h1F)) 
    new_underflow_flag_c_inv_i_1__2
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .I2(underflow_flag_r3),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in4_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[66]),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_lane2_i[0]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'hF8)) 
    start_cb_writes_mastr_i_1
       (.I0(start_cb_writes_mastr_reg_0),
        .I1(p_7_in),
        .I2(start_cb_writes_mastr),
        .O(start_cb_writes_mastr_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    start_cb_writes_mastr_i_2
       (.I0(start_cb_writes_mastr_i_3_n_0),
        .I1(start_cb_writes_mastr_i_4_n_0),
        .I2(start_cb_writes_mastr_i_5_n_0),
        .I3(start_cb_writes_mastr_i_6_n_0),
        .I4(start_cb_writes_mastr_i_7_n_0),
        .I5(p_0_in4_in),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'h0008)) 
    start_cb_writes_mastr_i_3
       (.I0(p_0_in4_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(start_cb_writes_mastr_i_3_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    start_cb_writes_mastr_i_4
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(start_cb_writes_mastr_i_4_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    start_cb_writes_mastr_i_5
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(start_cb_writes_mastr_i_5_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    start_cb_writes_mastr_i_6
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(start_cb_writes_mastr_i_6_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    start_cb_writes_mastr_i_7
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(start_cb_writes_mastr_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_mastr_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_mastr_i_1_n_0),
        .Q(start_cb_writes_mastr),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_mastr),
        .Q(start_cb_writes_stg1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg1),
        .Q(start_cb_writes_stg2),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    start_cb_writes_stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(start_cb_writes_stg2),
        .Q(start_cb_writes_stg3),
        .R(cbcc_fifo_reset_wr_clk));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_46 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .rxchanisaligned1_out(rxchanisaligned1_out),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_47 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_48 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_49 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__2
       (.I0(underflow_flag_c),
        .I1(buffer_too_empty_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(\valid_btf_detect_extend_r_reg[4]_0 ));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_9_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(\wait_for_rd_en[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(\wait_for_rd_en[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__1 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[0]_i_1_n_0 ),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[1]_i_1_n_0 ),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(\wait_for_rd_en[2]_i_1__1_n_0 ),
        .D(\wait_for_rd_en[2]_i_2_n_0 ),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__22[0]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__22[1]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__22[2]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__1 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__22[3]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__1 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__22[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__1 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__1 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__22[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__22[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane2_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__23[0]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__23[1]));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__23[2]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__1 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__23[3]));
  LUT6 #(
    .INIT(64'h0000000000AA2AAA)) 
    \wr_monitor_flag[4]_i_1__1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__1 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__23[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__23[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__23[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__23[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__23[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__23[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__1
   (rxbuferr_out_i,
    rx_header_err_i_3,
    rx_lossofsync_i_3,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_0_c,
    master_do_rd_en,
    any_vld_btf_i,
    bit_err_chan_bond_i,
    valid_btf_detect_dlyd1,
    rxdatavalid_to_lanes_i,
    \fifo_dout_reg[68]_0 ,
    \fifo_dout_reg[65]_0 ,
    do_rd_en_i,
    CB_flag_direct,
    master_do_rd_en_reg_0,
    CB_flag_direct_0,
    CB_flag_direct_1,
    master_do_rd_en_reg_1,
    hold_reg_r_reg_0,
    final_gater_for_fifo_din_i,
    srst,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d5_reg,
    out,
    in0,
    en_chan_sync_i,
    rxdatavalid_to_fifo_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    init_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    \count_for_reset_r_reg[23]_0 ,
    Q,
    CB_flag_flopped_reg_0,
    CB_flag_flopped_reg_1,
    rxchanisaligned_reg,
    FINAL_GATER_FOR_FIFO_DIN_i_2_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    D,
    CB_detect,
    SR);
  output [1:0]rxbuferr_out_i;
  output rx_header_err_i_3;
  output rx_lossofsync_i_3;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_0_c;
  output master_do_rd_en;
  output any_vld_btf_i;
  output bit_err_chan_bond_i;
  output valid_btf_detect_dlyd1;
  output rxdatavalid_to_lanes_i;
  output \fifo_dout_reg[68]_0 ;
  output [65:0]\fifo_dout_reg[65]_0 ;
  output do_rd_en_i;
  output CB_flag_direct;
  output master_do_rd_en_reg_0;
  output CB_flag_direct_0;
  output CB_flag_direct_1;
  output master_do_rd_en_reg_1;
  output hold_reg_r_reg_0;
  output final_gater_for_fifo_din_i;
  input srst;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d5_reg;
  input out;
  input in0;
  input en_chan_sync_i;
  input rxdatavalid_to_fifo_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input init_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input \count_for_reset_r_reg[23]_0 ;
  input [1:0]Q;
  input [1:0]CB_flag_flopped_reg_0;
  input [1:0]CB_flag_flopped_reg_1;
  input [1:0]rxchanisaligned_reg;
  input FINAL_GATER_FOR_FIFO_DIN_i_2_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input [65:0]D;
  input CB_detect;
  input [0:0]SR;

  wire ANY_VLD_BTF_FLAG_i_1_n_0;
  wire ANY_VLD_BTF_FLAG_i_3_n_0;
  wire ANY_VLD_BTF_FLAG_i_4_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2_n_0;
  wire CB_align_ver_i_3_n_0;
  wire CB_align_ver_i_4_n_0;
  wire CB_align_ver_i_5_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_direct_0;
  wire CB_flag_direct_1;
  wire CB_flag_direct_2;
  wire CB_flag_flopped;
  wire [1:0]CB_flag_flopped_reg_0;
  wire [1:0]CB_flag_flopped_reg_1;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [65:0]D;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0;
  wire \LINK_RESET[0]_i_2_n_0 ;
  wire \LINK_RESET[0]_i_3_n_0 ;
  wire \LINK_RESET[0]_i_4_n_0 ;
  wire \LINK_RESET[0]_i_5_n_0 ;
  wire \LINK_RESET[0]_i_6_n_0 ;
  wire \LINK_RESET[0]_i_7_n_0 ;
  wire [1:0]Q;
  wire [0:0]SR;
  wire any_vld_btf_i;
  wire bit_err_chan_bond_i;
  wire buffer_too_empty_c;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1_n_9 ;
  wire do_rd_en;
  wire do_rd_en_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1_n_0;
  wire en_chan_sync_i;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire [65:0]\fifo_dout_reg[65]_0 ;
  wire \fifo_dout_reg[68]_0 ;
  wire final_gater_for_fifo_din_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_0_c;
  wire master_do_rd_en;
  wire master_do_rd_en_q;
  wire master_do_rd_en_reg_0;
  wire master_do_rd_en_reg_1;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire p_0_in9_in;
  wire [5:0]p_0_in__14;
  wire [4:0]p_0_in__15;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire rx_header_err_i_3;
  wire rx_lossofsync_i_3;
  wire [1:0]rxbuferr_out_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_i;
  wire rxdatavalid_to_lanes_i;
  wire s_level_out_d5_reg;
  wire sel;
  wire srst;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h00EA)) 
    ANY_VLD_BTF_FLAG_i_1
       (.I0(any_vld_btf_i),
        .I1(p_7_in),
        .I2(p_0_in3_in),
        .I3(ANY_VLD_BTF_FLAG_i_3_n_0),
        .O(ANY_VLD_BTF_FLAG_i_1_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ANY_VLD_BTF_FLAG_i_3
       (.I0(ANY_VLD_BTF_FLAG_i_4_n_0),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .O(ANY_VLD_BTF_FLAG_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    ANY_VLD_BTF_FLAG_i_4
       (.I0(wait_for_wr_en_wr4[2]),
        .I1(wait_for_wr_en_wr4[4]),
        .I2(wait_for_wr_en_wr4[5]),
        .I3(wait_for_wr_en_wr4[0]),
        .O(ANY_VLD_BTF_FLAG_i_4_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1_n_0),
        .Q(any_vld_btf_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000002)) 
    CB_align_ver_i_1
       (.I0(CB_align_ver_i_2_n_0),
        .I1(CB_align_ver_i_3_n_0),
        .I2(\fifo_dout_reg[65]_0 [63]),
        .I3(\fifo_dout_reg[65]_0 [53]),
        .I4(\fifo_dout_reg[65]_0 [48]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CB_align_ver_i_2
       (.I0(\fifo_dout_reg[65]_0 [55]),
        .I1(\fifo_dout_reg[65]_0 [52]),
        .I2(\fifo_dout_reg[65]_0 [58]),
        .I3(\fifo_dout_reg[65]_0 [49]),
        .I4(CB_align_ver_i_4_n_0),
        .O(CB_align_ver_i_2_n_0));
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CB_align_ver_i_3
       (.I0(\fifo_dout_reg[65]_0 [51]),
        .I1(\fifo_dout_reg[65]_0 [61]),
        .I2(\fifo_dout_reg[65]_0 [50]),
        .I3(\fifo_dout_reg[65]_0 [54]),
        .I4(CB_align_ver_i_5_n_0),
        .O(CB_align_ver_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    CB_align_ver_i_4
       (.I0(\fifo_dout_reg[65]_0 [65]),
        .I1(\fifo_dout_reg[65]_0 [64]),
        .I2(\fifo_dout_reg[65]_0 [62]),
        .I3(master_do_rd_en),
        .O(CB_align_ver_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CB_align_ver_i_5
       (.I0(\fifo_dout_reg[65]_0 [59]),
        .I1(\fifo_dout_reg[65]_0 [57]),
        .I2(\fifo_dout_reg[65]_0 [60]),
        .I3(\fifo_dout_reg[65]_0 [56]),
        .O(CB_align_ver_i_5_n_0));
  FDRE CB_align_ver_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1
       (.I0(master_do_rd_en),
        .I1(p_0_in11_in),
        .O(CB_flag_direct_2));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__0
       (.I0(master_do_rd_en),
        .I1(Q[1]),
        .O(CB_flag_direct));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__1
       (.I0(master_do_rd_en),
        .I1(CB_flag_flopped_reg_0[1]),
        .O(CB_flag_direct_0));
  LUT2 #(
    .INIT(4'h8)) 
    CB_flag_flopped_i_1__2
       (.I0(master_do_rd_en),
        .I1(CB_flag_flopped_reg_1[1]),
        .O(CB_flag_direct_1));
  FDRE CB_flag_flopped_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CB_flag_direct_2),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i_3),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT5 #(
    .INIT(32'h9F000000)) 
    CC_RX_HEADER_OUT_ERR_i_1
       (.I0(\fifo_dout_reg[65]_0 [64]),
        .I1(\fifo_dout_reg[65]_0 [65]),
        .I2(hold_reg_r),
        .I3(master_do_rd_en),
        .I4(p_0_in13_in),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i_3),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_2_0),
        .I1(p_0_in3_in),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1_n_0),
        .Q(final_gater_for_fifo_din_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT5 #(
    .INIT(32'h0000E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1
       (.I0(bit_err_chan_bond_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3
       (.I0(wr_monitor_flag_reg[3]),
        .I1(wr_monitor_flag_reg[4]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1_n_0),
        .Q(bit_err_chan_bond_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8000000)) 
    \LINK_RESET[0]_i_1 
       (.I0(\LINK_RESET[0]_i_2_n_0 ),
        .I1(count_for_reset_r_reg[7]),
        .I2(\LINK_RESET[0]_i_3_n_0 ),
        .I3(\LINK_RESET[0]_i_4_n_0 ),
        .I4(\LINK_RESET[0]_i_5_n_0 ),
        .O(link_reset_0));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \LINK_RESET[0]_i_2 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .I2(count_for_reset_r_reg[5]),
        .I3(count_for_reset_r_reg[6]),
        .I4(count_for_reset_r_reg[4]),
        .I5(count_for_reset_r_reg[3]),
        .O(\LINK_RESET[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3 
       (.I0(count_for_reset_r_reg[5]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[3]),
        .I3(count_for_reset_r_reg[4]),
        .I4(count_for_reset_r_reg[0]),
        .I5(\LINK_RESET[0]_i_6_n_0 ),
        .O(\LINK_RESET[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_7_n_0 ),
        .O(\LINK_RESET[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \LINK_RESET[0]_i_6 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .O(\LINK_RESET[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_7 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_7_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_0_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'hF0F0F0E0)) 
    RXDATAVALID_IN_REG_i_1
       (.I0(Q[0]),
        .I1(CB_flag_flopped_reg_0[0]),
        .I2(master_do_rd_en),
        .I3(p_0_in13_in),
        .I4(CB_flag_flopped_reg_1[0]),
        .O(rxdatavalid_to_lanes_i));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RX_DATA_REG[63]_i_1 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT5 #(
    .INIT(32'h0F0F0F1F)) 
    SOFT_ERR_i_2
       (.I0(CB_flag_flopped_reg_1[0]),
        .I1(p_0_in13_in),
        .I2(master_do_rd_en),
        .I3(CB_flag_flopped_reg_0[0]),
        .I4(Q[0]),
        .O(\fifo_dout_reg[68]_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d5_reg),
        .D(en_chan_sync_i),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2_n_0 ,\count_for_reset_r_reg[0]_i_2_n_1 ,\count_for_reset_r_reg[0]_i_2_n_2 ,\count_for_reset_r_reg[0]_i_2_n_3 ,\count_for_reset_r_reg[0]_i_2_n_4 ,\count_for_reset_r_reg[0]_i_2_n_5 ,\count_for_reset_r_reg[0]_i_2_n_6 ,\count_for_reset_r_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2_n_8 ,\count_for_reset_r_reg[0]_i_2_n_9 ,\count_for_reset_r_reg[0]_i_2_n_10 ,\count_for_reset_r_reg[0]_i_2_n_11 ,\count_for_reset_r_reg[0]_i_2_n_12 ,\count_for_reset_r_reg[0]_i_2_n_13 ,\count_for_reset_r_reg[0]_i_2_n_14 ,\count_for_reset_r_reg[0]_i_2_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1 
       (.CI(\count_for_reset_r_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1_n_1 ,\count_for_reset_r_reg[16]_i_1_n_2 ,\count_for_reset_r_reg[16]_i_1_n_3 ,\count_for_reset_r_reg[16]_i_1_n_4 ,\count_for_reset_r_reg[16]_i_1_n_5 ,\count_for_reset_r_reg[16]_i_1_n_6 ,\count_for_reset_r_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1_n_8 ,\count_for_reset_r_reg[16]_i_1_n_9 ,\count_for_reset_r_reg[16]_i_1_n_10 ,\count_for_reset_r_reg[16]_i_1_n_11 ,\count_for_reset_r_reg[16]_i_1_n_12 ,\count_for_reset_r_reg[16]_i_1_n_13 ,\count_for_reset_r_reg[16]_i_1_n_14 ,\count_for_reset_r_reg[16]_i_1_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1 
       (.CI(\count_for_reset_r_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1_n_0 ,\count_for_reset_r_reg[8]_i_1_n_1 ,\count_for_reset_r_reg[8]_i_1_n_2 ,\count_for_reset_r_reg[8]_i_1_n_3 ,\count_for_reset_r_reg[8]_i_1_n_4 ,\count_for_reset_r_reg[8]_i_1_n_5 ,\count_for_reset_r_reg[8]_i_1_n_6 ,\count_for_reset_r_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1_n_8 ,\count_for_reset_r_reg[8]_i_1_n_9 ,\count_for_reset_r_reg[8]_i_1_n_10 ,\count_for_reset_r_reg[8]_i_1_n_11 ,\count_for_reset_r_reg[8]_i_1_n_12 ,\count_for_reset_r_reg[8]_i_1_n_13 ,\count_for_reset_r_reg[8]_i_1_n_14 ,\count_for_reset_r_reg[8]_i_1_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT5 #(
    .INIT(32'h000C0008)) 
    do_wr_en_i_1
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(ANY_VLD_BTF_FLAG_i_3_n_0),
        .I4(final_gater_for_fifo_din_i),
        .O(do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(\fifo_dout_reg[65]_0 [0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(\fifo_dout_reg[65]_0 [10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(\fifo_dout_reg[65]_0 [11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(\fifo_dout_reg[65]_0 [12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(\fifo_dout_reg[65]_0 [13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(\fifo_dout_reg[65]_0 [14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(\fifo_dout_reg[65]_0 [15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(\fifo_dout_reg[65]_0 [16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(\fifo_dout_reg[65]_0 [17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(\fifo_dout_reg[65]_0 [18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(\fifo_dout_reg[65]_0 [19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(\fifo_dout_reg[65]_0 [1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(\fifo_dout_reg[65]_0 [20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(\fifo_dout_reg[65]_0 [21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(\fifo_dout_reg[65]_0 [22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(\fifo_dout_reg[65]_0 [23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(\fifo_dout_reg[65]_0 [24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(\fifo_dout_reg[65]_0 [25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(\fifo_dout_reg[65]_0 [26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(\fifo_dout_reg[65]_0 [27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(\fifo_dout_reg[65]_0 [28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(\fifo_dout_reg[65]_0 [29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(\fifo_dout_reg[65]_0 [2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(\fifo_dout_reg[65]_0 [30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(\fifo_dout_reg[65]_0 [31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(\fifo_dout_reg[65]_0 [32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(\fifo_dout_reg[65]_0 [33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(\fifo_dout_reg[65]_0 [34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(\fifo_dout_reg[65]_0 [35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(\fifo_dout_reg[65]_0 [36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(\fifo_dout_reg[65]_0 [37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(\fifo_dout_reg[65]_0 [38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(\fifo_dout_reg[65]_0 [39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(\fifo_dout_reg[65]_0 [3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(\fifo_dout_reg[65]_0 [40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(\fifo_dout_reg[65]_0 [41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(\fifo_dout_reg[65]_0 [42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(\fifo_dout_reg[65]_0 [43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(\fifo_dout_reg[65]_0 [44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(\fifo_dout_reg[65]_0 [45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(\fifo_dout_reg[65]_0 [46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(\fifo_dout_reg[65]_0 [47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(\fifo_dout_reg[65]_0 [48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(\fifo_dout_reg[65]_0 [49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(\fifo_dout_reg[65]_0 [4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(\fifo_dout_reg[65]_0 [50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(\fifo_dout_reg[65]_0 [51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(\fifo_dout_reg[65]_0 [52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(\fifo_dout_reg[65]_0 [53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(\fifo_dout_reg[65]_0 [54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(\fifo_dout_reg[65]_0 [55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(\fifo_dout_reg[65]_0 [56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(\fifo_dout_reg[65]_0 [57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(\fifo_dout_reg[65]_0 [58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(\fifo_dout_reg[65]_0 [59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(\fifo_dout_reg[65]_0 [5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(\fifo_dout_reg[65]_0 [60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(\fifo_dout_reg[65]_0 [61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(\fifo_dout_reg[65]_0 [62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(\fifo_dout_reg[65]_0 [63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(\fifo_dout_reg[65]_0 [64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(\fifo_dout_reg[65]_0 [65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in9_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(p_0_in13_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(\fifo_dout_reg[65]_0 [6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(p_0_in11_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(\fifo_dout_reg[65]_0 [7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(\fifo_dout_reg[65]_0 [8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(\fifo_dout_reg[65]_0 [9]),
        .R(1'b0));
  FDRE hold_reg_r_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE master_do_rd_en_q_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(out),
        .Q(master_do_rd_en_q),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE master_do_rd_en_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(master_do_rd_en_q),
        .Q(master_do_rd_en),
        .R(cbcc_fifo_reset_rd_clk));
  LUT3 #(
    .INIT(8'h0E)) 
    new_do_wr_en_i_1
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .I2(ANY_VLD_BTF_FLAG_i_3_n_0),
        .O(new_do_wr_en_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rxbuferr_out_i[0]),
        .R(do_rd_en));
  board_aurora_64b66b_0_2_CH_BOND_SLAVE_61 \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({p_0_in11_in,p_0_in10_in,p_0_in13_in,p_0_in9_in}),
        .\cb_rxdatavalid_cnt_reg[1]_0 (Q[0]),
        .\cb_rxdatavalid_cnt_reg[1]_1 (CB_flag_flopped_reg_1[0]),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_i),
        .empty(underflow_flag_c),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .hold_rd_ptr_reg_0(s_level_out_d5_reg),
        .\master_ack_cnt_reg[0]_0 (master_do_rd_en),
        .master_do_rd_en_reg(master_do_rd_en_reg_0),
        .master_do_rd_en_reg_0(master_do_rd_en_reg_1),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(rxchanisaligned_reg));
  (* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
  board_aurora_64b66b_0_2_fifo_gen_slave__xdcDup__1 \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(s_level_out_d5_reg),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_62 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_63 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .s_level_out_d5_reg_1(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_64 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_65 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(SR));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__14[0]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__14[1]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__14[2]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__14[3]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__14[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__14[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__14[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_i[1]),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__15[0]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__15[1]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__15[2]));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__15[3]));
  LUT6 #(
    .INIT(64'h0000000000AA2AAA)) 
    \wr_monitor_flag[4]_i_1 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__15[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__15[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__15[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__15[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__15[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__15[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING" *) 
module board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__2
   (enchansync_dlyd_i,
    rd_err_q_reg_0,
    rx_header_err_i_2,
    rx_lossofsync_i_2,
    ch_bond_done_i,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    link_reset_1_c,
    master_stop_prev_cb_r,
    any_vld_btf_lane1_i,
    bit_err_chan_bond_lane1_i,
    valid_btf_detect_dlyd1,
    Q,
    do_rd_en_lane1_i,
    wr_err_rd_clk_sync_reg_0,
    START_CB_WRITES_OUT_reg_0,
    hold_reg_r_reg_0,
    final_gater_for_fifo_din_lane1_i,
    srst,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d5_reg,
    out,
    in0,
    en_chan_sync_i,
    rxdatavalid_to_fifo_lane1_i,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_rd_clk,
    init_clk,
    cbcc_only_reset_rd_clk,
    CC_detect_pulse_i,
    cbcc_fifo_reset_wr_clk,
    p_6_in,
    CB_detect0,
    CB_flag_direct,
    master_stop_prev_cb_r_reg,
    \count_for_reset_r_reg[23]_0 ,
    master_do_rd_en,
    \cb_rxdatavalid_cnt_reg[1] ,
    rxbuferr_out_lane2_i,
    rxbuferr_out_i,
    hard_err_usr_reg,
    start_cb_writes_lane2_i,
    rxchanisaligned_reg,
    START_CB_WRITES_OUT_reg_1,
    FINAL_GATER_FOR_FIFO_DIN_i_2__0_0,
    cbcc_fifo_reset_to_fifo_wr_clk,
    D,
    CB_detect,
    SR);
  output enchansync_dlyd_i;
  output [0:0]rd_err_q_reg_0;
  output rx_header_err_i_2;
  output rx_lossofsync_i_2;
  output [0:0]ch_bond_done_i;
  output CC_detect_dlyd1;
  output CB_detect_dlyd0p5;
  output link_reset_1_c;
  output master_stop_prev_cb_r;
  output any_vld_btf_lane1_i;
  output bit_err_chan_bond_lane1_i;
  output valid_btf_detect_dlyd1;
  output [67:0]Q;
  output do_rd_en_lane1_i;
  output wr_err_rd_clk_sync_reg_0;
  output START_CB_WRITES_OUT_reg_0;
  output hold_reg_r_reg_0;
  output final_gater_for_fifo_din_lane1_i;
  input srst;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d5_reg;
  input out;
  input in0;
  input en_chan_sync_i;
  input rxdatavalid_to_fifo_lane1_i;
  input cbcc_reset_cbstg2_rd_clk;
  input cbcc_fifo_reset_rd_clk;
  input init_clk;
  input cbcc_only_reset_rd_clk;
  input CC_detect_pulse_i;
  input cbcc_fifo_reset_wr_clk;
  input p_6_in;
  input CB_detect0;
  input CB_flag_direct;
  input master_stop_prev_cb_r_reg;
  input \count_for_reset_r_reg[23]_0 ;
  input master_do_rd_en;
  input \cb_rxdatavalid_cnt_reg[1] ;
  input [0:0]rxbuferr_out_lane2_i;
  input [0:0]rxbuferr_out_i;
  input hard_err_usr_reg;
  input start_cb_writes_lane2_i;
  input [1:0]rxchanisaligned_reg;
  input START_CB_WRITES_OUT_reg_1;
  input FINAL_GATER_FOR_FIFO_DIN_i_2__0_0;
  input cbcc_fifo_reset_to_fifo_wr_clk;
  input [65:0]D;
  input CB_detect;
  input [0:0]SR;

  wire ANY_VLD_BTF_FLAG_i_1__0_n_0;
  wire ANY_VLD_BTF_FLAG_i_3__0_n_0;
  wire ANY_VLD_BTF_FLAG_i_4__0_n_0;
  wire CB_align_ver;
  wire CB_align_ver0;
  wire CB_align_ver_i_2__0_n_0;
  wire CB_align_ver_i_3__0_n_0;
  wire CB_align_ver_i_4__0_n_0;
  wire CB_align_ver_i_5__0_n_0;
  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd1;
  wire CB_detect_dlyd10;
  wire CB_detect_dlyd1p0;
  wire CB_flag_direct;
  wire CB_flag_flopped;
  wire CC_RX_HEADER_OUT_ERR0;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r;
  wire [65:0]D;
  wire FINAL_GATER_FOR_FIFO_DIN0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_2__0_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0;
  wire FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT1__15;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0;
  wire FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0;
  wire \LINK_RESET[0]_i_2__0_n_0 ;
  wire \LINK_RESET[0]_i_3__0_n_0 ;
  wire \LINK_RESET[0]_i_4__0_n_0 ;
  wire \LINK_RESET[0]_i_5__0_n_0 ;
  wire \LINK_RESET[0]_i_6__0_n_0 ;
  wire \LINK_RESET[0]_i_7__0_n_0 ;
  wire [67:0]Q;
  wire [0:0]SR;
  wire START_CB_WRITES_OUT_i_1_n_0;
  wire START_CB_WRITES_OUT_reg_0;
  wire START_CB_WRITES_OUT_reg_1;
  wire any_vld_btf_lane1_i;
  wire bit_err_chan_bond_lane1_i;
  wire buffer_too_empty_c;
  wire \cb_rxdatavalid_cnt_reg[1] ;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [0:0]ch_bond_done_i;
  wire \count_for_reset_r[0]_i_3__0_n_0 ;
  wire [23:0]count_for_reset_r_reg;
  wire \count_for_reset_r_reg[0]_i_2__0_n_0 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_1 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_10 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_11 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_12 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_13 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_14 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_15 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_2 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_3 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_4 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_5 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_6 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_7 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_8 ;
  wire \count_for_reset_r_reg[0]_i_2__0_n_9 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_1 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_10 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_11 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_12 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_13 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_14 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_15 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_2 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_3 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_4 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_5 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_6 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_7 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_8 ;
  wire \count_for_reset_r_reg[16]_i_1__0_n_9 ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_0 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_1 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_10 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_11 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_12 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_13 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_14 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_15 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_2 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_3 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_4 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_5 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_6 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_7 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_8 ;
  wire \count_for_reset_r_reg[8]_i_1__0_n_9 ;
  wire do_rd_en;
  wire do_rd_en_lane1_i;
  wire do_rd_en_reg_n_0;
  wire do_wr_en;
  wire do_wr_en_i_1__0_n_0;
  wire en_chan_sync_i;
  wire enchansync_dlyd_i;
  wire \fifo_din_i_reg[71]_i_1__0_n_0 ;
  wire \fifo_din_i_reg_reg_n_0_[0] ;
  wire \fifo_din_i_reg_reg_n_0_[10] ;
  wire \fifo_din_i_reg_reg_n_0_[11] ;
  wire \fifo_din_i_reg_reg_n_0_[12] ;
  wire \fifo_din_i_reg_reg_n_0_[13] ;
  wire \fifo_din_i_reg_reg_n_0_[14] ;
  wire \fifo_din_i_reg_reg_n_0_[15] ;
  wire \fifo_din_i_reg_reg_n_0_[16] ;
  wire \fifo_din_i_reg_reg_n_0_[17] ;
  wire \fifo_din_i_reg_reg_n_0_[18] ;
  wire \fifo_din_i_reg_reg_n_0_[19] ;
  wire \fifo_din_i_reg_reg_n_0_[1] ;
  wire \fifo_din_i_reg_reg_n_0_[20] ;
  wire \fifo_din_i_reg_reg_n_0_[21] ;
  wire \fifo_din_i_reg_reg_n_0_[22] ;
  wire \fifo_din_i_reg_reg_n_0_[23] ;
  wire \fifo_din_i_reg_reg_n_0_[24] ;
  wire \fifo_din_i_reg_reg_n_0_[25] ;
  wire \fifo_din_i_reg_reg_n_0_[26] ;
  wire \fifo_din_i_reg_reg_n_0_[27] ;
  wire \fifo_din_i_reg_reg_n_0_[28] ;
  wire \fifo_din_i_reg_reg_n_0_[29] ;
  wire \fifo_din_i_reg_reg_n_0_[2] ;
  wire \fifo_din_i_reg_reg_n_0_[30] ;
  wire \fifo_din_i_reg_reg_n_0_[31] ;
  wire \fifo_din_i_reg_reg_n_0_[32] ;
  wire \fifo_din_i_reg_reg_n_0_[33] ;
  wire \fifo_din_i_reg_reg_n_0_[34] ;
  wire \fifo_din_i_reg_reg_n_0_[35] ;
  wire \fifo_din_i_reg_reg_n_0_[36] ;
  wire \fifo_din_i_reg_reg_n_0_[37] ;
  wire \fifo_din_i_reg_reg_n_0_[38] ;
  wire \fifo_din_i_reg_reg_n_0_[39] ;
  wire \fifo_din_i_reg_reg_n_0_[3] ;
  wire \fifo_din_i_reg_reg_n_0_[40] ;
  wire \fifo_din_i_reg_reg_n_0_[41] ;
  wire \fifo_din_i_reg_reg_n_0_[42] ;
  wire \fifo_din_i_reg_reg_n_0_[43] ;
  wire \fifo_din_i_reg_reg_n_0_[44] ;
  wire \fifo_din_i_reg_reg_n_0_[45] ;
  wire \fifo_din_i_reg_reg_n_0_[46] ;
  wire \fifo_din_i_reg_reg_n_0_[47] ;
  wire \fifo_din_i_reg_reg_n_0_[48] ;
  wire \fifo_din_i_reg_reg_n_0_[49] ;
  wire \fifo_din_i_reg_reg_n_0_[4] ;
  wire \fifo_din_i_reg_reg_n_0_[50] ;
  wire \fifo_din_i_reg_reg_n_0_[51] ;
  wire \fifo_din_i_reg_reg_n_0_[52] ;
  wire \fifo_din_i_reg_reg_n_0_[53] ;
  wire \fifo_din_i_reg_reg_n_0_[54] ;
  wire \fifo_din_i_reg_reg_n_0_[55] ;
  wire \fifo_din_i_reg_reg_n_0_[56] ;
  wire \fifo_din_i_reg_reg_n_0_[57] ;
  wire \fifo_din_i_reg_reg_n_0_[58] ;
  wire \fifo_din_i_reg_reg_n_0_[59] ;
  wire \fifo_din_i_reg_reg_n_0_[5] ;
  wire \fifo_din_i_reg_reg_n_0_[60] ;
  wire \fifo_din_i_reg_reg_n_0_[61] ;
  wire \fifo_din_i_reg_reg_n_0_[62] ;
  wire \fifo_din_i_reg_reg_n_0_[63] ;
  wire \fifo_din_i_reg_reg_n_0_[64] ;
  wire \fifo_din_i_reg_reg_n_0_[65] ;
  wire \fifo_din_i_reg_reg_n_0_[66] ;
  wire \fifo_din_i_reg_reg_n_0_[67] ;
  wire \fifo_din_i_reg_reg_n_0_[69] ;
  wire \fifo_din_i_reg_reg_n_0_[6] ;
  wire \fifo_din_i_reg_reg_n_0_[70] ;
  wire \fifo_din_i_reg_reg_n_0_[71] ;
  wire \fifo_din_i_reg_reg_n_0_[7] ;
  wire \fifo_din_i_reg_reg_n_0_[8] ;
  wire \fifo_din_i_reg_reg_n_0_[9] ;
  wire [70:0]fifo_dout_i;
  wire final_gater_for_fifo_din_lane1_i;
  wire gtwiz_userclk_rx_usrclk_out;
  wire hard_err_usr_reg;
  wire hold_reg;
  wire hold_reg_r;
  wire hold_reg_r_reg_0;
  wire in0;
  wire init_clk;
  wire link_reset_0;
  wire link_reset_1_c;
  wire master_do_rd_en;
  wire master_stop_prev_cb_r;
  wire master_stop_prev_cb_r_reg;
  wire new_do_wr_en;
  wire new_do_wr_en_i_1__0_n_0;
  wire new_underflow_flag_c;
  wire new_underflow_flag_c0;
  wire out;
  wire overflow_flag_c;
  wire p_0_in10_in;
  wire p_0_in1_in;
  wire p_0_in3_in;
  wire p_0_in9_in;
  wire [5:0]p_0_in__18;
  wire [4:0]p_0_in__19;
  wire [2:0]p_1_in__0;
  wire p_6_in;
  wire p_7_in;
  wire [66:0]raw_data_r;
  wire \raw_data_r_r_reg_n_0_[0] ;
  wire \raw_data_r_r_reg_n_0_[10] ;
  wire \raw_data_r_r_reg_n_0_[11] ;
  wire \raw_data_r_r_reg_n_0_[12] ;
  wire \raw_data_r_r_reg_n_0_[13] ;
  wire \raw_data_r_r_reg_n_0_[14] ;
  wire \raw_data_r_r_reg_n_0_[15] ;
  wire \raw_data_r_r_reg_n_0_[16] ;
  wire \raw_data_r_r_reg_n_0_[17] ;
  wire \raw_data_r_r_reg_n_0_[18] ;
  wire \raw_data_r_r_reg_n_0_[19] ;
  wire \raw_data_r_r_reg_n_0_[1] ;
  wire \raw_data_r_r_reg_n_0_[20] ;
  wire \raw_data_r_r_reg_n_0_[21] ;
  wire \raw_data_r_r_reg_n_0_[22] ;
  wire \raw_data_r_r_reg_n_0_[23] ;
  wire \raw_data_r_r_reg_n_0_[24] ;
  wire \raw_data_r_r_reg_n_0_[25] ;
  wire \raw_data_r_r_reg_n_0_[26] ;
  wire \raw_data_r_r_reg_n_0_[27] ;
  wire \raw_data_r_r_reg_n_0_[28] ;
  wire \raw_data_r_r_reg_n_0_[29] ;
  wire \raw_data_r_r_reg_n_0_[2] ;
  wire \raw_data_r_r_reg_n_0_[30] ;
  wire \raw_data_r_r_reg_n_0_[31] ;
  wire \raw_data_r_r_reg_n_0_[32] ;
  wire \raw_data_r_r_reg_n_0_[33] ;
  wire \raw_data_r_r_reg_n_0_[34] ;
  wire \raw_data_r_r_reg_n_0_[35] ;
  wire \raw_data_r_r_reg_n_0_[36] ;
  wire \raw_data_r_r_reg_n_0_[37] ;
  wire \raw_data_r_r_reg_n_0_[38] ;
  wire \raw_data_r_r_reg_n_0_[39] ;
  wire \raw_data_r_r_reg_n_0_[3] ;
  wire \raw_data_r_r_reg_n_0_[40] ;
  wire \raw_data_r_r_reg_n_0_[41] ;
  wire \raw_data_r_r_reg_n_0_[42] ;
  wire \raw_data_r_r_reg_n_0_[43] ;
  wire \raw_data_r_r_reg_n_0_[44] ;
  wire \raw_data_r_r_reg_n_0_[45] ;
  wire \raw_data_r_r_reg_n_0_[46] ;
  wire \raw_data_r_r_reg_n_0_[47] ;
  wire \raw_data_r_r_reg_n_0_[48] ;
  wire \raw_data_r_r_reg_n_0_[49] ;
  wire \raw_data_r_r_reg_n_0_[4] ;
  wire \raw_data_r_r_reg_n_0_[50] ;
  wire \raw_data_r_r_reg_n_0_[51] ;
  wire \raw_data_r_r_reg_n_0_[52] ;
  wire \raw_data_r_r_reg_n_0_[53] ;
  wire \raw_data_r_r_reg_n_0_[54] ;
  wire \raw_data_r_r_reg_n_0_[55] ;
  wire \raw_data_r_r_reg_n_0_[56] ;
  wire \raw_data_r_r_reg_n_0_[57] ;
  wire \raw_data_r_r_reg_n_0_[58] ;
  wire \raw_data_r_r_reg_n_0_[59] ;
  wire \raw_data_r_r_reg_n_0_[5] ;
  wire \raw_data_r_r_reg_n_0_[60] ;
  wire \raw_data_r_r_reg_n_0_[61] ;
  wire \raw_data_r_r_reg_n_0_[62] ;
  wire \raw_data_r_r_reg_n_0_[63] ;
  wire \raw_data_r_r_reg_n_0_[64] ;
  wire \raw_data_r_r_reg_n_0_[65] ;
  wire \raw_data_r_r_reg_n_0_[6] ;
  wire \raw_data_r_r_reg_n_0_[7] ;
  wire \raw_data_r_r_reg_n_0_[8] ;
  wire \raw_data_r_r_reg_n_0_[9] ;
  wire rd_err_c;
  wire rd_err_pre;
  wire [0:0]rd_err_q_reg_0;
  wire rx_header_err_i_2;
  wire rx_lossofsync_i_2;
  wire [0:0]rxbuferr_out_i;
  wire [1:1]rxbuferr_out_lane1_i;
  wire [0:0]rxbuferr_out_lane2_i;
  wire rxchanisaligned;
  wire [1:0]rxchanisaligned_reg;
  wire rxdatavalid_lookahead_i;
  wire rxdatavalid_to_fifo_lane1_i;
  wire s_level_out_d5_reg;
  wire sel;
  wire srst;
  wire start_cb_writes_lane1_i;
  wire start_cb_writes_lane2_i;
  wire u_cdc_rxlossofsync_in_n_0;
  wire u_rst_sync_btf_sync_n_0;
  wire underflow_flag_c;
  wire underflow_flag_r1;
  wire underflow_flag_r10;
  wire underflow_flag_r2;
  wire underflow_flag_r3;
  wire valid_btf_detect;
  wire valid_btf_detect_dlyd1;
  wire [4:0]valid_btf_detect_extend_r;
  wire valid_btf_detect_extend_r2;
  wire valid_btf_detect_extend_r20_n_0;
  wire [2:0]wait_for_rd_en;
  wire \wait_for_rd_en[2]_i_1__0_n_0 ;
  wire [5:0]wait_for_wr_en_reg;
  wire \wait_for_wr_en_wr3_reg[0]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[1]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[2]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[3]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[4]_srl3_n_0 ;
  wire \wait_for_wr_en_wr3_reg[5]_srl3_n_0 ;
  wire [5:0]wait_for_wr_en_wr4;
  wire wr_err_c;
  wire wr_err_rd_clk_pre;
  wire wr_err_rd_clk_sync_reg_0;
  wire wr_monitor_flag;
  wire [4:0]wr_monitor_flag_reg;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;
  wire NLW_SRLC32E_inst_4_Q31_UNCONNECTED;
  wire [7:7]\NLW_count_for_reset_r_reg[16]_i_1__0_CO_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ;
  wire \NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ;
  wire [71:67]\NLW_slave_fifo.data_fifo_dout_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h00EA)) 
    ANY_VLD_BTF_FLAG_i_1__0
       (.I0(any_vld_btf_lane1_i),
        .I1(p_7_in),
        .I2(p_0_in3_in),
        .I3(ANY_VLD_BTF_FLAG_i_3__0_n_0),
        .O(ANY_VLD_BTF_FLAG_i_1__0_n_0));
  LUT5 #(
    .INIT(32'h80000000)) 
    ANY_VLD_BTF_FLAG_i_2__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0),
        .O(p_7_in));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ANY_VLD_BTF_FLAG_i_3__0
       (.I0(ANY_VLD_BTF_FLAG_i_4__0_n_0),
        .I1(cbcc_fifo_reset_wr_clk),
        .I2(wait_for_wr_en_wr4[3]),
        .I3(wait_for_wr_en_wr4[1]),
        .O(ANY_VLD_BTF_FLAG_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    ANY_VLD_BTF_FLAG_i_4__0
       (.I0(wait_for_wr_en_wr4[2]),
        .I1(wait_for_wr_en_wr4[4]),
        .I2(wait_for_wr_en_wr4[5]),
        .I3(wait_for_wr_en_wr4[0]),
        .O(ANY_VLD_BTF_FLAG_i_4__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    ANY_VLD_BTF_FLAG_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(ANY_VLD_BTF_FLAG_i_1__0_n_0),
        .Q(any_vld_btf_lane1_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h00000002)) 
    CB_align_ver_i_1__0
       (.I0(CB_align_ver_i_2__0_n_0),
        .I1(CB_align_ver_i_3__0_n_0),
        .I2(Q[48]),
        .I3(Q[63]),
        .I4(Q[57]),
        .O(CB_align_ver0));
  LUT5 #(
    .INIT(32'h00000008)) 
    CB_align_ver_i_2__0
       (.I0(master_do_rd_en),
        .I1(Q[61]),
        .I2(Q[55]),
        .I3(Q[50]),
        .I4(CB_align_ver_i_4__0_n_0),
        .O(CB_align_ver_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    CB_align_ver_i_3__0
       (.I0(Q[56]),
        .I1(Q[58]),
        .I2(Q[52]),
        .I3(Q[54]),
        .I4(CB_align_ver_i_5__0_n_0),
        .O(CB_align_ver_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CB_align_ver_i_4__0
       (.I0(Q[65]),
        .I1(Q[64]),
        .I2(Q[62]),
        .I3(Q[51]),
        .O(CB_align_ver_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CB_align_ver_i_5__0
       (.I0(Q[59]),
        .I1(Q[53]),
        .I2(Q[60]),
        .I3(Q[49]),
        .O(CB_align_ver_i_5__0_n_0));
  FDRE CB_align_ver_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CB_align_ver0),
        .Q(CB_align_ver),
        .R(cbcc_reset_cbstg2_rd_clk));
  FDRE CB_detect_dlyd0p5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect0),
        .Q(CB_detect_dlyd0p5),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    CB_detect_dlyd1_i_1__0
       (.I0(CB_detect_dlyd1p0),
        .I1(CB_detect_dlyd0p5),
        .O(CB_detect_dlyd10));
  FDRE CB_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd10),
        .Q(CB_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_detect_dlyd1p0_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd0p5),
        .Q(CB_detect_dlyd1p0),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CB_flag_flopped_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CB_flag_direct),
        .Q(CB_flag_flopped),
        .R(1'b0));
  FDSE CC_RXLOSSOFSYNC_OUT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_0),
        .Q(rx_lossofsync_i_2),
        .S(cbcc_only_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT5 #(
    .INIT(32'h9F000000)) 
    CC_RX_HEADER_OUT_ERR_i_1__0
       (.I0(Q[64]),
        .I1(Q[65]),
        .I2(hold_reg_r),
        .I3(Q[66]),
        .I4(master_do_rd_en),
        .O(CC_RX_HEADER_OUT_ERR0));
  FDRE CC_RX_HEADER_OUT_ERR_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(CC_RX_HEADER_OUT_ERR0),
        .Q(rx_header_err_i_2),
        .R(1'b0));
  FDRE CC_detect_dlyd1_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(CC_detect_dlyd1),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE CC_detect_pulse_r_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(CC_detect_pulse_r),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    FINAL_GATER_FOR_FIFO_DIN_i_1__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(final_gater_for_fifo_din_lane1_i),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_2__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0),
        .I2(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0),
        .I3(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0),
        .I4(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0),
        .I5(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0),
        .O(FINAL_GATER_FOR_FIFO_DIN0));
  LUT2 #(
    .INIT(4'h8)) 
    FINAL_GATER_FOR_FIFO_DIN_i_3__0
       (.I0(p_0_in3_in),
        .I1(FINAL_GATER_FOR_FIFO_DIN_i_2__0_0),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h0008)) 
    FINAL_GATER_FOR_FIFO_DIN_i_4__0
       (.I0(p_0_in3_in),
        .I1(\raw_data_r_r_reg_n_0_[65] ),
        .I2(\raw_data_r_r_reg_n_0_[64] ),
        .I3(\raw_data_r_r_reg_n_0_[63] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    FINAL_GATER_FOR_FIFO_DIN_i_5__0
       (.I0(\raw_data_r_r_reg_n_0_[62] ),
        .I1(\raw_data_r_r_reg_n_0_[61] ),
        .I2(\raw_data_r_r_reg_n_0_[60] ),
        .I3(\raw_data_r_r_reg_n_0_[59] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FINAL_GATER_FOR_FIFO_DIN_i_6__0
       (.I0(\raw_data_r_r_reg_n_0_[58] ),
        .I1(\raw_data_r_r_reg_n_0_[57] ),
        .I2(\raw_data_r_r_reg_n_0_[56] ),
        .I3(\raw_data_r_r_reg_n_0_[55] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FINAL_GATER_FOR_FIFO_DIN_i_7__0
       (.I0(\raw_data_r_r_reg_n_0_[53] ),
        .I1(\raw_data_r_r_reg_n_0_[54] ),
        .I2(\raw_data_r_r_reg_n_0_[52] ),
        .I3(\raw_data_r_r_reg_n_0_[51] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_7__0_n_0));
  LUT3 #(
    .INIT(8'h01)) 
    FINAL_GATER_FOR_FIFO_DIN_i_8__0
       (.I0(\raw_data_r_r_reg_n_0_[50] ),
        .I1(\raw_data_r_r_reg_n_0_[49] ),
        .I2(\raw_data_r_r_reg_n_0_[48] ),
        .O(FINAL_GATER_FOR_FIFO_DIN_i_8__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FINAL_GATER_FOR_FIFO_DIN_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FINAL_GATER_FOR_FIFO_DIN_i_1__0_n_0),
        .Q(final_gater_for_fifo_din_lane1_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT5 #(
    .INIT(32'h0000E22E)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_1__0
       (.I0(bit_err_chan_bond_lane1_i),
        .I1(new_do_wr_en),
        .I2(FIRST_CB_BITERR_CB_RESET_OUT1__15),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_2__0
       (.I0(\fifo_din_i_reg_reg_n_0_[50] ),
        .I1(\fifo_din_i_reg_reg_n_0_[49] ),
        .I2(\fifo_din_i_reg_reg_n_0_[48] ),
        .I3(FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0),
        .I4(FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0),
        .I5(FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0),
        .O(FIRST_CB_BITERR_CB_RESET_OUT1__15));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT5 #(
    .INIT(32'hFFFDFFFF)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_3__0
       (.I0(wr_monitor_flag_reg[3]),
        .I1(wr_monitor_flag_reg[4]),
        .I2(wr_monitor_flag_reg[0]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_3__0_n_0));
  LUT6 #(
    .INIT(64'hFEFEFEFAFEFAFEFB)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_4__0
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk),
        .I1(wr_monitor_flag_reg[3]),
        .I2(wr_monitor_flag_reg[4]),
        .I3(wr_monitor_flag_reg[2]),
        .I4(wr_monitor_flag_reg[1]),
        .I5(wr_monitor_flag_reg[0]),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_5__0
       (.I0(\fifo_din_i_reg_reg_n_0_[53] ),
        .I1(\fifo_din_i_reg_reg_n_0_[54] ),
        .I2(\fifo_din_i_reg_reg_n_0_[52] ),
        .I3(\fifo_din_i_reg_reg_n_0_[51] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_6__0
       (.I0(\fifo_din_i_reg_reg_n_0_[58] ),
        .I1(\fifo_din_i_reg_reg_n_0_[57] ),
        .I2(\fifo_din_i_reg_reg_n_0_[56] ),
        .I3(\fifo_din_i_reg_reg_n_0_[55] ),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_6__0_n_0));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    FIRST_CB_BITERR_CB_RESET_OUT_i_7__0
       (.I0(\fifo_din_i_reg_reg_n_0_[59] ),
        .I1(\fifo_din_i_reg_reg_n_0_[60] ),
        .I2(\fifo_din_i_reg_reg_n_0_[61] ),
        .I3(\fifo_din_i_reg_reg_n_0_[62] ),
        .I4(\fifo_din_i_reg_reg_n_0_[63] ),
        .I5(p_0_in1_in),
        .O(FIRST_CB_BITERR_CB_RESET_OUT_i_7__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    FIRST_CB_BITERR_CB_RESET_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(FIRST_CB_BITERR_CB_RESET_OUT_i_1__0_n_0),
        .Q(bit_err_chan_bond_lane1_i),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hB8000000)) 
    \LINK_RESET[0]_i_1__0 
       (.I0(\LINK_RESET[0]_i_2__0_n_0 ),
        .I1(count_for_reset_r_reg[7]),
        .I2(\LINK_RESET[0]_i_3__0_n_0 ),
        .I3(\LINK_RESET[0]_i_4__0_n_0 ),
        .I4(\LINK_RESET[0]_i_5__0_n_0 ),
        .O(link_reset_0));
  LUT6 #(
    .INIT(64'h1FFFFFFFFFFFFFFF)) 
    \LINK_RESET[0]_i_2__0 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .I2(count_for_reset_r_reg[5]),
        .I3(count_for_reset_r_reg[6]),
        .I4(count_for_reset_r_reg[4]),
        .I5(count_for_reset_r_reg[3]),
        .O(\LINK_RESET[0]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \LINK_RESET[0]_i_3__0 
       (.I0(count_for_reset_r_reg[5]),
        .I1(count_for_reset_r_reg[6]),
        .I2(count_for_reset_r_reg[3]),
        .I3(count_for_reset_r_reg[4]),
        .I4(count_for_reset_r_reg[0]),
        .I5(\LINK_RESET[0]_i_6__0_n_0 ),
        .O(\LINK_RESET[0]_i_3__0_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \LINK_RESET[0]_i_4__0 
       (.I0(count_for_reset_r_reg[10]),
        .I1(count_for_reset_r_reg[11]),
        .I2(count_for_reset_r_reg[8]),
        .I3(count_for_reset_r_reg[9]),
        .I4(\LINK_RESET[0]_i_7__0_n_0 ),
        .O(\LINK_RESET[0]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_5__0 
       (.I0(count_for_reset_r_reg[20]),
        .I1(count_for_reset_r_reg[21]),
        .I2(count_for_reset_r_reg[18]),
        .I3(count_for_reset_r_reg[19]),
        .I4(count_for_reset_r_reg[23]),
        .I5(count_for_reset_r_reg[22]),
        .O(\LINK_RESET[0]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \LINK_RESET[0]_i_6__0 
       (.I0(count_for_reset_r_reg[1]),
        .I1(count_for_reset_r_reg[2]),
        .O(\LINK_RESET[0]_i_6__0_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \LINK_RESET[0]_i_7__0 
       (.I0(count_for_reset_r_reg[14]),
        .I1(count_for_reset_r_reg[15]),
        .I2(count_for_reset_r_reg[12]),
        .I3(count_for_reset_r_reg[13]),
        .I4(count_for_reset_r_reg[17]),
        .I5(count_for_reset_r_reg[16]),
        .O(\LINK_RESET[0]_i_7__0_n_0 ));
  FDRE \LINK_RESET_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(link_reset_0),
        .Q(link_reset_1_c),
        .R(1'b0));
  FDRE RXCHANISALIGNED_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rxchanisaligned),
        .Q(ch_bond_done_i),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \RX_DATA_REG[63]_i_1__0 
       (.I0(hold_reg_r),
        .O(hold_reg_r_reg_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d5_reg),
        .D(en_chan_sync_i),
        .Q(enchansync_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/SRLC32E_inst_4 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_4
       (.A({1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(rxdatavalid_to_fifo_lane1_i),
        .Q(rxdatavalid_lookahead_i),
        .Q31(NLW_SRLC32E_inst_4_Q31_UNCONNECTED));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT3 #(
    .INIT(8'h0E)) 
    START_CB_WRITES_OUT_i_1
       (.I0(start_cb_writes_lane1_i),
        .I1(START_CB_WRITES_OUT_reg_1),
        .I2(cbcc_fifo_reset_wr_clk),
        .O(START_CB_WRITES_OUT_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    START_CB_WRITES_OUT_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(START_CB_WRITES_OUT_i_1_n_0),
        .Q(start_cb_writes_lane1_i),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h8)) 
    all_start_cb_writes_out_i_1
       (.I0(start_cb_writes_lane1_i),
        .I1(start_cb_writes_lane2_i),
        .O(START_CB_WRITES_OUT_reg_0));
  LUT1 #(
    .INIT(2'h1)) 
    \count_for_reset_r[0]_i_3__0 
       (.I0(count_for_reset_r_reg[0]),
        .O(\count_for_reset_r[0]_i_3__0_n_0 ));
  FDRE \count_for_reset_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_15 ),
        .Q(count_for_reset_r_reg[0]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[0]_i_2__0 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[0]_i_2__0_n_0 ,\count_for_reset_r_reg[0]_i_2__0_n_1 ,\count_for_reset_r_reg[0]_i_2__0_n_2 ,\count_for_reset_r_reg[0]_i_2__0_n_3 ,\count_for_reset_r_reg[0]_i_2__0_n_4 ,\count_for_reset_r_reg[0]_i_2__0_n_5 ,\count_for_reset_r_reg[0]_i_2__0_n_6 ,\count_for_reset_r_reg[0]_i_2__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\count_for_reset_r_reg[0]_i_2__0_n_8 ,\count_for_reset_r_reg[0]_i_2__0_n_9 ,\count_for_reset_r_reg[0]_i_2__0_n_10 ,\count_for_reset_r_reg[0]_i_2__0_n_11 ,\count_for_reset_r_reg[0]_i_2__0_n_12 ,\count_for_reset_r_reg[0]_i_2__0_n_13 ,\count_for_reset_r_reg[0]_i_2__0_n_14 ,\count_for_reset_r_reg[0]_i_2__0_n_15 }),
        .S({count_for_reset_r_reg[7:1],\count_for_reset_r[0]_i_3__0_n_0 }));
  FDRE \count_for_reset_r_reg[10] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_13 ),
        .Q(count_for_reset_r_reg[10]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[11] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_12 ),
        .Q(count_for_reset_r_reg[11]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[12] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_11 ),
        .Q(count_for_reset_r_reg[12]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[13] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_10 ),
        .Q(count_for_reset_r_reg[13]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[14] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_9 ),
        .Q(count_for_reset_r_reg[14]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[15] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_8 ),
        .Q(count_for_reset_r_reg[15]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[16] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_15 ),
        .Q(count_for_reset_r_reg[16]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[16]_i_1__0 
       (.CI(\count_for_reset_r_reg[8]_i_1__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_count_for_reset_r_reg[16]_i_1__0_CO_UNCONNECTED [7],\count_for_reset_r_reg[16]_i_1__0_n_1 ,\count_for_reset_r_reg[16]_i_1__0_n_2 ,\count_for_reset_r_reg[16]_i_1__0_n_3 ,\count_for_reset_r_reg[16]_i_1__0_n_4 ,\count_for_reset_r_reg[16]_i_1__0_n_5 ,\count_for_reset_r_reg[16]_i_1__0_n_6 ,\count_for_reset_r_reg[16]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[16]_i_1__0_n_8 ,\count_for_reset_r_reg[16]_i_1__0_n_9 ,\count_for_reset_r_reg[16]_i_1__0_n_10 ,\count_for_reset_r_reg[16]_i_1__0_n_11 ,\count_for_reset_r_reg[16]_i_1__0_n_12 ,\count_for_reset_r_reg[16]_i_1__0_n_13 ,\count_for_reset_r_reg[16]_i_1__0_n_14 ,\count_for_reset_r_reg[16]_i_1__0_n_15 }),
        .S(count_for_reset_r_reg[23:16]));
  FDRE \count_for_reset_r_reg[17] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_14 ),
        .Q(count_for_reset_r_reg[17]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_13 ),
        .Q(count_for_reset_r_reg[18]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[19] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_12 ),
        .Q(count_for_reset_r_reg[19]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_14 ),
        .Q(count_for_reset_r_reg[1]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[20] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_11 ),
        .Q(count_for_reset_r_reg[20]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[21] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_10 ),
        .Q(count_for_reset_r_reg[21]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[22] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_9 ),
        .Q(count_for_reset_r_reg[22]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[23] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[16]_i_1__0_n_8 ),
        .Q(count_for_reset_r_reg[23]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_13 ),
        .Q(count_for_reset_r_reg[2]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_12 ),
        .Q(count_for_reset_r_reg[3]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[4] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_11 ),
        .Q(count_for_reset_r_reg[4]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[5] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_10 ),
        .Q(count_for_reset_r_reg[5]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[6] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_9 ),
        .Q(count_for_reset_r_reg[6]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[7] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[0]_i_2__0_n_8 ),
        .Q(count_for_reset_r_reg[7]),
        .R(\count_for_reset_r_reg[23]_0 ));
  FDRE \count_for_reset_r_reg[8] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_15 ),
        .Q(count_for_reset_r_reg[8]),
        .R(\count_for_reset_r_reg[23]_0 ));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \count_for_reset_r_reg[8]_i_1__0 
       (.CI(\count_for_reset_r_reg[0]_i_2__0_n_0 ),
        .CI_TOP(1'b0),
        .CO({\count_for_reset_r_reg[8]_i_1__0_n_0 ,\count_for_reset_r_reg[8]_i_1__0_n_1 ,\count_for_reset_r_reg[8]_i_1__0_n_2 ,\count_for_reset_r_reg[8]_i_1__0_n_3 ,\count_for_reset_r_reg[8]_i_1__0_n_4 ,\count_for_reset_r_reg[8]_i_1__0_n_5 ,\count_for_reset_r_reg[8]_i_1__0_n_6 ,\count_for_reset_r_reg[8]_i_1__0_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\count_for_reset_r_reg[8]_i_1__0_n_8 ,\count_for_reset_r_reg[8]_i_1__0_n_9 ,\count_for_reset_r_reg[8]_i_1__0_n_10 ,\count_for_reset_r_reg[8]_i_1__0_n_11 ,\count_for_reset_r_reg[8]_i_1__0_n_12 ,\count_for_reset_r_reg[8]_i_1__0_n_13 ,\count_for_reset_r_reg[8]_i_1__0_n_14 ,\count_for_reset_r_reg[8]_i_1__0_n_15 }),
        .S(count_for_reset_r_reg[15:8]));
  FDRE \count_for_reset_r_reg[9] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\count_for_reset_r_reg[8]_i_1__0_n_14 ),
        .Q(count_for_reset_r_reg[9]),
        .R(\count_for_reset_r_reg[23]_0 ));
  LUT3 #(
    .INIT(8'hBF)) 
    do_rd_en_i_1__0
       (.I0(cbcc_fifo_reset_rd_clk),
        .I1(wait_for_rd_en[2]),
        .I2(wait_for_rd_en[1]),
        .O(do_rd_en));
  FDRE #(
    .INIT(1'b0)) 
    do_rd_en_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c),
        .Q(do_rd_en_reg_n_0),
        .R(do_rd_en));
  LUT5 #(
    .INIT(32'h000C0008)) 
    do_wr_en_i_1__0
       (.I0(FINAL_GATER_FOR_FIFO_DIN0),
        .I1(raw_data_r[66]),
        .I2(overflow_flag_c),
        .I3(ANY_VLD_BTF_FLAG_i_3__0_n_0),
        .I4(final_gater_for_fifo_din_lane1_i),
        .O(do_wr_en_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(do_wr_en_i_1__0_n_0),
        .Q(do_wr_en),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h1)) 
    \fifo_din_i_reg[71]_i_1__0 
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .O(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[0] ),
        .Q(\fifo_din_i_reg_reg_n_0_[0] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[10] ),
        .Q(\fifo_din_i_reg_reg_n_0_[10] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[11] ),
        .Q(\fifo_din_i_reg_reg_n_0_[11] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[12] ),
        .Q(\fifo_din_i_reg_reg_n_0_[12] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[13] ),
        .Q(\fifo_din_i_reg_reg_n_0_[13] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[14] ),
        .Q(\fifo_din_i_reg_reg_n_0_[14] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[15] ),
        .Q(\fifo_din_i_reg_reg_n_0_[15] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[16] ),
        .Q(\fifo_din_i_reg_reg_n_0_[16] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[17] ),
        .Q(\fifo_din_i_reg_reg_n_0_[17] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[18] ),
        .Q(\fifo_din_i_reg_reg_n_0_[18] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[19] ),
        .Q(\fifo_din_i_reg_reg_n_0_[19] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[1] ),
        .Q(\fifo_din_i_reg_reg_n_0_[1] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[20] ),
        .Q(\fifo_din_i_reg_reg_n_0_[20] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[21] ),
        .Q(\fifo_din_i_reg_reg_n_0_[21] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[22] ),
        .Q(\fifo_din_i_reg_reg_n_0_[22] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[23] ),
        .Q(\fifo_din_i_reg_reg_n_0_[23] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[24] ),
        .Q(\fifo_din_i_reg_reg_n_0_[24] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[25] ),
        .Q(\fifo_din_i_reg_reg_n_0_[25] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[26] ),
        .Q(\fifo_din_i_reg_reg_n_0_[26] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[27] ),
        .Q(\fifo_din_i_reg_reg_n_0_[27] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[28] ),
        .Q(\fifo_din_i_reg_reg_n_0_[28] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[29] ),
        .Q(\fifo_din_i_reg_reg_n_0_[29] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[2] ),
        .Q(\fifo_din_i_reg_reg_n_0_[2] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[30] ),
        .Q(\fifo_din_i_reg_reg_n_0_[30] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[31] ),
        .Q(\fifo_din_i_reg_reg_n_0_[31] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[32] ),
        .Q(\fifo_din_i_reg_reg_n_0_[32] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[33] ),
        .Q(\fifo_din_i_reg_reg_n_0_[33] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[34] ),
        .Q(\fifo_din_i_reg_reg_n_0_[34] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[35] ),
        .Q(\fifo_din_i_reg_reg_n_0_[35] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[36] ),
        .Q(\fifo_din_i_reg_reg_n_0_[36] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[37] ),
        .Q(\fifo_din_i_reg_reg_n_0_[37] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[38] ),
        .Q(\fifo_din_i_reg_reg_n_0_[38] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[39] ),
        .Q(\fifo_din_i_reg_reg_n_0_[39] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[3] ),
        .Q(\fifo_din_i_reg_reg_n_0_[3] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[40] ),
        .Q(\fifo_din_i_reg_reg_n_0_[40] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[41] ),
        .Q(\fifo_din_i_reg_reg_n_0_[41] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[42] ),
        .Q(\fifo_din_i_reg_reg_n_0_[42] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[43] ),
        .Q(\fifo_din_i_reg_reg_n_0_[43] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[44] ),
        .Q(\fifo_din_i_reg_reg_n_0_[44] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[45] ),
        .Q(\fifo_din_i_reg_reg_n_0_[45] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[46] ),
        .Q(\fifo_din_i_reg_reg_n_0_[46] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[47] ),
        .Q(\fifo_din_i_reg_reg_n_0_[47] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[48] ),
        .Q(\fifo_din_i_reg_reg_n_0_[48] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[49] ),
        .Q(\fifo_din_i_reg_reg_n_0_[49] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[4] ),
        .Q(\fifo_din_i_reg_reg_n_0_[4] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[50] ),
        .Q(\fifo_din_i_reg_reg_n_0_[50] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[51] ),
        .Q(\fifo_din_i_reg_reg_n_0_[51] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[52] ),
        .Q(\fifo_din_i_reg_reg_n_0_[52] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[53] ),
        .Q(\fifo_din_i_reg_reg_n_0_[53] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[54] ),
        .Q(\fifo_din_i_reg_reg_n_0_[54] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[55] ),
        .Q(\fifo_din_i_reg_reg_n_0_[55] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[56] ),
        .Q(\fifo_din_i_reg_reg_n_0_[56] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[57] ),
        .Q(\fifo_din_i_reg_reg_n_0_[57] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[58] ),
        .Q(\fifo_din_i_reg_reg_n_0_[58] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[59] ),
        .Q(\fifo_din_i_reg_reg_n_0_[59] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[5] ),
        .Q(\fifo_din_i_reg_reg_n_0_[5] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[60] ),
        .Q(\fifo_din_i_reg_reg_n_0_[60] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[61] ),
        .Q(\fifo_din_i_reg_reg_n_0_[61] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[62] ),
        .Q(\fifo_din_i_reg_reg_n_0_[62] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[63] ),
        .Q(\fifo_din_i_reg_reg_n_0_[63] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[64] ),
        .Q(\fifo_din_i_reg_reg_n_0_[64] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[65] ),
        .Q(\fifo_din_i_reg_reg_n_0_[65] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lookahead_i),
        .Q(\fifo_din_i_reg_reg_n_0_[66] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[67] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_r),
        .Q(\fifo_din_i_reg_reg_n_0_[67] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[68] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in1_in),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[69] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect_dlyd1),
        .Q(\fifo_din_i_reg_reg_n_0_[69] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[6] ),
        .Q(\fifo_din_i_reg_reg_n_0_[6] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[70] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CB_detect),
        .Q(\fifo_din_i_reg_reg_n_0_[70] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[71] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(CC_detect_pulse_i),
        .Q(\fifo_din_i_reg_reg_n_0_[71] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[7] ),
        .Q(\fifo_din_i_reg_reg_n_0_[7] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[8] ),
        .Q(\fifo_din_i_reg_reg_n_0_[8] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_din_i_reg_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\raw_data_r_r_reg_n_0_[9] ),
        .Q(\fifo_din_i_reg_reg_n_0_[9] ),
        .R(\fifo_din_i_reg[71]_i_1__0_n_0 ));
  FDRE \fifo_dout_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \fifo_dout_reg[10] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \fifo_dout_reg[11] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \fifo_dout_reg[12] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \fifo_dout_reg[13] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \fifo_dout_reg[14] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \fifo_dout_reg[15] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \fifo_dout_reg[16] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \fifo_dout_reg[17] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \fifo_dout_reg[18] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \fifo_dout_reg[19] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \fifo_dout_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \fifo_dout_reg[20] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \fifo_dout_reg[21] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \fifo_dout_reg[22] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \fifo_dout_reg[23] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \fifo_dout_reg[24] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \fifo_dout_reg[25] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \fifo_dout_reg[26] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \fifo_dout_reg[27] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \fifo_dout_reg[28] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \fifo_dout_reg[29] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \fifo_dout_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \fifo_dout_reg[30] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \fifo_dout_reg[31] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \fifo_dout_reg[32] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[32]),
        .Q(Q[32]),
        .R(1'b0));
  FDRE \fifo_dout_reg[33] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[33]),
        .Q(Q[33]),
        .R(1'b0));
  FDRE \fifo_dout_reg[34] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[34]),
        .Q(Q[34]),
        .R(1'b0));
  FDRE \fifo_dout_reg[35] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[35]),
        .Q(Q[35]),
        .R(1'b0));
  FDRE \fifo_dout_reg[36] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[36]),
        .Q(Q[36]),
        .R(1'b0));
  FDRE \fifo_dout_reg[37] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[37]),
        .Q(Q[37]),
        .R(1'b0));
  FDRE \fifo_dout_reg[38] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[38]),
        .Q(Q[38]),
        .R(1'b0));
  FDRE \fifo_dout_reg[39] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[39]),
        .Q(Q[39]),
        .R(1'b0));
  FDRE \fifo_dout_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \fifo_dout_reg[40] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[40]),
        .Q(Q[40]),
        .R(1'b0));
  FDRE \fifo_dout_reg[41] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[41]),
        .Q(Q[41]),
        .R(1'b0));
  FDRE \fifo_dout_reg[42] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[42]),
        .Q(Q[42]),
        .R(1'b0));
  FDRE \fifo_dout_reg[43] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[43]),
        .Q(Q[43]),
        .R(1'b0));
  FDRE \fifo_dout_reg[44] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[44]),
        .Q(Q[44]),
        .R(1'b0));
  FDRE \fifo_dout_reg[45] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[45]),
        .Q(Q[45]),
        .R(1'b0));
  FDRE \fifo_dout_reg[46] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[46]),
        .Q(Q[46]),
        .R(1'b0));
  FDRE \fifo_dout_reg[47] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[47]),
        .Q(Q[47]),
        .R(1'b0));
  FDRE \fifo_dout_reg[48] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[48]),
        .Q(Q[48]),
        .R(1'b0));
  FDRE \fifo_dout_reg[49] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[49]),
        .Q(Q[49]),
        .R(1'b0));
  FDRE \fifo_dout_reg[4] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \fifo_dout_reg[50] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[50]),
        .Q(Q[50]),
        .R(1'b0));
  FDRE \fifo_dout_reg[51] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[51]),
        .Q(Q[51]),
        .R(1'b0));
  FDRE \fifo_dout_reg[52] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[52]),
        .Q(Q[52]),
        .R(1'b0));
  FDRE \fifo_dout_reg[53] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[53]),
        .Q(Q[53]),
        .R(1'b0));
  FDRE \fifo_dout_reg[54] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[54]),
        .Q(Q[54]),
        .R(1'b0));
  FDRE \fifo_dout_reg[55] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[55]),
        .Q(Q[55]),
        .R(1'b0));
  FDRE \fifo_dout_reg[56] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[56]),
        .Q(Q[56]),
        .R(1'b0));
  FDRE \fifo_dout_reg[57] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[57]),
        .Q(Q[57]),
        .R(1'b0));
  FDRE \fifo_dout_reg[58] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[58]),
        .Q(Q[58]),
        .R(1'b0));
  FDRE \fifo_dout_reg[59] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[59]),
        .Q(Q[59]),
        .R(1'b0));
  FDRE \fifo_dout_reg[5] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \fifo_dout_reg[60] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[60]),
        .Q(Q[60]),
        .R(1'b0));
  FDRE \fifo_dout_reg[61] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[61]),
        .Q(Q[61]),
        .R(1'b0));
  FDRE \fifo_dout_reg[62] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[62]),
        .Q(Q[62]),
        .R(1'b0));
  FDRE \fifo_dout_reg[63] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[63]),
        .Q(Q[63]),
        .R(1'b0));
  FDRE \fifo_dout_reg[64] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[64]),
        .Q(Q[64]),
        .R(1'b0));
  FDRE \fifo_dout_reg[65] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[65]),
        .Q(Q[65]),
        .R(1'b0));
  FDRE \fifo_dout_reg[66] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[66]),
        .Q(p_0_in9_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[68] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[68]),
        .Q(Q[66]),
        .R(1'b0));
  FDRE \fifo_dout_reg[69] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[69]),
        .Q(p_0_in10_in),
        .R(1'b0));
  FDRE \fifo_dout_reg[6] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \fifo_dout_reg[70] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[70]),
        .Q(Q[67]),
        .R(1'b0));
  FDRE \fifo_dout_reg[7] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \fifo_dout_reg[8] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \fifo_dout_reg[9] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(fifo_dout_i[9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h0001)) 
    hard_err_usr_i_3
       (.I0(rxbuferr_out_lane1_i),
        .I1(rxbuferr_out_lane2_i),
        .I2(rxbuferr_out_i),
        .I3(hard_err_usr_reg),
        .O(wr_err_rd_clk_sync_reg_0));
  FDRE hold_reg_r_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_reg_n_0),
        .D(hold_reg),
        .Q(hold_reg_r),
        .R(cbcc_only_reset_rd_clk));
  FDRE hold_reg_reg
       (.C(s_level_out_d5_reg),
        .CE(do_rd_en_reg_n_0),
        .D(do_rd_en_reg_n_0),
        .Q(hold_reg),
        .R(cbcc_only_reset_rd_clk));
  LUT3 #(
    .INIT(8'h0E)) 
    new_do_wr_en_i_1__0
       (.I0(do_wr_en),
        .I1(FINAL_GATER_FOR_FIFO_DIN0),
        .I2(ANY_VLD_BTF_FLAG_i_3__0_n_0),
        .O(new_do_wr_en_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    new_do_wr_en_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(new_do_wr_en_i_1__0_n_0),
        .Q(new_do_wr_en),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h57)) 
    new_underflow_flag_c_inv_i_1__0
       (.I0(underflow_flag_r3),
        .I1(buffer_too_empty_c),
        .I2(underflow_flag_c),
        .O(new_underflow_flag_c0));
  (* inverted = "yes" *) 
  FDRE new_underflow_flag_c_reg_inv
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(new_underflow_flag_c0),
        .Q(new_underflow_flag_c),
        .R(cbcc_fifo_reset_rd_clk));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[0]),
        .Q(\raw_data_r_r_reg_n_0_[0] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[10]),
        .Q(\raw_data_r_r_reg_n_0_[10] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[11]),
        .Q(\raw_data_r_r_reg_n_0_[11] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[12]),
        .Q(\raw_data_r_r_reg_n_0_[12] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[13]),
        .Q(\raw_data_r_r_reg_n_0_[13] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[14]),
        .Q(\raw_data_r_r_reg_n_0_[14] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[15]),
        .Q(\raw_data_r_r_reg_n_0_[15] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[16]),
        .Q(\raw_data_r_r_reg_n_0_[16] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[17]),
        .Q(\raw_data_r_r_reg_n_0_[17] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[18]),
        .Q(\raw_data_r_r_reg_n_0_[18] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[19]),
        .Q(\raw_data_r_r_reg_n_0_[19] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[1]),
        .Q(\raw_data_r_r_reg_n_0_[1] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[20]),
        .Q(\raw_data_r_r_reg_n_0_[20] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[21]),
        .Q(\raw_data_r_r_reg_n_0_[21] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[22]),
        .Q(\raw_data_r_r_reg_n_0_[22] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[23]),
        .Q(\raw_data_r_r_reg_n_0_[23] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[24]),
        .Q(\raw_data_r_r_reg_n_0_[24] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[25]),
        .Q(\raw_data_r_r_reg_n_0_[25] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[26]),
        .Q(\raw_data_r_r_reg_n_0_[26] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[27]),
        .Q(\raw_data_r_r_reg_n_0_[27] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[28]),
        .Q(\raw_data_r_r_reg_n_0_[28] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[29]),
        .Q(\raw_data_r_r_reg_n_0_[29] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[2]),
        .Q(\raw_data_r_r_reg_n_0_[2] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[30]),
        .Q(\raw_data_r_r_reg_n_0_[30] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[31]),
        .Q(\raw_data_r_r_reg_n_0_[31] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[32]),
        .Q(\raw_data_r_r_reg_n_0_[32] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[33]),
        .Q(\raw_data_r_r_reg_n_0_[33] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[34]),
        .Q(\raw_data_r_r_reg_n_0_[34] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[35]),
        .Q(\raw_data_r_r_reg_n_0_[35] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[36]),
        .Q(\raw_data_r_r_reg_n_0_[36] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[37]),
        .Q(\raw_data_r_r_reg_n_0_[37] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[38]),
        .Q(\raw_data_r_r_reg_n_0_[38] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[39]),
        .Q(\raw_data_r_r_reg_n_0_[39] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[3]),
        .Q(\raw_data_r_r_reg_n_0_[3] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[40]),
        .Q(\raw_data_r_r_reg_n_0_[40] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[41]),
        .Q(\raw_data_r_r_reg_n_0_[41] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[42]),
        .Q(\raw_data_r_r_reg_n_0_[42] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[43]),
        .Q(\raw_data_r_r_reg_n_0_[43] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[44]),
        .Q(\raw_data_r_r_reg_n_0_[44] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[45]),
        .Q(\raw_data_r_r_reg_n_0_[45] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[46]),
        .Q(\raw_data_r_r_reg_n_0_[46] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[47]),
        .Q(\raw_data_r_r_reg_n_0_[47] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[48]),
        .Q(\raw_data_r_r_reg_n_0_[48] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[49]),
        .Q(\raw_data_r_r_reg_n_0_[49] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[4]),
        .Q(\raw_data_r_r_reg_n_0_[4] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[50]),
        .Q(\raw_data_r_r_reg_n_0_[50] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[51]),
        .Q(\raw_data_r_r_reg_n_0_[51] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[52]),
        .Q(\raw_data_r_r_reg_n_0_[52] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[53]),
        .Q(\raw_data_r_r_reg_n_0_[53] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[54]),
        .Q(\raw_data_r_r_reg_n_0_[54] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[55]),
        .Q(\raw_data_r_r_reg_n_0_[55] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[56]),
        .Q(\raw_data_r_r_reg_n_0_[56] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[57]),
        .Q(\raw_data_r_r_reg_n_0_[57] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[58]),
        .Q(\raw_data_r_r_reg_n_0_[58] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[59]),
        .Q(\raw_data_r_r_reg_n_0_[59] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[5]),
        .Q(\raw_data_r_r_reg_n_0_[5] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[60]),
        .Q(\raw_data_r_r_reg_n_0_[60] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[61]),
        .Q(\raw_data_r_r_reg_n_0_[61] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[62]),
        .Q(\raw_data_r_r_reg_n_0_[62] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[63]),
        .Q(\raw_data_r_r_reg_n_0_[63] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[64]),
        .Q(\raw_data_r_r_reg_n_0_[64] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[65]),
        .Q(\raw_data_r_r_reg_n_0_[65] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[66]),
        .Q(p_0_in3_in),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[6]),
        .Q(\raw_data_r_r_reg_n_0_[6] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[7]),
        .Q(\raw_data_r_r_reg_n_0_[7] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[8]),
        .Q(\raw_data_r_r_reg_n_0_[8] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(raw_data_r[9]),
        .Q(\raw_data_r_r_reg_n_0_[9] ),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[0]),
        .Q(raw_data_r[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[10]),
        .Q(raw_data_r[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[11]),
        .Q(raw_data_r[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[12]),
        .Q(raw_data_r[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[13]),
        .Q(raw_data_r[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[14]),
        .Q(raw_data_r[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[15]),
        .Q(raw_data_r[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[16]),
        .Q(raw_data_r[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[17]),
        .Q(raw_data_r[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[18]),
        .Q(raw_data_r[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[19]),
        .Q(raw_data_r[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[1]),
        .Q(raw_data_r[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[20]),
        .Q(raw_data_r[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[21]),
        .Q(raw_data_r[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[22]),
        .Q(raw_data_r[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[23]),
        .Q(raw_data_r[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[24]),
        .Q(raw_data_r[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[25]),
        .Q(raw_data_r[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[26]),
        .Q(raw_data_r[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[27]),
        .Q(raw_data_r[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[28]),
        .Q(raw_data_r[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[29]),
        .Q(raw_data_r[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[2]),
        .Q(raw_data_r[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[30]),
        .Q(raw_data_r[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[31]),
        .Q(raw_data_r[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[32]),
        .Q(raw_data_r[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[33]),
        .Q(raw_data_r[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[34]),
        .Q(raw_data_r[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[35]),
        .Q(raw_data_r[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[36]),
        .Q(raw_data_r[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[37]),
        .Q(raw_data_r[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[38]),
        .Q(raw_data_r[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[39]),
        .Q(raw_data_r[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[3]),
        .Q(raw_data_r[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[40]),
        .Q(raw_data_r[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[41]),
        .Q(raw_data_r[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[42]),
        .Q(raw_data_r[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[43]),
        .Q(raw_data_r[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[44]),
        .Q(raw_data_r[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[45]),
        .Q(raw_data_r[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[46]),
        .Q(raw_data_r[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[47]),
        .Q(raw_data_r[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[48]),
        .Q(raw_data_r[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[49]),
        .Q(raw_data_r[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[4]),
        .Q(raw_data_r[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[50]),
        .Q(raw_data_r[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[51]),
        .Q(raw_data_r[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[52]),
        .Q(raw_data_r[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[53]),
        .Q(raw_data_r[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[54]),
        .Q(raw_data_r[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[55]),
        .Q(raw_data_r[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[56]),
        .Q(raw_data_r[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[57]),
        .Q(raw_data_r[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[58]),
        .Q(raw_data_r[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[59]),
        .Q(raw_data_r[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[5]),
        .Q(raw_data_r[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[60]),
        .Q(raw_data_r[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[61]),
        .Q(raw_data_r[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[62]),
        .Q(raw_data_r[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[63]),
        .Q(raw_data_r[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[64] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[64]),
        .Q(raw_data_r[64]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[65] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[65]),
        .Q(raw_data_r[65]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[66] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_to_fifo_lane1_i),
        .Q(raw_data_r[66]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[6]),
        .Q(raw_data_r[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[7]),
        .Q(raw_data_r[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[8]),
        .Q(raw_data_r[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \raw_data_r_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(D[9]),
        .Q(raw_data_r[9]),
        .R(1'b0));
  FDRE rd_err_pre_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_c),
        .Q(rd_err_pre),
        .R(do_rd_en));
  FDRE rd_err_q_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(rd_err_pre),
        .Q(rd_err_q_reg_0),
        .R(do_rd_en));
  board_aurora_64b66b_0_2_CH_BOND_SLAVE_50 \slave.slave 
       (.CB_align_ver(CB_align_ver),
        .CB_av_s_r_reg_0(enchansync_dlyd_i),
        .CB_flag_flopped(CB_flag_flopped),
        .Q({Q[67],p_0_in10_in,Q[66],p_0_in9_in}),
        .\cb_rxdatavalid_cnt_reg[1]_0 (\cb_rxdatavalid_cnt_reg[1] ),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .do_rd_en_lane1_i_inferred_i_1_0(do_rd_en_reg_n_0),
        .do_rd_en_reg(do_rd_en_lane1_i),
        .empty(underflow_flag_c),
        .hold_rd_ptr_reg_0(s_level_out_d5_reg),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(master_stop_prev_cb_r),
        .master_stop_prev_cb_r_reg_0(master_stop_prev_cb_r_reg),
        .rxchanisaligned(rxchanisaligned),
        .rxchanisaligned_reg_0(rxchanisaligned_reg));
  (* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
  board_aurora_64b66b_0_2_fifo_gen_slave__xdcDup__2 \slave_fifo.data_fifo 
       (.din({\fifo_din_i_reg_reg_n_0_[71] ,\fifo_din_i_reg_reg_n_0_[70] ,\fifo_din_i_reg_reg_n_0_[69] ,p_0_in1_in,\fifo_din_i_reg_reg_n_0_[67] ,\fifo_din_i_reg_reg_n_0_[66] ,\fifo_din_i_reg_reg_n_0_[65] ,\fifo_din_i_reg_reg_n_0_[64] ,\fifo_din_i_reg_reg_n_0_[63] ,\fifo_din_i_reg_reg_n_0_[62] ,\fifo_din_i_reg_reg_n_0_[61] ,\fifo_din_i_reg_reg_n_0_[60] ,\fifo_din_i_reg_reg_n_0_[59] ,\fifo_din_i_reg_reg_n_0_[58] ,\fifo_din_i_reg_reg_n_0_[57] ,\fifo_din_i_reg_reg_n_0_[56] ,\fifo_din_i_reg_reg_n_0_[55] ,\fifo_din_i_reg_reg_n_0_[54] ,\fifo_din_i_reg_reg_n_0_[53] ,\fifo_din_i_reg_reg_n_0_[52] ,\fifo_din_i_reg_reg_n_0_[51] ,\fifo_din_i_reg_reg_n_0_[50] ,\fifo_din_i_reg_reg_n_0_[49] ,\fifo_din_i_reg_reg_n_0_[48] ,\fifo_din_i_reg_reg_n_0_[47] ,\fifo_din_i_reg_reg_n_0_[46] ,\fifo_din_i_reg_reg_n_0_[45] ,\fifo_din_i_reg_reg_n_0_[44] ,\fifo_din_i_reg_reg_n_0_[43] ,\fifo_din_i_reg_reg_n_0_[42] ,\fifo_din_i_reg_reg_n_0_[41] ,\fifo_din_i_reg_reg_n_0_[40] ,\fifo_din_i_reg_reg_n_0_[39] ,\fifo_din_i_reg_reg_n_0_[38] ,\fifo_din_i_reg_reg_n_0_[37] ,\fifo_din_i_reg_reg_n_0_[36] ,\fifo_din_i_reg_reg_n_0_[35] ,\fifo_din_i_reg_reg_n_0_[34] ,\fifo_din_i_reg_reg_n_0_[33] ,\fifo_din_i_reg_reg_n_0_[32] ,\fifo_din_i_reg_reg_n_0_[31] ,\fifo_din_i_reg_reg_n_0_[30] ,\fifo_din_i_reg_reg_n_0_[29] ,\fifo_din_i_reg_reg_n_0_[28] ,\fifo_din_i_reg_reg_n_0_[27] ,\fifo_din_i_reg_reg_n_0_[26] ,\fifo_din_i_reg_reg_n_0_[25] ,\fifo_din_i_reg_reg_n_0_[24] ,\fifo_din_i_reg_reg_n_0_[23] ,\fifo_din_i_reg_reg_n_0_[22] ,\fifo_din_i_reg_reg_n_0_[21] ,\fifo_din_i_reg_reg_n_0_[20] ,\fifo_din_i_reg_reg_n_0_[19] ,\fifo_din_i_reg_reg_n_0_[18] ,\fifo_din_i_reg_reg_n_0_[17] ,\fifo_din_i_reg_reg_n_0_[16] ,\fifo_din_i_reg_reg_n_0_[15] ,\fifo_din_i_reg_reg_n_0_[14] ,\fifo_din_i_reg_reg_n_0_[13] ,\fifo_din_i_reg_reg_n_0_[12] ,\fifo_din_i_reg_reg_n_0_[11] ,\fifo_din_i_reg_reg_n_0_[10] ,\fifo_din_i_reg_reg_n_0_[9] ,\fifo_din_i_reg_reg_n_0_[8] ,\fifo_din_i_reg_reg_n_0_[7] ,\fifo_din_i_reg_reg_n_0_[6] ,\fifo_din_i_reg_reg_n_0_[5] ,\fifo_din_i_reg_reg_n_0_[4] ,\fifo_din_i_reg_reg_n_0_[3] ,\fifo_din_i_reg_reg_n_0_[2] ,\fifo_din_i_reg_reg_n_0_[1] ,\fifo_din_i_reg_reg_n_0_[0] }),
        .dout({\NLW_slave_fifo.data_fifo_dout_UNCONNECTED [71],fifo_dout_i}),
        .empty(underflow_flag_c),
        .full(overflow_flag_c),
        .overflow(wr_err_c),
        .prog_empty(buffer_too_empty_c),
        .prog_full(\NLW_slave_fifo.data_fifo_prog_full_UNCONNECTED ),
        .rd_clk(s_level_out_d5_reg),
        .rd_en(out),
        .rd_rst_busy(\NLW_slave_fifo.data_fifo_rd_rst_busy_UNCONNECTED ),
        .srst(srst),
        .underflow(rd_err_c),
        .wr_clk(gtwiz_userclk_rx_usrclk_out),
        .wr_en(new_do_wr_en),
        .wr_rst_busy(\NLW_slave_fifo.data_fifo_wr_rst_busy_UNCONNECTED ));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_51 u_cdc_overflow_flag_c
       (.cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .full(overflow_flag_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_52 u_cdc_rxlossofsync_in
       (.in0(in0),
        .s_level_out_d5_reg_0(u_cdc_rxlossofsync_in_n_0),
        .s_level_out_d5_reg_1(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized3_53 u_cdc_wr_err_rd_clk
       (.cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .out(wr_err_rd_clk_pre),
        .overflow(wr_err_c),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_54 u_rst_sync_btf_sync
       (.in0(valid_btf_detect_extend_r2),
        .init_clk(init_clk),
        .stg3_reg_0(u_rst_sync_btf_sync_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    underflow_flag_r1_i_1__0
       (.I0(buffer_too_empty_c),
        .I1(underflow_flag_c),
        .O(underflow_flag_r10));
  FDSE underflow_flag_r1_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r10),
        .Q(underflow_flag_r1),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r2_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r1),
        .Q(underflow_flag_r2),
        .S(cbcc_fifo_reset_rd_clk));
  FDSE underflow_flag_r3_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(underflow_flag_r2),
        .Q(underflow_flag_r3),
        .S(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    valid_btf_detect_dlyd1_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_rst_sync_btf_sync_n_0),
        .Q(valid_btf_detect_dlyd1),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    valid_btf_detect_extend_r20
       (.I0(valid_btf_detect_extend_r[0]),
        .I1(valid_btf_detect_extend_r[3]),
        .I2(valid_btf_detect_extend_r[4]),
        .I3(valid_btf_detect_extend_r[1]),
        .I4(valid_btf_detect_extend_r[2]),
        .O(valid_btf_detect_extend_r20_n_0));
  FDRE valid_btf_detect_extend_r2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r20_n_0),
        .Q(valid_btf_detect_extend_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[1]),
        .Q(valid_btf_detect_extend_r[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[2]),
        .Q(valid_btf_detect_extend_r[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[3]),
        .Q(valid_btf_detect_extend_r[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect_extend_r[4]),
        .Q(valid_btf_detect_extend_r[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \valid_btf_detect_extend_r_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(valid_btf_detect),
        .Q(valid_btf_detect_extend_r[4]),
        .R(SR));
  (* shift_extract = "{no}" *) 
  FDRE valid_btf_detect_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_6_in),
        .Q(valid_btf_detect),
        .R(1'b0));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_rd_en[0]_i_1 
       (.I0(wait_for_rd_en[0]),
        .O(p_1_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_rd_en[1]_i_1 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .O(p_1_in__0[1]));
  LUT2 #(
    .INIT(4'h7)) 
    \wait_for_rd_en[2]_i_1__0 
       (.I0(wait_for_rd_en[1]),
        .I1(wait_for_rd_en[2]),
        .O(\wait_for_rd_en[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_rd_en[2]_i_2 
       (.I0(wait_for_rd_en[0]),
        .I1(wait_for_rd_en[1]),
        .I2(wait_for_rd_en[2]),
        .O(p_1_in__0[2]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[0]),
        .Q(wait_for_rd_en[0]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[1]),
        .Q(wait_for_rd_en[1]),
        .R(cbcc_fifo_reset_rd_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_rd_en_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(\wait_for_rd_en[2]_i_1__0_n_0 ),
        .D(p_1_in__0[2]),
        .Q(wait_for_rd_en[2]),
        .R(cbcc_fifo_reset_rd_clk));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[0]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .O(p_0_in__18[0]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wait_for_wr_en[1]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .O(p_0_in__18[1]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wait_for_wr_en[2]_i_1__0 
       (.I0(wait_for_wr_en_reg[0]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[2]),
        .O(p_0_in__18[2]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wait_for_wr_en[3]_i_1__0 
       (.I0(wait_for_wr_en_reg[1]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[2]),
        .I3(wait_for_wr_en_reg[3]),
        .O(p_0_in__18[3]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wait_for_wr_en[4]_i_1__0 
       (.I0(wait_for_wr_en_reg[2]),
        .I1(wait_for_wr_en_reg[0]),
        .I2(wait_for_wr_en_reg[1]),
        .I3(wait_for_wr_en_reg[3]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__18[4]));
  LUT1 #(
    .INIT(2'h1)) 
    \wait_for_wr_en[5]_i_1__0 
       (.I0(wait_for_wr_en_reg[5]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \wait_for_wr_en[5]_i_2__0 
       (.I0(wait_for_wr_en_reg[3]),
        .I1(wait_for_wr_en_reg[1]),
        .I2(wait_for_wr_en_reg[0]),
        .I3(wait_for_wr_en_reg[2]),
        .I4(wait_for_wr_en_reg[4]),
        .O(p_0_in__18[5]));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[0]),
        .Q(wait_for_wr_en_reg[0]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[1]),
        .Q(wait_for_wr_en_reg[1]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[2]),
        .Q(wait_for_wr_en_reg[2]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[3]),
        .Q(wait_for_wr_en_reg[3]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[4]),
        .Q(wait_for_wr_en_reg[4]),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(sel),
        .D(p_0_in__18[5]),
        .Q(wait_for_wr_en_reg[5]),
        .R(cbcc_fifo_reset_wr_clk));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[0]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[0]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[0]),
        .Q(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[1]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[1]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[1]),
        .Q(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[2]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[2]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[2]),
        .Q(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[3]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[3]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[3]),
        .Q(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[4]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[4]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[4]),
        .Q(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ));
  (* srl_bus_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg " *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/wait_for_wr_en_wr3_reg[5]_srl3 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \wait_for_wr_en_wr3_reg[5]_srl3 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(wait_for_wr_en_reg[5]),
        .Q(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[0]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[1]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[2]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[3]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[4]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \wait_for_wr_en_wr4_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\wait_for_wr_en_wr3_reg[5]_srl3_n_0 ),
        .Q(wait_for_wr_en_wr4[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE wr_err_rd_clk_sync_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(wr_err_rd_clk_pre),
        .Q(rxbuferr_out_lane1_i),
        .R(do_rd_en));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wr_monitor_flag[0]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .O(p_0_in__19[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wr_monitor_flag[1]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .O(p_0_in__19[1]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wr_monitor_flag[2]_i_1__0 
       (.I0(wr_monitor_flag_reg[0]),
        .I1(wr_monitor_flag_reg[1]),
        .I2(wr_monitor_flag_reg[2]),
        .O(p_0_in__19[2]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wr_monitor_flag[3]_i_1__0 
       (.I0(wr_monitor_flag_reg[1]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[2]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__19[3]));
  LUT6 #(
    .INIT(64'h0000000000AA2AAA)) 
    \wr_monitor_flag[4]_i_1__0 
       (.I0(new_do_wr_en),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .I4(wr_monitor_flag_reg[2]),
        .I5(wr_monitor_flag_reg[4]),
        .O(wr_monitor_flag));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_monitor_flag[4]_i_2__0 
       (.I0(wr_monitor_flag_reg[2]),
        .I1(wr_monitor_flag_reg[0]),
        .I2(wr_monitor_flag_reg[1]),
        .I3(wr_monitor_flag_reg[3]),
        .O(p_0_in__19[4]));
  FDRE \wr_monitor_flag_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__19[0]),
        .Q(wr_monitor_flag_reg[0]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__19[1]),
        .Q(wr_monitor_flag_reg[1]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__19[2]),
        .Q(wr_monitor_flag_reg[2]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__19[3]),
        .Q(wr_monitor_flag_reg[3]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
  FDRE \wr_monitor_flag_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(wr_monitor_flag),
        .D(p_0_in__19[4]),
        .Q(wr_monitor_flag_reg[4]),
        .R(cbcc_fifo_reset_to_fifo_wr_clk));
endmodule

module board_aurora_64b66b_0_2_CLOCK_MODULE
   (\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst ,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ,
    tx_out_clk,
    lopt,
    lopt_1,
    lopt_2);
  output \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst ;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  input \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  input tx_out_clk;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst ;
  wire \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire tx_out_clk;

  board_aurora_64b66b_0_2_ultrascale_tx_userclk ultrascale_tx_userclk_1
       (.\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 (\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst ),
        .\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 (\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mmcm_not_locked_out(mmcm_not_locked_out),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .tx_out_clk(tx_out_clk));
endmodule

module board_aurora_64b66b_0_2_DESCRAMBLER_64B66B
   (CC_detect_pulse_i,
    p_6_in,
    UNSCRAMBLED_DATA_OUT,
    CB_detect,
    CB_detect0,
    in0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_i,
    CB_detect_dlyd0p5,
    Q,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CB_detect;
  output CB_detect0;
  input in0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_i;
  input CB_detect_dlyd0p5;
  input [1:0]Q;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2_n_0;
  wire CC_detect_dlyd1_i_3_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2_n_0;
  wire CC_detect_pulse_r_i_3_n_0;
  wire CC_detect_pulse_r_i_4_n_0;
  wire [0:0]E;
  wire [1:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1
       (.I0(CC_detect_pulse_r_i_3_n_0),
        .I1(CC_detect_dlyd1_i_3_n_0),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[55]),
        .I4(rxdatavalid_to_fifo_i),
        .I5(CC_detect_dlyd1_i_2_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1
       (.I0(CC_detect_pulse_r_i_3_n_0),
        .I1(CC_detect_dlyd1_i_2_n_0),
        .I2(rxdatavalid_to_fifo_i),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_dlyd1_i_3_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2
       (.I0(UNSCRAMBLED_DATA_OUT[60]),
        .I1(Q[1]),
        .I2(UNSCRAMBLED_DATA_OUT[61]),
        .I3(Q[0]),
        .O(CC_detect_dlyd1_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[62]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .O(CC_detect_dlyd1_i_3_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1
       (.I0(CC_detect_pulse_r_i_2_n_0),
        .I1(CC_detect_pulse_r_i_3_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2
       (.I0(CC_detect_dlyd1_i_3_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[55]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(rxdatavalid_to_fifo_i),
        .I4(CC_detect_dlyd1_i_2_n_0),
        .O(CC_detect_pulse_r_i_2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3
       (.I0(UNSCRAMBLED_DATA_OUT[56]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(UNSCRAMBLED_DATA_OUT[48]),
        .I3(UNSCRAMBLED_DATA_OUT[52]),
        .I4(CC_detect_pulse_r_i_4_n_0),
        .O(CC_detect_pulse_r_i_3_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4
       (.I0(UNSCRAMBLED_DATA_OUT[50]),
        .I1(UNSCRAMBLED_DATA_OUT[57]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[49]),
        .O(CC_detect_pulse_r_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1 
       (.I0(in0),
        .O(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2_n_0 ),
        .I2(CC_detect_pulse_r_i_3_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2 
       (.I0(CC_detect_dlyd1_i_2_n_0),
        .I1(rxdatavalid_to_fifo_i),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(CC_detect_dlyd1_i_3_n_0),
        .O(\fifo_din_i_reg[70]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair176" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair177" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair178" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair179" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair180" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair181" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_DESCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_11
   (CC_detect_pulse_i,
    p_6_in,
    UNSCRAMBLED_DATA_OUT,
    CB_detect,
    CB_detect0,
    in0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_lane1_i,
    CB_detect_dlyd0p5,
    Q,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CB_detect;
  output CB_detect0;
  input in0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_lane1_i;
  input CB_detect_dlyd0p5;
  input [1:0]Q;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2__0_n_0;
  wire CC_detect_dlyd1_i_3__0_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__0_n_0;
  wire CC_detect_pulse_r_i_3__0_n_0;
  wire CC_detect_pulse_r_i_4__0_n_0;
  wire [0:0]E;
  wire [1:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1__0_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2__0_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_lane1_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1__0
       (.I0(CC_detect_pulse_r_i_3__0_n_0),
        .I1(CC_detect_dlyd1_i_3__0_n_0),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[55]),
        .I4(rxdatavalid_to_fifo_lane1_i),
        .I5(CC_detect_dlyd1_i_2__0_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1__0
       (.I0(CC_detect_pulse_r_i_3__0_n_0),
        .I1(CC_detect_dlyd1_i_2__0_n_0),
        .I2(rxdatavalid_to_fifo_lane1_i),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_dlyd1_i_3__0_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2__0
       (.I0(UNSCRAMBLED_DATA_OUT[60]),
        .I1(Q[1]),
        .I2(UNSCRAMBLED_DATA_OUT[61]),
        .I3(Q[0]),
        .O(CC_detect_dlyd1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3__0
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[62]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .O(CC_detect_dlyd1_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1__0
       (.I0(CC_detect_pulse_r_i_2__0_n_0),
        .I1(CC_detect_pulse_r_i_3__0_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2__0
       (.I0(CC_detect_dlyd1_i_3__0_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[55]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(rxdatavalid_to_fifo_lane1_i),
        .I4(CC_detect_dlyd1_i_2__0_n_0),
        .O(CC_detect_pulse_r_i_2__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3__0
       (.I0(UNSCRAMBLED_DATA_OUT[56]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(UNSCRAMBLED_DATA_OUT[48]),
        .I3(UNSCRAMBLED_DATA_OUT[52]),
        .I4(CC_detect_pulse_r_i_4__0_n_0),
        .O(CC_detect_pulse_r_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4__0
       (.I0(UNSCRAMBLED_DATA_OUT[50]),
        .I1(UNSCRAMBLED_DATA_OUT[57]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[49]),
        .O(CC_detect_pulse_r_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__0 
       (.I0(in0),
        .O(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__0_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1__0 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2__0_n_0 ),
        .I2(CC_detect_pulse_r_i_3__0_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair182" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2__0 
       (.I0(CC_detect_dlyd1_i_2__0_n_0),
        .I1(rxdatavalid_to_fifo_lane1_i),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(CC_detect_dlyd1_i_3__0_n_0),
        .O(\fifo_din_i_reg[70]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair183" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair184" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__0 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__0 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__0 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__0 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__0 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair185" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__0 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__0 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__0 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__0 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__0 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__0 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__0 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__0 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__0 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__0 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair186" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__0 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__0 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__0 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__0 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair202" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__0 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__0 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__0 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__0 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__0 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair193" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__0 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair187" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair194" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__0 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair195" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__0 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair196" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__0 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair197" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__0 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair198" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__0 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair199" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__0 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair200" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__0 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair201" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__0 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair203" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__0 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair204" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__0 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair188" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair205" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__0 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair206" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__0 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair207" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__0 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__0 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair189" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair190" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair191" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair192" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__0 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1__0_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_DESCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_12
   (CC_detect_pulse_i,
    UNSCRAMBLED_DATA_OUT,
    p_9_in,
    CB_detect,
    CB_detect0,
    in0,
    CC_detect_dlyd1,
    CB_detect_dlyd0p5,
    D,
    E,
    Q,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output p_9_in;
  output CB_detect;
  output CB_detect0;
  input in0;
  input CC_detect_dlyd1;
  input CB_detect_dlyd0p5;
  input [2:0]D;
  input [0:0]E;
  input [63:0]Q;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__1_n_0;
  wire CC_detect_pulse_r_i_3__1_n_0;
  wire CC_detect_pulse_r_i_4__1_n_0;
  wire CC_detect_pulse_r_i_5_n_0;
  wire [2:0]D;
  wire [0:0]E;
  wire [63:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1__1_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire p_9_in;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;

  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    CB_detect_dlyd0p5_i_1__1
       (.I0(CC_detect_pulse_r_i_2__1_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[55]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[51]),
        .I4(UNSCRAMBLED_DATA_OUT[59]),
        .O(CB_detect0));
  (* SOFT_HLUTNM = "soft_lutpair208" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    CC_detect_dlyd1_i_1__1
       (.I0(CC_detect_pulse_r_i_2__1_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[54]),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[51]),
        .I4(UNSCRAMBLED_DATA_OUT[59]),
        .O(p_9_in));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_pulse_r_i_1__1
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[51]),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(CC_detect_pulse_r_i_2__1_n_0),
        .I5(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    CC_detect_pulse_r_i_2__1
       (.I0(CC_detect_pulse_r_i_3__1_n_0),
        .I1(CC_detect_pulse_r_i_4__1_n_0),
        .I2(CC_detect_pulse_r_i_5_n_0),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .I4(D[2]),
        .I5(UNSCRAMBLED_DATA_OUT[56]),
        .O(CC_detect_pulse_r_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hFFDF)) 
    CC_detect_pulse_r_i_3__1
       (.I0(UNSCRAMBLED_DATA_OUT[61]),
        .I1(UNSCRAMBLED_DATA_OUT[49]),
        .I2(UNSCRAMBLED_DATA_OUT[60]),
        .I3(UNSCRAMBLED_DATA_OUT[50]),
        .O(CC_detect_pulse_r_i_3__1_n_0));
  LUT4 #(
    .INIT(16'h1000)) 
    CC_detect_pulse_r_i_4__1
       (.I0(UNSCRAMBLED_DATA_OUT[48]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(D[1]),
        .I3(UNSCRAMBLED_DATA_OUT[62]),
        .O(CC_detect_pulse_r_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_5
       (.I0(D[0]),
        .I1(UNSCRAMBLED_DATA_OUT[52]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[57]),
        .O(CC_detect_pulse_r_i_5_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__1 
       (.I0(in0),
        .O(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(Q[9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAEAAAAAAAAAA)) 
    \fifo_din_i_reg[70]_i_1__1 
       (.I0(CB_detect_dlyd0p5),
        .I1(UNSCRAMBLED_DATA_OUT[59]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_pulse_r_i_2__1_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__1 
       (.I0(Q[39]),
        .I1(Q[0]),
        .I2(Q[58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__1 
       (.I0(Q[49]),
        .I1(Q[10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__1 
       (.I0(Q[50]),
        .I1(Q[11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__1 
       (.I0(Q[51]),
        .I1(Q[12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__1 
       (.I0(Q[52]),
        .I1(Q[13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__1 
       (.I0(Q[53]),
        .I1(Q[14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__1 
       (.I0(Q[54]),
        .I1(Q[15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__1 
       (.I0(Q[55]),
        .I1(Q[16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__1 
       (.I0(Q[56]),
        .I1(Q[17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__1 
       (.I0(Q[57]),
        .I1(Q[18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair209" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__1 
       (.I0(Q[58]),
        .I1(Q[19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__1 
       (.I0(Q[40]),
        .I1(Q[1]),
        .I2(Q[59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair210" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__1 
       (.I0(Q[59]),
        .I1(Q[20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__1 
       (.I0(Q[60]),
        .I1(Q[21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__1 
       (.I0(Q[61]),
        .I1(Q[22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__1 
       (.I0(Q[62]),
        .I1(Q[23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__1 
       (.I0(Q[63]),
        .I1(Q[24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__1 
       (.I0(p_97_in),
        .I1(Q[25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__1 
       (.I0(p_101_in),
        .I1(Q[26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__1 
       (.I0(p_105_in),
        .I1(Q[27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__1 
       (.I0(p_109_in),
        .I1(Q[28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__1 
       (.I0(p_113_in),
        .I1(Q[29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair211" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__1 
       (.I0(Q[41]),
        .I1(Q[2]),
        .I2(Q[60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__1 
       (.I0(p_117_in),
        .I1(Q[30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__1 
       (.I0(p_121_in),
        .I1(Q[31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__1 
       (.I0(p_125_in),
        .I1(Q[32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__1 
       (.I0(p_129_in),
        .I1(Q[33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__1 
       (.I0(p_133_in),
        .I1(Q[34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__1 
       (.I0(p_137_in),
        .I1(Q[35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__1 
       (.I0(p_141_in),
        .I1(Q[36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__1 
       (.I0(p_145_in),
        .I1(Q[37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__1 
       (.I0(p_149_in),
        .I1(Q[38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__1 
       (.I0(p_153_in),
        .I1(Q[39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair212" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__1 
       (.I0(Q[42]),
        .I1(Q[3]),
        .I2(Q[61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__1 
       (.I0(p_157_in),
        .I1(Q[40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__1 
       (.I0(p_161_in),
        .I1(Q[41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__1 
       (.I0(p_165_in),
        .I1(Q[42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__1 
       (.I0(p_169_in),
        .I1(Q[43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair228" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__1 
       (.I0(p_173_in),
        .I1(Q[44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__1 
       (.I0(p_177_in),
        .I1(Q[45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__1 
       (.I0(p_181_in),
        .I1(Q[46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__1 
       (.I0(p_185_in),
        .I1(Q[47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__1 
       (.I0(p_189_in),
        .I1(Q[48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair219" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__1 
       (.I0(p_193_in),
        .I1(Q[49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair213" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__1 
       (.I0(Q[43]),
        .I1(Q[4]),
        .I2(Q[62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair220" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__1 
       (.I0(p_197_in),
        .I1(Q[50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair221" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__1 
       (.I0(p_201_in),
        .I1(Q[51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair222" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__1 
       (.I0(p_205_in),
        .I1(Q[52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair223" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__1 
       (.I0(p_209_in),
        .I1(Q[53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair224" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__1 
       (.I0(p_213_in),
        .I1(Q[54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair225" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__1 
       (.I0(p_217_in),
        .I1(Q[55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair226" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__1 
       (.I0(p_221_in),
        .I1(Q[56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair227" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__1 
       (.I0(p_225_in),
        .I1(Q[57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair229" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__1 
       (.I0(p_229_in),
        .I1(Q[58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair230" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__1 
       (.I0(p_233_in),
        .I1(Q[59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair214" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__1 
       (.I0(Q[44]),
        .I1(Q[5]),
        .I2(Q[63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair231" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__1 
       (.I0(p_237_in),
        .I1(Q[60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair232" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__1 
       (.I0(p_241_in),
        .I1(Q[61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair233" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__1 
       (.I0(p_245_in),
        .I1(Q[62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__1 
       (.I0(p_249_in),
        .I1(Q[63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair215" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__1 
       (.I0(Q[45]),
        .I1(Q[6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair216" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__1 
       (.I0(Q[46]),
        .I1(Q[7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair217" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__1 
       (.I0(Q[47]),
        .I1(Q[8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair218" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__1 
       (.I0(Q[48]),
        .I1(Q[9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1__1_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_DESCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_13
   (CC_detect_pulse_i,
    p_6_in,
    UNSCRAMBLED_DATA_OUT,
    CB_detect,
    CB_detect0,
    in0,
    CC_detect_dlyd1,
    rxdatavalid_to_fifo_lane3_i,
    CB_detect_dlyd0p5,
    Q,
    E,
    \unscrambled_data_i_reg[63]_0 ,
    gtwiz_userclk_rx_usrclk_out);
  output CC_detect_pulse_i;
  output p_6_in;
  output [63:0]UNSCRAMBLED_DATA_OUT;
  output CB_detect;
  output CB_detect0;
  input in0;
  input CC_detect_dlyd1;
  input rxdatavalid_to_fifo_lane3_i;
  input CB_detect_dlyd0p5;
  input [1:0]Q;
  input [0:0]E;
  input [63:0]\unscrambled_data_i_reg[63]_0 ;
  input gtwiz_userclk_rx_usrclk_out;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect_dlyd0p5;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_i_2__1_n_0;
  wire CC_detect_dlyd1_i_3__1_n_0;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_r_i_2__2_n_0;
  wire CC_detect_pulse_r_i_3__2_n_0;
  wire CC_detect_pulse_r_i_4__2_n_0;
  wire [0:0]E;
  wire [1:0]Q;
  wire [63:0]UNSCRAMBLED_DATA_OUT;
  wire \descrambler[57]_i_1__2_n_0 ;
  wire \descrambler_reg_n_0_[39] ;
  wire \descrambler_reg_n_0_[40] ;
  wire \descrambler_reg_n_0_[41] ;
  wire \descrambler_reg_n_0_[42] ;
  wire \descrambler_reg_n_0_[43] ;
  wire \descrambler_reg_n_0_[44] ;
  wire \descrambler_reg_n_0_[45] ;
  wire \descrambler_reg_n_0_[46] ;
  wire \descrambler_reg_n_0_[47] ;
  wire \descrambler_reg_n_0_[48] ;
  wire \descrambler_reg_n_0_[49] ;
  wire \descrambler_reg_n_0_[50] ;
  wire \descrambler_reg_n_0_[51] ;
  wire \descrambler_reg_n_0_[52] ;
  wire \descrambler_reg_n_0_[53] ;
  wire \descrambler_reg_n_0_[54] ;
  wire \descrambler_reg_n_0_[55] ;
  wire \descrambler_reg_n_0_[56] ;
  wire \descrambler_reg_n_0_[57] ;
  wire \fifo_din_i_reg[70]_i_2__1_n_0 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_6_in;
  wire p_97_in;
  wire rxdatavalid_to_fifo_lane3_i;
  wire unscrambled_data_i0;
  wire unscrambled_data_i0100_out;
  wire unscrambled_data_i0104_out;
  wire unscrambled_data_i0108_out;
  wire unscrambled_data_i0112_out;
  wire unscrambled_data_i0116_out;
  wire unscrambled_data_i0120_out;
  wire unscrambled_data_i0124_out;
  wire unscrambled_data_i0128_out;
  wire unscrambled_data_i012_out;
  wire unscrambled_data_i0132_out;
  wire unscrambled_data_i0136_out;
  wire unscrambled_data_i0140_out;
  wire unscrambled_data_i0144_out;
  wire unscrambled_data_i0148_out;
  wire unscrambled_data_i0152_out;
  wire unscrambled_data_i0156_out;
  wire unscrambled_data_i0160_out;
  wire unscrambled_data_i0164_out;
  wire unscrambled_data_i0168_out;
  wire unscrambled_data_i016_out;
  wire unscrambled_data_i0172_out;
  wire unscrambled_data_i0176_out;
  wire unscrambled_data_i0180_out;
  wire unscrambled_data_i0184_out;
  wire unscrambled_data_i0188_out;
  wire unscrambled_data_i0192_out;
  wire unscrambled_data_i0196_out;
  wire unscrambled_data_i0200_out;
  wire unscrambled_data_i0204_out;
  wire unscrambled_data_i0208_out;
  wire unscrambled_data_i020_out;
  wire unscrambled_data_i0212_out;
  wire unscrambled_data_i0216_out;
  wire unscrambled_data_i0220_out;
  wire unscrambled_data_i0224_out;
  wire unscrambled_data_i0228_out;
  wire unscrambled_data_i0232_out;
  wire unscrambled_data_i0236_out;
  wire unscrambled_data_i0240_out;
  wire unscrambled_data_i0244_out;
  wire unscrambled_data_i0248_out;
  wire unscrambled_data_i024_out;
  wire unscrambled_data_i0252_out;
  wire unscrambled_data_i028_out;
  wire unscrambled_data_i032_out;
  wire unscrambled_data_i036_out;
  wire unscrambled_data_i040_out;
  wire unscrambled_data_i044_out;
  wire unscrambled_data_i048_out;
  wire unscrambled_data_i04_out;
  wire unscrambled_data_i052_out;
  wire unscrambled_data_i056_out;
  wire unscrambled_data_i060_out;
  wire unscrambled_data_i064_out;
  wire unscrambled_data_i068_out;
  wire unscrambled_data_i072_out;
  wire unscrambled_data_i076_out;
  wire unscrambled_data_i080_out;
  wire unscrambled_data_i084_out;
  wire unscrambled_data_i088_out;
  wire unscrambled_data_i08_out;
  wire unscrambled_data_i092_out;
  wire unscrambled_data_i096_out;
  wire [63:0]\unscrambled_data_i_reg[63]_0 ;

  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CB_detect_dlyd0p5_i_1__2
       (.I0(CC_detect_pulse_r_i_3__2_n_0),
        .I1(CC_detect_dlyd1_i_3__1_n_0),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(UNSCRAMBLED_DATA_OUT[55]),
        .I4(rxdatavalid_to_fifo_lane3_i),
        .I5(CC_detect_dlyd1_i_2__1_n_0),
        .O(CB_detect0));
  LUT6 #(
    .INIT(64'h0000000000200000)) 
    CC_detect_dlyd1_i_1__2
       (.I0(CC_detect_pulse_r_i_3__2_n_0),
        .I1(CC_detect_dlyd1_i_2__1_n_0),
        .I2(rxdatavalid_to_fifo_lane3_i),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(UNSCRAMBLED_DATA_OUT[55]),
        .I5(CC_detect_dlyd1_i_3__1_n_0),
        .O(p_6_in));
  LUT4 #(
    .INIT(16'hFF7F)) 
    CC_detect_dlyd1_i_2__1
       (.I0(UNSCRAMBLED_DATA_OUT[60]),
        .I1(Q[1]),
        .I2(UNSCRAMBLED_DATA_OUT[61]),
        .I3(Q[0]),
        .O(CC_detect_dlyd1_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hFFF7)) 
    CC_detect_dlyd1_i_3__1
       (.I0(UNSCRAMBLED_DATA_OUT[59]),
        .I1(UNSCRAMBLED_DATA_OUT[62]),
        .I2(UNSCRAMBLED_DATA_OUT[51]),
        .I3(UNSCRAMBLED_DATA_OUT[53]),
        .O(CC_detect_dlyd1_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    CC_detect_pulse_r_i_1__2
       (.I0(CC_detect_pulse_r_i_2__2_n_0),
        .I1(CC_detect_pulse_r_i_3__2_n_0),
        .I2(CC_detect_dlyd1),
        .O(CC_detect_pulse_i));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    CC_detect_pulse_r_i_2__2
       (.I0(CC_detect_dlyd1_i_3__1_n_0),
        .I1(UNSCRAMBLED_DATA_OUT[55]),
        .I2(UNSCRAMBLED_DATA_OUT[54]),
        .I3(rxdatavalid_to_fifo_lane3_i),
        .I4(CC_detect_dlyd1_i_2__1_n_0),
        .O(CC_detect_pulse_r_i_2__2_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    CC_detect_pulse_r_i_3__2
       (.I0(UNSCRAMBLED_DATA_OUT[56]),
        .I1(UNSCRAMBLED_DATA_OUT[58]),
        .I2(UNSCRAMBLED_DATA_OUT[48]),
        .I3(UNSCRAMBLED_DATA_OUT[52]),
        .I4(CC_detect_pulse_r_i_4__2_n_0),
        .O(CC_detect_pulse_r_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    CC_detect_pulse_r_i_4__2
       (.I0(UNSCRAMBLED_DATA_OUT[50]),
        .I1(UNSCRAMBLED_DATA_OUT[57]),
        .I2(UNSCRAMBLED_DATA_OUT[63]),
        .I3(UNSCRAMBLED_DATA_OUT[49]),
        .O(CC_detect_pulse_r_i_4__2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \descrambler[57]_i_1__2 
       (.I0(in0),
        .O(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [0]),
        .Q(p_97_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [10]),
        .Q(p_137_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [11]),
        .Q(p_141_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [12]),
        .Q(p_145_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [13]),
        .Q(p_149_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [14]),
        .Q(p_153_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [15]),
        .Q(p_157_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [16]),
        .Q(p_161_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [17]),
        .Q(p_165_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [18]),
        .Q(p_169_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [19]),
        .Q(p_173_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [1]),
        .Q(p_101_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [20]),
        .Q(p_177_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [21]),
        .Q(p_181_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [22]),
        .Q(p_185_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [23]),
        .Q(p_189_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [24]),
        .Q(p_193_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [25]),
        .Q(p_197_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [26]),
        .Q(p_201_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [27]),
        .Q(p_205_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [28]),
        .Q(p_209_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [29]),
        .Q(p_213_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [2]),
        .Q(p_105_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [30]),
        .Q(p_217_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [31]),
        .Q(p_221_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [32]),
        .Q(p_225_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [33]),
        .Q(p_229_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [34]),
        .Q(p_233_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [35]),
        .Q(p_237_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [36]),
        .Q(p_241_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [37]),
        .Q(p_245_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [38]),
        .Q(p_249_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [39]),
        .Q(\descrambler_reg_n_0_[39] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [3]),
        .Q(p_109_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [40]),
        .Q(\descrambler_reg_n_0_[40] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [41]),
        .Q(\descrambler_reg_n_0_[41] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [42]),
        .Q(\descrambler_reg_n_0_[42] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [43]),
        .Q(\descrambler_reg_n_0_[43] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [44]),
        .Q(\descrambler_reg_n_0_[44] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [45]),
        .Q(\descrambler_reg_n_0_[45] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [46]),
        .Q(\descrambler_reg_n_0_[46] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [47]),
        .Q(\descrambler_reg_n_0_[47] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [48]),
        .Q(\descrambler_reg_n_0_[48] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [49]),
        .Q(\descrambler_reg_n_0_[49] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [4]),
        .Q(p_113_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [50]),
        .Q(\descrambler_reg_n_0_[50] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [51]),
        .Q(\descrambler_reg_n_0_[51] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [52]),
        .Q(\descrambler_reg_n_0_[52] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [53]),
        .Q(\descrambler_reg_n_0_[53] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [54]),
        .Q(\descrambler_reg_n_0_[54] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [55]),
        .Q(\descrambler_reg_n_0_[55] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [56]),
        .Q(\descrambler_reg_n_0_[56] ),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [57]),
        .Q(\descrambler_reg_n_0_[57] ),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [5]),
        .Q(p_117_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [6]),
        .Q(p_121_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [7]),
        .Q(p_125_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  FDRE \descrambler_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [8]),
        .Q(p_129_in),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDSE \descrambler_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(\unscrambled_data_i_reg[63]_0 [9]),
        .Q(p_133_in),
        .S(\descrambler[57]_i_1__2_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \fifo_din_i_reg[70]_i_1__2 
       (.I0(CB_detect_dlyd0p5),
        .I1(\fifo_din_i_reg[70]_i_2__1_n_0 ),
        .I2(CC_detect_pulse_r_i_3__2_n_0),
        .O(CB_detect));
  (* SOFT_HLUTNM = "soft_lutpair234" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \fifo_din_i_reg[70]_i_2__1 
       (.I0(CC_detect_dlyd1_i_2__1_n_0),
        .I1(rxdatavalid_to_fifo_lane3_i),
        .I2(UNSCRAMBLED_DATA_OUT[55]),
        .I3(UNSCRAMBLED_DATA_OUT[54]),
        .I4(CC_detect_dlyd1_i_3__1_n_0),
        .O(\fifo_din_i_reg[70]_i_2__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[0]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [39]),
        .I1(\unscrambled_data_i_reg[63]_0 [0]),
        .I2(\unscrambled_data_i_reg[63]_0 [58]),
        .O(unscrambled_data_i0));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[10]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [49]),
        .I1(\unscrambled_data_i_reg[63]_0 [10]),
        .I2(p_113_in),
        .O(unscrambled_data_i040_out));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[11]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [50]),
        .I1(\unscrambled_data_i_reg[63]_0 [11]),
        .I2(p_117_in),
        .O(unscrambled_data_i044_out));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[12]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [51]),
        .I1(\unscrambled_data_i_reg[63]_0 [12]),
        .I2(p_121_in),
        .O(unscrambled_data_i048_out));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[13]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [52]),
        .I1(\unscrambled_data_i_reg[63]_0 [13]),
        .I2(p_125_in),
        .O(unscrambled_data_i052_out));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[14]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [53]),
        .I1(\unscrambled_data_i_reg[63]_0 [14]),
        .I2(p_129_in),
        .O(unscrambled_data_i056_out));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[15]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [54]),
        .I1(\unscrambled_data_i_reg[63]_0 [15]),
        .I2(p_133_in),
        .O(unscrambled_data_i060_out));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[16]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [55]),
        .I1(\unscrambled_data_i_reg[63]_0 [16]),
        .I2(p_137_in),
        .O(unscrambled_data_i064_out));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[17]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [56]),
        .I1(\unscrambled_data_i_reg[63]_0 [17]),
        .I2(p_141_in),
        .O(unscrambled_data_i068_out));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[18]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [57]),
        .I1(\unscrambled_data_i_reg[63]_0 [18]),
        .I2(p_145_in),
        .O(unscrambled_data_i072_out));
  (* SOFT_HLUTNM = "soft_lutpair235" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[19]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [58]),
        .I1(\unscrambled_data_i_reg[63]_0 [19]),
        .I2(p_149_in),
        .O(unscrambled_data_i076_out));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[1]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [40]),
        .I1(\unscrambled_data_i_reg[63]_0 [1]),
        .I2(\unscrambled_data_i_reg[63]_0 [59]),
        .O(unscrambled_data_i04_out));
  (* SOFT_HLUTNM = "soft_lutpair236" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[20]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [59]),
        .I1(\unscrambled_data_i_reg[63]_0 [20]),
        .I2(p_153_in),
        .O(unscrambled_data_i080_out));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[21]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [60]),
        .I1(\unscrambled_data_i_reg[63]_0 [21]),
        .I2(p_157_in),
        .O(unscrambled_data_i084_out));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[22]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [61]),
        .I1(\unscrambled_data_i_reg[63]_0 [22]),
        .I2(p_161_in),
        .O(unscrambled_data_i088_out));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[23]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [62]),
        .I1(\unscrambled_data_i_reg[63]_0 [23]),
        .I2(p_165_in),
        .O(unscrambled_data_i092_out));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[24]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [63]),
        .I1(\unscrambled_data_i_reg[63]_0 [24]),
        .I2(p_169_in),
        .O(unscrambled_data_i096_out));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[25]_i_1__2 
       (.I0(p_97_in),
        .I1(\unscrambled_data_i_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(unscrambled_data_i0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[26]_i_1__2 
       (.I0(p_101_in),
        .I1(\unscrambled_data_i_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(unscrambled_data_i0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[27]_i_1__2 
       (.I0(p_105_in),
        .I1(\unscrambled_data_i_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(unscrambled_data_i0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[28]_i_1__2 
       (.I0(p_109_in),
        .I1(\unscrambled_data_i_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(unscrambled_data_i0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[29]_i_1__2 
       (.I0(p_113_in),
        .I1(\unscrambled_data_i_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(unscrambled_data_i0116_out));
  (* SOFT_HLUTNM = "soft_lutpair237" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[2]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [41]),
        .I1(\unscrambled_data_i_reg[63]_0 [2]),
        .I2(\unscrambled_data_i_reg[63]_0 [60]),
        .O(unscrambled_data_i08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[30]_i_1__2 
       (.I0(p_117_in),
        .I1(\unscrambled_data_i_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(unscrambled_data_i0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[31]_i_1__2 
       (.I0(p_121_in),
        .I1(\unscrambled_data_i_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(unscrambled_data_i0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[32]_i_1__2 
       (.I0(p_125_in),
        .I1(\unscrambled_data_i_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(unscrambled_data_i0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[33]_i_1__2 
       (.I0(p_129_in),
        .I1(\unscrambled_data_i_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(unscrambled_data_i0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[34]_i_1__2 
       (.I0(p_133_in),
        .I1(\unscrambled_data_i_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(unscrambled_data_i0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[35]_i_1__2 
       (.I0(p_137_in),
        .I1(\unscrambled_data_i_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(unscrambled_data_i0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[36]_i_1__2 
       (.I0(p_141_in),
        .I1(\unscrambled_data_i_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(unscrambled_data_i0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[37]_i_1__2 
       (.I0(p_145_in),
        .I1(\unscrambled_data_i_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(unscrambled_data_i0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[38]_i_1__2 
       (.I0(p_149_in),
        .I1(\unscrambled_data_i_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(unscrambled_data_i0152_out));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[39]_i_1__2 
       (.I0(p_153_in),
        .I1(\unscrambled_data_i_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(unscrambled_data_i0156_out));
  (* SOFT_HLUTNM = "soft_lutpair238" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[3]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [42]),
        .I1(\unscrambled_data_i_reg[63]_0 [3]),
        .I2(\unscrambled_data_i_reg[63]_0 [61]),
        .O(unscrambled_data_i012_out));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[40]_i_1__2 
       (.I0(p_157_in),
        .I1(\unscrambled_data_i_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(unscrambled_data_i0160_out));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[41]_i_1__2 
       (.I0(p_161_in),
        .I1(\unscrambled_data_i_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(unscrambled_data_i0164_out));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[42]_i_1__2 
       (.I0(p_165_in),
        .I1(\unscrambled_data_i_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(unscrambled_data_i0168_out));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[43]_i_1__2 
       (.I0(p_169_in),
        .I1(\unscrambled_data_i_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(unscrambled_data_i0172_out));
  (* SOFT_HLUTNM = "soft_lutpair254" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[44]_i_1__2 
       (.I0(p_173_in),
        .I1(\unscrambled_data_i_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(unscrambled_data_i0176_out));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[45]_i_1__2 
       (.I0(p_177_in),
        .I1(\unscrambled_data_i_reg[63]_0 [45]),
        .I2(\descrambler_reg_n_0_[39] ),
        .O(unscrambled_data_i0180_out));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[46]_i_1__2 
       (.I0(p_181_in),
        .I1(\unscrambled_data_i_reg[63]_0 [46]),
        .I2(\descrambler_reg_n_0_[40] ),
        .O(unscrambled_data_i0184_out));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[47]_i_1__2 
       (.I0(p_185_in),
        .I1(\unscrambled_data_i_reg[63]_0 [47]),
        .I2(\descrambler_reg_n_0_[41] ),
        .O(unscrambled_data_i0188_out));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[48]_i_1__2 
       (.I0(p_189_in),
        .I1(\unscrambled_data_i_reg[63]_0 [48]),
        .I2(\descrambler_reg_n_0_[42] ),
        .O(unscrambled_data_i0192_out));
  (* SOFT_HLUTNM = "soft_lutpair245" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[49]_i_1__2 
       (.I0(p_193_in),
        .I1(\unscrambled_data_i_reg[63]_0 [49]),
        .I2(\descrambler_reg_n_0_[43] ),
        .O(unscrambled_data_i0196_out));
  (* SOFT_HLUTNM = "soft_lutpair239" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[4]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [43]),
        .I1(\unscrambled_data_i_reg[63]_0 [4]),
        .I2(\unscrambled_data_i_reg[63]_0 [62]),
        .O(unscrambled_data_i016_out));
  (* SOFT_HLUTNM = "soft_lutpair246" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[50]_i_1__2 
       (.I0(p_197_in),
        .I1(\unscrambled_data_i_reg[63]_0 [50]),
        .I2(\descrambler_reg_n_0_[44] ),
        .O(unscrambled_data_i0200_out));
  (* SOFT_HLUTNM = "soft_lutpair247" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[51]_i_1__2 
       (.I0(p_201_in),
        .I1(\unscrambled_data_i_reg[63]_0 [51]),
        .I2(\descrambler_reg_n_0_[45] ),
        .O(unscrambled_data_i0204_out));
  (* SOFT_HLUTNM = "soft_lutpair248" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[52]_i_1__2 
       (.I0(p_205_in),
        .I1(\unscrambled_data_i_reg[63]_0 [52]),
        .I2(\descrambler_reg_n_0_[46] ),
        .O(unscrambled_data_i0208_out));
  (* SOFT_HLUTNM = "soft_lutpair249" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[53]_i_1__2 
       (.I0(p_209_in),
        .I1(\unscrambled_data_i_reg[63]_0 [53]),
        .I2(\descrambler_reg_n_0_[47] ),
        .O(unscrambled_data_i0212_out));
  (* SOFT_HLUTNM = "soft_lutpair250" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[54]_i_1__2 
       (.I0(p_213_in),
        .I1(\unscrambled_data_i_reg[63]_0 [54]),
        .I2(\descrambler_reg_n_0_[48] ),
        .O(unscrambled_data_i0216_out));
  (* SOFT_HLUTNM = "soft_lutpair251" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[55]_i_1__2 
       (.I0(p_217_in),
        .I1(\unscrambled_data_i_reg[63]_0 [55]),
        .I2(\descrambler_reg_n_0_[49] ),
        .O(unscrambled_data_i0220_out));
  (* SOFT_HLUTNM = "soft_lutpair252" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[56]_i_1__2 
       (.I0(p_221_in),
        .I1(\unscrambled_data_i_reg[63]_0 [56]),
        .I2(\descrambler_reg_n_0_[50] ),
        .O(unscrambled_data_i0224_out));
  (* SOFT_HLUTNM = "soft_lutpair253" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[57]_i_1__2 
       (.I0(p_225_in),
        .I1(\unscrambled_data_i_reg[63]_0 [57]),
        .I2(\descrambler_reg_n_0_[51] ),
        .O(unscrambled_data_i0228_out));
  (* SOFT_HLUTNM = "soft_lutpair255" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[58]_i_1__2 
       (.I0(p_229_in),
        .I1(\unscrambled_data_i_reg[63]_0 [58]),
        .I2(\descrambler_reg_n_0_[52] ),
        .O(unscrambled_data_i0232_out));
  (* SOFT_HLUTNM = "soft_lutpair256" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[59]_i_1__2 
       (.I0(p_233_in),
        .I1(\unscrambled_data_i_reg[63]_0 [59]),
        .I2(\descrambler_reg_n_0_[53] ),
        .O(unscrambled_data_i0236_out));
  (* SOFT_HLUTNM = "soft_lutpair240" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[5]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [44]),
        .I1(\unscrambled_data_i_reg[63]_0 [5]),
        .I2(\unscrambled_data_i_reg[63]_0 [63]),
        .O(unscrambled_data_i020_out));
  (* SOFT_HLUTNM = "soft_lutpair257" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[60]_i_1__2 
       (.I0(p_237_in),
        .I1(\unscrambled_data_i_reg[63]_0 [60]),
        .I2(\descrambler_reg_n_0_[54] ),
        .O(unscrambled_data_i0240_out));
  (* SOFT_HLUTNM = "soft_lutpair258" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[61]_i_1__2 
       (.I0(p_241_in),
        .I1(\unscrambled_data_i_reg[63]_0 [61]),
        .I2(\descrambler_reg_n_0_[55] ),
        .O(unscrambled_data_i0244_out));
  (* SOFT_HLUTNM = "soft_lutpair259" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[62]_i_1__2 
       (.I0(p_245_in),
        .I1(\unscrambled_data_i_reg[63]_0 [62]),
        .I2(\descrambler_reg_n_0_[56] ),
        .O(unscrambled_data_i0248_out));
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[63]_i_1__2 
       (.I0(p_249_in),
        .I1(\unscrambled_data_i_reg[63]_0 [63]),
        .I2(\descrambler_reg_n_0_[57] ),
        .O(unscrambled_data_i0252_out));
  (* SOFT_HLUTNM = "soft_lutpair241" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[6]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [45]),
        .I1(\unscrambled_data_i_reg[63]_0 [6]),
        .I2(p_97_in),
        .O(unscrambled_data_i024_out));
  (* SOFT_HLUTNM = "soft_lutpair242" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[7]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [46]),
        .I1(\unscrambled_data_i_reg[63]_0 [7]),
        .I2(p_101_in),
        .O(unscrambled_data_i028_out));
  (* SOFT_HLUTNM = "soft_lutpair243" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[8]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [47]),
        .I1(\unscrambled_data_i_reg[63]_0 [8]),
        .I2(p_105_in),
        .O(unscrambled_data_i032_out));
  (* SOFT_HLUTNM = "soft_lutpair244" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \unscrambled_data_i[9]_i_1__2 
       (.I0(\unscrambled_data_i_reg[63]_0 [48]),
        .I1(\unscrambled_data_i_reg[63]_0 [9]),
        .I2(p_109_in),
        .O(unscrambled_data_i036_out));
  FDRE \unscrambled_data_i_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0),
        .Q(UNSCRAMBLED_DATA_OUT[0]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[10] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i040_out),
        .Q(UNSCRAMBLED_DATA_OUT[10]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[11] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i044_out),
        .Q(UNSCRAMBLED_DATA_OUT[11]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[12] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i048_out),
        .Q(UNSCRAMBLED_DATA_OUT[12]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[13] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i052_out),
        .Q(UNSCRAMBLED_DATA_OUT[13]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[14] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i056_out),
        .Q(UNSCRAMBLED_DATA_OUT[14]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[15] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i060_out),
        .Q(UNSCRAMBLED_DATA_OUT[15]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[16] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i064_out),
        .Q(UNSCRAMBLED_DATA_OUT[16]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[17] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i068_out),
        .Q(UNSCRAMBLED_DATA_OUT[17]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[18] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i072_out),
        .Q(UNSCRAMBLED_DATA_OUT[18]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[19] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i076_out),
        .Q(UNSCRAMBLED_DATA_OUT[19]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i04_out),
        .Q(UNSCRAMBLED_DATA_OUT[1]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[20] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i080_out),
        .Q(UNSCRAMBLED_DATA_OUT[20]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[21] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i084_out),
        .Q(UNSCRAMBLED_DATA_OUT[21]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[22] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i088_out),
        .Q(UNSCRAMBLED_DATA_OUT[22]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[23] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i092_out),
        .Q(UNSCRAMBLED_DATA_OUT[23]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[24] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i096_out),
        .Q(UNSCRAMBLED_DATA_OUT[24]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[25] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0100_out),
        .Q(UNSCRAMBLED_DATA_OUT[25]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[26] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0104_out),
        .Q(UNSCRAMBLED_DATA_OUT[26]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[27] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0108_out),
        .Q(UNSCRAMBLED_DATA_OUT[27]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[28] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0112_out),
        .Q(UNSCRAMBLED_DATA_OUT[28]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[29] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0116_out),
        .Q(UNSCRAMBLED_DATA_OUT[29]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i08_out),
        .Q(UNSCRAMBLED_DATA_OUT[2]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[30] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0120_out),
        .Q(UNSCRAMBLED_DATA_OUT[30]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[31] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0124_out),
        .Q(UNSCRAMBLED_DATA_OUT[31]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[32] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0128_out),
        .Q(UNSCRAMBLED_DATA_OUT[32]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[33] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0132_out),
        .Q(UNSCRAMBLED_DATA_OUT[33]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[34] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0136_out),
        .Q(UNSCRAMBLED_DATA_OUT[34]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[35] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0140_out),
        .Q(UNSCRAMBLED_DATA_OUT[35]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[36] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0144_out),
        .Q(UNSCRAMBLED_DATA_OUT[36]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[37] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0148_out),
        .Q(UNSCRAMBLED_DATA_OUT[37]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[38] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0152_out),
        .Q(UNSCRAMBLED_DATA_OUT[38]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[39] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0156_out),
        .Q(UNSCRAMBLED_DATA_OUT[39]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i012_out),
        .Q(UNSCRAMBLED_DATA_OUT[3]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[40] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0160_out),
        .Q(UNSCRAMBLED_DATA_OUT[40]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[41] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0164_out),
        .Q(UNSCRAMBLED_DATA_OUT[41]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[42] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0168_out),
        .Q(UNSCRAMBLED_DATA_OUT[42]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[43] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0172_out),
        .Q(UNSCRAMBLED_DATA_OUT[43]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[44] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0176_out),
        .Q(UNSCRAMBLED_DATA_OUT[44]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[45] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0180_out),
        .Q(UNSCRAMBLED_DATA_OUT[45]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[46] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0184_out),
        .Q(UNSCRAMBLED_DATA_OUT[46]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[47] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0188_out),
        .Q(UNSCRAMBLED_DATA_OUT[47]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[48] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0192_out),
        .Q(UNSCRAMBLED_DATA_OUT[48]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[49] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0196_out),
        .Q(UNSCRAMBLED_DATA_OUT[49]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[4] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i016_out),
        .Q(UNSCRAMBLED_DATA_OUT[4]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[50] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0200_out),
        .Q(UNSCRAMBLED_DATA_OUT[50]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[51] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0204_out),
        .Q(UNSCRAMBLED_DATA_OUT[51]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[52] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0208_out),
        .Q(UNSCRAMBLED_DATA_OUT[52]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[53] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0212_out),
        .Q(UNSCRAMBLED_DATA_OUT[53]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[54] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0216_out),
        .Q(UNSCRAMBLED_DATA_OUT[54]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[55] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0220_out),
        .Q(UNSCRAMBLED_DATA_OUT[55]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[56] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0224_out),
        .Q(UNSCRAMBLED_DATA_OUT[56]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[57] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0228_out),
        .Q(UNSCRAMBLED_DATA_OUT[57]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[58] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0232_out),
        .Q(UNSCRAMBLED_DATA_OUT[58]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[59] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0236_out),
        .Q(UNSCRAMBLED_DATA_OUT[59]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[5] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i020_out),
        .Q(UNSCRAMBLED_DATA_OUT[5]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[60] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0240_out),
        .Q(UNSCRAMBLED_DATA_OUT[60]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[61] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0244_out),
        .Q(UNSCRAMBLED_DATA_OUT[61]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[62] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0248_out),
        .Q(UNSCRAMBLED_DATA_OUT[62]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[63] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i0252_out),
        .Q(UNSCRAMBLED_DATA_OUT[63]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[6] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i024_out),
        .Q(UNSCRAMBLED_DATA_OUT[6]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[7] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i028_out),
        .Q(UNSCRAMBLED_DATA_OUT[7]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[8] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i032_out),
        .Q(UNSCRAMBLED_DATA_OUT[8]),
        .R(\descrambler[57]_i_1__2_n_0 ));
  FDRE \unscrambled_data_i_reg[9] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(E),
        .D(unscrambled_data_i036_out),
        .Q(UNSCRAMBLED_DATA_OUT[9]),
        .R(\descrambler[57]_i_1__2_n_0 ));
endmodule

module board_aurora_64b66b_0_2_ERR_DETECT
   (rx_header_err_r,
    soft_err_i,
    hard_err_i,
    channel_hard_err_c,
    rx_header_err_i_0,
    SOFT_ERR_reg_0,
    SOFT_ERR0,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    CHANNEL_HARD_ERR_reg);
  output rx_header_err_r;
  output [0:0]soft_err_i;
  output [0:0]hard_err_i;
  output channel_hard_err_c;
  input rx_header_err_i_0;
  input SOFT_ERR_reg_0;
  input SOFT_ERR0;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input [2:0]CHANNEL_HARD_ERR_reg;

  wire [2:0]CHANNEL_HARD_ERR_reg;
  wire HARD_ERR_reg_0;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg_0;
  wire channel_hard_err_c;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire rx_header_err_i_0;
  wire rx_header_err_r;
  wire [0:0]soft_err_i;

  LUT4 #(
    .INIT(16'hFFFE)) 
    CHANNEL_HARD_ERR_i_1
       (.I0(hard_err_i),
        .I1(CHANNEL_HARD_ERR_reg[2]),
        .I2(CHANNEL_HARD_ERR_reg[0]),
        .I3(CHANNEL_HARD_ERR_reg[1]),
        .O(channel_hard_err_c));
  FDRE HARD_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(enable_err_detect_i),
        .Q(hard_err_i),
        .R(HARD_ERR_reg_0));
  FDRE SOFT_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(rx_header_err_i_0),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_ERR_DETECT" *) 
module board_aurora_64b66b_0_2_ERR_DETECT_102
   (rx_header_err_r,
    soft_err_i,
    hard_err_i,
    rx_header_err_i_1,
    rx_header_err_r_reg_0,
    SOFT_ERR0,
    HARD_ERR_reg_0,
    enable_err_detect_i);
  output rx_header_err_r;
  output [0:0]soft_err_i;
  output [0:0]hard_err_i;
  input rx_header_err_i_1;
  input rx_header_err_r_reg_0;
  input SOFT_ERR0;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;

  wire HARD_ERR_reg_0;
  wire SOFT_ERR0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire rx_header_err_i_1;
  wire rx_header_err_r;
  wire rx_header_err_r_reg_0;
  wire [0:0]soft_err_i;

  FDRE HARD_ERR_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(enable_err_detect_i),
        .Q(hard_err_i),
        .R(HARD_ERR_reg_0));
  FDRE SOFT_ERR_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(rx_header_err_i_1),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_ERR_DETECT" *) 
module board_aurora_64b66b_0_2_ERR_DETECT_108
   (rx_header_err_r,
    soft_err_i,
    hard_err_i,
    rx_header_err_i_2,
    SOFT_ERR_reg_0,
    SOFT_ERR0,
    HARD_ERR_reg_0,
    enable_err_detect_i);
  output rx_header_err_r;
  output [0:0]soft_err_i;
  output [0:0]hard_err_i;
  input rx_header_err_i_2;
  input SOFT_ERR_reg_0;
  input SOFT_ERR0;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;

  wire HARD_ERR_reg_0;
  wire SOFT_ERR0;
  wire SOFT_ERR_reg_0;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire rx_header_err_i_2;
  wire rx_header_err_r;
  wire [0:0]soft_err_i;

  FDRE HARD_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(enable_err_detect_i),
        .Q(hard_err_i),
        .R(HARD_ERR_reg_0));
  FDRE SOFT_ERR_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  FDRE rx_header_err_r_reg
       (.C(SOFT_ERR_reg_0),
        .CE(1'b1),
        .D(rx_header_err_i_2),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_ERR_DETECT" *) 
module board_aurora_64b66b_0_2_ERR_DETECT_114
   (rx_header_err_r,
    soft_err_i,
    hard_err_i,
    ready_r_reg0,
    rx_header_err_i_3,
    rx_header_err_r_reg_0,
    SOFT_ERR0,
    HARD_ERR_reg_0,
    enable_err_detect_i,
    SR);
  output rx_header_err_r;
  output [0:0]soft_err_i;
  output [0:0]hard_err_i;
  output ready_r_reg0;
  input rx_header_err_i_3;
  input rx_header_err_r_reg_0;
  input SOFT_ERR0;
  input HARD_ERR_reg_0;
  input enable_err_detect_i;
  input [0:0]SR;

  wire HARD_ERR_reg_0;
  wire SOFT_ERR0;
  wire [0:0]SR;
  wire enable_err_detect_i;
  wire [0:0]hard_err_i;
  wire ready_r_reg0;
  wire rx_header_err_i_3;
  wire rx_header_err_r;
  wire rx_header_err_r_reg_0;
  wire [0:0]soft_err_i;

  FDRE HARD_ERR_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(enable_err_detect_i),
        .Q(hard_err_i),
        .R(HARD_ERR_reg_0));
  FDRE SOFT_ERR_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(SOFT_ERR0),
        .Q(soft_err_i),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    ready_r_i_1
       (.I0(hard_err_i),
        .I1(SR),
        .O(ready_r_reg0));
  FDRE rx_header_err_r_reg
       (.C(rx_header_err_r_reg_0),
        .CE(1'b1),
        .D(rx_header_err_i_3),
        .Q(rx_header_err_r),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_GLOBAL_LOGIC
   (reset_lanes_i,
    en_chan_sync_i,
    channel_bond_r,
    gen_ch_bond_i,
    wait_for_lane_up_r,
    in0,
    CHANNEL_UP_RX_IF_reg,
    channel_up_tx_if,
    hard_err,
    CHANNEL_UP_TX_IF_reg_rep,
    CHANNEL_UP_TX_IF_reg_rep__0,
    \TX_PE_DATA_reg[241] ,
    \TX_PE_DATA_reg[177] ,
    \TX_PE_DATA_reg[113] ,
    \TX_PE_DATA_V_reg[0]_rep__0 ,
    \TX_PE_DATA_reg[49] ,
    \gen_cc_blk[3].gen_cc_flop ,
    \gen_cc_blk[2].gen_cc_flop ,
    \gen_cc_blk[1].gen_cc_flop ,
    \gen_cc_blk[0].gen_cc_flop ,
    R0,
    CHANNEL_UP_RX_IF_reg_0,
    CHANNEL_UP_TX_IF_reg,
    gen_ch_bond_int_reg,
    gen_ch_bond_int_reg_0,
    gen_ch_bond_int_reg_1,
    \TX_PE_DATA_V_reg[0]_rep__0_0 ,
    reset_lanes_c,
    CHANNEL_UP_RX_IF_reg_1,
    ch_bond_done_i,
    SR,
    remote_ready_r_reg,
    RX_IDLES,
    txdatavalid_i,
    channel_hard_err_c,
    \TX_DATA_reg[53] ,
    Q,
    tx_pe_data_v_i,
    \TX_DATA_reg[53]_0 ,
    \TX_DATA_reg[63] ,
    \TX_DATA_reg[53]_1 ,
    gen_cc_i,
    rst_pma_init_usrclk,
    rst_pma_init_usrclk_0,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    txdatavalid_symgen_i_lane3,
    D,
    txdatavalid_symgen_i_lane2,
    TX_HEADER_0_reg,
    txdatavalid_symgen_i_lane1,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i,
    TX_HEADER_0_reg_1,
    \TX_DATA_reg[63]_0 ,
    ready_r_reg,
    soft_err_i,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[63]_3 ,
    \TX_DATA_reg[63]_4 );
  output reset_lanes_i;
  output en_chan_sync_i;
  output channel_bond_r;
  output [0:0]gen_ch_bond_i;
  output wait_for_lane_up_r;
  output in0;
  output CHANNEL_UP_RX_IF_reg;
  output channel_up_tx_if;
  output hard_err;
  output CHANNEL_UP_TX_IF_reg_rep;
  output CHANNEL_UP_TX_IF_reg_rep__0;
  output [2:0]\TX_PE_DATA_reg[241] ;
  output [2:0]\TX_PE_DATA_reg[177] ;
  output [2:0]\TX_PE_DATA_reg[113] ;
  output \TX_PE_DATA_V_reg[0]_rep__0 ;
  output [1:0]\TX_PE_DATA_reg[49] ;
  output \gen_cc_blk[3].gen_cc_flop ;
  output \gen_cc_blk[2].gen_cc_flop ;
  output \gen_cc_blk[1].gen_cc_flop ;
  output \gen_cc_blk[0].gen_cc_flop ;
  output R0;
  output CHANNEL_UP_RX_IF_reg_0;
  output CHANNEL_UP_TX_IF_reg;
  output gen_ch_bond_int_reg;
  output gen_ch_bond_int_reg_0;
  output gen_ch_bond_int_reg_1;
  output \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  input reset_lanes_c;
  input CHANNEL_UP_RX_IF_reg_1;
  input [0:3]ch_bond_done_i;
  input [0:0]SR;
  input remote_ready_r_reg;
  input [0:3]RX_IDLES;
  input txdatavalid_i;
  input channel_hard_err_c;
  input \TX_DATA_reg[53] ;
  input [10:0]Q;
  input [0:0]tx_pe_data_v_i;
  input \TX_DATA_reg[53]_0 ;
  input \TX_DATA_reg[63] ;
  input \TX_DATA_reg[53]_1 ;
  input [0:3]gen_cc_i;
  input rst_pma_init_usrclk;
  input rst_pma_init_usrclk_0;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input txdatavalid_symgen_i_lane3;
  input [0:0]D;
  input txdatavalid_symgen_i_lane2;
  input [0:0]TX_HEADER_0_reg;
  input txdatavalid_symgen_i_lane1;
  input [0:0]TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i;
  input [0:0]TX_HEADER_0_reg_1;
  input \TX_DATA_reg[63]_0 ;
  input ready_r_reg;
  input [0:3]soft_err_i;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[63]_3 ;
  input \TX_DATA_reg[63]_4 ;

  wire CHANNEL_UP_RX_IF_reg;
  wire CHANNEL_UP_RX_IF_reg_0;
  wire CHANNEL_UP_RX_IF_reg_1;
  wire CHANNEL_UP_TX_IF_reg;
  wire CHANNEL_UP_TX_IF_reg_rep;
  wire CHANNEL_UP_TX_IF_reg_rep__0;
  wire [0:0]D;
  wire [10:0]Q;
  wire R0;
  wire [0:3]RX_IDLES;
  wire [0:0]SR;
  wire \TX_DATA_reg[53] ;
  wire \TX_DATA_reg[53]_0 ;
  wire \TX_DATA_reg[53]_1 ;
  wire \TX_DATA_reg[63] ;
  wire \TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[63]_3 ;
  wire \TX_DATA_reg[63]_4 ;
  wire [0:0]TX_HEADER_0_reg;
  wire [0:0]TX_HEADER_0_reg_0;
  wire [0:0]TX_HEADER_0_reg_1;
  wire \TX_PE_DATA_V_reg[0]_rep__0 ;
  wire \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  wire [2:0]\TX_PE_DATA_reg[113] ;
  wire [2:0]\TX_PE_DATA_reg[177] ;
  wire [2:0]\TX_PE_DATA_reg[241] ;
  wire [1:0]\TX_PE_DATA_reg[49] ;
  wire [0:3]ch_bond_done_i;
  wire channel_bond_r;
  wire channel_hard_err_c;
  wire channel_up_tx_if;
  wire en_chan_sync_i;
  wire \gen_cc_blk[0].gen_cc_flop ;
  wire \gen_cc_blk[1].gen_cc_flop ;
  wire \gen_cc_blk[2].gen_cc_flop ;
  wire \gen_cc_blk[3].gen_cc_flop ;
  wire [0:3]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire gen_ch_bond_int_reg;
  wire gen_ch_bond_int_reg_0;
  wire gen_ch_bond_int_reg_1;
  wire hard_err;
  wire in0;
  wire ready_r_reg;
  wire remote_ready_r_reg;
  wire reset_lanes_c;
  wire reset_lanes_i;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:3]soft_err_i;
  wire [0:0]tx_pe_data_v_i;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire wait_for_lane_up_r;

  board_aurora_64b66b_0_2_CHANNEL_BOND_GEN channel_bond_gen_i
       (.SR(SR),
        .TX_HEADER_0_reg(\TX_PE_DATA_V_reg[0]_rep__0 ),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg_1),
        .\free_count_r_reg[0]_0 (CHANNEL_UP_RX_IF_reg_1),
        .\gen_cc_blk[0].gen_cc_flop (\gen_cc_blk[0].gen_cc_flop ),
        .gen_cc_i(gen_cc_i[0]),
        .gen_ch_bond_int_reg_0(gen_ch_bond_i),
        .gen_ch_bond_int_reg_1(CHANNEL_UP_TX_IF_reg_rep),
        .rst_pma_init_usrclk_2(rst_pma_init_usrclk_2),
        .txdatavalid_i(txdatavalid_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
  board_aurora_64b66b_0_2_CHANNEL_ERR_DETECT channel_err_detect_i
       (.CHANNEL_HARD_ERR_reg_0(CHANNEL_UP_RX_IF_reg_1),
        .channel_hard_err_c(channel_hard_err_c),
        .hard_err(hard_err));
  board_aurora_64b66b_0_2_CHANNEL_INIT_SM channel_init_sm_i
       (.CHANNEL_UP_RX_IF_reg_0(CHANNEL_UP_RX_IF_reg),
        .CHANNEL_UP_RX_IF_reg_1(CHANNEL_UP_RX_IF_reg_0),
        .CHANNEL_UP_RX_IF_reg_2(CHANNEL_UP_RX_IF_reg_1),
        .CHANNEL_UP_TX_IF_reg_0(CHANNEL_UP_TX_IF_reg),
        .CHANNEL_UP_TX_IF_reg_rep_0(CHANNEL_UP_TX_IF_reg_rep),
        .CHANNEL_UP_TX_IF_reg_rep__0_0(CHANNEL_UP_TX_IF_reg_rep__0),
        .D(D),
        .Q(Q),
        .R0(R0),
        .RX_IDLES(RX_IDLES),
        .SR(SR),
        .\TX_DATA_reg[53] (\TX_DATA_reg[53] ),
        .\TX_DATA_reg[53]_0 (\TX_DATA_reg[53]_0 ),
        .\TX_DATA_reg[53]_1 (\TX_DATA_reg[53]_1 ),
        .\TX_DATA_reg[63] (\TX_DATA_reg[63] ),
        .\TX_DATA_reg[63]_0 (gen_ch_bond_i),
        .\TX_DATA_reg[63]_1 (\TX_DATA_reg[63]_0 ),
        .\TX_DATA_reg[63]_2 (\TX_DATA_reg[63]_1 ),
        .\TX_DATA_reg[63]_3 (\TX_DATA_reg[63]_2 ),
        .\TX_DATA_reg[63]_4 (\TX_DATA_reg[63]_3 ),
        .\TX_DATA_reg[63]_5 (\TX_DATA_reg[63]_4 ),
        .TX_HEADER_0_reg(TX_HEADER_0_reg),
        .TX_HEADER_0_reg_0(TX_HEADER_0_reg_0),
        .\TX_PE_DATA_V_reg[0]_rep__0 (\TX_PE_DATA_V_reg[0]_rep__0 ),
        .\TX_PE_DATA_V_reg[0]_rep__0_0 (\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .\TX_PE_DATA_reg[113] (\TX_PE_DATA_reg[113] ),
        .\TX_PE_DATA_reg[177] (\TX_PE_DATA_reg[177] ),
        .\TX_PE_DATA_reg[241] (\TX_PE_DATA_reg[241] ),
        .\TX_PE_DATA_reg[49] (\TX_PE_DATA_reg[49] ),
        .ch_bond_done_i(ch_bond_done_i),
        .channel_bond_r_reg_0(channel_bond_r),
        .channel_up_tx_if(channel_up_tx_if),
        .en_chan_sync_i(en_chan_sync_i),
        .\gen_cc_blk[1].gen_cc_flop (\gen_cc_blk[1].gen_cc_flop ),
        .\gen_cc_blk[2].gen_cc_flop (\gen_cc_blk[2].gen_cc_flop ),
        .\gen_cc_blk[3].gen_cc_flop (\gen_cc_blk[3].gen_cc_flop ),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_int_reg(gen_ch_bond_int_reg),
        .gen_ch_bond_int_reg_0(gen_ch_bond_int_reg_0),
        .gen_ch_bond_int_reg_1(gen_ch_bond_int_reg_1),
        .in0(in0),
        .ready_r_reg_0(ready_r_reg),
        .remote_ready_r_reg_0(remote_ready_r_reg),
        .reset_lanes_c(reset_lanes_c),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .rst_pma_init_usrclk_0(rst_pma_init_usrclk_0),
        .rst_pma_init_usrclk_1(rst_pma_init_usrclk_1),
        .rst_pma_init_usrclk_2(rst_pma_init_usrclk_2),
        .soft_err_i(soft_err_i),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .wait_for_lane_up_r_reg_0(wait_for_lane_up_r));
endmodule

module board_aurora_64b66b_0_2_LANE_INIT_SM
   (lane_up_flop_i_0,
    enable_err_detect_i,
    rx_polarity_r_reg_0,
    check_polarity_r_reg_0,
    SOFT_ERR0,
    reset_lanes_c,
    rxreset_for_lanes,
    in0,
    s_level_out_d5_reg,
    SR,
    ready_r_reg0,
    rx_header_err_r,
    SOFT_ERR_reg,
    illegal_btf_i,
    rx_lossofsync_i_0,
    reset_lanes_i,
    reset_lanes_flop_0_i,
    reset_lanes_flop_0_i_0,
    reset_lanes_flop_0_i_1,
    wait_for_lane_up_r,
    tx_reset_i_3,
    tx_reset_i_1,
    tx_reset_i_2);
  output lane_up_flop_i_0;
  output enable_err_detect_i;
  output rx_polarity_r_reg_0;
  output check_polarity_r_reg_0;
  output SOFT_ERR0;
  output reset_lanes_c;
  output rxreset_for_lanes;
  input in0;
  input s_level_out_d5_reg;
  input [0:0]SR;
  input ready_r_reg0;
  input rx_header_err_r;
  input SOFT_ERR_reg;
  input illegal_btf_i;
  input rx_lossofsync_i_0;
  input reset_lanes_i;
  input reset_lanes_flop_0_i;
  input reset_lanes_flop_0_i_0;
  input reset_lanes_flop_0_i_1;
  input wait_for_lane_up_r;
  input tx_reset_i_3;
  input tx_reset_i_1;
  input tx_reset_i_2;

  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire align_r;
  wire align_r_i_2__2_n_0;
  wire begin_r;
  wire begin_r_i_2__0_n_0;
  wire check_polarity_r_i_1__2_n_0;
  wire check_polarity_r_reg_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in__7;
  wire polarity_r;
  wire polarity_r_i_3_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__2_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r_i_1__2_n_0;
  wire reset_count_r_reg_n_0;
  wire reset_lanes_c;
  wire reset_lanes_flop_0_i;
  wire reset_lanes_flop_0_i_0;
  wire reset_lanes_flop_0_i_1;
  wire reset_lanes_i;
  wire rst_r_i_2__2_n_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i_0;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg_0;
  wire rxreset_for_lanes;
  wire s_level_out_d5_reg;
  wire tx_reset_i_0;
  wire tx_reset_i_1;
  wire tx_reset_i_2;
  wire tx_reset_i_3;
  wire u_cdc_rxlossofsync_in_n_2;
  wire wait_for_lane_up_r;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8A88)) 
    SOFT_ERR_i_1
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(SOFT_ERR_reg),
        .I3(illegal_btf_i),
        .O(SOFT_ERR0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/aurora_lane_3_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d5_reg),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1__2
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r_i_2__2_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF5F3FF)) 
    align_r_i_2__2
       (.I0(count_8d_done_r),
        .I1(rx_lossofsync_i_0),
        .I2(reset_lanes_i),
        .I3(align_r),
        .I4(tx_reset_i_0),
        .I5(begin_r),
        .O(align_r_i_2__2_n_0));
  FDRE align_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDDD55)) 
    begin_r_i_2__0
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(reset_lanes_i),
        .I2(rx_lossofsync_i_0),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2__0_n_0));
  FDSE begin_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hDC)) 
    check_polarity_r_i_1__2
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(check_polarity_r_reg_0),
        .O(check_polarity_r_i_1__2_n_0));
  FDRE check_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(check_polarity_r_i_1__2_n_0),
        .Q(check_polarity_r_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1__2 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in__7[3]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__7[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in__7[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__2 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__7[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__7[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__7[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__7[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r_reg_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__7[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r_reg_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(tx_reset_i_0),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    polarity_r_i_2__0
       (.I0(ready_r),
        .I1(tx_reset_i_0),
        .I2(begin_r),
        .I3(polarity_r_i_3_n_0),
        .O(next_polarity_c));
  LUT5 #(
    .INIT(32'hFFFCFFBB)) 
    polarity_r_i_3
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(rx_lossofsync_i_0),
        .I3(reset_lanes_i),
        .I4(align_r),
        .O(polarity_r_i_3_n_0));
  FDRE polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1__2
       (.I0(rx_polarity_r_reg_0),
        .I1(tx_reset_i_0),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__2_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__2_n_0),
        .Q(prev_rx_polarity_r),
        .R(SR));
  FDRE ready_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__2
       (.I0(tx_reset_i_0),
        .O(reset_count_r_i_1__2_n_0));
  FDSE reset_count_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(reset_count_r_i_1__2_n_0),
        .Q(reset_count_r_reg_n_0),
        .S(SR));
  LUT6 #(
    .INIT(64'hFFFF0000FFFF7FFF)) 
    reset_lanes_flop_0_i_i_1
       (.I0(lane_up_flop_i_0),
        .I1(reset_lanes_flop_0_i),
        .I2(reset_lanes_flop_0_i_0),
        .I3(reset_lanes_flop_0_i_1),
        .I4(SR),
        .I5(wait_for_lane_up_r),
        .O(reset_lanes_c));
  LUT6 #(
    .INIT(64'h0000000000B0F000)) 
    rst_r_i_1__2
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(rst_r_i_2__2_n_0),
        .I3(begin_r),
        .I4(tx_reset_i_0),
        .I5(align_r),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2__2
       (.I0(polarity_r),
        .I1(ready_r),
        .O(rst_r_i_2__2_n_0));
  FDRE rst_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(tx_reset_i_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(rx_polarity_r_reg_0),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    rxreset_for_lanes_q_i_1
       (.I0(tx_reset_i_0),
        .I1(tx_reset_i_3),
        .I2(tx_reset_i_1),
        .I3(tx_reset_i_2),
        .O(rxreset_for_lanes));
  board_aurora_64b66b_0_2_cdc_sync_101 u_cdc_rxlossofsync_in
       (.SR(SR),
        .align_r(align_r),
        .begin_r(begin_r),
        .begin_r_reg(begin_r_i_2__0_n_0),
        .in0(in0),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .prev_rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .ready_r(ready_r),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i_0(rx_lossofsync_i_0),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(rx_polarity_r_reg_0),
        .s_level_out_d5_reg_0(s_level_out_d5_reg),
        .tx_reset_i_0(tx_reset_i_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_LANE_INIT_SM" *) 
module board_aurora_64b66b_0_2_LANE_INIT_SM_103
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    rx_polarity_r_reg_0,
    check_polarity_r_reg_0,
    SOFT_ERR0,
    in0,
    s_level_out_d6_reg,
    SR,
    ready_r_reg0,
    rx_header_err_r,
    SOFT_ERR_reg,
    illegal_btf_i,
    rx_lossofsync_i_1,
    reset_lanes_i);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output rx_polarity_r_reg_0;
  output check_polarity_r_reg_0;
  output SOFT_ERR0;
  input in0;
  input s_level_out_d6_reg;
  input [0:0]SR;
  input ready_r_reg0;
  input rx_header_err_r;
  input SOFT_ERR_reg;
  input illegal_btf_i;
  input rx_lossofsync_i_1;
  input reset_lanes_i;

  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire align_r;
  wire align_r_i_2__1_n_0;
  wire begin_r;
  wire begin_r_i_2__1_n_0;
  wire check_polarity_r_i_1__1_n_0;
  wire check_polarity_r_reg_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in__5;
  wire polarity_r;
  wire polarity_r_i_3__0_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__1_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r_i_1__1_n_0;
  wire reset_count_r_reg_n_0;
  wire reset_lanes_i;
  wire rst_r_i_2__1_n_0;
  wire rst_r_reg_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i_1;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg_0;
  wire s_level_out_d6_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8A88)) 
    SOFT_ERR_i_1__0
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(SOFT_ERR_reg),
        .I3(illegal_btf_i),
        .O(SOFT_ERR0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/aurora_lane_2_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d6_reg),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1__1
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r_i_2__1_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF5F3FF)) 
    align_r_i_2__1
       (.I0(count_8d_done_r),
        .I1(rx_lossofsync_i_1),
        .I2(reset_lanes_i),
        .I3(align_r),
        .I4(rst_r_reg_0),
        .I5(begin_r),
        .O(align_r_i_2__1_n_0));
  FDRE align_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDDD55)) 
    begin_r_i_2__1
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(reset_lanes_i),
        .I2(rx_lossofsync_i_1),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2__1_n_0));
  FDSE begin_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hDC)) 
    check_polarity_r_i_1__1
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(check_polarity_r_reg_0),
        .O(check_polarity_r_i_1__1_n_0));
  FDRE check_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(check_polarity_r_i_1__1_n_0),
        .Q(check_polarity_r_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1__1 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__5[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in__5[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__5[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__5[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__5[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__5[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r_reg_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__5[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r_reg_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    polarity_r_i_2__1
       (.I0(ready_r),
        .I1(rst_r_reg_0),
        .I2(begin_r),
        .I3(polarity_r_i_3__0_n_0),
        .O(next_polarity_c));
  LUT5 #(
    .INIT(32'hFFFCFFBB)) 
    polarity_r_i_3__0
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(rx_lossofsync_i_1),
        .I3(reset_lanes_i),
        .I4(align_r),
        .O(polarity_r_i_3__0_n_0));
  FDRE polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1__1
       (.I0(rx_polarity_r_reg_0),
        .I1(rst_r_reg_0),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__1_n_0),
        .Q(prev_rx_polarity_r),
        .R(SR));
  FDRE ready_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__1
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1__1_n_0));
  FDSE reset_count_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(reset_count_r_i_1__1_n_0),
        .Q(reset_count_r_reg_n_0),
        .S(SR));
  LUT6 #(
    .INIT(64'h0000000000B0F000)) 
    rst_r_i_1__1
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(rst_r_i_2__1_n_0),
        .I3(begin_r),
        .I4(rst_r_reg_0),
        .I5(align_r),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2__1
       (.I0(polarity_r),
        .I1(ready_r),
        .O(rst_r_i_2__1_n_0));
  FDRE rst_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(rx_polarity_r_reg_0),
        .R(1'b0));
  board_aurora_64b66b_0_2_cdc_sync_107 u_cdc_rxlossofsync_in
       (.SR(SR),
        .align_r(align_r),
        .begin_r(begin_r),
        .begin_r_reg(begin_r_i_2__1_n_0),
        .in0(in0),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .prev_rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .ready_r(ready_r),
        .ready_r_reg(rst_r_reg_0),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i_1(rx_lossofsync_i_1),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(rx_polarity_r_reg_0),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_LANE_INIT_SM" *) 
module board_aurora_64b66b_0_2_LANE_INIT_SM_109
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    rx_polarity_r_reg_0,
    check_polarity_r_reg_0,
    SOFT_ERR0,
    in0,
    s_level_out_d5_reg,
    SR,
    ready_r_reg0,
    rx_header_err_r,
    SOFT_ERR_reg,
    illegal_btf_i,
    rx_lossofsync_i_2,
    reset_lanes_i);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output rx_polarity_r_reg_0;
  output check_polarity_r_reg_0;
  output SOFT_ERR0;
  input in0;
  input s_level_out_d5_reg;
  input [0:0]SR;
  input ready_r_reg0;
  input rx_header_err_r;
  input SOFT_ERR_reg;
  input illegal_btf_i;
  input rx_lossofsync_i_2;
  input reset_lanes_i;

  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire align_r;
  wire align_r_i_2__0_n_0;
  wire begin_r;
  wire begin_r_i_2__2_n_0;
  wire check_polarity_r_i_1__0_n_0;
  wire check_polarity_r_reg_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in__3;
  wire polarity_r;
  wire polarity_r_i_3__1_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1__0_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r_i_1__0_n_0;
  wire reset_count_r_reg_n_0;
  wire reset_lanes_i;
  wire rst_r_i_2__0_n_0;
  wire rst_r_reg_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i_2;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg_0;
  wire s_level_out_d5_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8A88)) 
    SOFT_ERR_i_1__1
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(SOFT_ERR_reg),
        .I3(illegal_btf_i),
        .O(SOFT_ERR0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/aurora_lane_1_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d5_reg),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1__0
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r_i_2__0_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFF5F3FF)) 
    align_r_i_2__0
       (.I0(count_8d_done_r),
        .I1(rx_lossofsync_i_2),
        .I2(reset_lanes_i),
        .I3(align_r),
        .I4(rst_r_reg_0),
        .I5(begin_r),
        .O(align_r_i_2__0_n_0));
  FDRE align_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDDD55)) 
    begin_r_i_2__2
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(reset_lanes_i),
        .I2(rx_lossofsync_i_2),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2__2_n_0));
  FDSE begin_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hDC)) 
    check_polarity_r_i_1__0
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(check_polarity_r_reg_0),
        .O(check_polarity_r_i_1__0_n_0));
  FDRE check_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(check_polarity_r_i_1__0_n_0),
        .Q(check_polarity_r_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1__0 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__3[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in__3[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1__0 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__3[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__3[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__3[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__3[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r_reg_n_0));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(p_0_in__3[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r_reg_n_0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    polarity_r_i_2__2
       (.I0(ready_r),
        .I1(rst_r_reg_0),
        .I2(begin_r),
        .I3(polarity_r_i_3__1_n_0),
        .O(next_polarity_c));
  LUT5 #(
    .INIT(32'hFFFCFFBB)) 
    polarity_r_i_3__1
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(rx_lossofsync_i_2),
        .I3(reset_lanes_i),
        .I4(align_r),
        .O(polarity_r_i_3__1_n_0));
  FDRE polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1__0
       (.I0(rx_polarity_r_reg_0),
        .I1(rst_r_reg_0),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1__0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1__0_n_0),
        .Q(prev_rx_polarity_r),
        .R(SR));
  FDRE ready_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1__0
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1__0_n_0));
  FDSE reset_count_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(reset_count_r_i_1__0_n_0),
        .Q(reset_count_r_reg_n_0),
        .S(SR));
  LUT6 #(
    .INIT(64'h0000000000B0F000)) 
    rst_r_i_1__0
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(rst_r_i_2__0_n_0),
        .I3(begin_r),
        .I4(rst_r_reg_0),
        .I5(align_r),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2__0
       (.I0(polarity_r),
        .I1(ready_r),
        .O(rst_r_i_2__0_n_0));
  FDRE rst_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(s_level_out_d5_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(rx_polarity_r_reg_0),
        .R(1'b0));
  board_aurora_64b66b_0_2_cdc_sync_113 u_cdc_rxlossofsync_in
       (.SR(SR),
        .align_r(align_r),
        .begin_r(begin_r),
        .begin_r_reg(begin_r_i_2__2_n_0),
        .in0(in0),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .prev_rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .ready_r(ready_r),
        .ready_r_reg(rst_r_reg_0),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i_2(rx_lossofsync_i_2),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(rx_polarity_r_reg_0),
        .s_level_out_d5_reg_0(s_level_out_d5_reg));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_LANE_INIT_SM" *) 
module board_aurora_64b66b_0_2_LANE_INIT_SM_115
   (lane_up_flop_i_0,
    rst_r_reg_0,
    enable_err_detect_i,
    rx_polarity_r_reg_0,
    check_polarity_r_reg_0,
    SOFT_ERR0,
    in0,
    s_level_out_d6_reg,
    SR,
    ready_r_reg0,
    rx_header_err_r,
    SOFT_ERR_reg,
    illegal_btf_i,
    reset_lanes_i,
    rx_lossofsync_i_3);
  output lane_up_flop_i_0;
  output rst_r_reg_0;
  output enable_err_detect_i;
  output rx_polarity_r_reg_0;
  output check_polarity_r_reg_0;
  output SOFT_ERR0;
  input in0;
  input s_level_out_d6_reg;
  input [0:0]SR;
  input ready_r_reg0;
  input rx_header_err_r;
  input SOFT_ERR_reg;
  input illegal_btf_i;
  input reset_lanes_i;
  input rx_lossofsync_i_3;

  wire SOFT_ERR0;
  wire SOFT_ERR_reg;
  wire [0:0]SR;
  wire align_r;
  wire align_r_i_2_n_0;
  wire begin_r;
  wire begin_r_i_2_n_0;
  wire check_polarity_r_i_1_n_0;
  wire check_polarity_r_reg_0;
  wire count_8d_done_r;
  wire \counter1_r_reg_n_0_[1] ;
  wire \counter1_r_reg_n_0_[2] ;
  wire \counter1_r_reg_n_0_[3] ;
  wire enable_err_detect_i;
  wire illegal_btf_i;
  wire in0;
  wire lane_up_flop_i_0;
  wire next_align_c;
  wire next_begin_c;
  wire \next_begin_c_inferred__1/i__n_0 ;
  wire next_polarity_c;
  wire next_ready_c;
  wire next_rst_c;
  wire [3:0]p_0_in__1;
  wire polarity_r;
  wire polarity_r_i_2_n_0;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_i_1_n_0;
  wire ready_r;
  wire ready_r_reg0;
  wire reset_count_r;
  wire reset_count_r_i_1_n_0;
  wire reset_lanes_i;
  wire rst_r_i_2_n_0;
  wire rst_r_reg_0;
  wire rx_header_err_r;
  wire rx_lossofsync_i_3;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg_0;
  wire s_level_out_d6_reg;
  wire u_cdc_rxlossofsync_in_n_2;
  wire NLW_SRLC32E_inst_0_Q31_UNCONNECTED;

  FDRE ENABLE_ERR_DETECT_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(enable_err_detect_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8A88)) 
    SOFT_ERR_i_1__2
       (.I0(enable_err_detect_i),
        .I1(rx_header_err_r),
        .I2(SOFT_ERR_reg),
        .I3(illegal_btf_i),
        .O(SOFT_ERR0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/aurora_lane_0_i/lane_init_sm_i/SRLC32E_inst_0 " *) 
  SRLC32E #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SRLC32E_inst_0
       (.A({1'b0,1'b0,1'b1,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(s_level_out_d6_reg),
        .D(polarity_r),
        .Q(rx_polarity_dlyd_i),
        .Q31(NLW_SRLC32E_inst_0_Q31_UNCONNECTED));
  LUT3 #(
    .INIT(8'h01)) 
    align_r_i_1
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r_i_2_n_0),
        .O(next_align_c));
  LUT6 #(
    .INIT(64'hFFFFFCFFFFFFF7F7)) 
    align_r_i_2
       (.I0(rx_lossofsync_i_3),
        .I1(align_r),
        .I2(begin_r),
        .I3(count_8d_done_r),
        .I4(reset_lanes_i),
        .I5(rst_r_reg_0),
        .O(align_r_i_2_n_0));
  FDRE align_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_align_c),
        .Q(align_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFDFDF555)) 
    begin_r_i_2
       (.I0(\next_begin_c_inferred__1/i__n_0 ),
        .I1(rx_lossofsync_i_3),
        .I2(reset_lanes_i),
        .I3(align_r),
        .I4(ready_r),
        .O(begin_r_i_2_n_0));
  FDSE begin_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_begin_c),
        .Q(begin_r),
        .S(ready_r_reg0));
  LUT3 #(
    .INIT(8'hDC)) 
    check_polarity_r_i_1
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(check_polarity_r_reg_0),
        .O(check_polarity_r_i_1_n_0));
  FDRE check_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(check_polarity_r_i_1_n_0),
        .Q(check_polarity_r_reg_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \counter1_r[0]_i_1 
       (.I0(count_8d_done_r),
        .I1(\counter1_r_reg_n_0_[3] ),
        .I2(\counter1_r_reg_n_0_[2] ),
        .I3(\counter1_r_reg_n_0_[1] ),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \counter1_r[1]_i_1 
       (.I0(\counter1_r_reg_n_0_[1] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .I2(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__1[2]));
  LUT2 #(
    .INIT(4'h6)) 
    \counter1_r[2]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .I1(\counter1_r_reg_n_0_[2] ),
        .O(p_0_in__1[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \counter1_r[3]_i_1 
       (.I0(\counter1_r_reg_n_0_[3] ),
        .O(p_0_in__1[0]));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[0] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__1[3]),
        .Q(count_8d_done_r),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[1] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__1[2]),
        .Q(\counter1_r_reg_n_0_[1] ),
        .R(reset_count_r));
  FDRE #(
    .INIT(1'b0)) 
    \counter1_r_reg[2] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__1[1]),
        .Q(\counter1_r_reg_n_0_[2] ),
        .R(reset_count_r));
  FDSE #(
    .INIT(1'b1)) 
    \counter1_r_reg[3] 
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(p_0_in__1[0]),
        .Q(\counter1_r_reg_n_0_[3] ),
        .S(reset_count_r));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    lane_up_flop_i
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(ready_r),
        .Q(lane_up_flop_i_0),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h00010116)) 
    \next_begin_c_inferred__1/i_ 
       (.I0(ready_r),
        .I1(polarity_r),
        .I2(align_r),
        .I3(rst_r_reg_0),
        .I4(begin_r),
        .O(\next_begin_c_inferred__1/i__n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    polarity_r_i_1__2
       (.I0(ready_r),
        .I1(rst_r_reg_0),
        .I2(begin_r),
        .I3(polarity_r_i_2_n_0),
        .O(next_polarity_c));
  LUT5 #(
    .INIT(32'hFFFCFBFB)) 
    polarity_r_i_2
       (.I0(rx_polarity_dlyd_i),
        .I1(polarity_r),
        .I2(reset_lanes_i),
        .I3(rx_lossofsync_i_3),
        .I4(align_r),
        .O(polarity_r_i_2_n_0));
  FDRE polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_polarity_c),
        .Q(polarity_r),
        .R(ready_r_reg0));
  LUT5 #(
    .INIT(32'hFFFB0008)) 
    prev_rx_polarity_r_i_1
       (.I0(rx_polarity_r_reg_0),
        .I1(rst_r_reg_0),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(prev_rx_polarity_r),
        .O(prev_rx_polarity_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    prev_rx_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(prev_rx_polarity_r_i_1_n_0),
        .Q(prev_rx_polarity_r),
        .R(SR));
  FDRE ready_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_ready_c),
        .Q(ready_r),
        .R(ready_r_reg0));
  LUT1 #(
    .INIT(2'h1)) 
    reset_count_r_i_1
       (.I0(rst_r_reg_0),
        .O(reset_count_r_i_1_n_0));
  FDSE reset_count_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(reset_count_r_i_1_n_0),
        .Q(reset_count_r),
        .S(SR));
  LUT6 #(
    .INIT(64'h00000FB000000000)) 
    rst_r_i_1
       (.I0(reset_lanes_i),
        .I1(count_8d_done_r),
        .I2(rst_r_reg_0),
        .I3(begin_r),
        .I4(align_r),
        .I5(rst_r_i_2_n_0),
        .O(next_rst_c));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h1)) 
    rst_r_i_2
       (.I0(polarity_r),
        .I1(ready_r),
        .O(rst_r_i_2_n_0));
  FDRE rst_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(next_rst_c),
        .Q(rst_r_reg_0),
        .R(ready_r_reg0));
  FDRE #(
    .INIT(1'b0)) 
    rx_polarity_r_reg
       (.C(s_level_out_d6_reg),
        .CE(1'b1),
        .D(u_cdc_rxlossofsync_in_n_2),
        .Q(rx_polarity_r_reg_0),
        .R(1'b0));
  board_aurora_64b66b_0_2_cdc_sync_119 u_cdc_rxlossofsync_in
       (.SR(SR),
        .align_r(align_r),
        .begin_r(begin_r),
        .begin_r_reg(begin_r_i_2_n_0),
        .in0(in0),
        .next_begin_c(next_begin_c),
        .next_ready_c(next_ready_c),
        .polarity_r(polarity_r),
        .prev_rx_polarity_r(prev_rx_polarity_r),
        .prev_rx_polarity_r_reg(u_cdc_rxlossofsync_in_n_2),
        .ready_r(ready_r),
        .ready_r_reg(rst_r_reg_0),
        .reset_lanes_i(reset_lanes_i),
        .rx_lossofsync_i_3(rx_lossofsync_i_3),
        .rx_polarity_dlyd_i(rx_polarity_dlyd_i),
        .rx_polarity_r_reg(rx_polarity_r_reg_0),
        .s_level_out_d6_reg_0(s_level_out_d6_reg));
endmodule

module board_aurora_64b66b_0_2_MULTI_GT
   (gtwiz_userclk_rx_usrclk_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userdata_rx_out,
    gt_powergood,
    txn,
    txp,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    tx_out_clk,
    E,
    hard_err_usr0,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ,
    new_gtx_rx_pcsreset_comb0,
    rst_in_out_reg,
    out,
    i_in_meta_reg,
    gtwiz_userdata_tx_in,
    init_clk,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    txheader_in,
    Q,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_1 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    \fabric_pcs_rst_extend_cntr_reg[8]_0 ,
    channel_up_tx_if,
    hard_err_usr_reg,
    hard_err_usr_reg_0,
    mmcm_not_locked_out2,
    fsm_resetdone_to_rxreset_in,
    fsm_resetdone_to_new_gtx_rx_comb,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [255:0]gtwiz_userdata_rx_out;
  output [3:0]gt_powergood;
  output [0:3]txn;
  output [0:3]txp;
  output [3:0]rxbufstatus_out;
  output [3:0]rxdatavalid_out;
  output [7:0]rxheader_out;
  output [3:0]rxheadervalid_out;
  output tx_out_clk;
  output [0:0]E;
  output hard_err_usr0;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  output new_gtx_rx_pcsreset_comb0;
  input rst_in_out_reg;
  input out;
  input i_in_meta_reg;
  input [255:0]gtwiz_userdata_tx_in;
  input init_clk;
  input gt_refclk1_out;
  input [0:3]rxn;
  input [0:3]rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_out;
  input gt_qpllrefclk_quad1_out;
  input gt_rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [7:0]txheader_in;
  input [6:0]Q;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_1 ;
  input [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  input \fabric_pcs_rst_extend_cntr_reg[8]_0 ;
  input channel_up_tx_if;
  input hard_err_usr_reg;
  input hard_err_usr_reg_0;
  input mmcm_not_locked_out2;
  input fsm_resetdone_to_rxreset_in;
  input fsm_resetdone_to_new_gtx_rx_comb;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire [0:0]E;
  wire [6:0]Q;
  wire board_aurora_64b66b_0_2_gt_i_n_461;
  wire board_aurora_64b66b_0_2_gt_i_n_464;
  wire board_aurora_64b66b_0_2_gt_i_n_465;
  wire board_aurora_64b66b_0_2_gt_i_n_466;
  wire board_aurora_64b66b_0_2_gt_i_n_467;
  wire channel_up_tx_if;
  wire \fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ;
  wire \fabric_pcs_rst_extend_cntr_reg[8]_0 ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[0] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[1] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[2] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[3] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[4] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[5] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[6] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[7] ;
  wire \fabric_pcs_rst_extend_cntr_reg_n_0_[8] ;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_userclk_rx_active_in;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in_r;
  wire gtwiz_userclk_rx_reset_in_r_i_1_n_0;
  wire gtwiz_userclk_rx_usrclk_out;
  wire gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire gtx_rx_pcsreset_comb;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_1 ;
  wire [6:0]\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  wire hard_err_usr0;
  wire hard_err_usr_i_2_n_0;
  wire hard_err_usr_reg;
  wire hard_err_usr_reg_0;
  wire i_in_meta_reg;
  wire init_clk;
  wire [7:1]int_gt_txbufstatus;
  wire [2:0]loopback;
  wire \^lopt ;
  wire \^lopt_1 ;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire mmcm_not_locked_out2;
  wire new_gtx_rx_pcsreset_comb0;
  wire out;
  wire [9:0]p_0_in;
  wire [7:0]p_0_in__0;
  wire [7:0]p_0_in__29;
  wire rst_in_out_reg;
  wire [3:0]rxbufstatus_out;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [3:0]rxpolarity_in;
  wire tx_out_clk;
  wire [7:0]txheader_in;
  wire [0:3]txn;
  wire [0:3]txp;
  wire [3:0]txpmaresetdone_out;
  wire ultrascale_rx_userclk_n_1;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ;
  wire \usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ;
  wire [63:0]NLW_board_aurora_64b66b_0_2_gt_i_dmonitorout_out_UNCONNECTED;
  wire [63:0]NLW_board_aurora_64b66b_0_2_gt_i_drpdo_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_drprdy_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_board_aurora_64b66b_0_2_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [10:0]NLW_board_aurora_64b66b_0_2_gt_i_rxbufstatus_out_UNCONNECTED;
  wire [7:1]NLW_board_aurora_64b66b_0_2_gt_i_rxdatavalid_out_UNCONNECTED;
  wire [23:2]NLW_board_aurora_64b66b_0_2_gt_i_rxheader_out_UNCONNECTED;
  wire [7:1]NLW_board_aurora_64b66b_0_2_gt_i_rxheadervalid_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_rxoutclk_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_rxprbserr_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_rxresetdone_out_UNCONNECTED;
  wire [7:0]NLW_board_aurora_64b66b_0_2_gt_i_rxstartofseq_out_UNCONNECTED;
  wire [6:0]NLW_board_aurora_64b66b_0_2_gt_i_txbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_txoutclk_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_txoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_txoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_board_aurora_64b66b_0_2_gt_i_txresetdone_out_UNCONNECTED;

  assign \^lopt_3  = lopt;
  assign lopt_2 = lopt_5;
  assign lopt_3 = lopt_6;
  assign lopt_4 = lopt_1;
  LUT5 #(
    .INIT(32'h00010000)) 
    HARD_ERR_i_1
       (.I0(int_gt_txbufstatus[3]),
        .I1(int_gt_txbufstatus[5]),
        .I2(int_gt_txbufstatus[7]),
        .I3(int_gt_txbufstatus[1]),
        .I4(hard_err_usr_reg),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ));
  (* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_gt,board_aurora_64b66b_0_2_gt_gtwizard_top,{}" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* X_CORE_INFO = "board_aurora_64b66b_0_2_gt_gtwizard_top,Vivado 2021.1" *) 
  board_aurora_64b66b_0_2_gt board_aurora_64b66b_0_2_gt_i
       (.dmonitorout_out(NLW_board_aurora_64b66b_0_2_gt_i_dmonitorout_out_UNCONNECTED[63:0]),
        .drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpclk_in({1'b0,1'b0,1'b0,init_clk}),
        .drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdo_out(NLW_board_aurora_64b66b_0_2_gt_i_drpdo_out_UNCONNECTED[63:0]),
        .drpen_in({1'b0,1'b0,1'b0,1'b0}),
        .drprdy_out(NLW_board_aurora_64b66b_0_2_gt_i_drprdy_out_UNCONNECTED[3:0]),
        .drpwe_in({1'b0,1'b0,1'b0,1'b0}),
        .eyescandataerror_out(NLW_board_aurora_64b66b_0_2_gt_i_eyescandataerror_out_UNCONNECTED[3:0]),
        .eyescanreset_in({1'b0,1'b0,1'b0,1'b0}),
        .eyescantrigger_in({1'b0,1'b0,1'b0,1'b0}),
        .gtpowergood_out(gt_powergood),
        .gtrefclk0_in({1'b0,1'b0,1'b0,gt_refclk1_out}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(i_in_meta_reg),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_cdr_stable_out(NLW_board_aurora_64b66b_0_2_gt_i_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(out),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(rst_in_out_reg),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in({rxn[3],rxn[2],rxn[1],rxn[0]}),
        .gtyrxp_in({rxp[3],rxp[2],rxp[1],rxp[0]}),
        .gtytxn_out({txn[3],txn[2],txn[1],txn[0]}),
        .gtytxp_out({txp[3],txp[2],txp[1],txp[0]}),
        .loopback_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,loopback}),
        .lopt(\^lopt ),
        .lopt_1(gtwiz_userclk_rx_reset_in_r),
        .lopt_2(\^lopt_1 ),
        .lopt_3(\^lopt_2 ),
        .lopt_4(\^lopt_3 ),
        .lopt_5(lopt_4),
        .lopt_6(lopt_5),
        .lopt_7(lopt_6),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0clk_in({1'b0,1'b0,1'b0,gt_qpllclk_quad1_out}),
        .qpll0refclk_in({1'b0,1'b0,1'b0,gt_qpllrefclk_quad1_out}),
        .qpll1clk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1refclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufstatus_out({rxbufstatus_out[3],NLW_board_aurora_64b66b_0_2_gt_i_rxbufstatus_out_UNCONNECTED[10:9],rxbufstatus_out[2],NLW_board_aurora_64b66b_0_2_gt_i_rxbufstatus_out_UNCONNECTED[7:6],rxbufstatus_out[1],NLW_board_aurora_64b66b_0_2_gt_i_rxbufstatus_out_UNCONNECTED[4:3],rxbufstatus_out[0],NLW_board_aurora_64b66b_0_2_gt_i_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxcdrhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrovrden_in({1'b0,1'b0,1'b0,gt_rxcdrovrden_in}),
        .rxdatavalid_out({NLW_board_aurora_64b66b_0_2_gt_i_rxdatavalid_out_UNCONNECTED[7],rxdatavalid_out[3],NLW_board_aurora_64b66b_0_2_gt_i_rxdatavalid_out_UNCONNECTED[5],rxdatavalid_out[2],NLW_board_aurora_64b66b_0_2_gt_i_rxdatavalid_out_UNCONNECTED[3],rxdatavalid_out[1],NLW_board_aurora_64b66b_0_2_gt_i_rxdatavalid_out_UNCONNECTED[1],rxdatavalid_out[0]}),
        .rxdfelpmreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({NLW_board_aurora_64b66b_0_2_gt_i_rxheader_out_UNCONNECTED[23:20],rxheader_out[7:6],NLW_board_aurora_64b66b_0_2_gt_i_rxheader_out_UNCONNECTED[17:14],rxheader_out[5:4],NLW_board_aurora_64b66b_0_2_gt_i_rxheader_out_UNCONNECTED[11:8],rxheader_out[3:2],NLW_board_aurora_64b66b_0_2_gt_i_rxheader_out_UNCONNECTED[5:2],rxheader_out[1:0]}),
        .rxheadervalid_out({NLW_board_aurora_64b66b_0_2_gt_i_rxheadervalid_out_UNCONNECTED[7],rxheadervalid_out[3],NLW_board_aurora_64b66b_0_2_gt_i_rxheadervalid_out_UNCONNECTED[5],rxheadervalid_out[2],NLW_board_aurora_64b66b_0_2_gt_i_rxheadervalid_out_UNCONNECTED[3],rxheadervalid_out[1],NLW_board_aurora_64b66b_0_2_gt_i_rxheadervalid_out_UNCONNECTED[1],rxheadervalid_out[0]}),
        .rxlpmen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoutclk_out({NLW_board_aurora_64b66b_0_2_gt_i_rxoutclk_out_UNCONNECTED[3],board_aurora_64b66b_0_2_gt_i_n_461,NLW_board_aurora_64b66b_0_2_gt_i_rxoutclk_out_UNCONNECTED[1:0]}),
        .rxpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmaresetdone_out({board_aurora_64b66b_0_2_gt_i_n_464,board_aurora_64b66b_0_2_gt_i_n_465,board_aurora_64b66b_0_2_gt_i_n_466,board_aurora_64b66b_0_2_gt_i_n_467}),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprbserr_out(NLW_board_aurora_64b66b_0_2_gt_i_rxprbserr_out_UNCONNECTED[3:0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxresetdone_out(NLW_board_aurora_64b66b_0_2_gt_i_rxresetdone_out_UNCONNECTED[3:0]),
        .rxstartofseq_out(NLW_board_aurora_64b66b_0_2_gt_i_rxstartofseq_out_UNCONNECTED[7:0]),
        .rxusrclk2_in({1'b0,1'b0,1'b0,ultrascale_rx_userclk_n_1}),
        .rxusrclk_in({1'b0,1'b0,1'b0,gtwiz_userclk_rx_usrclk_out}),
        .txbufstatus_out({int_gt_txbufstatus,NLW_board_aurora_64b66b_0_2_gt_i_txbufstatus_out_UNCONNECTED[0]}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,txheader_in[7:6],1'b0,1'b0,1'b0,1'b0,txheader_in[5:4],1'b0,1'b0,1'b0,1'b0,txheader_in[3:2],1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .txinhibit_in({1'b0,1'b0,1'b0,1'b0}),
        .txoutclk_out({NLW_board_aurora_64b66b_0_2_gt_i_txoutclk_out_UNCONNECTED[3],tx_out_clk,NLW_board_aurora_64b66b_0_2_gt_i_txoutclk_out_UNCONNECTED[1:0]}),
        .txoutclkfabric_out(NLW_board_aurora_64b66b_0_2_gt_i_txoutclkfabric_out_UNCONNECTED[3:0]),
        .txoutclkpcs_out(NLW_board_aurora_64b66b_0_2_gt_i_txoutclkpcs_out_UNCONNECTED[3:0]),
        .txpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in({1'b0,1'b0,1'b0,1'b0}),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprbsforceerr_in({1'b0,1'b0,1'b0,1'b0}),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(NLW_board_aurora_64b66b_0_2_gt_i_txresetdone_out_UNCONNECTED[3:0]),
        .txsequence_in({Q,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_1 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST }),
        .txusrclk2_in({1'b0,1'b0,1'b0,1'b0}),
        .txusrclk_in({1'b0,1'b0,1'b0,\fabric_pcs_rst_extend_cntr_reg[8]_0 }));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \fabric_pcs_rst_extend_cntr[0]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \fabric_pcs_rst_extend_cntr[1]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[2]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[3]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \fabric_pcs_rst_extend_cntr[4]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \fabric_pcs_rst_extend_cntr[5]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I5(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in[5]));
  LUT3 #(
    .INIT(8'h6A)) 
    \fabric_pcs_rst_extend_cntr[6]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I1(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \fabric_pcs_rst_extend_cntr[7]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I2(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \fabric_pcs_rst_extend_cntr[8]_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I2(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \fabric_pcs_rst_extend_cntr[8]_i_2 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ),
        .I2(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ),
        .O(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \fabric_pcs_rst_extend_cntr[9]_inv_i_1 
       (.I0(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ),
        .I1(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ),
        .I2(\fabric_pcs_rst_extend_cntr[8]_i_2_n_0 ),
        .I3(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ),
        .I4(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ),
        .O(p_0_in[9]));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[0] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[0]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[1] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[1]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[2] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[2]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[3] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[3]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[4] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[4]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[5] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[5]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[6] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[6]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[7] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[7]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[7] ));
  FDCE #(
    .INIT(1'b0)) 
    \fabric_pcs_rst_extend_cntr_reg[8] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in[8]),
        .Q(\fabric_pcs_rst_extend_cntr_reg_n_0_[8] ));
  (* inverted = "yes" *) 
  FDPE #(
    .INIT(1'b1)) 
    \fabric_pcs_rst_extend_cntr_reg[9]_inv 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(E),
        .D(p_0_in[9]),
        .PRE(mmcm_not_locked_out2),
        .Q(E));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_i_1 
       (.I0(txpmaresetdone_out[1]),
        .I1(txpmaresetdone_out[0]),
        .I2(txpmaresetdone_out[3]),
        .I3(txpmaresetdone_out[2]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT4 #(
    .INIT(16'h7FFF)) 
    gtwiz_userclk_rx_reset_in_r_i_1
       (.I0(board_aurora_64b66b_0_2_gt_i_n_466),
        .I1(board_aurora_64b66b_0_2_gt_i_n_467),
        .I2(board_aurora_64b66b_0_2_gt_i_n_464),
        .I3(board_aurora_64b66b_0_2_gt_i_n_465),
        .O(gtwiz_userclk_rx_reset_in_r_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_userclk_rx_reset_in_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_reset_in_r_i_1_n_0),
        .Q(gtwiz_userclk_rx_reset_in_r),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h4F44)) 
    hard_err_usr_i_1
       (.I0(hard_err_usr_i_2_n_0),
        .I1(channel_up_tx_if),
        .I2(hard_err_usr_reg),
        .I3(hard_err_usr_reg_0),
        .O(hard_err_usr0));
  LUT4 #(
    .INIT(16'h0001)) 
    hard_err_usr_i_2
       (.I0(int_gt_txbufstatus[1]),
        .I1(int_gt_txbufstatus[7]),
        .I2(int_gt_txbufstatus[5]),
        .I3(int_gt_txbufstatus[3]),
        .O(hard_err_usr_i_2_n_0));
  LUT3 #(
    .INIT(8'hDF)) 
    new_gtx_rx_pcsreset_comb_i_1
       (.I0(gtwiz_userclk_rx_active_in),
        .I1(fsm_resetdone_to_rxreset_in),
        .I2(fsm_resetdone_to_new_gtx_rx_comb),
        .O(new_gtx_rx_pcsreset_comb0));
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* P_CONTENTS = "0" *) 
  (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
  (* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) 
  (* P_USRCLK2_DIV = "3'b000" *) 
  (* P_USRCLK2_INT_DIV = "0" *) 
  (* P_USRCLK_DIV = "3'b000" *) 
  (* P_USRCLK_INT_DIV = "0" *) 
  board_aurora_64b66b_0_2_ultrascale_rx_userclk ultrascale_rx_userclk
       (.gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_userclk_rx_active_out(gtwiz_userclk_rx_active_out),
        .gtwiz_userclk_rx_reset_in(gtwiz_userclk_rx_reset_in_r),
        .gtwiz_userclk_rx_srcclk_in(board_aurora_64b66b_0_2_gt_i_n_461),
        .gtwiz_userclk_rx_usrclk2_out(ultrascale_rx_userclk_n_1),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .lopt(\^lopt ),
        .lopt_1(\^lopt_1 ),
        .lopt_2(\^lopt_2 ));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__29[0]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__29[1]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \usrclk_rx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__29[2]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \usrclk_rx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .O(p_0_in__29[3]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_rx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__29[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \usrclk_rx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__29[5]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_rx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__29[6]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_1 
       (.I0(gtwiz_userclk_rx_active_in),
        .O(gtx_rx_pcsreset_comb));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__29[7]));
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_3 
       (.I0(gtwiz_userclk_rx_active_out),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \usrclk_rx_active_in_extend_cntr[7]_i_4 
       (.I0(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ),
        .I5(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(\usrclk_rx_active_in_extend_cntr[7]_i_4_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[0] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[0]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[1] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[1]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[2] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[2]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[3] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[3]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[4] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[4]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[5] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[5]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[6] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[6]),
        .Q(\usrclk_rx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_rx_active_in_extend_cntr_reg[7] 
       (.C(ultrascale_rx_userclk_n_1),
        .CE(gtx_rx_pcsreset_comb),
        .CLR(\usrclk_rx_active_in_extend_cntr[7]_i_3_n_0 ),
        .D(p_0_in__29[7]),
        .Q(gtwiz_userclk_rx_active_in));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \usrclk_tx_active_in_extend_cntr[0]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \usrclk_tx_active_in_extend_cntr[1]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \usrclk_tx_active_in_extend_cntr[2]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \usrclk_tx_active_in_extend_cntr[3]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \usrclk_tx_active_in_extend_cntr[4]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h6AAAAAAAAAAAAAAA)) 
    \usrclk_tx_active_in_extend_cntr[5]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I5(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .O(p_0_in__0[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \usrclk_tx_active_in_extend_cntr[6]_i_1 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .I1(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .O(p_0_in__0[6]));
  LUT2 #(
    .INIT(4'h1)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_1 
       (.I0(E),
        .I1(gtwiz_userclk_tx_active_in),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_2 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ),
        .I1(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \usrclk_tx_active_in_extend_cntr[7]_i_3 
       (.I0(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ),
        .I1(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ),
        .I2(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ),
        .I3(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ),
        .I4(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ),
        .O(\usrclk_tx_active_in_extend_cntr[7]_i_3_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[0] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[0]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[0] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[1] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[1]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[1] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[2] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[2]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[2] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[3] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[3]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[3] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[4] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[4]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[4] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[5] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[5]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[5] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[6] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[6]),
        .Q(\usrclk_tx_active_in_extend_cntr_reg_n_0_[6] ));
  FDCE #(
    .INIT(1'b0)) 
    \usrclk_tx_active_in_extend_cntr_reg[7] 
       (.C(\fabric_pcs_rst_extend_cntr_reg[8]_0 ),
        .CE(\usrclk_tx_active_in_extend_cntr[7]_i_1_n_0 ),
        .CLR(mmcm_not_locked_out2),
        .D(p_0_in__0[7]),
        .Q(gtwiz_userclk_tx_active_in));
endmodule

module board_aurora_64b66b_0_2_RESET_LOGIC
   (SR,
    ready_r_reg0,
    ready_r_reg0_0,
    ready_r_reg0_1,
    SYSTEM_RESET_reg_0,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    link_reset_out,
    power_down,
    sysreset_from_support,
    stg5_reg,
    hard_err_i,
    ready_r_reg,
    ready_r_reg_0,
    ready_r_reg_1,
    ready_r_reg_2);
  output [0:0]SR;
  output ready_r_reg0;
  output ready_r_reg0_0;
  output ready_r_reg0_1;
  output SYSTEM_RESET_reg_0;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input link_reset_out;
  input power_down;
  input sysreset_from_support;
  input stg5_reg;
  input [2:0]hard_err_i;
  input ready_r_reg;
  input ready_r_reg_0;
  input ready_r_reg_1;
  input ready_r_reg_2;

  wire [0:0]SR;
  wire SYSTEM_RESET0_n_0;
  wire SYSTEM_RESET_reg_0;
  wire fsm_resetdone_sync;
  wire [2:0]hard_err_i;
  wire link_reset_out;
  wire link_reset_sync;
  wire power_down;
  wire power_down_sync;
  wire ready_r_reg;
  wire ready_r_reg0;
  wire ready_r_reg0_0;
  wire ready_r_reg0_1;
  wire ready_r_reg_0;
  wire ready_r_reg_1;
  wire ready_r_reg_2;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg5_reg;
  wire sysreset_from_support;

  LUT4 #(
    .INIT(16'hFFEF)) 
    SYSTEM_RESET0
       (.I0(link_reset_sync),
        .I1(sysreset_from_support),
        .I2(fsm_resetdone_sync),
        .I3(power_down_sync),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(SR),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'hE)) 
    polarity_r_i_1
       (.I0(SR),
        .I1(hard_err_i[2]),
        .O(ready_r_reg0));
  (* SOFT_HLUTNM = "soft_lutpair362" *) 
  LUT2 #(
    .INIT(4'hE)) 
    polarity_r_i_1__0
       (.I0(SR),
        .I1(hard_err_i[1]),
        .O(ready_r_reg0_0));
  LUT2 #(
    .INIT(4'hE)) 
    polarity_r_i_1__1
       (.I0(SR),
        .I1(hard_err_i[0]),
        .O(ready_r_reg0_1));
  board_aurora_64b66b_0_2_rst_sync_5 u_link_rst_sync
       (.link_reset_out(link_reset_out),
        .link_reset_sync(link_reset_sync),
        .stg4_reg_0(stg5_reg));
  board_aurora_64b66b_0_2_rst_sync_6 u_pd_sync
       (.power_down(power_down),
        .power_down_sync(power_down_sync),
        .stg5_reg_0(stg5_reg));
  board_aurora_64b66b_0_2_rst_sync_7 u_rst_done_sync
       (.fsm_resetdone_sync(fsm_resetdone_sync),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg_0(stg5_reg));
  LUT5 #(
    .INIT(32'hBFFFFFFF)) 
    wait_for_lane_up_r_i_2
       (.I0(SR),
        .I1(ready_r_reg),
        .I2(ready_r_reg_0),
        .I3(ready_r_reg_1),
        .I4(ready_r_reg_2),
        .O(SYSTEM_RESET_reg_0));
endmodule

module board_aurora_64b66b_0_2_RX_STREAM
   (m_axi_rx_tvalid,
    m_axi_rx_tdata,
    RX_PE_DATA_V,
    SR,
    \m_axi_rx_tdata_reg[0] ,
    D);
  output m_axi_rx_tvalid;
  output [0:255]m_axi_rx_tdata;
  input [0:3]RX_PE_DATA_V;
  input SR;
  input \m_axi_rx_tdata_reg[0] ;
  input [255:0]D;

  wire [255:0]D;
  wire [0:3]RX_PE_DATA_V;
  wire SR;
  wire [0:255]m_axi_rx_tdata;
  wire \m_axi_rx_tdata_reg[0] ;
  wire m_axi_rx_tvalid;

  board_aurora_64b66b_0_2_RX_STREAM_DATAPATH rx_stream_datapath_i
       (.D(D),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .SR(SR),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .\m_axi_rx_tdata_reg[0]_0 (\m_axi_rx_tdata_reg[0] ),
        .m_axi_rx_tvalid(m_axi_rx_tvalid));
endmodule

module board_aurora_64b66b_0_2_RX_STREAM_DATAPATH
   (m_axi_rx_tvalid,
    m_axi_rx_tdata,
    RX_PE_DATA_V,
    SR,
    \m_axi_rx_tdata_reg[0]_0 ,
    D);
  output m_axi_rx_tvalid;
  output [0:255]m_axi_rx_tdata;
  input [0:3]RX_PE_DATA_V;
  input SR;
  input \m_axi_rx_tdata_reg[0]_0 ;
  input [255:0]D;

  wire [255:0]D;
  wire [0:3]RX_PE_DATA_V;
  wire SR;
  wire [0:255]m_axi_rx_tdata;
  wire \m_axi_rx_tdata_reg[0]_0 ;
  wire m_axi_rx_tvalid;
  wire rx_tvalid_c__0;

  FDRE \m_axi_rx_tdata_reg[0] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[255]),
        .Q(m_axi_rx_tdata[0]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[100] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[155]),
        .Q(m_axi_rx_tdata[100]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[101] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[154]),
        .Q(m_axi_rx_tdata[101]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[102] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[153]),
        .Q(m_axi_rx_tdata[102]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[103] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[152]),
        .Q(m_axi_rx_tdata[103]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[104] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[151]),
        .Q(m_axi_rx_tdata[104]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[105] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[150]),
        .Q(m_axi_rx_tdata[105]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[106] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[149]),
        .Q(m_axi_rx_tdata[106]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[107] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[148]),
        .Q(m_axi_rx_tdata[107]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[108] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[147]),
        .Q(m_axi_rx_tdata[108]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[109] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[146]),
        .Q(m_axi_rx_tdata[109]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[10] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[245]),
        .Q(m_axi_rx_tdata[10]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[110] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[145]),
        .Q(m_axi_rx_tdata[110]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[111] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[144]),
        .Q(m_axi_rx_tdata[111]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[112] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[143]),
        .Q(m_axi_rx_tdata[112]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[113] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[142]),
        .Q(m_axi_rx_tdata[113]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[114] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[141]),
        .Q(m_axi_rx_tdata[114]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[115] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[140]),
        .Q(m_axi_rx_tdata[115]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[116] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[139]),
        .Q(m_axi_rx_tdata[116]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[117] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[138]),
        .Q(m_axi_rx_tdata[117]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[118] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[137]),
        .Q(m_axi_rx_tdata[118]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[119] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[136]),
        .Q(m_axi_rx_tdata[119]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[11] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[244]),
        .Q(m_axi_rx_tdata[11]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[120] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[135]),
        .Q(m_axi_rx_tdata[120]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[121] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[134]),
        .Q(m_axi_rx_tdata[121]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[122] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[133]),
        .Q(m_axi_rx_tdata[122]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[123] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[132]),
        .Q(m_axi_rx_tdata[123]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[124] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[131]),
        .Q(m_axi_rx_tdata[124]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[125] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[130]),
        .Q(m_axi_rx_tdata[125]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[126] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[129]),
        .Q(m_axi_rx_tdata[126]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[127] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[128]),
        .Q(m_axi_rx_tdata[127]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[128] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[127]),
        .Q(m_axi_rx_tdata[128]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[129] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[126]),
        .Q(m_axi_rx_tdata[129]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[12] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[243]),
        .Q(m_axi_rx_tdata[12]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[130] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[125]),
        .Q(m_axi_rx_tdata[130]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[131] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[124]),
        .Q(m_axi_rx_tdata[131]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[132] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[123]),
        .Q(m_axi_rx_tdata[132]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[133] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[122]),
        .Q(m_axi_rx_tdata[133]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[134] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[121]),
        .Q(m_axi_rx_tdata[134]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[135] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[120]),
        .Q(m_axi_rx_tdata[135]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[136] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[119]),
        .Q(m_axi_rx_tdata[136]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[137] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[118]),
        .Q(m_axi_rx_tdata[137]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[138] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[117]),
        .Q(m_axi_rx_tdata[138]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[139] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[116]),
        .Q(m_axi_rx_tdata[139]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[13] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[242]),
        .Q(m_axi_rx_tdata[13]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[140] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[115]),
        .Q(m_axi_rx_tdata[140]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[141] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[114]),
        .Q(m_axi_rx_tdata[141]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[142] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[113]),
        .Q(m_axi_rx_tdata[142]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[143] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[112]),
        .Q(m_axi_rx_tdata[143]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[144] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[111]),
        .Q(m_axi_rx_tdata[144]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[145] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[110]),
        .Q(m_axi_rx_tdata[145]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[146] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[109]),
        .Q(m_axi_rx_tdata[146]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[147] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[108]),
        .Q(m_axi_rx_tdata[147]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[148] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[107]),
        .Q(m_axi_rx_tdata[148]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[149] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[106]),
        .Q(m_axi_rx_tdata[149]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[14] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[241]),
        .Q(m_axi_rx_tdata[14]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[150] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[105]),
        .Q(m_axi_rx_tdata[150]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[151] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[104]),
        .Q(m_axi_rx_tdata[151]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[152] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[103]),
        .Q(m_axi_rx_tdata[152]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[153] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[102]),
        .Q(m_axi_rx_tdata[153]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[154] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[101]),
        .Q(m_axi_rx_tdata[154]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[155] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[100]),
        .Q(m_axi_rx_tdata[155]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[156] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[99]),
        .Q(m_axi_rx_tdata[156]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[157] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[98]),
        .Q(m_axi_rx_tdata[157]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[158] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[97]),
        .Q(m_axi_rx_tdata[158]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[159] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[96]),
        .Q(m_axi_rx_tdata[159]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[15] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[240]),
        .Q(m_axi_rx_tdata[15]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[160] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[95]),
        .Q(m_axi_rx_tdata[160]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[161] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[94]),
        .Q(m_axi_rx_tdata[161]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[162] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[93]),
        .Q(m_axi_rx_tdata[162]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[163] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[92]),
        .Q(m_axi_rx_tdata[163]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[164] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[91]),
        .Q(m_axi_rx_tdata[164]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[165] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[90]),
        .Q(m_axi_rx_tdata[165]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[166] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[89]),
        .Q(m_axi_rx_tdata[166]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[167] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[88]),
        .Q(m_axi_rx_tdata[167]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[168] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[87]),
        .Q(m_axi_rx_tdata[168]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[169] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[86]),
        .Q(m_axi_rx_tdata[169]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[16] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[239]),
        .Q(m_axi_rx_tdata[16]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[170] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[85]),
        .Q(m_axi_rx_tdata[170]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[171] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[84]),
        .Q(m_axi_rx_tdata[171]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[172] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[83]),
        .Q(m_axi_rx_tdata[172]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[173] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[82]),
        .Q(m_axi_rx_tdata[173]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[174] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[81]),
        .Q(m_axi_rx_tdata[174]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[175] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[80]),
        .Q(m_axi_rx_tdata[175]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[176] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[79]),
        .Q(m_axi_rx_tdata[176]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[177] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[78]),
        .Q(m_axi_rx_tdata[177]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[178] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[77]),
        .Q(m_axi_rx_tdata[178]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[179] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[76]),
        .Q(m_axi_rx_tdata[179]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[17] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[238]),
        .Q(m_axi_rx_tdata[17]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[180] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[75]),
        .Q(m_axi_rx_tdata[180]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[181] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[74]),
        .Q(m_axi_rx_tdata[181]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[182] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[73]),
        .Q(m_axi_rx_tdata[182]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[183] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[72]),
        .Q(m_axi_rx_tdata[183]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[184] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[71]),
        .Q(m_axi_rx_tdata[184]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[185] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[70]),
        .Q(m_axi_rx_tdata[185]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[186] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[69]),
        .Q(m_axi_rx_tdata[186]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[187] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[68]),
        .Q(m_axi_rx_tdata[187]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[188] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[67]),
        .Q(m_axi_rx_tdata[188]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[189] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[66]),
        .Q(m_axi_rx_tdata[189]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[18] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[237]),
        .Q(m_axi_rx_tdata[18]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[190] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[65]),
        .Q(m_axi_rx_tdata[190]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[191] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[64]),
        .Q(m_axi_rx_tdata[191]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[192] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[63]),
        .Q(m_axi_rx_tdata[192]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[193] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[62]),
        .Q(m_axi_rx_tdata[193]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[194] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[61]),
        .Q(m_axi_rx_tdata[194]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[195] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[60]),
        .Q(m_axi_rx_tdata[195]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[196] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[59]),
        .Q(m_axi_rx_tdata[196]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[197] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[58]),
        .Q(m_axi_rx_tdata[197]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[198] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[57]),
        .Q(m_axi_rx_tdata[198]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[199] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[56]),
        .Q(m_axi_rx_tdata[199]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[19] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[236]),
        .Q(m_axi_rx_tdata[19]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[1] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[254]),
        .Q(m_axi_rx_tdata[1]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[200] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[55]),
        .Q(m_axi_rx_tdata[200]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[201] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[54]),
        .Q(m_axi_rx_tdata[201]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[202] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[53]),
        .Q(m_axi_rx_tdata[202]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[203] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[52]),
        .Q(m_axi_rx_tdata[203]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[204] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[51]),
        .Q(m_axi_rx_tdata[204]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[205] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[50]),
        .Q(m_axi_rx_tdata[205]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[206] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[49]),
        .Q(m_axi_rx_tdata[206]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[207] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[48]),
        .Q(m_axi_rx_tdata[207]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[208] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[47]),
        .Q(m_axi_rx_tdata[208]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[209] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[46]),
        .Q(m_axi_rx_tdata[209]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[20] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[235]),
        .Q(m_axi_rx_tdata[20]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[210] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[45]),
        .Q(m_axi_rx_tdata[210]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[211] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[44]),
        .Q(m_axi_rx_tdata[211]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[212] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[43]),
        .Q(m_axi_rx_tdata[212]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[213] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[42]),
        .Q(m_axi_rx_tdata[213]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[214] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[41]),
        .Q(m_axi_rx_tdata[214]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[215] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[40]),
        .Q(m_axi_rx_tdata[215]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[216] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[39]),
        .Q(m_axi_rx_tdata[216]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[217] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[38]),
        .Q(m_axi_rx_tdata[217]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[218] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[37]),
        .Q(m_axi_rx_tdata[218]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[219] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[36]),
        .Q(m_axi_rx_tdata[219]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[21] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[234]),
        .Q(m_axi_rx_tdata[21]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[220] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[35]),
        .Q(m_axi_rx_tdata[220]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[221] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[34]),
        .Q(m_axi_rx_tdata[221]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[222] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[33]),
        .Q(m_axi_rx_tdata[222]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[223] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[32]),
        .Q(m_axi_rx_tdata[223]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[224] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[31]),
        .Q(m_axi_rx_tdata[224]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[225] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[30]),
        .Q(m_axi_rx_tdata[225]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[226] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[29]),
        .Q(m_axi_rx_tdata[226]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[227] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[28]),
        .Q(m_axi_rx_tdata[227]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[228] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[27]),
        .Q(m_axi_rx_tdata[228]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[229] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[26]),
        .Q(m_axi_rx_tdata[229]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[22] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[233]),
        .Q(m_axi_rx_tdata[22]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[230] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[25]),
        .Q(m_axi_rx_tdata[230]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[231] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[24]),
        .Q(m_axi_rx_tdata[231]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[232] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[23]),
        .Q(m_axi_rx_tdata[232]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[233] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[22]),
        .Q(m_axi_rx_tdata[233]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[234] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[21]),
        .Q(m_axi_rx_tdata[234]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[235] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[20]),
        .Q(m_axi_rx_tdata[235]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[236] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[19]),
        .Q(m_axi_rx_tdata[236]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[237] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[18]),
        .Q(m_axi_rx_tdata[237]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[238] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[17]),
        .Q(m_axi_rx_tdata[238]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[239] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[16]),
        .Q(m_axi_rx_tdata[239]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[23] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[232]),
        .Q(m_axi_rx_tdata[23]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[240] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[15]),
        .Q(m_axi_rx_tdata[240]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[241] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[14]),
        .Q(m_axi_rx_tdata[241]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[242] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[13]),
        .Q(m_axi_rx_tdata[242]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[243] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[12]),
        .Q(m_axi_rx_tdata[243]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[244] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[11]),
        .Q(m_axi_rx_tdata[244]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[245] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[10]),
        .Q(m_axi_rx_tdata[245]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[246] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[9]),
        .Q(m_axi_rx_tdata[246]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[247] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[8]),
        .Q(m_axi_rx_tdata[247]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[248] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[7]),
        .Q(m_axi_rx_tdata[248]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[249] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[6]),
        .Q(m_axi_rx_tdata[249]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[24] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[231]),
        .Q(m_axi_rx_tdata[24]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[250] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[5]),
        .Q(m_axi_rx_tdata[250]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[251] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[4]),
        .Q(m_axi_rx_tdata[251]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[252] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[3]),
        .Q(m_axi_rx_tdata[252]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[253] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[2]),
        .Q(m_axi_rx_tdata[253]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[254] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[1]),
        .Q(m_axi_rx_tdata[254]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[255] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[0]),
        .Q(m_axi_rx_tdata[255]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[25] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[230]),
        .Q(m_axi_rx_tdata[25]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[26] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[229]),
        .Q(m_axi_rx_tdata[26]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[27] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[228]),
        .Q(m_axi_rx_tdata[27]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[28] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[227]),
        .Q(m_axi_rx_tdata[28]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[29] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[226]),
        .Q(m_axi_rx_tdata[29]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[2] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[253]),
        .Q(m_axi_rx_tdata[2]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[30] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[225]),
        .Q(m_axi_rx_tdata[30]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[31] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[224]),
        .Q(m_axi_rx_tdata[31]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[32] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[223]),
        .Q(m_axi_rx_tdata[32]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[33] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[222]),
        .Q(m_axi_rx_tdata[33]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[34] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[221]),
        .Q(m_axi_rx_tdata[34]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[35] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[220]),
        .Q(m_axi_rx_tdata[35]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[36] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[219]),
        .Q(m_axi_rx_tdata[36]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[37] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[218]),
        .Q(m_axi_rx_tdata[37]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[38] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[217]),
        .Q(m_axi_rx_tdata[38]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[39] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[216]),
        .Q(m_axi_rx_tdata[39]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[3] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[252]),
        .Q(m_axi_rx_tdata[3]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[40] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[215]),
        .Q(m_axi_rx_tdata[40]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[41] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[214]),
        .Q(m_axi_rx_tdata[41]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[42] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[213]),
        .Q(m_axi_rx_tdata[42]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[43] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[212]),
        .Q(m_axi_rx_tdata[43]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[44] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[211]),
        .Q(m_axi_rx_tdata[44]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[45] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[210]),
        .Q(m_axi_rx_tdata[45]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[46] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[209]),
        .Q(m_axi_rx_tdata[46]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[47] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[208]),
        .Q(m_axi_rx_tdata[47]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[48] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[207]),
        .Q(m_axi_rx_tdata[48]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[49] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[206]),
        .Q(m_axi_rx_tdata[49]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[4] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[251]),
        .Q(m_axi_rx_tdata[4]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[50] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[205]),
        .Q(m_axi_rx_tdata[50]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[51] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[204]),
        .Q(m_axi_rx_tdata[51]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[52] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[203]),
        .Q(m_axi_rx_tdata[52]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[53] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[202]),
        .Q(m_axi_rx_tdata[53]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[54] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[201]),
        .Q(m_axi_rx_tdata[54]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[55] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[200]),
        .Q(m_axi_rx_tdata[55]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[56] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[199]),
        .Q(m_axi_rx_tdata[56]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[57] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[198]),
        .Q(m_axi_rx_tdata[57]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[58] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[197]),
        .Q(m_axi_rx_tdata[58]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[59] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[196]),
        .Q(m_axi_rx_tdata[59]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[5] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[250]),
        .Q(m_axi_rx_tdata[5]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[60] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[195]),
        .Q(m_axi_rx_tdata[60]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[61] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[194]),
        .Q(m_axi_rx_tdata[61]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[62] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[193]),
        .Q(m_axi_rx_tdata[62]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[63] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[192]),
        .Q(m_axi_rx_tdata[63]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[64] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[191]),
        .Q(m_axi_rx_tdata[64]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[65] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[190]),
        .Q(m_axi_rx_tdata[65]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[66] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[189]),
        .Q(m_axi_rx_tdata[66]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[67] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[188]),
        .Q(m_axi_rx_tdata[67]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[68] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[187]),
        .Q(m_axi_rx_tdata[68]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[69] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[186]),
        .Q(m_axi_rx_tdata[69]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[6] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[249]),
        .Q(m_axi_rx_tdata[6]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[70] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[185]),
        .Q(m_axi_rx_tdata[70]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[71] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[184]),
        .Q(m_axi_rx_tdata[71]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[72] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[183]),
        .Q(m_axi_rx_tdata[72]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[73] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[182]),
        .Q(m_axi_rx_tdata[73]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[74] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[181]),
        .Q(m_axi_rx_tdata[74]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[75] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[180]),
        .Q(m_axi_rx_tdata[75]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[76] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[179]),
        .Q(m_axi_rx_tdata[76]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[77] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[178]),
        .Q(m_axi_rx_tdata[77]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[78] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[177]),
        .Q(m_axi_rx_tdata[78]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[79] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[176]),
        .Q(m_axi_rx_tdata[79]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[7] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[248]),
        .Q(m_axi_rx_tdata[7]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[80] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[175]),
        .Q(m_axi_rx_tdata[80]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[81] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[174]),
        .Q(m_axi_rx_tdata[81]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[82] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[173]),
        .Q(m_axi_rx_tdata[82]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[83] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[172]),
        .Q(m_axi_rx_tdata[83]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[84] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[171]),
        .Q(m_axi_rx_tdata[84]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[85] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[170]),
        .Q(m_axi_rx_tdata[85]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[86] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[169]),
        .Q(m_axi_rx_tdata[86]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[87] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[168]),
        .Q(m_axi_rx_tdata[87]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[88] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[167]),
        .Q(m_axi_rx_tdata[88]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[89] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[166]),
        .Q(m_axi_rx_tdata[89]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[8] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[247]),
        .Q(m_axi_rx_tdata[8]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[90] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[165]),
        .Q(m_axi_rx_tdata[90]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[91] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[164]),
        .Q(m_axi_rx_tdata[91]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[92] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[163]),
        .Q(m_axi_rx_tdata[92]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[93] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[162]),
        .Q(m_axi_rx_tdata[93]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[94] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[161]),
        .Q(m_axi_rx_tdata[94]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[95] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[160]),
        .Q(m_axi_rx_tdata[95]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[96] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[159]),
        .Q(m_axi_rx_tdata[96]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[97] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[158]),
        .Q(m_axi_rx_tdata[97]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[98] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[157]),
        .Q(m_axi_rx_tdata[98]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[99] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[156]),
        .Q(m_axi_rx_tdata[99]),
        .R(1'b0));
  FDRE \m_axi_rx_tdata_reg[9] 
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(D[246]),
        .Q(m_axi_rx_tdata[9]),
        .R(1'b0));
  FDRE m_axi_rx_tvalid_reg
       (.C(\m_axi_rx_tdata_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_tvalid_c__0),
        .Q(m_axi_rx_tvalid),
        .R(SR));
  LUT4 #(
    .INIT(16'h8000)) 
    rx_tvalid_c
       (.I0(RX_PE_DATA_V[2]),
        .I1(RX_PE_DATA_V[3]),
        .I2(RX_PE_DATA_V[0]),
        .I3(RX_PE_DATA_V[1]),
        .O(rx_tvalid_c__0));
endmodule

module board_aurora_64b66b_0_2_SCRAMBLER_64B66B
   (E,
    SCRAMBLED_DATA_OUT,
    Q,
    \scrambler_reg[57]_0 ,
    \SCRAMBLED_DATA_OUT_reg[63]_0 );
  output [0:0]E;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input \scrambler_reg[57]_0 ;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;

  wire [0:0]E;
  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler[57]_i_3_n_0 ;
  wire \scrambler_reg[57]_0 ;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;

  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair265" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair264" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair263" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair262" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair261" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair260" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair279" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair274" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair273" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair272" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair271" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair270" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair269" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair268" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair267" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT6 #(
    .INIT(64'hFFFFFFFBFFFFFFFF)) 
    \scrambler[57]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[6]),
        .I5(\scrambler[57]_i_3_n_0 ),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair266" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT2 #(
    .INIT(4'h1)) 
    \scrambler[57]_i_3 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\scrambler[57]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair278" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair277" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair276" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair275" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(E),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_SCRAMBLER_64B66B_14
   (\txseq_counter_i_lane1_reg[1] ,
    SCRAMBLED_DATA_OUT,
    Q,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_lane1_reg[1] ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i_lane1;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane1_reg[1] ;

  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__0 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__0 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__0 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__0 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__0 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__0 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__0 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__0 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__0 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__0 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__0 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__0 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__0 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__0 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__0 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair285" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__0 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair284" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__0 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair283" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__0 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair282" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__0 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair281" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__0 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair280" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__0 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__0 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__0 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__0 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__0 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__0 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__0 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__0 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__0 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__0 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__0 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__0 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__0 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__0 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__0 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__0 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__0 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__0 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__0 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__0 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair299" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__0 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__0 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__0 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__0 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__0 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair294" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__0 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair293" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__0 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair292" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__0 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair291" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__0 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair290" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__0 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair289" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__0 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair288" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__0 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair287" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__0 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \scrambler[57]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\txseq_counter_i_lane1_reg[1] ),
        .O(data_valid_i_lane1));
  (* SOFT_HLUTNM = "soft_lutpair286" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__0 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \scrambler[57]_i_3__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[6]),
        .I3(Q[4]),
        .O(\txseq_counter_i_lane1_reg[1] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__0 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair298" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__0 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair297" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__0 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair296" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__0 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair295" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__0 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane1),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_SCRAMBLER_64B66B_15
   (\txseq_counter_i_lane2_reg[1] ,
    SCRAMBLED_DATA_OUT,
    Q,
    \scrambler_reg[57]_0 ,
    \SCRAMBLED_DATA_OUT_reg[63]_0 );
  output \txseq_counter_i_lane2_reg[1] ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input \scrambler_reg[57]_0 ;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire data_valid_i_lane2;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg[57]_0 ;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane2_reg[1] ;

  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__1 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__1 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__1 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__1 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__1 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__1 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__1 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__1 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__1 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__1 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__1 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__1 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__1 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__1 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__1 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair305" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__1 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair304" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__1 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair303" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__1 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair302" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__1 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair301" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__1 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair300" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__1 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__1 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__1 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__1 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__1 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__1 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__1 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__1 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__1 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__1 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__1 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__1 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__1 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__1 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__1 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__1 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__1 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__1 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__1 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__1 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair319" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__1 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__1 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__1 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__1 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__1 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair314" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__1 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair313" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__1 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair312" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__1 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair311" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__1 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair310" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__1 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair309" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__1 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair308" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__1 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair307" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__1 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \scrambler[57]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\txseq_counter_i_lane2_reg[1] ),
        .O(data_valid_i_lane2));
  (* SOFT_HLUTNM = "soft_lutpair306" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__1 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \scrambler[57]_i_3__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[6]),
        .I3(Q[4]),
        .O(\txseq_counter_i_lane2_reg[1] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__1 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_0 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_0 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair318" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__1 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair317" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__1 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair316" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__1 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair315" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__1 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_0 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_0 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(\scrambler_reg[57]_0 ),
        .CE(data_valid_i_lane2),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SCRAMBLER_64B66B" *) 
module board_aurora_64b66b_0_2_SCRAMBLER_64B66B_16
   (\txseq_counter_i_lane3_reg[1] ,
    SCRAMBLED_DATA_OUT,
    Q,
    \SCRAMBLED_DATA_OUT_reg[63]_0 ,
    \SCRAMBLED_DATA_OUT_reg[63]_1 );
  output \txseq_counter_i_lane3_reg[1] ;
  output [63:0]SCRAMBLED_DATA_OUT;
  input [6:0]Q;
  input \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  input [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;

  wire [6:0]Q;
  wire [63:0]SCRAMBLED_DATA_OUT;
  wire \SCRAMBLED_DATA_OUT_reg[63]_0 ;
  wire [63:0]\SCRAMBLED_DATA_OUT_reg[63]_1 ;
  wire data_valid_i_lane3;
  wire p_101_in;
  wire p_105_in;
  wire p_109_in;
  wire p_113_in;
  wire p_117_in;
  wire p_121_in;
  wire p_125_in;
  wire p_129_in;
  wire p_133_in;
  wire p_137_in;
  wire p_141_in;
  wire p_145_in;
  wire p_149_in;
  wire p_153_in;
  wire p_157_in;
  wire p_161_in;
  wire p_165_in;
  wire p_169_in;
  wire p_173_in;
  wire p_177_in;
  wire p_181_in;
  wire p_185_in;
  wire p_189_in;
  wire p_193_in;
  wire p_197_in;
  wire p_201_in;
  wire p_205_in;
  wire p_209_in;
  wire p_213_in;
  wire p_217_in;
  wire p_221_in;
  wire p_225_in;
  wire p_229_in;
  wire p_233_in;
  wire p_237_in;
  wire p_241_in;
  wire p_245_in;
  wire p_249_in;
  wire p_97_in;
  wire \scrambler_reg_n_0_[39] ;
  wire \scrambler_reg_n_0_[40] ;
  wire \scrambler_reg_n_0_[41] ;
  wire \scrambler_reg_n_0_[42] ;
  wire \scrambler_reg_n_0_[43] ;
  wire \scrambler_reg_n_0_[44] ;
  wire \scrambler_reg_n_0_[45] ;
  wire \scrambler_reg_n_0_[46] ;
  wire \scrambler_reg_n_0_[47] ;
  wire \scrambler_reg_n_0_[48] ;
  wire \scrambler_reg_n_0_[49] ;
  wire \scrambler_reg_n_0_[50] ;
  wire \scrambler_reg_n_0_[51] ;
  wire \scrambler_reg_n_0_[52] ;
  wire \scrambler_reg_n_0_[53] ;
  wire \scrambler_reg_n_0_[54] ;
  wire \scrambler_reg_n_0_[55] ;
  wire \scrambler_reg_n_0_[56] ;
  wire \scrambler_reg_n_0_[57] ;
  wire tempData0;
  wire tempData0100_out;
  wire tempData0104_out;
  wire tempData0108_out;
  wire tempData0112_out;
  wire tempData0116_out;
  wire tempData0120_out;
  wire tempData0124_out;
  wire tempData0128_out;
  wire tempData012_out;
  wire tempData0132_out;
  wire tempData0136_out;
  wire tempData0140_out;
  wire tempData0144_out;
  wire tempData0148_out;
  wire tempData0152_out;
  wire tempData0156_out;
  wire tempData0160_out;
  wire tempData0164_out;
  wire tempData0168_out;
  wire tempData016_out;
  wire tempData0172_out;
  wire tempData0176_out;
  wire tempData0180_out;
  wire tempData0184_out;
  wire tempData0188_out;
  wire tempData0192_out;
  wire tempData0196_out;
  wire tempData0200_out;
  wire tempData0204_out;
  wire tempData0208_out;
  wire tempData020_out;
  wire tempData0212_out;
  wire tempData0216_out;
  wire tempData0220_out;
  wire tempData0224_out;
  wire tempData0228_out;
  wire tempData0232_out;
  wire tempData0236_out;
  wire tempData0240_out;
  wire tempData0244_out;
  wire tempData0248_out;
  wire tempData024_out;
  wire tempData0252_out;
  wire tempData028_out;
  wire tempData032_out;
  wire tempData036_out;
  wire tempData040_out;
  wire tempData044_out;
  wire tempData048_out;
  wire tempData04_out;
  wire tempData052_out;
  wire tempData056_out;
  wire tempData060_out;
  wire tempData064_out;
  wire tempData068_out;
  wire tempData072_out;
  wire tempData076_out;
  wire tempData080_out;
  wire tempData084_out;
  wire tempData088_out;
  wire tempData08_out;
  wire tempData092_out;
  wire tempData096_out;
  wire \txseq_counter_i_lane3_reg[1] ;

  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[58]_i_1__2 
       (.I0(p_229_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(\scrambler_reg_n_0_[52] ),
        .O(tempData0232_out));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[59]_i_1__2 
       (.I0(p_233_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(\scrambler_reg_n_0_[53] ),
        .O(tempData0236_out));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[60]_i_1__2 
       (.I0(p_237_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(\scrambler_reg_n_0_[54] ),
        .O(tempData0240_out));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[61]_i_1__2 
       (.I0(p_241_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(\scrambler_reg_n_0_[55] ),
        .O(tempData0244_out));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[62]_i_1__2 
       (.I0(p_245_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(\scrambler_reg_n_0_[56] ),
        .O(tempData0248_out));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \SCRAMBLED_DATA_OUT[63]_i_1__2 
       (.I0(p_249_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(\scrambler_reg_n_0_[57] ),
        .O(tempData0252_out));
  FDRE \SCRAMBLED_DATA_OUT_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0),
        .Q(SCRAMBLED_DATA_OUT[0]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData040_out),
        .Q(SCRAMBLED_DATA_OUT[10]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData044_out),
        .Q(SCRAMBLED_DATA_OUT[11]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData048_out),
        .Q(SCRAMBLED_DATA_OUT[12]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData052_out),
        .Q(SCRAMBLED_DATA_OUT[13]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData056_out),
        .Q(SCRAMBLED_DATA_OUT[14]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData060_out),
        .Q(SCRAMBLED_DATA_OUT[15]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData064_out),
        .Q(SCRAMBLED_DATA_OUT[16]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData068_out),
        .Q(SCRAMBLED_DATA_OUT[17]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData072_out),
        .Q(SCRAMBLED_DATA_OUT[18]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData076_out),
        .Q(SCRAMBLED_DATA_OUT[19]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData04_out),
        .Q(SCRAMBLED_DATA_OUT[1]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData080_out),
        .Q(SCRAMBLED_DATA_OUT[20]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData084_out),
        .Q(SCRAMBLED_DATA_OUT[21]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData088_out),
        .Q(SCRAMBLED_DATA_OUT[22]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData092_out),
        .Q(SCRAMBLED_DATA_OUT[23]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData096_out),
        .Q(SCRAMBLED_DATA_OUT[24]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0100_out),
        .Q(SCRAMBLED_DATA_OUT[25]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0104_out),
        .Q(SCRAMBLED_DATA_OUT[26]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0108_out),
        .Q(SCRAMBLED_DATA_OUT[27]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0112_out),
        .Q(SCRAMBLED_DATA_OUT[28]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0116_out),
        .Q(SCRAMBLED_DATA_OUT[29]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData08_out),
        .Q(SCRAMBLED_DATA_OUT[2]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0120_out),
        .Q(SCRAMBLED_DATA_OUT[30]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0124_out),
        .Q(SCRAMBLED_DATA_OUT[31]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0128_out),
        .Q(SCRAMBLED_DATA_OUT[32]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0132_out),
        .Q(SCRAMBLED_DATA_OUT[33]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0136_out),
        .Q(SCRAMBLED_DATA_OUT[34]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0140_out),
        .Q(SCRAMBLED_DATA_OUT[35]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0144_out),
        .Q(SCRAMBLED_DATA_OUT[36]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0148_out),
        .Q(SCRAMBLED_DATA_OUT[37]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0152_out),
        .Q(SCRAMBLED_DATA_OUT[38]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0156_out),
        .Q(SCRAMBLED_DATA_OUT[39]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData012_out),
        .Q(SCRAMBLED_DATA_OUT[3]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0160_out),
        .Q(SCRAMBLED_DATA_OUT[40]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0164_out),
        .Q(SCRAMBLED_DATA_OUT[41]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0168_out),
        .Q(SCRAMBLED_DATA_OUT[42]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0172_out),
        .Q(SCRAMBLED_DATA_OUT[43]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0176_out),
        .Q(SCRAMBLED_DATA_OUT[44]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0180_out),
        .Q(SCRAMBLED_DATA_OUT[45]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0184_out),
        .Q(SCRAMBLED_DATA_OUT[46]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0188_out),
        .Q(SCRAMBLED_DATA_OUT[47]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0192_out),
        .Q(SCRAMBLED_DATA_OUT[48]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0196_out),
        .Q(SCRAMBLED_DATA_OUT[49]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData016_out),
        .Q(SCRAMBLED_DATA_OUT[4]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0200_out),
        .Q(SCRAMBLED_DATA_OUT[50]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0204_out),
        .Q(SCRAMBLED_DATA_OUT[51]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0208_out),
        .Q(SCRAMBLED_DATA_OUT[52]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0212_out),
        .Q(SCRAMBLED_DATA_OUT[53]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0216_out),
        .Q(SCRAMBLED_DATA_OUT[54]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0220_out),
        .Q(SCRAMBLED_DATA_OUT[55]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0224_out),
        .Q(SCRAMBLED_DATA_OUT[56]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0228_out),
        .Q(SCRAMBLED_DATA_OUT[57]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[58] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0232_out),
        .Q(SCRAMBLED_DATA_OUT[58]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[59] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0236_out),
        .Q(SCRAMBLED_DATA_OUT[59]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData020_out),
        .Q(SCRAMBLED_DATA_OUT[5]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[60] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0240_out),
        .Q(SCRAMBLED_DATA_OUT[60]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[61] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0244_out),
        .Q(SCRAMBLED_DATA_OUT[61]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[62] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0248_out),
        .Q(SCRAMBLED_DATA_OUT[62]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[63] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0252_out),
        .Q(SCRAMBLED_DATA_OUT[63]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData024_out),
        .Q(SCRAMBLED_DATA_OUT[6]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData028_out),
        .Q(SCRAMBLED_DATA_OUT[7]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData032_out),
        .Q(SCRAMBLED_DATA_OUT[8]),
        .R(1'b0));
  FDRE \SCRAMBLED_DATA_OUT_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData036_out),
        .Q(SCRAMBLED_DATA_OUT[9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[0]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I1(p_153_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [0]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I4(\scrambler_reg_n_0_[52] ),
        .O(tempData0));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[10]_i_1__2 
       (.I0(\scrambler_reg_n_0_[43] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(p_193_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [10]),
        .I4(p_113_in),
        .O(tempData040_out));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[11]_i_1__2 
       (.I0(\scrambler_reg_n_0_[44] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(p_197_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [11]),
        .I4(p_117_in),
        .O(tempData044_out));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[12]_i_1__2 
       (.I0(\scrambler_reg_n_0_[45] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(p_201_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [12]),
        .I4(p_121_in),
        .O(tempData048_out));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[13]_i_1__2 
       (.I0(\scrambler_reg_n_0_[46] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(p_205_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [13]),
        .I4(p_125_in),
        .O(tempData052_out));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[14]_i_1__2 
       (.I0(\scrambler_reg_n_0_[47] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(p_209_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [14]),
        .I4(p_129_in),
        .O(tempData056_out));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[15]_i_1__2 
       (.I0(\scrambler_reg_n_0_[48] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(p_213_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [15]),
        .I4(p_133_in),
        .O(tempData060_out));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[16]_i_1__2 
       (.I0(\scrambler_reg_n_0_[49] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(p_217_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [16]),
        .I4(p_137_in),
        .O(tempData064_out));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[17]_i_1__2 
       (.I0(\scrambler_reg_n_0_[50] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(p_221_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [17]),
        .I4(p_141_in),
        .O(tempData068_out));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[18]_i_1__2 
       (.I0(\scrambler_reg_n_0_[51] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(p_225_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [18]),
        .I4(p_145_in),
        .O(tempData072_out));
  (* SOFT_HLUTNM = "soft_lutpair325" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[19]_i_1__2 
       (.I0(\scrambler_reg_n_0_[52] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [58]),
        .I2(p_229_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [19]),
        .I4(p_149_in),
        .O(tempData076_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[1]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I1(p_157_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [1]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I4(\scrambler_reg_n_0_[53] ),
        .O(tempData04_out));
  (* SOFT_HLUTNM = "soft_lutpair324" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[20]_i_1__2 
       (.I0(\scrambler_reg_n_0_[53] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [59]),
        .I2(p_233_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [20]),
        .I4(p_153_in),
        .O(tempData080_out));
  (* SOFT_HLUTNM = "soft_lutpair323" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[21]_i_1__2 
       (.I0(\scrambler_reg_n_0_[54] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I2(p_237_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [21]),
        .I4(p_157_in),
        .O(tempData084_out));
  (* SOFT_HLUTNM = "soft_lutpair322" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[22]_i_1__2 
       (.I0(\scrambler_reg_n_0_[55] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I2(p_241_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [22]),
        .I4(p_161_in),
        .O(tempData088_out));
  (* SOFT_HLUTNM = "soft_lutpair321" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[23]_i_1__2 
       (.I0(\scrambler_reg_n_0_[56] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I2(p_245_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [23]),
        .I4(p_165_in),
        .O(tempData092_out));
  (* SOFT_HLUTNM = "soft_lutpair320" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[24]_i_1__2 
       (.I0(\scrambler_reg_n_0_[57] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I2(p_249_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [24]),
        .I4(p_169_in),
        .O(tempData096_out));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[25]_i_1__2 
       (.I0(p_97_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [25]),
        .I2(p_173_in),
        .O(tempData0100_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[26]_i_1__2 
       (.I0(p_101_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [26]),
        .I2(p_177_in),
        .O(tempData0104_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[27]_i_1__2 
       (.I0(p_105_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [27]),
        .I2(p_181_in),
        .O(tempData0108_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[28]_i_1__2 
       (.I0(p_109_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [28]),
        .I2(p_185_in),
        .O(tempData0112_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[29]_i_1__2 
       (.I0(p_113_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [29]),
        .I2(p_189_in),
        .O(tempData0116_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[2]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I1(p_161_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [2]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [60]),
        .I4(\scrambler_reg_n_0_[54] ),
        .O(tempData08_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[30]_i_1__2 
       (.I0(p_117_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [30]),
        .I2(p_193_in),
        .O(tempData0120_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[31]_i_1__2 
       (.I0(p_121_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [31]),
        .I2(p_197_in),
        .O(tempData0124_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[32]_i_1__2 
       (.I0(p_125_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [32]),
        .I2(p_201_in),
        .O(tempData0128_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[33]_i_1__2 
       (.I0(p_129_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [33]),
        .I2(p_205_in),
        .O(tempData0132_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[34]_i_1__2 
       (.I0(p_133_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [34]),
        .I2(p_209_in),
        .O(tempData0136_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[35]_i_1__2 
       (.I0(p_137_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [35]),
        .I2(p_213_in),
        .O(tempData0140_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[36]_i_1__2 
       (.I0(p_141_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [36]),
        .I2(p_217_in),
        .O(tempData0144_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[37]_i_1__2 
       (.I0(p_145_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [37]),
        .I2(p_221_in),
        .O(tempData0148_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[38]_i_1__2 
       (.I0(p_149_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [38]),
        .I2(p_225_in),
        .O(tempData0152_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[39]_i_1__2 
       (.I0(p_153_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [39]),
        .I2(p_229_in),
        .O(tempData0156_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[3]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I1(p_165_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [3]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [61]),
        .I4(\scrambler_reg_n_0_[55] ),
        .O(tempData012_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[40]_i_1__2 
       (.I0(p_157_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [40]),
        .I2(p_233_in),
        .O(tempData0160_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[41]_i_1__2 
       (.I0(p_161_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [41]),
        .I2(p_237_in),
        .O(tempData0164_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[42]_i_1__2 
       (.I0(p_165_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [42]),
        .I2(p_241_in),
        .O(tempData0168_out));
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[43]_i_1__2 
       (.I0(p_169_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I2(p_245_in),
        .O(tempData0172_out));
  (* SOFT_HLUTNM = "soft_lutpair339" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[44]_i_1__2 
       (.I0(p_173_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I2(p_249_in),
        .O(tempData0176_out));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[45]_i_1__2 
       (.I0(p_177_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(\scrambler_reg_n_0_[39] ),
        .O(tempData0180_out));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[46]_i_1__2 
       (.I0(p_181_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(\scrambler_reg_n_0_[40] ),
        .O(tempData0184_out));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[47]_i_1__2 
       (.I0(p_185_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(\scrambler_reg_n_0_[41] ),
        .O(tempData0188_out));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[48]_i_1__2 
       (.I0(p_189_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(\scrambler_reg_n_0_[42] ),
        .O(tempData0192_out));
  (* SOFT_HLUTNM = "soft_lutpair334" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[49]_i_1__2 
       (.I0(p_193_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [49]),
        .I2(\scrambler_reg_n_0_[43] ),
        .O(tempData0196_out));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[4]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [43]),
        .I1(p_169_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [4]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [62]),
        .I4(\scrambler_reg_n_0_[56] ),
        .O(tempData016_out));
  (* SOFT_HLUTNM = "soft_lutpair333" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[50]_i_1__2 
       (.I0(p_197_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [50]),
        .I2(\scrambler_reg_n_0_[44] ),
        .O(tempData0200_out));
  (* SOFT_HLUTNM = "soft_lutpair332" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[51]_i_1__2 
       (.I0(p_201_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [51]),
        .I2(\scrambler_reg_n_0_[45] ),
        .O(tempData0204_out));
  (* SOFT_HLUTNM = "soft_lutpair331" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[52]_i_1__2 
       (.I0(p_205_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [52]),
        .I2(\scrambler_reg_n_0_[46] ),
        .O(tempData0208_out));
  (* SOFT_HLUTNM = "soft_lutpair330" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[53]_i_1__2 
       (.I0(p_209_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [53]),
        .I2(\scrambler_reg_n_0_[47] ),
        .O(tempData0212_out));
  (* SOFT_HLUTNM = "soft_lutpair329" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[54]_i_1__2 
       (.I0(p_213_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [54]),
        .I2(\scrambler_reg_n_0_[48] ),
        .O(tempData0216_out));
  (* SOFT_HLUTNM = "soft_lutpair328" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[55]_i_1__2 
       (.I0(p_217_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [55]),
        .I2(\scrambler_reg_n_0_[49] ),
        .O(tempData0220_out));
  (* SOFT_HLUTNM = "soft_lutpair327" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[56]_i_1__2 
       (.I0(p_221_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [56]),
        .I2(\scrambler_reg_n_0_[50] ),
        .O(tempData0224_out));
  LUT4 #(
    .INIT(16'hFFEF)) 
    \scrambler[57]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(\txseq_counter_i_lane3_reg[1] ),
        .O(data_valid_i_lane3));
  (* SOFT_HLUTNM = "soft_lutpair326" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \scrambler[57]_i_2__2 
       (.I0(p_225_in),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [57]),
        .I2(\scrambler_reg_n_0_[51] ),
        .O(tempData0228_out));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \scrambler[57]_i_3__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[6]),
        .I3(Q[4]),
        .O(\txseq_counter_i_lane3_reg[1] ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[5]_i_1__2 
       (.I0(\SCRAMBLED_DATA_OUT_reg[63]_1 [44]),
        .I1(p_173_in),
        .I2(\SCRAMBLED_DATA_OUT_reg[63]_1 [5]),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [63]),
        .I4(\scrambler_reg_n_0_[57] ),
        .O(tempData020_out));
  (* SOFT_HLUTNM = "soft_lutpair338" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[6]_i_1__2 
       (.I0(\scrambler_reg_n_0_[39] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [45]),
        .I2(p_177_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [6]),
        .I4(p_97_in),
        .O(tempData024_out));
  (* SOFT_HLUTNM = "soft_lutpair337" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[7]_i_1__2 
       (.I0(\scrambler_reg_n_0_[40] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [46]),
        .I2(p_181_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [7]),
        .I4(p_101_in),
        .O(tempData028_out));
  (* SOFT_HLUTNM = "soft_lutpair336" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[8]_i_1__2 
       (.I0(\scrambler_reg_n_0_[41] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [47]),
        .I2(p_185_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [8]),
        .I4(p_105_in),
        .O(tempData032_out));
  (* SOFT_HLUTNM = "soft_lutpair335" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \scrambler[9]_i_1__2 
       (.I0(\scrambler_reg_n_0_[42] ),
        .I1(\SCRAMBLED_DATA_OUT_reg[63]_1 [48]),
        .I2(p_189_in),
        .I3(\SCRAMBLED_DATA_OUT_reg[63]_1 [9]),
        .I4(p_109_in),
        .O(tempData036_out));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[0] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0),
        .Q(p_97_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[10] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData040_out),
        .Q(p_137_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[11] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData044_out),
        .Q(p_141_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[12] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData048_out),
        .Q(p_145_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[13] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData052_out),
        .Q(p_149_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[14] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData056_out),
        .Q(p_153_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[15] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData060_out),
        .Q(p_157_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[16] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData064_out),
        .Q(p_161_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[17] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData068_out),
        .Q(p_165_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[18] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData072_out),
        .Q(p_169_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[19] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData076_out),
        .Q(p_173_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[1] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData04_out),
        .Q(p_101_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[20] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData080_out),
        .Q(p_177_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[21] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData084_out),
        .Q(p_181_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[22] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData088_out),
        .Q(p_185_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[23] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData092_out),
        .Q(p_189_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[24] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData096_out),
        .Q(p_193_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[25] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0100_out),
        .Q(p_197_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[26] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0104_out),
        .Q(p_201_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[27] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0108_out),
        .Q(p_205_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[28] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0112_out),
        .Q(p_209_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[29] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0116_out),
        .Q(p_213_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[2] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData08_out),
        .Q(p_105_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[30] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0120_out),
        .Q(p_217_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[31] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0124_out),
        .Q(p_221_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[32] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0128_out),
        .Q(p_225_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[33] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0132_out),
        .Q(p_229_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[34] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0136_out),
        .Q(p_233_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[35] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0140_out),
        .Q(p_237_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[36] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0144_out),
        .Q(p_241_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[37] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0148_out),
        .Q(p_245_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[38] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0152_out),
        .Q(p_249_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[39] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0156_out),
        .Q(\scrambler_reg_n_0_[39] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[3] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData012_out),
        .Q(p_109_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[40] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0160_out),
        .Q(\scrambler_reg_n_0_[40] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[41] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0164_out),
        .Q(\scrambler_reg_n_0_[41] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[42] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0168_out),
        .Q(\scrambler_reg_n_0_[42] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[43] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0172_out),
        .Q(\scrambler_reg_n_0_[43] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[44] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0176_out),
        .Q(\scrambler_reg_n_0_[44] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[45] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0180_out),
        .Q(\scrambler_reg_n_0_[45] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[46] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0184_out),
        .Q(\scrambler_reg_n_0_[46] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[47] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0188_out),
        .Q(\scrambler_reg_n_0_[47] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[48] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0192_out),
        .Q(\scrambler_reg_n_0_[48] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[49] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0196_out),
        .Q(\scrambler_reg_n_0_[49] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[4] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData016_out),
        .Q(p_113_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[50] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0200_out),
        .Q(\scrambler_reg_n_0_[50] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[51] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0204_out),
        .Q(\scrambler_reg_n_0_[51] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[52] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0208_out),
        .Q(\scrambler_reg_n_0_[52] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[53] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0212_out),
        .Q(\scrambler_reg_n_0_[53] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[54] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0216_out),
        .Q(\scrambler_reg_n_0_[54] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[55] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0220_out),
        .Q(\scrambler_reg_n_0_[55] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[56] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0224_out),
        .Q(\scrambler_reg_n_0_[56] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[57] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData0228_out),
        .Q(\scrambler_reg_n_0_[57] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[5] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData020_out),
        .Q(p_117_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[6] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData024_out),
        .Q(p_121_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[7] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData028_out),
        .Q(p_125_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \scrambler_reg[8] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData032_out),
        .Q(p_129_in),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \scrambler_reg[9] 
       (.C(\SCRAMBLED_DATA_OUT_reg[63]_0 ),
        .CE(data_valid_i_lane3),
        .D(tempData036_out),
        .Q(p_133_in),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_STANDARD_CC_MODULE
   (do_cc_r0,
    Q,
    SR,
    \count_24d_srl_r_reg[0]_0 ,
    extend_cc_r,
    \cc_count_r_reg[0]_0 );
  output do_cc_r0;
  output Q;
  input SR;
  input \count_24d_srl_r_reg[0]_0 ;
  input extend_cc_r;
  input \cc_count_r_reg[0]_0 ;

  wire DO_CC0_n_0;
  wire DO_CC_i_1_n_0;
  wire Q;
  wire SR;
  wire \cc_count_r[0]_i_1_n_0 ;
  wire \cc_count_r_reg[0]_0 ;
  wire \cc_count_r_reg_n_0_[5] ;
  wire count_13d_flop_r;
  wire count_13d_flop_r_i_1_n_0;
  wire count_13d_flop_r_i_2_n_0;
  wire count_13d_flop_r_i_3_n_0;
  wire \count_13d_srl_r_reg_n_0_[0] ;
  wire \count_13d_srl_r_reg_n_0_[10] ;
  wire \count_13d_srl_r_reg_n_0_[11] ;
  wire \count_13d_srl_r_reg_n_0_[1] ;
  wire \count_13d_srl_r_reg_n_0_[2] ;
  wire \count_13d_srl_r_reg_n_0_[3] ;
  wire \count_13d_srl_r_reg_n_0_[4] ;
  wire \count_13d_srl_r_reg_n_0_[5] ;
  wire \count_13d_srl_r_reg_n_0_[6] ;
  wire \count_13d_srl_r_reg_n_0_[7] ;
  wire \count_13d_srl_r_reg_n_0_[8] ;
  wire \count_13d_srl_r_reg_n_0_[9] ;
  wire count_16d_flop_r;
  wire count_16d_flop_r0;
  wire count_16d_flop_r_i_1_n_0;
  wire count_16d_flop_r_i_3_n_0;
  wire count_16d_flop_r_i_4_n_0;
  wire count_16d_flop_r_i_5_n_0;
  wire count_16d_flop_r_i_6_n_0;
  wire count_16d_srl_r0;
  wire \count_16d_srl_r_reg_n_0_[0] ;
  wire \count_16d_srl_r_reg_n_0_[10] ;
  wire \count_16d_srl_r_reg_n_0_[11] ;
  wire \count_16d_srl_r_reg_n_0_[12] ;
  wire \count_16d_srl_r_reg_n_0_[13] ;
  wire \count_16d_srl_r_reg_n_0_[14] ;
  wire \count_16d_srl_r_reg_n_0_[1] ;
  wire \count_16d_srl_r_reg_n_0_[2] ;
  wire \count_16d_srl_r_reg_n_0_[3] ;
  wire \count_16d_srl_r_reg_n_0_[4] ;
  wire \count_16d_srl_r_reg_n_0_[5] ;
  wire \count_16d_srl_r_reg_n_0_[6] ;
  wire \count_16d_srl_r_reg_n_0_[7] ;
  wire \count_16d_srl_r_reg_n_0_[8] ;
  wire \count_16d_srl_r_reg_n_0_[9] ;
  wire count_24d_flop_r;
  wire count_24d_flop_r0;
  wire count_24d_flop_r_i_1_n_0;
  wire count_24d_flop_r_i_3_n_0;
  wire count_24d_flop_r_i_4_n_0;
  wire count_24d_flop_r_i_5_n_0;
  wire count_24d_flop_r_i_6_n_0;
  wire count_24d_flop_r_i_7_n_0;
  wire count_24d_flop_r_i_8_n_0;
  wire \count_24d_srl_r[0]_i_1_n_0 ;
  wire \count_24d_srl_r_reg[0]_0 ;
  wire \count_24d_srl_r_reg_n_0_[0] ;
  wire \count_24d_srl_r_reg_n_0_[10] ;
  wire \count_24d_srl_r_reg_n_0_[11] ;
  wire \count_24d_srl_r_reg_n_0_[12] ;
  wire \count_24d_srl_r_reg_n_0_[13] ;
  wire \count_24d_srl_r_reg_n_0_[14] ;
  wire \count_24d_srl_r_reg_n_0_[15] ;
  wire \count_24d_srl_r_reg_n_0_[16] ;
  wire \count_24d_srl_r_reg_n_0_[17] ;
  wire \count_24d_srl_r_reg_n_0_[18] ;
  wire \count_24d_srl_r_reg_n_0_[19] ;
  wire \count_24d_srl_r_reg_n_0_[1] ;
  wire \count_24d_srl_r_reg_n_0_[20] ;
  wire \count_24d_srl_r_reg_n_0_[21] ;
  wire \count_24d_srl_r_reg_n_0_[22] ;
  wire \count_24d_srl_r_reg_n_0_[2] ;
  wire \count_24d_srl_r_reg_n_0_[3] ;
  wire \count_24d_srl_r_reg_n_0_[4] ;
  wire \count_24d_srl_r_reg_n_0_[5] ;
  wire \count_24d_srl_r_reg_n_0_[6] ;
  wire \count_24d_srl_r_reg_n_0_[7] ;
  wire \count_24d_srl_r_reg_n_0_[8] ;
  wire \count_24d_srl_r_reg_n_0_[9] ;
  wire do_cc_r0;
  wire extend_cc_r;
  wire [4:0]p_1_in;
  wire reset_r;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    DO_CC0
       (.I0(p_1_in[0]),
        .I1(\cc_count_r_reg_n_0_[5] ),
        .I2(p_1_in[3]),
        .I3(p_1_in[4]),
        .I4(p_1_in[1]),
        .I5(p_1_in[2]),
        .O(DO_CC0_n_0));
  LUT5 #(
    .INIT(32'hFEEEEEEE)) 
    DO_CC_i_1
       (.I0(DO_CC0_n_0),
        .I1(reset_r),
        .I2(\count_24d_srl_r_reg_n_0_[22] ),
        .I3(\count_16d_srl_r_reg_n_0_[14] ),
        .I4(\count_13d_srl_r_reg_n_0_[11] ),
        .O(DO_CC_i_1_n_0));
  FDRE DO_CC_reg
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(DO_CC_i_1_n_0),
        .Q(Q),
        .R(SR));
  LUT4 #(
    .INIT(16'h80FF)) 
    \cc_count_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_24d_srl_r_reg_n_0_[22] ),
        .I3(\cc_count_r_reg[0]_0 ),
        .O(\cc_count_r[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[0] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\cc_count_r[0]_i_1_n_0 ),
        .Q(p_1_in[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[1] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(p_1_in[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[2] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(p_1_in[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[3] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(p_1_in[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[4] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[1]),
        .Q(p_1_in[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cc_count_r_reg[5] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(p_1_in[0]),
        .Q(\cc_count_r_reg_n_0_[5] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hF0F4F0F0)) 
    count_13d_flop_r_i_1
       (.I0(\count_13d_srl_r_reg_n_0_[9] ),
        .I1(reset_r),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(count_13d_flop_r_i_2_n_0),
        .I4(count_13d_flop_r_i_3_n_0),
        .O(count_13d_flop_r_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_13d_flop_r_i_2
       (.I0(\count_13d_srl_r_reg_n_0_[1] ),
        .I1(\count_13d_srl_r_reg_n_0_[6] ),
        .I2(\count_13d_srl_r_reg_n_0_[7] ),
        .I3(\count_13d_srl_r_reg_n_0_[8] ),
        .O(count_13d_flop_r_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    count_13d_flop_r_i_3
       (.I0(\count_13d_srl_r_reg_n_0_[3] ),
        .I1(\count_13d_srl_r_reg_n_0_[5] ),
        .I2(\count_13d_srl_r_reg_n_0_[10] ),
        .I3(\count_13d_srl_r_reg_n_0_[4] ),
        .I4(\count_13d_srl_r_reg_n_0_[2] ),
        .I5(\count_13d_srl_r_reg_n_0_[0] ),
        .O(count_13d_flop_r_i_3_n_0));
  FDRE count_13d_flop_r_reg
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_13d_flop_r_i_1_n_0),
        .Q(count_13d_flop_r),
        .R(SR));
  FDRE \count_13d_srl_r_reg[0] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_13d_flop_r),
        .Q(\count_13d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[10] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[9] ),
        .Q(\count_13d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[11] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[10] ),
        .Q(\count_13d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[1] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[0] ),
        .Q(\count_13d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[2] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[1] ),
        .Q(\count_13d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[3] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[2] ),
        .Q(\count_13d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[4] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[3] ),
        .Q(\count_13d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[5] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[4] ),
        .Q(\count_13d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[6] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[5] ),
        .Q(\count_13d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[7] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[6] ),
        .Q(\count_13d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[8] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[7] ),
        .Q(\count_13d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_13d_srl_r_reg[9] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(\count_13d_srl_r_reg_n_0_[8] ),
        .Q(\count_13d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFBF8)) 
    count_16d_flop_r_i_1
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(count_16d_flop_r0),
        .I3(count_16d_flop_r),
        .O(count_16d_flop_r_i_1_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    count_16d_flop_r_i_2
       (.I0(count_16d_flop_r_i_3_n_0),
        .I1(count_16d_flop_r_i_4_n_0),
        .I2(count_16d_flop_r_i_5_n_0),
        .I3(count_16d_flop_r_i_6_n_0),
        .O(count_16d_flop_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_16d_flop_r_i_3
       (.I0(\count_16d_srl_r_reg_n_0_[3] ),
        .I1(\count_16d_srl_r_reg_n_0_[5] ),
        .I2(\count_16d_srl_r_reg_n_0_[1] ),
        .I3(\count_16d_srl_r_reg_n_0_[9] ),
        .O(count_16d_flop_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0004)) 
    count_16d_flop_r_i_4
       (.I0(\count_16d_srl_r_reg_n_0_[7] ),
        .I1(reset_r),
        .I2(\count_16d_srl_r_reg_n_0_[2] ),
        .I3(\count_16d_srl_r_reg_n_0_[13] ),
        .O(count_16d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_16d_flop_r_i_5
       (.I0(\count_16d_srl_r_reg_n_0_[6] ),
        .I1(\count_16d_srl_r_reg_n_0_[11] ),
        .I2(\count_16d_srl_r_reg_n_0_[0] ),
        .I3(\count_16d_srl_r_reg_n_0_[12] ),
        .O(count_16d_flop_r_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_16d_flop_r_i_6
       (.I0(\count_16d_srl_r_reg_n_0_[8] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_16d_srl_r_reg_n_0_[4] ),
        .I3(\count_16d_srl_r_reg_n_0_[10] ),
        .O(count_16d_flop_r_i_6_n_0));
  FDRE count_16d_flop_r_reg
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_16d_flop_r_i_1_n_0),
        .Q(count_16d_flop_r),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    \count_16d_srl_r[0]_i_1 
       (.I0(\count_13d_srl_r_reg_n_0_[11] ),
        .I1(\cc_count_r_reg[0]_0 ),
        .O(count_16d_srl_r0));
  FDRE \count_16d_srl_r_reg[0] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(count_16d_flop_r),
        .Q(\count_16d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[10] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[9] ),
        .Q(\count_16d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[11] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[10] ),
        .Q(\count_16d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[12] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[11] ),
        .Q(\count_16d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[13] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[12] ),
        .Q(\count_16d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[14] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[13] ),
        .Q(\count_16d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[1] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[0] ),
        .Q(\count_16d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[2] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[1] ),
        .Q(\count_16d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[3] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[2] ),
        .Q(\count_16d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[4] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[3] ),
        .Q(\count_16d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[5] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[4] ),
        .Q(\count_16d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[6] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[5] ),
        .Q(\count_16d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[7] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[6] ),
        .Q(\count_16d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[8] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[7] ),
        .Q(\count_16d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_16d_srl_r_reg[9] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(count_16d_srl_r0),
        .D(\count_16d_srl_r_reg_n_0_[8] ),
        .Q(\count_16d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFBFFF80)) 
    count_24d_flop_r_i_1
       (.I0(\count_24d_srl_r_reg_n_0_[22] ),
        .I1(\count_16d_srl_r_reg_n_0_[14] ),
        .I2(\count_13d_srl_r_reg_n_0_[11] ),
        .I3(count_24d_flop_r0),
        .I4(count_24d_flop_r),
        .O(count_24d_flop_r_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000004)) 
    count_24d_flop_r_i_2
       (.I0(count_24d_flop_r_i_3_n_0),
        .I1(count_24d_flop_r_i_4_n_0),
        .I2(count_24d_flop_r_i_5_n_0),
        .I3(count_24d_flop_r_i_6_n_0),
        .I4(count_24d_flop_r_i_7_n_0),
        .I5(count_24d_flop_r_i_8_n_0),
        .O(count_24d_flop_r0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_3
       (.I0(\count_24d_srl_r_reg_n_0_[9] ),
        .I1(\count_24d_srl_r_reg_n_0_[22] ),
        .I2(\count_24d_srl_r_reg_n_0_[11] ),
        .I3(\count_24d_srl_r_reg_n_0_[12] ),
        .O(count_24d_flop_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0001)) 
    count_24d_flop_r_i_4
       (.I0(\count_24d_srl_r_reg_n_0_[1] ),
        .I1(\count_24d_srl_r_reg_n_0_[15] ),
        .I2(\count_24d_srl_r_reg_n_0_[3] ),
        .I3(\count_24d_srl_r_reg_n_0_[4] ),
        .O(count_24d_flop_r_i_4_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_5
       (.I0(\count_24d_srl_r_reg_n_0_[0] ),
        .I1(\count_24d_srl_r_reg_n_0_[20] ),
        .I2(\count_24d_srl_r_reg_n_0_[19] ),
        .I3(\count_24d_srl_r_reg_n_0_[21] ),
        .O(count_24d_flop_r_i_5_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_6
       (.I0(\count_24d_srl_r_reg_n_0_[5] ),
        .I1(\count_24d_srl_r_reg_n_0_[7] ),
        .I2(\count_24d_srl_r_reg_n_0_[8] ),
        .I3(\count_24d_srl_r_reg_n_0_[14] ),
        .O(count_24d_flop_r_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFEF)) 
    count_24d_flop_r_i_7
       (.I0(\count_24d_srl_r_reg_n_0_[16] ),
        .I1(\count_24d_srl_r_reg_n_0_[17] ),
        .I2(reset_r),
        .I3(\count_24d_srl_r_reg_n_0_[13] ),
        .O(count_24d_flop_r_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    count_24d_flop_r_i_8
       (.I0(\count_24d_srl_r_reg_n_0_[2] ),
        .I1(\count_24d_srl_r_reg_n_0_[18] ),
        .I2(\count_24d_srl_r_reg_n_0_[6] ),
        .I3(\count_24d_srl_r_reg_n_0_[10] ),
        .O(count_24d_flop_r_i_8_n_0));
  FDRE count_24d_flop_r_reg
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(count_24d_flop_r_i_1_n_0),
        .Q(count_24d_flop_r),
        .R(SR));
  LUT3 #(
    .INIT(8'h8F)) 
    \count_24d_srl_r[0]_i_1 
       (.I0(\count_16d_srl_r_reg_n_0_[14] ),
        .I1(\count_13d_srl_r_reg_n_0_[11] ),
        .I2(\cc_count_r_reg[0]_0 ),
        .O(\count_24d_srl_r[0]_i_1_n_0 ));
  FDRE \count_24d_srl_r_reg[0] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(count_24d_flop_r),
        .Q(\count_24d_srl_r_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[10] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[9] ),
        .Q(\count_24d_srl_r_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[11] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[10] ),
        .Q(\count_24d_srl_r_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[12] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[11] ),
        .Q(\count_24d_srl_r_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[13] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[12] ),
        .Q(\count_24d_srl_r_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[14] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[13] ),
        .Q(\count_24d_srl_r_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[15] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[14] ),
        .Q(\count_24d_srl_r_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[16] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[15] ),
        .Q(\count_24d_srl_r_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[17] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[16] ),
        .Q(\count_24d_srl_r_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[18] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[17] ),
        .Q(\count_24d_srl_r_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[19] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[18] ),
        .Q(\count_24d_srl_r_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[1] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[0] ),
        .Q(\count_24d_srl_r_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[20] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[19] ),
        .Q(\count_24d_srl_r_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[21] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[20] ),
        .Q(\count_24d_srl_r_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[22] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[21] ),
        .Q(\count_24d_srl_r_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[2] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[1] ),
        .Q(\count_24d_srl_r_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[3] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[2] ),
        .Q(\count_24d_srl_r_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[4] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[3] ),
        .Q(\count_24d_srl_r_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[5] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[4] ),
        .Q(\count_24d_srl_r_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[6] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[5] ),
        .Q(\count_24d_srl_r_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[7] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[6] ),
        .Q(\count_24d_srl_r_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[8] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[7] ),
        .Q(\count_24d_srl_r_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \count_24d_srl_r_reg[9] 
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(\count_24d_srl_r[0]_i_1_n_0 ),
        .D(\count_24d_srl_r_reg_n_0_[8] ),
        .Q(\count_24d_srl_r_reg_n_0_[9] ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    do_cc_r_i_1
       (.I0(Q),
        .I1(extend_cc_r),
        .O(do_cc_r0));
  FDRE reset_r_reg
       (.C(\count_24d_srl_r_reg[0]_0 ),
        .CE(1'b1),
        .D(SR),
        .Q(reset_r),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_SUPPORT_RESET_LOGIC
   (sysreset_from_support,
    gt_reset_out,
    stg5_reg,
    init_clk,
    D,
    \debounce_gt_rst_r_reg[0]_0 );
  output sysreset_from_support;
  output gt_reset_out;
  input stg5_reg;
  input init_clk;
  input [0:0]D;
  input [0:0]\debounce_gt_rst_r_reg[0]_0 ;

  wire [0:0]D;
  wire SYSTEM_RESET0_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [0:3]debounce_gt_rst_r;
  wire [0:0]\debounce_gt_rst_r_reg[0]_0 ;
  wire \dly_gt_rst_r_reg[17]_srl18_n_0 ;
  wire gt_reset_out;
  wire gt_rst_r;
  wire gt_rst_r0_n_0;
  wire init_clk;
  wire [0:3]reset_debounce_r;
  wire stg5_reg;
  wire sysreset_from_support;
  wire u_rst_sync_gt_n_0;
  wire \NLW_dly_gt_rst_r_reg[17]_srl18_Q31_UNCONNECTED ;

  LUT4 #(
    .INIT(16'h8000)) 
    SYSTEM_RESET0
       (.I0(reset_debounce_r[2]),
        .I1(reset_debounce_r[3]),
        .I2(reset_debounce_r[0]),
        .I3(reset_debounce_r[1]),
        .O(SYSTEM_RESET0_n_0));
  FDRE #(
    .INIT(1'b1)) 
    SYSTEM_RESET_reg
       (.C(stg5_reg),
        .CE(1'b1),
        .D(SYSTEM_RESET0_n_0),
        .Q(sysreset_from_support),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[0] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\debounce_gt_rst_r_reg[0]_0 ),
        .Q(debounce_gt_rst_r[0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[1] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[0]),
        .Q(debounce_gt_rst_r[1]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[2] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[1]),
        .Q(debounce_gt_rst_r[2]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b0)) 
    \debounce_gt_rst_r_reg[3] 
       (.C(init_clk),
        .CE(1'b1),
        .D(debounce_gt_rst_r[2]),
        .Q(debounce_gt_rst_r[3]),
        .R(1'b0));
  (* srl_bus_name = "inst/\support_reset_logic_i/dly_gt_rst_r_reg " *) 
  (* srl_name = "inst/\support_reset_logic_i/dly_gt_rst_r_reg[17]_srl18 " *) 
  SRLC32E #(
    .INIT(32'h00000000)) 
    \dly_gt_rst_r_reg[17]_srl18 
       (.A({1'b1,1'b0,1'b0,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(init_clk),
        .D(gt_rst_r),
        .Q(\dly_gt_rst_r_reg[17]_srl18_n_0 ),
        .Q31(\NLW_dly_gt_rst_r_reg[17]_srl18_Q31_UNCONNECTED ));
  FDRE #(
    .INIT(1'b0)) 
    \dly_gt_rst_r_reg[18] 
       (.C(init_clk),
        .CE(1'b1),
        .D(\dly_gt_rst_r_reg[17]_srl18_n_0 ),
        .Q(gt_reset_out),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h8000)) 
    gt_rst_r0
       (.I0(debounce_gt_rst_r[2]),
        .I1(debounce_gt_rst_r[3]),
        .I2(debounce_gt_rst_r[0]),
        .I3(debounce_gt_rst_r[1]),
        .O(gt_rst_r0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gt_rst_r_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(gt_rst_r0_n_0),
        .Q(gt_rst_r),
        .R(1'b0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[0] 
       (.C(stg5_reg),
        .CE(1'b1),
        .D(D),
        .Q(reset_debounce_r[0]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[1] 
       (.C(stg5_reg),
        .CE(1'b1),
        .D(reset_debounce_r[0]),
        .Q(reset_debounce_r[1]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[2] 
       (.C(stg5_reg),
        .CE(1'b1),
        .D(reset_debounce_r[1]),
        .Q(reset_debounce_r[2]),
        .S(u_rst_sync_gt_n_0));
  FDSE #(
    .INIT(1'b0)) 
    \reset_debounce_r_reg[3] 
       (.C(stg5_reg),
        .CE(1'b1),
        .D(reset_debounce_r[2]),
        .Q(reset_debounce_r[3]),
        .S(u_rst_sync_gt_n_0));
  board_aurora_64b66b_0_2_rst_sync_1 u_rst_sync_gt
       (.SS(u_rst_sync_gt_n_0),
        .in0(gt_rst_r),
        .stg5_reg_0(stg5_reg));
endmodule

module board_aurora_64b66b_0_2_SYM_DEC
   (illegal_btf_i,
    RX_IDLES,
    RX_PE_DATA_V,
    \remote_rdy_cntr_reg[0]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    SR,
    \rx_na_idles_cntr_reg[0]_0 ,
    \RX_DATA_REG_reg[0]_0 ,
    Q,
    RXDATAVALID_IN_REG,
    ILLEGAL_BTF_reg_0);
  output illegal_btf_i;
  output [0:0]RX_IDLES;
  output [0:0]RX_PE_DATA_V;
  output \remote_rdy_cntr_reg[0]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input [0:0]SR;
  input \rx_na_idles_cntr_reg[0]_0 ;
  input \RX_DATA_REG_reg[0]_0 ;
  input [65:0]Q;
  input RXDATAVALID_IN_REG;
  input ILLEGAL_BTF_reg_0;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__1_n_0;
  wire ILLEGAL_BTF_i_3__1_n_0;
  wire ILLEGAL_BTF_reg_0;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [0:0]RX_IDLES;
  wire RX_NA_IDLE_i_2__0_n_0;
  wire RX_NA_IDLE_i_3_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]SR;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__8;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__0_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__2_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__2_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__0_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__0_n_0 ;
  wire \remote_rdy_cntr_reg[0]_0 ;
  wire \remote_rdy_cntr_reg_n_0_[0] ;
  wire \remote_rdy_cntr_reg_n_0_[1] ;
  wire \remote_rdy_cntr_reg_n_0_[2] ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_det_i_2__1_n_0;
  wire remote_ready_det_i_3_n_0;
  wire remote_ready_det_i_4_n_0;
  wire remote_ready_det_i_5_n_0;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__2_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [63:16]rxdata_s__2;
  wire [0:1]sync_header_c;
  wire valid_d;

  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT5 #(
    .INIT(32'h00002000)) 
    ILLEGAL_BTF_i_1__1
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .I3(ILLEGAL_BTF_reg_0),
        .I4(ILLEGAL_BTF_i_2__1_n_0),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'h0000000000001314)) 
    ILLEGAL_BTF_i_2__1
       (.I0(p_0_in[5]),
        .I1(p_0_in[6]),
        .I2(p_0_in[7]),
        .I3(p_0_in[4]),
        .I4(ILLEGAL_BTF_i_3__1_n_0),
        .I5(remote_ready_det_i_4_n_0),
        .O(ILLEGAL_BTF_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF7FFF)) 
    ILLEGAL_BTF_i_3__1
       (.I0(p_0_in[12]),
        .I1(p_0_in[13]),
        .I2(p_0_in[14]),
        .I3(p_0_in[11]),
        .I4(p_0_in[15]),
        .I5(p_0_in[3]),
        .O(ILLEGAL_BTF_i_3__1_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(SR));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s__2[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s__2[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s__2[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s__2[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s__2[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s__2[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s__2[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s__2[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s__2[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s__2[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s__2[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s__2[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s__2[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s__2[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s__2[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s__2[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s__2[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s__2[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s__2[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s__2[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s__2[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s__2[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s__2[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s__2[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s__2[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s__2[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s__2[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s__2[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s__2[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s__2[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s__2[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s__2[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s__2[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s__2[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s__2[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s__2[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s__2[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s__2[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s__2[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s__2[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s__2[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s__2[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s__2[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s__2[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s__2[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s__2[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s__2[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s__2[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[64]),
        .Q(sync_header_c[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_1_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[65]),
        .Q(sync_header_c[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h2000000000000000)) 
    RX_IDLE_i_1__2
       (.I0(RX_NA_IDLE_i_2__0_n_0),
        .I1(remote_ready_det_i_3_n_0),
        .I2(p_0_in[12]),
        .I3(p_0_in[13]),
        .I4(p_0_in[4]),
        .I5(p_0_in[14]),
        .O(rx_idle_c));
  FDRE RX_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(RX_IDLES),
        .R(SR));
  LUT5 #(
    .INIT(32'h00200000)) 
    RX_NA_IDLE_i_1__2
       (.I0(RX_NA_IDLE_i_2__0_n_0),
        .I1(RX_NA_IDLE_i_3_n_0),
        .I2(sync_header_c[0]),
        .I3(sync_header_c[1]),
        .I4(RXDATAVALID_IN_REG),
        .O(rx_na_idle_c));
  LUT3 #(
    .INIT(8'h01)) 
    RX_NA_IDLE_i_2__0
       (.I0(p_0_in[3]),
        .I1(p_0_in[15]),
        .I2(remote_ready_det_i_4_n_0),
        .O(RX_NA_IDLE_i_2__0_n_0));
  LUT5 #(
    .INIT(32'hFFEFFFFF)) 
    RX_NA_IDLE_i_3
       (.I0(remote_ready_det_i_2__1_n_0),
        .I1(p_0_in[6]),
        .I2(p_0_in[5]),
        .I3(p_0_in[7]),
        .I4(p_0_in[11]),
        .O(RX_NA_IDLE_i_3_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    \RX_PE_DATA[0]_i_1__2 
       (.I0(sync_header_c[1]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[0]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(valid_d),
        .Q(RX_PE_DATA_V),
        .R(SR));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__2[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(SR));
  LUT6 #(
    .INIT(64'h555555555555D555)) 
    \remote_rdy_cntr[0]_i_1__0 
       (.I0(ILLEGAL_BTF_reg_0),
        .I1(\remote_rdy_cntr_reg_n_0_[0] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[2] ),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\remote_rdy_cntr[0]_i_4__2_n_0 ),
        .O(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2__2 
       (.I0(remote_ready_det),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3__2 
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[0]_i_3__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__0 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .O(\remote_rdy_cntr[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__0 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[2]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__2_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[0] ),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__0_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[1] ),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__0_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[2] ),
        .R(\remote_rdy_cntr[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    remote_ready_det_i_1__2
       (.I0(remote_ready_det_i_2__1_n_0),
        .I1(remote_ready_det_i_3_n_0),
        .I2(p_0_in[3]),
        .I3(p_0_in[15]),
        .I4(remote_ready_det_i_4_n_0),
        .I5(remote_ready_det_i_5_n_0),
        .O(remote_ready_det0));
  LUT4 #(
    .INIT(16'h7FFF)) 
    remote_ready_det_i_2__1
       (.I0(p_0_in[12]),
        .I1(p_0_in[13]),
        .I2(p_0_in[4]),
        .I3(p_0_in[14]),
        .O(remote_ready_det_i_2__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFDFFFFFFFF)) 
    remote_ready_det_i_3
       (.I0(p_0_in[11]),
        .I1(p_0_in[7]),
        .I2(p_0_in[5]),
        .I3(p_0_in[6]),
        .I4(sync_header_c[1]),
        .I5(sync_header_c[0]),
        .O(remote_ready_det_i_3_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    remote_ready_det_i_4
       (.I0(p_0_in[2]),
        .I1(p_0_in[8]),
        .I2(p_0_in[1]),
        .I3(p_0_in[0]),
        .I4(p_0_in[9]),
        .I5(p_0_in[10]),
        .O(remote_ready_det_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    remote_ready_det_i_5
       (.I0(ILLEGAL_BTF_reg_0),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .I3(sync_header_c[0]),
        .O(remote_ready_det_i_5_n_0));
  FDRE remote_ready_det_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h80)) 
    remote_ready_r_i_2
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__8[0]));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__8[1]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__8[2]));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__8[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__2 
       (.I0(ILLEGAL_BTF_reg_0),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__8[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__8[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__8[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__8[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__8[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__8[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__2_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_DEC" *) 
module board_aurora_64b66b_0_2_SYM_DEC_104
   (illegal_btf_i,
    RX_IDLES,
    RX_PE_DATA_V,
    \remote_rdy_cntr_reg[0]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    SR,
    \rx_na_idles_cntr_reg[0]_0 ,
    \RX_DATA_REG_reg[0]_0 ,
    Q,
    RXDATAVALID_IN_REG,
    \remote_rdy_cntr_reg[0]_1 );
  output illegal_btf_i;
  output [0:0]RX_IDLES;
  output [0:0]RX_PE_DATA_V;
  output \remote_rdy_cntr_reg[0]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input [0:0]SR;
  input \rx_na_idles_cntr_reg[0]_0 ;
  input \RX_DATA_REG_reg[0]_0 ;
  input [65:0]Q;
  input RXDATAVALID_IN_REG;
  input \remote_rdy_cntr_reg[0]_1 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__0_n_0;
  wire ILLEGAL_BTF_i_3__0_n_0;
  wire ILLEGAL_BTF_i_4__1_n_0;
  wire ILLEGAL_BTF_i_5__0_n_0;
  wire ILLEGAL_BTF_i_6__1_n_0;
  wire ILLEGAL_BTF_i_7__1_n_0;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [0:0]RX_IDLES;
  wire RX_NA_IDLE_i_2_n_0;
  wire RX_NA_IDLE_i_3__0_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]SR;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__6;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__2_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__1_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__1_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__1_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__1_n_0 ;
  wire \remote_rdy_cntr_reg[0]_0 ;
  wire \remote_rdy_cntr_reg[0]_1 ;
  wire \remote_rdy_cntr_reg_n_0_[0] ;
  wire \remote_rdy_cntr_reg_n_0_[1] ;
  wire \remote_rdy_cntr_reg_n_0_[2] ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [63:16]rxdata_s__1;
  wire [0:1]sync_header_c;
  wire valid_d;

  LUT6 #(
    .INIT(64'h00FE000000FF00FF)) 
    ILLEGAL_BTF_i_1__0
       (.I0(p_0_in[5]),
        .I1(ILLEGAL_BTF_i_2__0_n_0),
        .I2(ILLEGAL_BTF_i_3__0_n_0),
        .I3(ILLEGAL_BTF_i_4__1_n_0),
        .I4(ILLEGAL_BTF_i_5__0_n_0),
        .I5(ILLEGAL_BTF_i_6__1_n_0),
        .O(ILLEGAL_BTF0));
  LUT3 #(
    .INIT(8'h7F)) 
    ILLEGAL_BTF_i_2__0
       (.I0(p_0_in[12]),
        .I1(p_0_in[13]),
        .I2(p_0_in[14]),
        .O(ILLEGAL_BTF_i_2__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT5 #(
    .INIT(32'hFEFF03FF)) 
    ILLEGAL_BTF_i_3__0
       (.I0(p_0_in[15]),
        .I1(p_0_in[7]),
        .I2(p_0_in[4]),
        .I3(p_0_in[11]),
        .I4(p_0_in[6]),
        .O(ILLEGAL_BTF_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT4 #(
    .INIT(16'hDFFF)) 
    ILLEGAL_BTF_i_4__1
       (.I0(RXDATAVALID_IN_REG),
        .I1(sync_header_c[1]),
        .I2(sync_header_c[0]),
        .I3(\remote_rdy_cntr_reg[0]_1 ),
        .O(ILLEGAL_BTF_i_4__1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF7FF)) 
    ILLEGAL_BTF_i_5__0
       (.I0(p_0_in[5]),
        .I1(sync_header_c[0]),
        .I2(sync_header_c[1]),
        .I3(RXDATAVALID_IN_REG),
        .I4(ILLEGAL_BTF_i_2__0_n_0),
        .I5(RX_NA_IDLE_i_2_n_0),
        .O(ILLEGAL_BTF_i_5__0_n_0));
  LUT5 #(
    .INIT(32'h00000001)) 
    ILLEGAL_BTF_i_6__1
       (.I0(p_0_in[8]),
        .I1(p_0_in[2]),
        .I2(p_0_in[9]),
        .I3(p_0_in[10]),
        .I4(ILLEGAL_BTF_i_7__1_n_0),
        .O(ILLEGAL_BTF_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_7__1
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_7__1_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(SR));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s__1[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s__1[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s__1[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s__1[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s__1[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s__1[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s__1[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s__1[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s__1[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s__1[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s__1[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s__1[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s__1[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s__1[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s__1[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s__1[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s__1[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s__1[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s__1[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s__1[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s__1[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s__1[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s__1[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s__1[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s__1[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s__1[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s__1[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s__1[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s__1[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s__1[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s__1[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s__1[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s__1[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s__1[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s__1[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s__1[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s__1[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s__1[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s__1[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s__1[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s__1[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s__1[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s__1[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s__1[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s__1[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s__1[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s__1[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s__1[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[64]),
        .Q(sync_header_c[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_1_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[65]),
        .Q(sync_header_c[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000000000040000)) 
    RX_IDLE_i_1__1
       (.I0(RX_NA_IDLE_i_2_n_0),
        .I1(ILLEGAL_BTF_i_6__1_n_0),
        .I2(ILLEGAL_BTF_i_2__0_n_0),
        .I3(p_0_in[5]),
        .I4(sync_header_c[0]),
        .I5(sync_header_c[1]),
        .O(rx_idle_c));
  FDRE RX_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(RX_IDLES),
        .R(SR));
  LUT5 #(
    .INIT(32'h00020000)) 
    RX_NA_IDLE_i_1__1
       (.I0(ILLEGAL_BTF_i_6__1_n_0),
        .I1(RX_NA_IDLE_i_2_n_0),
        .I2(ILLEGAL_BTF_i_2__0_n_0),
        .I3(RX_NA_IDLE_i_3__0_n_0),
        .I4(p_0_in[5]),
        .O(rx_na_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    RX_NA_IDLE_i_2
       (.I0(p_0_in[6]),
        .I1(p_0_in[11]),
        .I2(p_0_in[7]),
        .I3(p_0_in[4]),
        .O(RX_NA_IDLE_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    RX_NA_IDLE_i_3__0
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .O(RX_NA_IDLE_i_3__0_n_0));
  FDRE RX_NA_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    \RX_PE_DATA[0]_i_1__1 
       (.I0(sync_header_c[1]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[0]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(valid_d),
        .Q(RX_PE_DATA_V),
        .R(SR));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__1[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(SR));
  LUT6 #(
    .INIT(64'h10000000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1__2 
       (.I0(rx_na_idles_cntr_reg[4]),
        .I1(\remote_rdy_cntr[0]_i_4__1_n_0 ),
        .I2(\remote_rdy_cntr_reg_n_0_[0] ),
        .I3(\remote_rdy_cntr_reg_n_0_[1] ),
        .I4(\remote_rdy_cntr_reg_n_0_[2] ),
        .I5(\remote_rdy_cntr_reg[0]_1 ),
        .O(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2__1 
       (.I0(remote_ready_det),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3__1 
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[0]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__1 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .O(\remote_rdy_cntr[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__1 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[2]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__1_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[0] ),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__1_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[1] ),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__1_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[2] ),
        .R(\remote_rdy_cntr[0]_i_1__2_n_0 ));
  LUT5 #(
    .INIT(32'h00000004)) 
    remote_ready_det_i_1__1
       (.I0(RX_NA_IDLE_i_2_n_0),
        .I1(ILLEGAL_BTF_i_6__1_n_0),
        .I2(ILLEGAL_BTF_i_2__0_n_0),
        .I3(p_0_in[5]),
        .I4(ILLEGAL_BTF_i_4__1_n_0),
        .O(remote_ready_det0));
  FDRE remote_ready_det_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT3 #(
    .INIT(8'h80)) 
    remote_ready_r_i_3
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__6[0]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__6[1]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__6[2]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__6[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__1 
       (.I0(\remote_rdy_cntr_reg[0]_1 ),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__6[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__6[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__6[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__6[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__6[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__6[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__1_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_DEC" *) 
module board_aurora_64b66b_0_2_SYM_DEC_110
   (illegal_btf_i,
    RX_IDLES,
    RX_PE_DATA_V,
    \remote_rdy_cntr_reg[0]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    SR,
    \rx_na_idles_cntr_reg[0]_0 ,
    \RX_DATA_REG_reg[0]_0 ,
    Q,
    RXDATAVALID_IN_REG,
    \remote_rdy_cntr_reg[2]_0 );
  output illegal_btf_i;
  output [0:0]RX_IDLES;
  output [0:0]RX_PE_DATA_V;
  output \remote_rdy_cntr_reg[0]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input [0:0]SR;
  input \rx_na_idles_cntr_reg[0]_0 ;
  input \RX_DATA_REG_reg[0]_0 ;
  input [65:0]Q;
  input RXDATAVALID_IN_REG;
  input \remote_rdy_cntr_reg[2]_0 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2_n_0;
  wire ILLEGAL_BTF_i_3_n_0;
  wire ILLEGAL_BTF_i_4__0_n_0;
  wire ILLEGAL_BTF_i_5__1_n_0;
  wire ILLEGAL_BTF_i_6__0_n_0;
  wire ILLEGAL_BTF_i_7__0_n_0;
  wire ILLEGAL_BTF_i_8__0_n_0;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [0:0]RX_IDLES;
  wire RX_IDLE_i_2_n_0;
  wire RX_NA_IDLE_reg_n_0;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]SR;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__4;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1_n_0 ;
  wire \remote_rdy_cntr[0]_i_3__0_n_0 ;
  wire \remote_rdy_cntr[0]_i_4__0_n_0 ;
  wire \remote_rdy_cntr[1]_i_1__2_n_0 ;
  wire \remote_rdy_cntr[2]_i_1__2_n_0 ;
  wire \remote_rdy_cntr_reg[0]_0 ;
  wire \remote_rdy_cntr_reg[2]_0 ;
  wire \remote_rdy_cntr_reg_n_0_[0] ;
  wire \remote_rdy_cntr_reg_n_0_[1] ;
  wire \remote_rdy_cntr_reg_n_0_[2] ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_det_i_2__0_n_0;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1__0_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [63:16]rxdata_s__0;
  wire [0:1]sync_header_c;
  wire valid_d;

  LUT5 #(
    .INIT(32'h00004404)) 
    ILLEGAL_BTF_i_1__2
       (.I0(ILLEGAL_BTF_i_2_n_0),
        .I1(\remote_rdy_cntr_reg[2]_0 ),
        .I2(ILLEGAL_BTF_i_3_n_0),
        .I3(ILLEGAL_BTF_i_4__0_n_0),
        .I4(ILLEGAL_BTF_i_5__1_n_0),
        .O(ILLEGAL_BTF0));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    ILLEGAL_BTF_i_2
       (.I0(ILLEGAL_BTF_i_6__0_n_0),
        .I1(ILLEGAL_BTF_i_7__0_n_0),
        .I2(p_0_in[5]),
        .I3(p_0_in[13]),
        .I4(p_0_in[12]),
        .I5(p_0_in[14]),
        .O(ILLEGAL_BTF_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000004000)) 
    ILLEGAL_BTF_i_3
       (.I0(ILLEGAL_BTF_i_7__0_n_0),
        .I1(ILLEGAL_BTF_i_8__0_n_0),
        .I2(p_0_in[11]),
        .I3(p_0_in[4]),
        .I4(p_0_in[15]),
        .I5(p_0_in[3]),
        .O(ILLEGAL_BTF_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    ILLEGAL_BTF_i_4__0
       (.I0(p_0_in[14]),
        .I1(p_0_in[12]),
        .I2(p_0_in[13]),
        .O(ILLEGAL_BTF_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hDF)) 
    ILLEGAL_BTF_i_5__1
       (.I0(sync_header_c[0]),
        .I1(sync_header_c[1]),
        .I2(RXDATAVALID_IN_REG),
        .O(ILLEGAL_BTF_i_5__1_n_0));
  LUT6 #(
    .INIT(64'h0000000000001C00)) 
    ILLEGAL_BTF_i_6__0
       (.I0(p_0_in[4]),
        .I1(p_0_in[7]),
        .I2(p_0_in[6]),
        .I3(p_0_in[11]),
        .I4(p_0_in[15]),
        .I5(p_0_in[3]),
        .O(ILLEGAL_BTF_i_6__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    ILLEGAL_BTF_i_7__0
       (.I0(p_0_in[0]),
        .I1(p_0_in[2]),
        .I2(p_0_in[8]),
        .I3(p_0_in[9]),
        .I4(p_0_in[10]),
        .I5(p_0_in[1]),
        .O(ILLEGAL_BTF_i_7__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    ILLEGAL_BTF_i_8__0
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(ILLEGAL_BTF_i_8__0_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(SR));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s__0[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s__0[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s__0[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s__0[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s__0[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s__0[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s__0[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s__0[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s__0[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s__0[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s__0[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s__0[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s__0[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s__0[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s__0[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s__0[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s__0[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s__0[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s__0[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s__0[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s__0[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s__0[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s__0[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s__0[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s__0[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s__0[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s__0[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s__0[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s__0[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s__0[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s__0[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s__0[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s__0[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s__0[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s__0[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s__0[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s__0[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s__0[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s__0[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s__0[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s__0[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s__0[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s__0[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s__0[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s__0[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s__0[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s__0[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s__0[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[64]),
        .Q(sync_header_c[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_1_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[65]),
        .Q(sync_header_c[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0040)) 
    RX_IDLE_i_1__0
       (.I0(RX_IDLE_i_2_n_0),
        .I1(ILLEGAL_BTF_i_3_n_0),
        .I2(sync_header_c[0]),
        .I3(sync_header_c[1]),
        .O(rx_idle_c));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hBFFF)) 
    RX_IDLE_i_2
       (.I0(p_0_in[5]),
        .I1(p_0_in[13]),
        .I2(p_0_in[12]),
        .I3(p_0_in[14]),
        .O(RX_IDLE_i_2_n_0));
  FDRE RX_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(RX_IDLES),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000200000000000)) 
    RX_NA_IDLE_i_1__0
       (.I0(ILLEGAL_BTF_i_3_n_0),
        .I1(ILLEGAL_BTF_i_4__0_n_0),
        .I2(p_0_in[5]),
        .I3(sync_header_c[0]),
        .I4(sync_header_c[1]),
        .I5(RXDATAVALID_IN_REG),
        .O(rx_na_idle_c));
  FDRE RX_NA_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE_reg_n_0),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    \RX_PE_DATA[0]_i_1__0 
       (.I0(sync_header_c[1]),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[0]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(valid_d),
        .Q(RX_PE_DATA_V),
        .R(SR));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s__0[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(SR));
  LUT6 #(
    .INIT(64'h555555555555D555)) 
    \remote_rdy_cntr[0]_i_1 
       (.I0(\remote_rdy_cntr_reg[2]_0 ),
        .I1(\remote_rdy_cntr_reg_n_0_[0] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[2] ),
        .I4(rx_na_idles_cntr_reg[4]),
        .I5(\remote_rdy_cntr[0]_i_4__0_n_0 ),
        .O(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2__0 
       (.I0(remote_ready_det),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3__0 
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[0]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4__0 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1__2 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .O(\remote_rdy_cntr[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1__2 
       (.I0(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr[2]_i_1__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3__0_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[0] ),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1__2_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[1] ),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1__2_n_0 ),
        .Q(\remote_rdy_cntr_reg_n_0_[2] ),
        .R(\remote_rdy_cntr[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    remote_ready_det_i_1__0
       (.I0(p_0_in[5]),
        .I1(p_0_in[13]),
        .I2(p_0_in[12]),
        .I3(p_0_in[14]),
        .I4(ILLEGAL_BTF_i_3_n_0),
        .I5(remote_ready_det_i_2__0_n_0),
        .O(remote_ready_det0));
  LUT4 #(
    .INIT(16'h0800)) 
    remote_ready_det_i_2__0
       (.I0(\remote_rdy_cntr_reg[2]_0 ),
        .I1(RXDATAVALID_IN_REG),
        .I2(sync_header_c[1]),
        .I3(sync_header_c[0]),
        .O(remote_ready_det_i_2__0_n_0));
  FDRE remote_ready_det_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'h80)) 
    remote_ready_r_i_4
       (.I0(\remote_rdy_cntr_reg_n_0_[0] ),
        .I1(\remote_rdy_cntr_reg_n_0_[1] ),
        .I2(\remote_rdy_cntr_reg_n_0_[2] ),
        .O(\remote_rdy_cntr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1__0 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__4[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1__0 
       (.I0(\remote_rdy_cntr_reg[2]_0 ),
        .I1(\remote_rdy_cntr_reg_n_0_[2] ),
        .I2(\remote_rdy_cntr_reg_n_0_[1] ),
        .I3(\remote_rdy_cntr_reg_n_0_[0] ),
        .O(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2__0 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__4[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__4[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__4[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__4[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__4[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE_reg_n_0),
        .D(p_0_in__4[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1__0_n_0 ));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_DEC" *) 
module board_aurora_64b66b_0_2_SYM_DEC_116
   (RXDATAVALID_IN_REG_reg_0,
    illegal_btf_i,
    RX_IDLES,
    RX_PE_DATA_V,
    \remote_rdy_cntr_reg[0]_0 ,
    \RX_PE_DATA_reg[0]_0 ,
    rxdatavalid_to_lanes_i,
    \rx_na_idles_cntr_reg[0]_0 ,
    SR,
    \RX_DATA_REG_reg[0]_0 ,
    Q,
    remote_ready_r_reg,
    remote_ready_r_reg_0,
    remote_ready_r_reg_1,
    \remote_rdy_cntr_reg[0]_1 );
  output RXDATAVALID_IN_REG_reg_0;
  output illegal_btf_i;
  output [0:0]RX_IDLES;
  output [0:0]RX_PE_DATA_V;
  output \remote_rdy_cntr_reg[0]_0 ;
  output [63:0]\RX_PE_DATA_reg[0]_0 ;
  input rxdatavalid_to_lanes_i;
  input \rx_na_idles_cntr_reg[0]_0 ;
  input [0:0]SR;
  input \RX_DATA_REG_reg[0]_0 ;
  input [65:0]Q;
  input remote_ready_r_reg;
  input remote_ready_r_reg_0;
  input remote_ready_r_reg_1;
  input \remote_rdy_cntr_reg[0]_1 ;

  wire ILLEGAL_BTF0;
  wire ILLEGAL_BTF_i_2__2_n_0;
  wire ILLEGAL_BTF_i_3__2_n_0;
  wire ILLEGAL_BTF_i_4_n_0;
  wire ILLEGAL_BTF_i_5_n_0;
  wire ILLEGAL_BTF_i_6_n_0;
  wire ILLEGAL_BTF_i_7_n_0;
  wire ILLEGAL_BTF_i_8_n_0;
  wire ILLEGAL_BTF_i_9_n_0;
  wire [65:0]Q;
  wire RXDATAVALID_IN_REG_reg_0;
  wire \RX_DATA_REG_reg[0]_0 ;
  wire [0:0]RX_IDLES;
  wire RX_NA_IDLE;
  wire [0:0]RX_PE_DATA_V;
  wire [63:0]\RX_PE_DATA_reg[0]_0 ;
  wire [0:0]SR;
  wire illegal_btf_i;
  wire [15:0]p_0_in;
  wire [4:0]p_0_in__2;
  wire [0:2]remote_rdy_cntr;
  wire remote_rdy_cntr01_out;
  wire \remote_rdy_cntr[0]_i_1__1_n_0 ;
  wire \remote_rdy_cntr[0]_i_3_n_0 ;
  wire \remote_rdy_cntr[0]_i_4_n_0 ;
  wire \remote_rdy_cntr[1]_i_1_n_0 ;
  wire \remote_rdy_cntr[2]_i_1_n_0 ;
  wire \remote_rdy_cntr_reg[0]_0 ;
  wire \remote_rdy_cntr_reg[0]_1 ;
  wire remote_ready_det;
  wire remote_ready_det0;
  wire remote_ready_det_i_2_n_0;
  wire remote_ready_r_reg;
  wire remote_ready_r_reg_0;
  wire remote_ready_r_reg_1;
  wire rx_idle_c;
  wire rx_na_idle_c;
  wire \rx_na_idles_cntr[4]_i_1_n_0 ;
  wire [4:0]rx_na_idles_cntr_reg;
  wire \rx_na_idles_cntr_reg[0]_0 ;
  wire [63:16]rxdata_s;
  wire rxdatavalid_to_lanes_i;
  wire [0:1]sync_header_c;
  wire valid_d;

  LUT6 #(
    .INIT(64'h5551551155515500)) 
    ILLEGAL_BTF_i_1
       (.I0(ILLEGAL_BTF_i_2__2_n_0),
        .I1(ILLEGAL_BTF_i_3__2_n_0),
        .I2(ILLEGAL_BTF_i_4_n_0),
        .I3(ILLEGAL_BTF_i_5_n_0),
        .I4(ILLEGAL_BTF_i_6_n_0),
        .I5(ILLEGAL_BTF_i_7_n_0),
        .O(ILLEGAL_BTF0));
  LUT4 #(
    .INIT(16'hDFFF)) 
    ILLEGAL_BTF_i_2__2
       (.I0(RXDATAVALID_IN_REG_reg_0),
        .I1(sync_header_c[1]),
        .I2(sync_header_c[0]),
        .I3(\remote_rdy_cntr_reg[0]_1 ),
        .O(ILLEGAL_BTF_i_2__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT4 #(
    .INIT(16'h4000)) 
    ILLEGAL_BTF_i_3__2
       (.I0(p_0_in[5]),
        .I1(p_0_in[13]),
        .I2(p_0_in[12]),
        .I3(p_0_in[14]),
        .O(ILLEGAL_BTF_i_3__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'hF3BF)) 
    ILLEGAL_BTF_i_4
       (.I0(p_0_in[4]),
        .I1(p_0_in[11]),
        .I2(p_0_in[6]),
        .I3(p_0_in[7]),
        .O(ILLEGAL_BTF_i_4_n_0));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    ILLEGAL_BTF_i_5
       (.I0(p_0_in[8]),
        .I1(p_0_in[2]),
        .I2(p_0_in[9]),
        .I3(p_0_in[10]),
        .I4(ILLEGAL_BTF_i_8_n_0),
        .O(ILLEGAL_BTF_i_5_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT4 #(
    .INIT(16'hEFFF)) 
    ILLEGAL_BTF_i_6
       (.I0(p_0_in[7]),
        .I1(p_0_in[6]),
        .I2(p_0_in[11]),
        .I3(p_0_in[4]),
        .O(ILLEGAL_BTF_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFFDFFF)) 
    ILLEGAL_BTF_i_7
       (.I0(RXDATAVALID_IN_REG_reg_0),
        .I1(sync_header_c[1]),
        .I2(sync_header_c[0]),
        .I3(p_0_in[5]),
        .I4(ILLEGAL_BTF_i_9_n_0),
        .O(ILLEGAL_BTF_i_7_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    ILLEGAL_BTF_i_8
       (.I0(p_0_in[0]),
        .I1(p_0_in[1]),
        .I2(p_0_in[3]),
        .I3(p_0_in[15]),
        .O(ILLEGAL_BTF_i_8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    ILLEGAL_BTF_i_9
       (.I0(p_0_in[14]),
        .I1(p_0_in[12]),
        .I2(p_0_in[13]),
        .O(ILLEGAL_BTF_i_9_n_0));
  FDRE ILLEGAL_BTF_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(ILLEGAL_BTF0),
        .Q(illegal_btf_i),
        .R(SR));
  FDRE RXDATAVALID_IN_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rxdatavalid_to_lanes_i),
        .Q(RXDATAVALID_IN_REG_reg_0),
        .R(1'b0));
  FDRE \RX_DATA_REG_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[0]),
        .Q(rxdata_s[56]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[10]),
        .Q(rxdata_s[50]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[11]),
        .Q(rxdata_s[51]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[12]),
        .Q(rxdata_s[52]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[13]),
        .Q(rxdata_s[53]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[14]),
        .Q(rxdata_s[54]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[15]),
        .Q(rxdata_s[55]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[16]),
        .Q(rxdata_s[40]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[17]),
        .Q(rxdata_s[41]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[18]),
        .Q(rxdata_s[42]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[19]),
        .Q(rxdata_s[43]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[1]),
        .Q(rxdata_s[57]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[20]),
        .Q(rxdata_s[44]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[21]),
        .Q(rxdata_s[45]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[22]),
        .Q(rxdata_s[46]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[23]),
        .Q(rxdata_s[47]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[24]),
        .Q(rxdata_s[32]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[25]),
        .Q(rxdata_s[33]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[26]),
        .Q(rxdata_s[34]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[27]),
        .Q(rxdata_s[35]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[28]),
        .Q(rxdata_s[36]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[29]),
        .Q(rxdata_s[37]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[2]),
        .Q(rxdata_s[58]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[30]),
        .Q(rxdata_s[38]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[31]),
        .Q(rxdata_s[39]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[32]),
        .Q(rxdata_s[24]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[33]),
        .Q(rxdata_s[25]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[34]),
        .Q(rxdata_s[26]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[35]),
        .Q(rxdata_s[27]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[36]),
        .Q(rxdata_s[28]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[37]),
        .Q(rxdata_s[29]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[38]),
        .Q(rxdata_s[30]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[39]),
        .Q(rxdata_s[31]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[3]),
        .Q(rxdata_s[59]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[40]),
        .Q(rxdata_s[16]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[41]),
        .Q(rxdata_s[17]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[42]),
        .Q(rxdata_s[18]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[43]),
        .Q(rxdata_s[19]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[44]),
        .Q(rxdata_s[20]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[45]),
        .Q(rxdata_s[21]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[46]),
        .Q(rxdata_s[22]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[47]),
        .Q(rxdata_s[23]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[48]),
        .Q(p_0_in[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[49]),
        .Q(p_0_in[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[4]),
        .Q(rxdata_s[60]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[50]),
        .Q(p_0_in[2]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[51]),
        .Q(p_0_in[3]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[52]),
        .Q(p_0_in[4]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[53]),
        .Q(p_0_in[5]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[54]),
        .Q(p_0_in[6]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[55]),
        .Q(p_0_in[7]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[56]),
        .Q(p_0_in[8]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[57]),
        .Q(p_0_in[9]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[58]),
        .Q(p_0_in[10]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[59]),
        .Q(p_0_in[11]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[5]),
        .Q(rxdata_s[61]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[60]),
        .Q(p_0_in[12]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[61]),
        .Q(p_0_in[13]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[62]),
        .Q(p_0_in[14]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[63]),
        .Q(p_0_in[15]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[6]),
        .Q(rxdata_s[62]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[7]),
        .Q(rxdata_s[63]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[8]),
        .Q(rxdata_s[48]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE \RX_DATA_REG_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[9]),
        .Q(rxdata_s[49]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_0_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[64]),
        .Q(sync_header_c[1]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  FDRE RX_HEADER_1_REG_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(Q[65]),
        .Q(sync_header_c[0]),
        .R(\RX_DATA_REG_reg[0]_0 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    RX_IDLE_i_1
       (.I0(ILLEGAL_BTF_i_5_n_0),
        .I1(ILLEGAL_BTF_i_6_n_0),
        .I2(ILLEGAL_BTF_i_3__2_n_0),
        .I3(sync_header_c[0]),
        .I4(sync_header_c[1]),
        .O(rx_idle_c));
  FDRE RX_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_idle_c),
        .Q(RX_IDLES),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    RX_NA_IDLE_i_1
       (.I0(p_0_in[7]),
        .I1(p_0_in[6]),
        .I2(p_0_in[11]),
        .I3(p_0_in[4]),
        .I4(ILLEGAL_BTF_i_5_n_0),
        .I5(ILLEGAL_BTF_i_7_n_0),
        .O(rx_na_idle_c));
  FDRE RX_NA_IDLE_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(rx_na_idle_c),
        .Q(RX_NA_IDLE),
        .R(SR));
  LUT3 #(
    .INIT(8'h08)) 
    \RX_PE_DATA[0]_i_1 
       (.I0(sync_header_c[1]),
        .I1(RXDATAVALID_IN_REG_reg_0),
        .I2(sync_header_c[0]),
        .O(valid_d));
  FDRE RX_PE_DATA_V_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(valid_d),
        .Q(RX_PE_DATA_V),
        .R(SR));
  FDRE \RX_PE_DATA_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[63]),
        .Q(\RX_PE_DATA_reg[0]_0 [63]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[10] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[53]),
        .Q(\RX_PE_DATA_reg[0]_0 [53]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[11] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[52]),
        .Q(\RX_PE_DATA_reg[0]_0 [52]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[12] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[51]),
        .Q(\RX_PE_DATA_reg[0]_0 [51]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[13] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[50]),
        .Q(\RX_PE_DATA_reg[0]_0 [50]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[14] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[49]),
        .Q(\RX_PE_DATA_reg[0]_0 [49]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[15] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[48]),
        .Q(\RX_PE_DATA_reg[0]_0 [48]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[16] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[47]),
        .Q(\RX_PE_DATA_reg[0]_0 [47]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[17] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[46]),
        .Q(\RX_PE_DATA_reg[0]_0 [46]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[18] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[45]),
        .Q(\RX_PE_DATA_reg[0]_0 [45]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[19] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[44]),
        .Q(\RX_PE_DATA_reg[0]_0 [44]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[62]),
        .Q(\RX_PE_DATA_reg[0]_0 [62]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[20] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[43]),
        .Q(\RX_PE_DATA_reg[0]_0 [43]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[21] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[42]),
        .Q(\RX_PE_DATA_reg[0]_0 [42]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[22] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[41]),
        .Q(\RX_PE_DATA_reg[0]_0 [41]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[23] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[40]),
        .Q(\RX_PE_DATA_reg[0]_0 [40]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[24] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[39]),
        .Q(\RX_PE_DATA_reg[0]_0 [39]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[25] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[38]),
        .Q(\RX_PE_DATA_reg[0]_0 [38]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[26] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[37]),
        .Q(\RX_PE_DATA_reg[0]_0 [37]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[27] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[36]),
        .Q(\RX_PE_DATA_reg[0]_0 [36]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[28] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[35]),
        .Q(\RX_PE_DATA_reg[0]_0 [35]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[29] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[34]),
        .Q(\RX_PE_DATA_reg[0]_0 [34]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[61]),
        .Q(\RX_PE_DATA_reg[0]_0 [61]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[30] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[33]),
        .Q(\RX_PE_DATA_reg[0]_0 [33]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[31] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[32]),
        .Q(\RX_PE_DATA_reg[0]_0 [32]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[32] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[31]),
        .Q(\RX_PE_DATA_reg[0]_0 [31]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[33] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[30]),
        .Q(\RX_PE_DATA_reg[0]_0 [30]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[34] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[29]),
        .Q(\RX_PE_DATA_reg[0]_0 [29]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[35] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[28]),
        .Q(\RX_PE_DATA_reg[0]_0 [28]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[36] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[27]),
        .Q(\RX_PE_DATA_reg[0]_0 [27]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[37] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[26]),
        .Q(\RX_PE_DATA_reg[0]_0 [26]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[38] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[25]),
        .Q(\RX_PE_DATA_reg[0]_0 [25]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[39] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[24]),
        .Q(\RX_PE_DATA_reg[0]_0 [24]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[60]),
        .Q(\RX_PE_DATA_reg[0]_0 [60]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[40] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[23]),
        .Q(\RX_PE_DATA_reg[0]_0 [23]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[41] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[22]),
        .Q(\RX_PE_DATA_reg[0]_0 [22]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[42] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[21]),
        .Q(\RX_PE_DATA_reg[0]_0 [21]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[43] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[20]),
        .Q(\RX_PE_DATA_reg[0]_0 [20]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[44] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[19]),
        .Q(\RX_PE_DATA_reg[0]_0 [19]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[45] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[18]),
        .Q(\RX_PE_DATA_reg[0]_0 [18]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[46] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[17]),
        .Q(\RX_PE_DATA_reg[0]_0 [17]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[47] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[16]),
        .Q(\RX_PE_DATA_reg[0]_0 [16]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[48] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[7]),
        .Q(\RX_PE_DATA_reg[0]_0 [15]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[49] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[6]),
        .Q(\RX_PE_DATA_reg[0]_0 [14]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[59]),
        .Q(\RX_PE_DATA_reg[0]_0 [59]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[50] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[5]),
        .Q(\RX_PE_DATA_reg[0]_0 [13]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[51] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[4]),
        .Q(\RX_PE_DATA_reg[0]_0 [12]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[52] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[3]),
        .Q(\RX_PE_DATA_reg[0]_0 [11]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[53] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[2]),
        .Q(\RX_PE_DATA_reg[0]_0 [10]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[54] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[1]),
        .Q(\RX_PE_DATA_reg[0]_0 [9]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[55] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[0]),
        .Q(\RX_PE_DATA_reg[0]_0 [8]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[56] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[15]),
        .Q(\RX_PE_DATA_reg[0]_0 [7]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[57] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[14]),
        .Q(\RX_PE_DATA_reg[0]_0 [6]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[58] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[13]),
        .Q(\RX_PE_DATA_reg[0]_0 [5]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[59] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[12]),
        .Q(\RX_PE_DATA_reg[0]_0 [4]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[5] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[58]),
        .Q(\RX_PE_DATA_reg[0]_0 [58]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[60] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[11]),
        .Q(\RX_PE_DATA_reg[0]_0 [3]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[61] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[10]),
        .Q(\RX_PE_DATA_reg[0]_0 [2]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[62] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[9]),
        .Q(\RX_PE_DATA_reg[0]_0 [1]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[63] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(p_0_in[8]),
        .Q(\RX_PE_DATA_reg[0]_0 [0]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[6] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[57]),
        .Q(\RX_PE_DATA_reg[0]_0 [57]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[7] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[56]),
        .Q(\RX_PE_DATA_reg[0]_0 [56]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[8] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[55]),
        .Q(\RX_PE_DATA_reg[0]_0 [55]),
        .R(SR));
  FDRE \RX_PE_DATA_reg[9] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(valid_d),
        .D(rxdata_s[54]),
        .Q(\RX_PE_DATA_reg[0]_0 [54]),
        .R(SR));
  LUT6 #(
    .INIT(64'h10000000FFFFFFFF)) 
    \remote_rdy_cntr[0]_i_1__1 
       (.I0(rx_na_idles_cntr_reg[4]),
        .I1(\remote_rdy_cntr[0]_i_4_n_0 ),
        .I2(remote_rdy_cntr[0]),
        .I3(remote_rdy_cntr[1]),
        .I4(remote_rdy_cntr[2]),
        .I5(\remote_rdy_cntr_reg[0]_1 ),
        .O(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  LUT4 #(
    .INIT(16'h2AAA)) 
    \remote_rdy_cntr[0]_i_2 
       (.I0(remote_ready_det),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[0]),
        .O(remote_rdy_cntr01_out));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \remote_rdy_cntr[0]_i_3 
       (.I0(remote_rdy_cntr[0]),
        .I1(remote_rdy_cntr[1]),
        .I2(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[0]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    \remote_rdy_cntr[0]_i_4 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .O(\remote_rdy_cntr[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \remote_rdy_cntr[1]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .I1(remote_rdy_cntr[1]),
        .O(\remote_rdy_cntr[1]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \remote_rdy_cntr[2]_i_1 
       (.I0(remote_rdy_cntr[2]),
        .O(\remote_rdy_cntr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[0]_i_3_n_0 ),
        .Q(remote_rdy_cntr[0]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[1]_i_1_n_0 ),
        .Q(remote_rdy_cntr[1]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \remote_rdy_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(remote_rdy_cntr01_out),
        .D(\remote_rdy_cntr[2]_i_1_n_0 ),
        .Q(remote_rdy_cntr[2]),
        .R(\remote_rdy_cntr[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000040000000)) 
    remote_ready_det_i_1
       (.I0(ILLEGAL_BTF_i_5_n_0),
        .I1(p_0_in[4]),
        .I2(p_0_in[11]),
        .I3(remote_ready_det_i_2_n_0),
        .I4(ILLEGAL_BTF_i_3__2_n_0),
        .I5(ILLEGAL_BTF_i_2__2_n_0),
        .O(remote_ready_det0));
  LUT2 #(
    .INIT(4'h1)) 
    remote_ready_det_i_2
       (.I0(p_0_in[6]),
        .I1(p_0_in[7]),
        .O(remote_ready_det_i_2_n_0));
  FDRE remote_ready_det_reg
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(1'b1),
        .D(remote_ready_det0),
        .Q(remote_ready_det),
        .R(SR));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    remote_ready_r_i_1
       (.I0(remote_ready_r_reg),
        .I1(remote_rdy_cntr[0]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[2]),
        .I4(remote_ready_r_reg_0),
        .I5(remote_ready_r_reg_1),
        .O(\remote_rdy_cntr_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rx_na_idles_cntr[0]_i_1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rx_na_idles_cntr[1]_i_1 
       (.I0(rx_na_idles_cntr_reg[0]),
        .I1(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \rx_na_idles_cntr[2]_i_1 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rx_na_idles_cntr[3]_i_1 
       (.I0(rx_na_idles_cntr_reg[3]),
        .I1(rx_na_idles_cntr_reg[1]),
        .I2(rx_na_idles_cntr_reg[0]),
        .I3(rx_na_idles_cntr_reg[2]),
        .O(p_0_in__2[3]));
  LUT4 #(
    .INIT(16'h7FFF)) 
    \rx_na_idles_cntr[4]_i_1 
       (.I0(\remote_rdy_cntr_reg[0]_1 ),
        .I1(remote_rdy_cntr[2]),
        .I2(remote_rdy_cntr[1]),
        .I3(remote_rdy_cntr[0]),
        .O(\rx_na_idles_cntr[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rx_na_idles_cntr[4]_i_2 
       (.I0(rx_na_idles_cntr_reg[2]),
        .I1(rx_na_idles_cntr_reg[0]),
        .I2(rx_na_idles_cntr_reg[1]),
        .I3(rx_na_idles_cntr_reg[3]),
        .I4(rx_na_idles_cntr_reg[4]),
        .O(p_0_in__2[4]));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[0] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE),
        .D(p_0_in__2[0]),
        .Q(rx_na_idles_cntr_reg[0]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[1] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE),
        .D(p_0_in__2[1]),
        .Q(rx_na_idles_cntr_reg[1]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[2] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE),
        .D(p_0_in__2[2]),
        .Q(rx_na_idles_cntr_reg[2]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[3] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE),
        .D(p_0_in__2[3]),
        .Q(rx_na_idles_cntr_reg[3]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \rx_na_idles_cntr_reg[4] 
       (.C(\rx_na_idles_cntr_reg[0]_0 ),
        .CE(RX_NA_IDLE),
        .D(p_0_in__2[4]),
        .Q(rx_na_idles_cntr_reg[4]),
        .R(\rx_na_idles_cntr[4]_i_1_n_0 ));
endmodule

module board_aurora_64b66b_0_2_SYM_GEN
   (stg5_reg,
    D,
    stg5_reg_0,
    \TX_DATA_reg[63]_0 ,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    stg5_reg_1,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i_lane3,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[55]_2 ,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[54]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[57]_0 ,
    \TX_DATA_reg[56]_0 ,
    \TX_DATA_reg[51]_0 ,
    \TX_DATA_reg[50]_0 ,
    \TX_DATA_reg[49]_0 ,
    \TX_DATA_reg[48]_0 ,
    \TX_DATA_reg[47]_0 ,
    \TX_DATA_reg[46]_0 ,
    \TX_DATA_reg[45]_0 ,
    \TX_DATA_reg[44]_0 ,
    \TX_DATA_reg[43]_0 ,
    \TX_DATA_reg[42]_0 ,
    \TX_DATA_reg[41]_0 ,
    \TX_DATA_reg[40]_0 ,
    \TX_DATA_reg[39]_0 ,
    \TX_DATA_reg[38]_0 ,
    \TX_DATA_reg[37]_0 ,
    \TX_DATA_reg[36]_0 ,
    \TX_DATA_reg[35]_0 ,
    \TX_DATA_reg[34]_0 ,
    \TX_DATA_reg[33]_0 ,
    \TX_DATA_reg[32]_0 ,
    \TX_DATA_reg[31]_0 ,
    \TX_DATA_reg[30]_0 ,
    \TX_DATA_reg[29]_0 ,
    \TX_DATA_reg[28]_0 ,
    \TX_DATA_reg[27]_0 ,
    \TX_DATA_reg[26]_0 ,
    \TX_DATA_reg[25]_0 ,
    \TX_DATA_reg[24]_0 ,
    \TX_DATA_reg[23]_0 ,
    \TX_DATA_reg[22]_0 ,
    \TX_DATA_reg[21]_0 ,
    \TX_DATA_reg[20]_0 ,
    \TX_DATA_reg[19]_0 ,
    \TX_DATA_reg[18]_0 ,
    \TX_DATA_reg[17]_0 ,
    \TX_DATA_reg[16]_0 ,
    \TX_DATA_reg[15]_0 ,
    \TX_DATA_reg[14]_0 ,
    \TX_DATA_reg[13]_0 ,
    \TX_DATA_reg[12]_0 ,
    \TX_DATA_reg[11]_0 ,
    \TX_DATA_reg[10]_0 ,
    \TX_DATA_reg[9]_0 ,
    \TX_DATA_reg[8]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[6]_0 ,
    \TX_DATA_reg[5]_0 ,
    \TX_DATA_reg[4]_0 ,
    \TX_DATA_reg[3]_0 ,
    \TX_DATA_reg[2]_0 ,
    \TX_DATA_reg[1]_0 ,
    \TX_DATA_reg[0]_0 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output stg5_reg;
  output [1:0]D;
  output stg5_reg_0;
  output [63:0]\TX_DATA_reg[63]_0 ;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input stg5_reg_1;
  input TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i_lane3;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[55]_2 ;
  input \TX_DATA_reg[59]_0 ;
  input [2:0]\TX_DATA_reg[54]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[57]_0 ;
  input \TX_DATA_reg[56]_0 ;
  input \TX_DATA_reg[51]_0 ;
  input \TX_DATA_reg[50]_0 ;
  input \TX_DATA_reg[49]_0 ;
  input \TX_DATA_reg[48]_0 ;
  input \TX_DATA_reg[47]_0 ;
  input \TX_DATA_reg[46]_0 ;
  input \TX_DATA_reg[45]_0 ;
  input \TX_DATA_reg[44]_0 ;
  input \TX_DATA_reg[43]_0 ;
  input \TX_DATA_reg[42]_0 ;
  input \TX_DATA_reg[41]_0 ;
  input \TX_DATA_reg[40]_0 ;
  input \TX_DATA_reg[39]_0 ;
  input \TX_DATA_reg[38]_0 ;
  input \TX_DATA_reg[37]_0 ;
  input \TX_DATA_reg[36]_0 ;
  input \TX_DATA_reg[35]_0 ;
  input \TX_DATA_reg[34]_0 ;
  input \TX_DATA_reg[33]_0 ;
  input \TX_DATA_reg[32]_0 ;
  input \TX_DATA_reg[31]_0 ;
  input \TX_DATA_reg[30]_0 ;
  input \TX_DATA_reg[29]_0 ;
  input \TX_DATA_reg[28]_0 ;
  input \TX_DATA_reg[27]_0 ;
  input \TX_DATA_reg[26]_0 ;
  input \TX_DATA_reg[25]_0 ;
  input \TX_DATA_reg[24]_0 ;
  input \TX_DATA_reg[23]_0 ;
  input \TX_DATA_reg[22]_0 ;
  input \TX_DATA_reg[21]_0 ;
  input \TX_DATA_reg[20]_0 ;
  input \TX_DATA_reg[19]_0 ;
  input \TX_DATA_reg[18]_0 ;
  input \TX_DATA_reg[17]_0 ;
  input \TX_DATA_reg[16]_0 ;
  input \TX_DATA_reg[15]_0 ;
  input \TX_DATA_reg[14]_0 ;
  input \TX_DATA_reg[13]_0 ;
  input \TX_DATA_reg[12]_0 ;
  input \TX_DATA_reg[11]_0 ;
  input \TX_DATA_reg[10]_0 ;
  input \TX_DATA_reg[9]_0 ;
  input \TX_DATA_reg[8]_0 ;
  input \TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[6]_0 ;
  input \TX_DATA_reg[5]_0 ;
  input \TX_DATA_reg[4]_0 ;
  input \TX_DATA_reg[3]_0 ;
  input \TX_DATA_reg[2]_0 ;
  input \TX_DATA_reg[1]_0 ;
  input \TX_DATA_reg[0]_0 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [1:0]D;
  wire \TX_DATA[62]_i_1_n_0 ;
  wire \TX_DATA_reg[0]_0 ;
  wire \TX_DATA_reg[10]_0 ;
  wire \TX_DATA_reg[11]_0 ;
  wire \TX_DATA_reg[12]_0 ;
  wire \TX_DATA_reg[13]_0 ;
  wire \TX_DATA_reg[14]_0 ;
  wire \TX_DATA_reg[15]_0 ;
  wire \TX_DATA_reg[16]_0 ;
  wire \TX_DATA_reg[17]_0 ;
  wire \TX_DATA_reg[18]_0 ;
  wire \TX_DATA_reg[19]_0 ;
  wire \TX_DATA_reg[1]_0 ;
  wire \TX_DATA_reg[20]_0 ;
  wire \TX_DATA_reg[21]_0 ;
  wire \TX_DATA_reg[22]_0 ;
  wire \TX_DATA_reg[23]_0 ;
  wire \TX_DATA_reg[24]_0 ;
  wire \TX_DATA_reg[25]_0 ;
  wire \TX_DATA_reg[26]_0 ;
  wire \TX_DATA_reg[27]_0 ;
  wire \TX_DATA_reg[28]_0 ;
  wire \TX_DATA_reg[29]_0 ;
  wire \TX_DATA_reg[2]_0 ;
  wire \TX_DATA_reg[30]_0 ;
  wire \TX_DATA_reg[31]_0 ;
  wire \TX_DATA_reg[32]_0 ;
  wire \TX_DATA_reg[33]_0 ;
  wire \TX_DATA_reg[34]_0 ;
  wire \TX_DATA_reg[35]_0 ;
  wire \TX_DATA_reg[36]_0 ;
  wire \TX_DATA_reg[37]_0 ;
  wire \TX_DATA_reg[38]_0 ;
  wire \TX_DATA_reg[39]_0 ;
  wire \TX_DATA_reg[3]_0 ;
  wire \TX_DATA_reg[40]_0 ;
  wire \TX_DATA_reg[41]_0 ;
  wire \TX_DATA_reg[42]_0 ;
  wire \TX_DATA_reg[43]_0 ;
  wire \TX_DATA_reg[44]_0 ;
  wire \TX_DATA_reg[45]_0 ;
  wire \TX_DATA_reg[46]_0 ;
  wire \TX_DATA_reg[47]_0 ;
  wire \TX_DATA_reg[48]_0 ;
  wire \TX_DATA_reg[49]_0 ;
  wire \TX_DATA_reg[4]_0 ;
  wire \TX_DATA_reg[50]_0 ;
  wire \TX_DATA_reg[51]_0 ;
  wire [2:0]\TX_DATA_reg[54]_0 ;
  wire [0:0]\TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[55]_2 ;
  wire \TX_DATA_reg[56]_0 ;
  wire \TX_DATA_reg[57]_0 ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[5]_0 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire [63:0]\TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[6]_0 ;
  wire \TX_DATA_reg[7]_0 ;
  wire \TX_DATA_reg[8]_0 ;
  wire \TX_DATA_reg[9]_0 ;
  wire TX_HEADER_0_reg_0;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire txdatavalid_symgen_i_lane3;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;

  LUT5 #(
    .INIT(32'h00FD0000)) 
    \TX_DATA[62]_i_1 
       (.I0(TX_HEADER_1_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .I3(stg5_reg),
        .I4(\TX_DATA_reg[59]_0 ),
        .O(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[0]_0 ),
        .Q(\TX_DATA_reg[63]_0 [0]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[10]_0 ),
        .Q(\TX_DATA_reg[63]_0 [10]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[11]_0 ),
        .Q(\TX_DATA_reg[63]_0 [11]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[12]_0 ),
        .Q(\TX_DATA_reg[63]_0 [12]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[13]_0 ),
        .Q(\TX_DATA_reg[63]_0 [13]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[14]_0 ),
        .Q(\TX_DATA_reg[63]_0 [14]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[15]_0 ),
        .Q(\TX_DATA_reg[63]_0 [15]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[16]_0 ),
        .Q(\TX_DATA_reg[63]_0 [16]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[17]_0 ),
        .Q(\TX_DATA_reg[63]_0 [17]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[18]_0 ),
        .Q(\TX_DATA_reg[63]_0 [18]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[19]_0 ),
        .Q(\TX_DATA_reg[63]_0 [19]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[1]_0 ),
        .Q(\TX_DATA_reg[63]_0 [1]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[20]_0 ),
        .Q(\TX_DATA_reg[63]_0 [20]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[21]_0 ),
        .Q(\TX_DATA_reg[63]_0 [21]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[22]_0 ),
        .Q(\TX_DATA_reg[63]_0 [22]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[23]_0 ),
        .Q(\TX_DATA_reg[63]_0 [23]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[24]_0 ),
        .Q(\TX_DATA_reg[63]_0 [24]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[25]_0 ),
        .Q(\TX_DATA_reg[63]_0 [25]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[26]_0 ),
        .Q(\TX_DATA_reg[63]_0 [26]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[27]_0 ),
        .Q(\TX_DATA_reg[63]_0 [27]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[28]_0 ),
        .Q(\TX_DATA_reg[63]_0 [28]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[29]_0 ),
        .Q(\TX_DATA_reg[63]_0 [29]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[2]_0 ),
        .Q(\TX_DATA_reg[63]_0 [2]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[30]_0 ),
        .Q(\TX_DATA_reg[63]_0 [30]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[31]_0 ),
        .Q(\TX_DATA_reg[63]_0 [31]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[32]_0 ),
        .Q(\TX_DATA_reg[63]_0 [32]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[33]_0 ),
        .Q(\TX_DATA_reg[63]_0 [33]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[34]_0 ),
        .Q(\TX_DATA_reg[63]_0 [34]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[35]_0 ),
        .Q(\TX_DATA_reg[63]_0 [35]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[36]_0 ),
        .Q(\TX_DATA_reg[63]_0 [36]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[37]_0 ),
        .Q(\TX_DATA_reg[63]_0 [37]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[38]_0 ),
        .Q(\TX_DATA_reg[63]_0 [38]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[39]_0 ),
        .Q(\TX_DATA_reg[63]_0 [39]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[3]_0 ),
        .Q(\TX_DATA_reg[63]_0 [3]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[40]_0 ),
        .Q(\TX_DATA_reg[63]_0 [40]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[41]_0 ),
        .Q(\TX_DATA_reg[63]_0 [41]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[42]_0 ),
        .Q(\TX_DATA_reg[63]_0 [42]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[43]_0 ),
        .Q(\TX_DATA_reg[63]_0 [43]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[44]_0 ),
        .Q(\TX_DATA_reg[63]_0 [44]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[45]_0 ),
        .Q(\TX_DATA_reg[63]_0 [45]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[46]_0 ),
        .Q(\TX_DATA_reg[63]_0 [46]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[47]_0 ),
        .Q(\TX_DATA_reg[63]_0 [47]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[48]_0 ),
        .Q(\TX_DATA_reg[63]_0 [48]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[49]_0 ),
        .Q(\TX_DATA_reg[63]_0 [49]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[4]_0 ),
        .Q(\TX_DATA_reg[63]_0 [4]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[50]_0 ),
        .Q(\TX_DATA_reg[63]_0 [50]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[51]_0 ),
        .Q(\TX_DATA_reg[63]_0 [51]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(u_pma_init_data_sync_n_2),
        .Q(\TX_DATA_reg[63]_0 [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[56]_0 ),
        .Q(\TX_DATA_reg[63]_0 [56]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[57]_0 ),
        .Q(\TX_DATA_reg[63]_0 [57]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[58]_0 ),
        .Q(\TX_DATA_reg[63]_0 [58]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(\TX_DATA_reg[63]_0 [59]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[5]_0 ),
        .Q(\TX_DATA_reg[63]_0 [5]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(\TX_DATA_reg[63]_0 [60]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(\TX_DATA_reg[63]_0 [61]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(\TX_DATA_reg[63]_0 [62]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[63]_2 ),
        .Q(\TX_DATA_reg[63]_0 [63]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[6]_0 ),
        .Q(\TX_DATA_reg[63]_0 [6]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 ),
        .Q(\TX_DATA_reg[63]_0 [7]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[8]_0 ),
        .Q(\TX_DATA_reg[63]_0 [8]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[9]_0 ),
        .Q(\TX_DATA_reg[63]_0 [9]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(TX_HEADER_0_reg_0),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(D[1]),
        .R(1'b0));
  board_aurora_64b66b_0_2_rst_sync_100 u_pma_init_data_sync
       (.D(D[1]),
        .\TX_DATA_reg[55] (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_2 ),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_1),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(u_pma_init_data_sync_n_2),
        .stg5_reg_2(stg5_reg_0),
        .stg5_reg_3(stg5_reg_1),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_GEN" *) 
module board_aurora_64b66b_0_2_SYM_GEN_105
   (stg5_reg,
    D,
    stg5_reg_0,
    \TX_DATA_reg[63]_0 ,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    stg4_reg,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i_lane2,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[55]_2 ,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[54]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[57]_0 ,
    \TX_DATA_reg[56]_0 ,
    \TX_DATA_reg[51]_0 ,
    \TX_DATA_reg[50]_0 ,
    \TX_DATA_reg[49]_0 ,
    \TX_DATA_reg[48]_0 ,
    \TX_DATA_reg[47]_0 ,
    \TX_DATA_reg[46]_0 ,
    \TX_DATA_reg[45]_0 ,
    \TX_DATA_reg[44]_0 ,
    \TX_DATA_reg[43]_0 ,
    \TX_DATA_reg[42]_0 ,
    \TX_DATA_reg[41]_0 ,
    \TX_DATA_reg[40]_0 ,
    \TX_DATA_reg[39]_0 ,
    \TX_DATA_reg[38]_0 ,
    \TX_DATA_reg[37]_0 ,
    \TX_DATA_reg[36]_0 ,
    \TX_DATA_reg[35]_0 ,
    \TX_DATA_reg[34]_0 ,
    \TX_DATA_reg[33]_0 ,
    \TX_DATA_reg[32]_0 ,
    \TX_DATA_reg[31]_0 ,
    \TX_DATA_reg[30]_0 ,
    \TX_DATA_reg[29]_0 ,
    \TX_DATA_reg[28]_0 ,
    \TX_DATA_reg[27]_0 ,
    \TX_DATA_reg[26]_0 ,
    \TX_DATA_reg[25]_0 ,
    \TX_DATA_reg[24]_0 ,
    \TX_DATA_reg[23]_0 ,
    \TX_DATA_reg[22]_0 ,
    \TX_DATA_reg[21]_0 ,
    \TX_DATA_reg[20]_0 ,
    \TX_DATA_reg[19]_0 ,
    \TX_DATA_reg[18]_0 ,
    \TX_DATA_reg[17]_0 ,
    \TX_DATA_reg[16]_0 ,
    \TX_DATA_reg[15]_0 ,
    \TX_DATA_reg[14]_0 ,
    \TX_DATA_reg[13]_0 ,
    \TX_DATA_reg[12]_0 ,
    \TX_DATA_reg[11]_0 ,
    \TX_DATA_reg[10]_0 ,
    \TX_DATA_reg[9]_0 ,
    \TX_DATA_reg[8]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[6]_0 ,
    \TX_DATA_reg[5]_0 ,
    \TX_DATA_reg[4]_0 ,
    \TX_DATA_reg[3]_0 ,
    \TX_DATA_reg[2]_0 ,
    \TX_DATA_reg[1]_0 ,
    \TX_DATA_reg[0]_0 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output stg5_reg;
  output [1:0]D;
  output stg5_reg_0;
  output [63:0]\TX_DATA_reg[63]_0 ;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input stg4_reg;
  input TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i_lane2;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[55]_2 ;
  input \TX_DATA_reg[59]_0 ;
  input [2:0]\TX_DATA_reg[54]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[57]_0 ;
  input \TX_DATA_reg[56]_0 ;
  input \TX_DATA_reg[51]_0 ;
  input \TX_DATA_reg[50]_0 ;
  input \TX_DATA_reg[49]_0 ;
  input \TX_DATA_reg[48]_0 ;
  input \TX_DATA_reg[47]_0 ;
  input \TX_DATA_reg[46]_0 ;
  input \TX_DATA_reg[45]_0 ;
  input \TX_DATA_reg[44]_0 ;
  input \TX_DATA_reg[43]_0 ;
  input \TX_DATA_reg[42]_0 ;
  input \TX_DATA_reg[41]_0 ;
  input \TX_DATA_reg[40]_0 ;
  input \TX_DATA_reg[39]_0 ;
  input \TX_DATA_reg[38]_0 ;
  input \TX_DATA_reg[37]_0 ;
  input \TX_DATA_reg[36]_0 ;
  input \TX_DATA_reg[35]_0 ;
  input \TX_DATA_reg[34]_0 ;
  input \TX_DATA_reg[33]_0 ;
  input \TX_DATA_reg[32]_0 ;
  input \TX_DATA_reg[31]_0 ;
  input \TX_DATA_reg[30]_0 ;
  input \TX_DATA_reg[29]_0 ;
  input \TX_DATA_reg[28]_0 ;
  input \TX_DATA_reg[27]_0 ;
  input \TX_DATA_reg[26]_0 ;
  input \TX_DATA_reg[25]_0 ;
  input \TX_DATA_reg[24]_0 ;
  input \TX_DATA_reg[23]_0 ;
  input \TX_DATA_reg[22]_0 ;
  input \TX_DATA_reg[21]_0 ;
  input \TX_DATA_reg[20]_0 ;
  input \TX_DATA_reg[19]_0 ;
  input \TX_DATA_reg[18]_0 ;
  input \TX_DATA_reg[17]_0 ;
  input \TX_DATA_reg[16]_0 ;
  input \TX_DATA_reg[15]_0 ;
  input \TX_DATA_reg[14]_0 ;
  input \TX_DATA_reg[13]_0 ;
  input \TX_DATA_reg[12]_0 ;
  input \TX_DATA_reg[11]_0 ;
  input \TX_DATA_reg[10]_0 ;
  input \TX_DATA_reg[9]_0 ;
  input \TX_DATA_reg[8]_0 ;
  input \TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[6]_0 ;
  input \TX_DATA_reg[5]_0 ;
  input \TX_DATA_reg[4]_0 ;
  input \TX_DATA_reg[3]_0 ;
  input \TX_DATA_reg[2]_0 ;
  input \TX_DATA_reg[1]_0 ;
  input \TX_DATA_reg[0]_0 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [1:0]D;
  wire \TX_DATA[62]_i_1_n_0 ;
  wire \TX_DATA_reg[0]_0 ;
  wire \TX_DATA_reg[10]_0 ;
  wire \TX_DATA_reg[11]_0 ;
  wire \TX_DATA_reg[12]_0 ;
  wire \TX_DATA_reg[13]_0 ;
  wire \TX_DATA_reg[14]_0 ;
  wire \TX_DATA_reg[15]_0 ;
  wire \TX_DATA_reg[16]_0 ;
  wire \TX_DATA_reg[17]_0 ;
  wire \TX_DATA_reg[18]_0 ;
  wire \TX_DATA_reg[19]_0 ;
  wire \TX_DATA_reg[1]_0 ;
  wire \TX_DATA_reg[20]_0 ;
  wire \TX_DATA_reg[21]_0 ;
  wire \TX_DATA_reg[22]_0 ;
  wire \TX_DATA_reg[23]_0 ;
  wire \TX_DATA_reg[24]_0 ;
  wire \TX_DATA_reg[25]_0 ;
  wire \TX_DATA_reg[26]_0 ;
  wire \TX_DATA_reg[27]_0 ;
  wire \TX_DATA_reg[28]_0 ;
  wire \TX_DATA_reg[29]_0 ;
  wire \TX_DATA_reg[2]_0 ;
  wire \TX_DATA_reg[30]_0 ;
  wire \TX_DATA_reg[31]_0 ;
  wire \TX_DATA_reg[32]_0 ;
  wire \TX_DATA_reg[33]_0 ;
  wire \TX_DATA_reg[34]_0 ;
  wire \TX_DATA_reg[35]_0 ;
  wire \TX_DATA_reg[36]_0 ;
  wire \TX_DATA_reg[37]_0 ;
  wire \TX_DATA_reg[38]_0 ;
  wire \TX_DATA_reg[39]_0 ;
  wire \TX_DATA_reg[3]_0 ;
  wire \TX_DATA_reg[40]_0 ;
  wire \TX_DATA_reg[41]_0 ;
  wire \TX_DATA_reg[42]_0 ;
  wire \TX_DATA_reg[43]_0 ;
  wire \TX_DATA_reg[44]_0 ;
  wire \TX_DATA_reg[45]_0 ;
  wire \TX_DATA_reg[46]_0 ;
  wire \TX_DATA_reg[47]_0 ;
  wire \TX_DATA_reg[48]_0 ;
  wire \TX_DATA_reg[49]_0 ;
  wire \TX_DATA_reg[4]_0 ;
  wire \TX_DATA_reg[50]_0 ;
  wire \TX_DATA_reg[51]_0 ;
  wire [2:0]\TX_DATA_reg[54]_0 ;
  wire [0:0]\TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[55]_2 ;
  wire \TX_DATA_reg[56]_0 ;
  wire \TX_DATA_reg[57]_0 ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[5]_0 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire [63:0]\TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[6]_0 ;
  wire \TX_DATA_reg[7]_0 ;
  wire \TX_DATA_reg[8]_0 ;
  wire \TX_DATA_reg[9]_0 ;
  wire TX_HEADER_0_reg_0;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg4_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire txdatavalid_symgen_i_lane2;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;

  LUT5 #(
    .INIT(32'h00FD0000)) 
    \TX_DATA[62]_i_1 
       (.I0(TX_HEADER_1_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .I3(stg5_reg),
        .I4(\TX_DATA_reg[59]_0 ),
        .O(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[0]_0 ),
        .Q(\TX_DATA_reg[63]_0 [0]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[10]_0 ),
        .Q(\TX_DATA_reg[63]_0 [10]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[11]_0 ),
        .Q(\TX_DATA_reg[63]_0 [11]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[12]_0 ),
        .Q(\TX_DATA_reg[63]_0 [12]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[13]_0 ),
        .Q(\TX_DATA_reg[63]_0 [13]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[14]_0 ),
        .Q(\TX_DATA_reg[63]_0 [14]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[15]_0 ),
        .Q(\TX_DATA_reg[63]_0 [15]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[16]_0 ),
        .Q(\TX_DATA_reg[63]_0 [16]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[17]_0 ),
        .Q(\TX_DATA_reg[63]_0 [17]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[18]_0 ),
        .Q(\TX_DATA_reg[63]_0 [18]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[19]_0 ),
        .Q(\TX_DATA_reg[63]_0 [19]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[1]_0 ),
        .Q(\TX_DATA_reg[63]_0 [1]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[20]_0 ),
        .Q(\TX_DATA_reg[63]_0 [20]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[21]_0 ),
        .Q(\TX_DATA_reg[63]_0 [21]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[22]_0 ),
        .Q(\TX_DATA_reg[63]_0 [22]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[23]_0 ),
        .Q(\TX_DATA_reg[63]_0 [23]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[24]_0 ),
        .Q(\TX_DATA_reg[63]_0 [24]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[25]_0 ),
        .Q(\TX_DATA_reg[63]_0 [25]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[26]_0 ),
        .Q(\TX_DATA_reg[63]_0 [26]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[27]_0 ),
        .Q(\TX_DATA_reg[63]_0 [27]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[28]_0 ),
        .Q(\TX_DATA_reg[63]_0 [28]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[29]_0 ),
        .Q(\TX_DATA_reg[63]_0 [29]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[2]_0 ),
        .Q(\TX_DATA_reg[63]_0 [2]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[30]_0 ),
        .Q(\TX_DATA_reg[63]_0 [30]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[31]_0 ),
        .Q(\TX_DATA_reg[63]_0 [31]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[32]_0 ),
        .Q(\TX_DATA_reg[63]_0 [32]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[33]_0 ),
        .Q(\TX_DATA_reg[63]_0 [33]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[34]_0 ),
        .Q(\TX_DATA_reg[63]_0 [34]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[35]_0 ),
        .Q(\TX_DATA_reg[63]_0 [35]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[36]_0 ),
        .Q(\TX_DATA_reg[63]_0 [36]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[37]_0 ),
        .Q(\TX_DATA_reg[63]_0 [37]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[38]_0 ),
        .Q(\TX_DATA_reg[63]_0 [38]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[39]_0 ),
        .Q(\TX_DATA_reg[63]_0 [39]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[3]_0 ),
        .Q(\TX_DATA_reg[63]_0 [3]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[40]_0 ),
        .Q(\TX_DATA_reg[63]_0 [40]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[41]_0 ),
        .Q(\TX_DATA_reg[63]_0 [41]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[42]_0 ),
        .Q(\TX_DATA_reg[63]_0 [42]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[43]_0 ),
        .Q(\TX_DATA_reg[63]_0 [43]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[44]_0 ),
        .Q(\TX_DATA_reg[63]_0 [44]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[45]_0 ),
        .Q(\TX_DATA_reg[63]_0 [45]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[46]_0 ),
        .Q(\TX_DATA_reg[63]_0 [46]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[47]_0 ),
        .Q(\TX_DATA_reg[63]_0 [47]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[48]_0 ),
        .Q(\TX_DATA_reg[63]_0 [48]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[49]_0 ),
        .Q(\TX_DATA_reg[63]_0 [49]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[4]_0 ),
        .Q(\TX_DATA_reg[63]_0 [4]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[50]_0 ),
        .Q(\TX_DATA_reg[63]_0 [50]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[51]_0 ),
        .Q(\TX_DATA_reg[63]_0 [51]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(u_pma_init_data_sync_n_2),
        .Q(\TX_DATA_reg[63]_0 [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[56]_0 ),
        .Q(\TX_DATA_reg[63]_0 [56]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[57]_0 ),
        .Q(\TX_DATA_reg[63]_0 [57]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[58]_0 ),
        .Q(\TX_DATA_reg[63]_0 [58]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(\TX_DATA_reg[63]_0 [59]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[5]_0 ),
        .Q(\TX_DATA_reg[63]_0 [5]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(\TX_DATA_reg[63]_0 [60]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(\TX_DATA_reg[63]_0 [61]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(\TX_DATA_reg[63]_0 [62]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[63]_2 ),
        .Q(\TX_DATA_reg[63]_0 [63]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[6]_0 ),
        .Q(\TX_DATA_reg[63]_0 [6]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 ),
        .Q(\TX_DATA_reg[63]_0 [7]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[8]_0 ),
        .Q(\TX_DATA_reg[63]_0 [8]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[9]_0 ),
        .Q(\TX_DATA_reg[63]_0 [9]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(TX_HEADER_0_reg_0),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(D[1]),
        .R(1'b0));
  board_aurora_64b66b_0_2_rst_sync_106 u_pma_init_data_sync
       (.D(D[1]),
        .\TX_DATA_reg[55] (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_2 ),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_1),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg4_reg_0(stg4_reg),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(u_pma_init_data_sync_n_2),
        .stg5_reg_2(stg5_reg_0),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_GEN" *) 
module board_aurora_64b66b_0_2_SYM_GEN_111
   (stg5_reg,
    D,
    stg5_reg_0,
    \TX_DATA_reg[63]_0 ,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    stg5_reg_1,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i_lane1,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[55]_2 ,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[54]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[57]_0 ,
    \TX_DATA_reg[56]_0 ,
    \TX_DATA_reg[51]_0 ,
    \TX_DATA_reg[50]_0 ,
    \TX_DATA_reg[49]_0 ,
    \TX_DATA_reg[48]_0 ,
    \TX_DATA_reg[47]_0 ,
    \TX_DATA_reg[46]_0 ,
    \TX_DATA_reg[45]_0 ,
    \TX_DATA_reg[44]_0 ,
    \TX_DATA_reg[43]_0 ,
    \TX_DATA_reg[42]_0 ,
    \TX_DATA_reg[41]_0 ,
    \TX_DATA_reg[40]_0 ,
    \TX_DATA_reg[39]_0 ,
    \TX_DATA_reg[38]_0 ,
    \TX_DATA_reg[37]_0 ,
    \TX_DATA_reg[36]_0 ,
    \TX_DATA_reg[35]_0 ,
    \TX_DATA_reg[34]_0 ,
    \TX_DATA_reg[33]_0 ,
    \TX_DATA_reg[32]_0 ,
    \TX_DATA_reg[31]_0 ,
    \TX_DATA_reg[30]_0 ,
    \TX_DATA_reg[29]_0 ,
    \TX_DATA_reg[28]_0 ,
    \TX_DATA_reg[27]_0 ,
    \TX_DATA_reg[26]_0 ,
    \TX_DATA_reg[25]_0 ,
    \TX_DATA_reg[24]_0 ,
    \TX_DATA_reg[23]_0 ,
    \TX_DATA_reg[22]_0 ,
    \TX_DATA_reg[21]_0 ,
    \TX_DATA_reg[20]_0 ,
    \TX_DATA_reg[19]_0 ,
    \TX_DATA_reg[18]_0 ,
    \TX_DATA_reg[17]_0 ,
    \TX_DATA_reg[16]_0 ,
    \TX_DATA_reg[15]_0 ,
    \TX_DATA_reg[14]_0 ,
    \TX_DATA_reg[13]_0 ,
    \TX_DATA_reg[12]_0 ,
    \TX_DATA_reg[11]_0 ,
    \TX_DATA_reg[10]_0 ,
    \TX_DATA_reg[9]_0 ,
    \TX_DATA_reg[8]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[6]_0 ,
    \TX_DATA_reg[5]_0 ,
    \TX_DATA_reg[4]_0 ,
    \TX_DATA_reg[3]_0 ,
    \TX_DATA_reg[2]_0 ,
    \TX_DATA_reg[1]_0 ,
    \TX_DATA_reg[0]_0 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output stg5_reg;
  output [1:0]D;
  output stg5_reg_0;
  output [63:0]\TX_DATA_reg[63]_0 ;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input stg5_reg_1;
  input TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i_lane1;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[55]_2 ;
  input \TX_DATA_reg[59]_0 ;
  input [2:0]\TX_DATA_reg[54]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[57]_0 ;
  input \TX_DATA_reg[56]_0 ;
  input \TX_DATA_reg[51]_0 ;
  input \TX_DATA_reg[50]_0 ;
  input \TX_DATA_reg[49]_0 ;
  input \TX_DATA_reg[48]_0 ;
  input \TX_DATA_reg[47]_0 ;
  input \TX_DATA_reg[46]_0 ;
  input \TX_DATA_reg[45]_0 ;
  input \TX_DATA_reg[44]_0 ;
  input \TX_DATA_reg[43]_0 ;
  input \TX_DATA_reg[42]_0 ;
  input \TX_DATA_reg[41]_0 ;
  input \TX_DATA_reg[40]_0 ;
  input \TX_DATA_reg[39]_0 ;
  input \TX_DATA_reg[38]_0 ;
  input \TX_DATA_reg[37]_0 ;
  input \TX_DATA_reg[36]_0 ;
  input \TX_DATA_reg[35]_0 ;
  input \TX_DATA_reg[34]_0 ;
  input \TX_DATA_reg[33]_0 ;
  input \TX_DATA_reg[32]_0 ;
  input \TX_DATA_reg[31]_0 ;
  input \TX_DATA_reg[30]_0 ;
  input \TX_DATA_reg[29]_0 ;
  input \TX_DATA_reg[28]_0 ;
  input \TX_DATA_reg[27]_0 ;
  input \TX_DATA_reg[26]_0 ;
  input \TX_DATA_reg[25]_0 ;
  input \TX_DATA_reg[24]_0 ;
  input \TX_DATA_reg[23]_0 ;
  input \TX_DATA_reg[22]_0 ;
  input \TX_DATA_reg[21]_0 ;
  input \TX_DATA_reg[20]_0 ;
  input \TX_DATA_reg[19]_0 ;
  input \TX_DATA_reg[18]_0 ;
  input \TX_DATA_reg[17]_0 ;
  input \TX_DATA_reg[16]_0 ;
  input \TX_DATA_reg[15]_0 ;
  input \TX_DATA_reg[14]_0 ;
  input \TX_DATA_reg[13]_0 ;
  input \TX_DATA_reg[12]_0 ;
  input \TX_DATA_reg[11]_0 ;
  input \TX_DATA_reg[10]_0 ;
  input \TX_DATA_reg[9]_0 ;
  input \TX_DATA_reg[8]_0 ;
  input \TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[6]_0 ;
  input \TX_DATA_reg[5]_0 ;
  input \TX_DATA_reg[4]_0 ;
  input \TX_DATA_reg[3]_0 ;
  input \TX_DATA_reg[2]_0 ;
  input \TX_DATA_reg[1]_0 ;
  input \TX_DATA_reg[0]_0 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [1:0]D;
  wire \TX_DATA[62]_i_1_n_0 ;
  wire \TX_DATA_reg[0]_0 ;
  wire \TX_DATA_reg[10]_0 ;
  wire \TX_DATA_reg[11]_0 ;
  wire \TX_DATA_reg[12]_0 ;
  wire \TX_DATA_reg[13]_0 ;
  wire \TX_DATA_reg[14]_0 ;
  wire \TX_DATA_reg[15]_0 ;
  wire \TX_DATA_reg[16]_0 ;
  wire \TX_DATA_reg[17]_0 ;
  wire \TX_DATA_reg[18]_0 ;
  wire \TX_DATA_reg[19]_0 ;
  wire \TX_DATA_reg[1]_0 ;
  wire \TX_DATA_reg[20]_0 ;
  wire \TX_DATA_reg[21]_0 ;
  wire \TX_DATA_reg[22]_0 ;
  wire \TX_DATA_reg[23]_0 ;
  wire \TX_DATA_reg[24]_0 ;
  wire \TX_DATA_reg[25]_0 ;
  wire \TX_DATA_reg[26]_0 ;
  wire \TX_DATA_reg[27]_0 ;
  wire \TX_DATA_reg[28]_0 ;
  wire \TX_DATA_reg[29]_0 ;
  wire \TX_DATA_reg[2]_0 ;
  wire \TX_DATA_reg[30]_0 ;
  wire \TX_DATA_reg[31]_0 ;
  wire \TX_DATA_reg[32]_0 ;
  wire \TX_DATA_reg[33]_0 ;
  wire \TX_DATA_reg[34]_0 ;
  wire \TX_DATA_reg[35]_0 ;
  wire \TX_DATA_reg[36]_0 ;
  wire \TX_DATA_reg[37]_0 ;
  wire \TX_DATA_reg[38]_0 ;
  wire \TX_DATA_reg[39]_0 ;
  wire \TX_DATA_reg[3]_0 ;
  wire \TX_DATA_reg[40]_0 ;
  wire \TX_DATA_reg[41]_0 ;
  wire \TX_DATA_reg[42]_0 ;
  wire \TX_DATA_reg[43]_0 ;
  wire \TX_DATA_reg[44]_0 ;
  wire \TX_DATA_reg[45]_0 ;
  wire \TX_DATA_reg[46]_0 ;
  wire \TX_DATA_reg[47]_0 ;
  wire \TX_DATA_reg[48]_0 ;
  wire \TX_DATA_reg[49]_0 ;
  wire \TX_DATA_reg[4]_0 ;
  wire \TX_DATA_reg[50]_0 ;
  wire \TX_DATA_reg[51]_0 ;
  wire [2:0]\TX_DATA_reg[54]_0 ;
  wire [0:0]\TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[55]_2 ;
  wire \TX_DATA_reg[56]_0 ;
  wire \TX_DATA_reg[57]_0 ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[5]_0 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire [63:0]\TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[6]_0 ;
  wire \TX_DATA_reg[7]_0 ;
  wire \TX_DATA_reg[8]_0 ;
  wire \TX_DATA_reg[9]_0 ;
  wire TX_HEADER_0_reg_0;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire txdatavalid_symgen_i_lane1;
  wire u_pma_init_data_sync_n_1;
  wire u_pma_init_data_sync_n_2;

  LUT5 #(
    .INIT(32'h00FD0000)) 
    \TX_DATA[62]_i_1 
       (.I0(TX_HEADER_1_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .I3(stg5_reg),
        .I4(\TX_DATA_reg[59]_0 ),
        .O(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[0]_0 ),
        .Q(\TX_DATA_reg[63]_0 [0]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[10]_0 ),
        .Q(\TX_DATA_reg[63]_0 [10]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[11]_0 ),
        .Q(\TX_DATA_reg[63]_0 [11]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[12]_0 ),
        .Q(\TX_DATA_reg[63]_0 [12]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[13]_0 ),
        .Q(\TX_DATA_reg[63]_0 [13]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[14]_0 ),
        .Q(\TX_DATA_reg[63]_0 [14]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[15]_0 ),
        .Q(\TX_DATA_reg[63]_0 [15]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[16]_0 ),
        .Q(\TX_DATA_reg[63]_0 [16]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[17]_0 ),
        .Q(\TX_DATA_reg[63]_0 [17]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[18]_0 ),
        .Q(\TX_DATA_reg[63]_0 [18]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[19]_0 ),
        .Q(\TX_DATA_reg[63]_0 [19]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[1]_0 ),
        .Q(\TX_DATA_reg[63]_0 [1]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[20]_0 ),
        .Q(\TX_DATA_reg[63]_0 [20]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[21]_0 ),
        .Q(\TX_DATA_reg[63]_0 [21]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[22]_0 ),
        .Q(\TX_DATA_reg[63]_0 [22]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[23]_0 ),
        .Q(\TX_DATA_reg[63]_0 [23]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[24]_0 ),
        .Q(\TX_DATA_reg[63]_0 [24]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[25]_0 ),
        .Q(\TX_DATA_reg[63]_0 [25]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[26]_0 ),
        .Q(\TX_DATA_reg[63]_0 [26]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[27]_0 ),
        .Q(\TX_DATA_reg[63]_0 [27]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[28]_0 ),
        .Q(\TX_DATA_reg[63]_0 [28]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[29]_0 ),
        .Q(\TX_DATA_reg[63]_0 [29]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[2]_0 ),
        .Q(\TX_DATA_reg[63]_0 [2]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[30]_0 ),
        .Q(\TX_DATA_reg[63]_0 [30]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[31]_0 ),
        .Q(\TX_DATA_reg[63]_0 [31]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[32]_0 ),
        .Q(\TX_DATA_reg[63]_0 [32]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[33]_0 ),
        .Q(\TX_DATA_reg[63]_0 [33]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[34]_0 ),
        .Q(\TX_DATA_reg[63]_0 [34]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[35]_0 ),
        .Q(\TX_DATA_reg[63]_0 [35]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[36]_0 ),
        .Q(\TX_DATA_reg[63]_0 [36]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[37]_0 ),
        .Q(\TX_DATA_reg[63]_0 [37]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[38]_0 ),
        .Q(\TX_DATA_reg[63]_0 [38]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[39]_0 ),
        .Q(\TX_DATA_reg[63]_0 [39]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[3]_0 ),
        .Q(\TX_DATA_reg[63]_0 [3]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[40]_0 ),
        .Q(\TX_DATA_reg[63]_0 [40]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[41]_0 ),
        .Q(\TX_DATA_reg[63]_0 [41]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[42]_0 ),
        .Q(\TX_DATA_reg[63]_0 [42]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[43]_0 ),
        .Q(\TX_DATA_reg[63]_0 [43]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[44]_0 ),
        .Q(\TX_DATA_reg[63]_0 [44]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[45]_0 ),
        .Q(\TX_DATA_reg[63]_0 [45]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[46]_0 ),
        .Q(\TX_DATA_reg[63]_0 [46]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[47]_0 ),
        .Q(\TX_DATA_reg[63]_0 [47]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[48]_0 ),
        .Q(\TX_DATA_reg[63]_0 [48]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[49]_0 ),
        .Q(\TX_DATA_reg[63]_0 [49]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[4]_0 ),
        .Q(\TX_DATA_reg[63]_0 [4]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[50]_0 ),
        .Q(\TX_DATA_reg[63]_0 [50]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[51]_0 ),
        .Q(\TX_DATA_reg[63]_0 [51]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(u_pma_init_data_sync_n_2),
        .Q(\TX_DATA_reg[63]_0 [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[56]_0 ),
        .Q(\TX_DATA_reg[63]_0 [56]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[57]_0 ),
        .Q(\TX_DATA_reg[63]_0 [57]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[58]_0 ),
        .Q(\TX_DATA_reg[63]_0 [58]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(\TX_DATA_reg[63]_0 [59]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[5]_0 ),
        .Q(\TX_DATA_reg[63]_0 [5]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(\TX_DATA_reg[63]_0 [60]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(\TX_DATA_reg[63]_0 [61]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(\TX_DATA_reg[63]_0 [62]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[63]_2 ),
        .Q(\TX_DATA_reg[63]_0 [63]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[6]_0 ),
        .Q(\TX_DATA_reg[63]_0 [6]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 ),
        .Q(\TX_DATA_reg[63]_0 [7]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[8]_0 ),
        .Q(\TX_DATA_reg[63]_0 [8]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(stg5_reg_1),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[9]_0 ),
        .Q(\TX_DATA_reg[63]_0 [9]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(TX_HEADER_0_reg_0),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(D[1]),
        .R(1'b0));
  board_aurora_64b66b_0_2_rst_sync_112 u_pma_init_data_sync
       (.D(D[1]),
        .\TX_DATA_reg[55] (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_2 ),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_1),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(u_pma_init_data_sync_n_2),
        .stg5_reg_2(stg5_reg_0),
        .stg5_reg_3(stg5_reg_1),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_SYM_GEN" *) 
module board_aurora_64b66b_0_2_SYM_GEN_117
   (stg5_reg,
    D,
    \TX_DATA_reg[63]_0 ,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    stg4_reg,
    TX_HEADER_0_reg_0,
    txdatavalid_symgen_i,
    gen_cc_i,
    gen_ch_bond_i,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 ,
    \TX_DATA_reg[55]_2 ,
    \TX_DATA_reg[59]_0 ,
    \TX_DATA_reg[54]_0 ,
    \TX_DATA_reg[63]_1 ,
    \TX_DATA_reg[63]_2 ,
    \TX_DATA_reg[58]_0 ,
    \TX_DATA_reg[57]_0 ,
    \TX_DATA_reg[56]_0 ,
    \TX_DATA_reg[51]_0 ,
    \TX_DATA_reg[50]_0 ,
    \TX_DATA_reg[49]_0 ,
    \TX_DATA_reg[48]_0 ,
    \TX_DATA_reg[47]_0 ,
    \TX_DATA_reg[46]_0 ,
    \TX_DATA_reg[45]_0 ,
    \TX_DATA_reg[44]_0 ,
    \TX_DATA_reg[43]_0 ,
    \TX_DATA_reg[42]_0 ,
    \TX_DATA_reg[41]_0 ,
    \TX_DATA_reg[40]_0 ,
    \TX_DATA_reg[39]_0 ,
    \TX_DATA_reg[38]_0 ,
    \TX_DATA_reg[37]_0 ,
    \TX_DATA_reg[36]_0 ,
    \TX_DATA_reg[35]_0 ,
    \TX_DATA_reg[34]_0 ,
    \TX_DATA_reg[33]_0 ,
    \TX_DATA_reg[32]_0 ,
    \TX_DATA_reg[31]_0 ,
    \TX_DATA_reg[30]_0 ,
    \TX_DATA_reg[29]_0 ,
    \TX_DATA_reg[28]_0 ,
    \TX_DATA_reg[27]_0 ,
    \TX_DATA_reg[26]_0 ,
    \TX_DATA_reg[25]_0 ,
    \TX_DATA_reg[24]_0 ,
    \TX_DATA_reg[23]_0 ,
    \TX_DATA_reg[22]_0 ,
    \TX_DATA_reg[21]_0 ,
    \TX_DATA_reg[20]_0 ,
    \TX_DATA_reg[19]_0 ,
    \TX_DATA_reg[18]_0 ,
    \TX_DATA_reg[17]_0 ,
    \TX_DATA_reg[16]_0 ,
    \TX_DATA_reg[15]_0 ,
    \TX_DATA_reg[14]_0 ,
    \TX_DATA_reg[13]_0 ,
    \TX_DATA_reg[12]_0 ,
    \TX_DATA_reg[11]_0 ,
    \TX_DATA_reg[10]_0 ,
    \TX_DATA_reg[9]_0 ,
    \TX_DATA_reg[8]_0 ,
    \TX_DATA_reg[7]_0 ,
    \TX_DATA_reg[6]_0 ,
    \TX_DATA_reg[5]_0 ,
    \TX_DATA_reg[4]_0 ,
    \TX_DATA_reg[3]_0 ,
    \TX_DATA_reg[2]_0 ,
    \TX_DATA_reg[1]_0 ,
    \TX_DATA_reg[0]_0 ,
    \TX_DATA_reg[62]_0 ,
    \TX_DATA_reg[61]_0 ,
    \TX_DATA_reg[60]_0 ,
    \TX_DATA_reg[59]_1 );
  output stg5_reg;
  output [1:0]D;
  output [63:0]\TX_DATA_reg[63]_0 ;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input stg4_reg;
  input TX_HEADER_0_reg_0;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input TX_HEADER_1_reg_0;
  input [0:0]\TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;
  input \TX_DATA_reg[55]_2 ;
  input \TX_DATA_reg[59]_0 ;
  input [2:0]\TX_DATA_reg[54]_0 ;
  input \TX_DATA_reg[63]_1 ;
  input \TX_DATA_reg[63]_2 ;
  input \TX_DATA_reg[58]_0 ;
  input \TX_DATA_reg[57]_0 ;
  input \TX_DATA_reg[56]_0 ;
  input \TX_DATA_reg[51]_0 ;
  input \TX_DATA_reg[50]_0 ;
  input \TX_DATA_reg[49]_0 ;
  input \TX_DATA_reg[48]_0 ;
  input \TX_DATA_reg[47]_0 ;
  input \TX_DATA_reg[46]_0 ;
  input \TX_DATA_reg[45]_0 ;
  input \TX_DATA_reg[44]_0 ;
  input \TX_DATA_reg[43]_0 ;
  input \TX_DATA_reg[42]_0 ;
  input \TX_DATA_reg[41]_0 ;
  input \TX_DATA_reg[40]_0 ;
  input \TX_DATA_reg[39]_0 ;
  input \TX_DATA_reg[38]_0 ;
  input \TX_DATA_reg[37]_0 ;
  input \TX_DATA_reg[36]_0 ;
  input \TX_DATA_reg[35]_0 ;
  input \TX_DATA_reg[34]_0 ;
  input \TX_DATA_reg[33]_0 ;
  input \TX_DATA_reg[32]_0 ;
  input \TX_DATA_reg[31]_0 ;
  input \TX_DATA_reg[30]_0 ;
  input \TX_DATA_reg[29]_0 ;
  input \TX_DATA_reg[28]_0 ;
  input \TX_DATA_reg[27]_0 ;
  input \TX_DATA_reg[26]_0 ;
  input \TX_DATA_reg[25]_0 ;
  input \TX_DATA_reg[24]_0 ;
  input \TX_DATA_reg[23]_0 ;
  input \TX_DATA_reg[22]_0 ;
  input \TX_DATA_reg[21]_0 ;
  input \TX_DATA_reg[20]_0 ;
  input \TX_DATA_reg[19]_0 ;
  input \TX_DATA_reg[18]_0 ;
  input \TX_DATA_reg[17]_0 ;
  input \TX_DATA_reg[16]_0 ;
  input \TX_DATA_reg[15]_0 ;
  input \TX_DATA_reg[14]_0 ;
  input \TX_DATA_reg[13]_0 ;
  input \TX_DATA_reg[12]_0 ;
  input \TX_DATA_reg[11]_0 ;
  input \TX_DATA_reg[10]_0 ;
  input \TX_DATA_reg[9]_0 ;
  input \TX_DATA_reg[8]_0 ;
  input \TX_DATA_reg[7]_0 ;
  input \TX_DATA_reg[6]_0 ;
  input \TX_DATA_reg[5]_0 ;
  input \TX_DATA_reg[4]_0 ;
  input \TX_DATA_reg[3]_0 ;
  input \TX_DATA_reg[2]_0 ;
  input \TX_DATA_reg[1]_0 ;
  input \TX_DATA_reg[0]_0 ;
  input \TX_DATA_reg[62]_0 ;
  input \TX_DATA_reg[61]_0 ;
  input \TX_DATA_reg[60]_0 ;
  input \TX_DATA_reg[59]_1 ;

  wire [1:0]D;
  wire \TX_DATA[62]_i_1_n_0 ;
  wire \TX_DATA_reg[0]_0 ;
  wire \TX_DATA_reg[10]_0 ;
  wire \TX_DATA_reg[11]_0 ;
  wire \TX_DATA_reg[12]_0 ;
  wire \TX_DATA_reg[13]_0 ;
  wire \TX_DATA_reg[14]_0 ;
  wire \TX_DATA_reg[15]_0 ;
  wire \TX_DATA_reg[16]_0 ;
  wire \TX_DATA_reg[17]_0 ;
  wire \TX_DATA_reg[18]_0 ;
  wire \TX_DATA_reg[19]_0 ;
  wire \TX_DATA_reg[1]_0 ;
  wire \TX_DATA_reg[20]_0 ;
  wire \TX_DATA_reg[21]_0 ;
  wire \TX_DATA_reg[22]_0 ;
  wire \TX_DATA_reg[23]_0 ;
  wire \TX_DATA_reg[24]_0 ;
  wire \TX_DATA_reg[25]_0 ;
  wire \TX_DATA_reg[26]_0 ;
  wire \TX_DATA_reg[27]_0 ;
  wire \TX_DATA_reg[28]_0 ;
  wire \TX_DATA_reg[29]_0 ;
  wire \TX_DATA_reg[2]_0 ;
  wire \TX_DATA_reg[30]_0 ;
  wire \TX_DATA_reg[31]_0 ;
  wire \TX_DATA_reg[32]_0 ;
  wire \TX_DATA_reg[33]_0 ;
  wire \TX_DATA_reg[34]_0 ;
  wire \TX_DATA_reg[35]_0 ;
  wire \TX_DATA_reg[36]_0 ;
  wire \TX_DATA_reg[37]_0 ;
  wire \TX_DATA_reg[38]_0 ;
  wire \TX_DATA_reg[39]_0 ;
  wire \TX_DATA_reg[3]_0 ;
  wire \TX_DATA_reg[40]_0 ;
  wire \TX_DATA_reg[41]_0 ;
  wire \TX_DATA_reg[42]_0 ;
  wire \TX_DATA_reg[43]_0 ;
  wire \TX_DATA_reg[44]_0 ;
  wire \TX_DATA_reg[45]_0 ;
  wire \TX_DATA_reg[46]_0 ;
  wire \TX_DATA_reg[47]_0 ;
  wire \TX_DATA_reg[48]_0 ;
  wire \TX_DATA_reg[49]_0 ;
  wire \TX_DATA_reg[4]_0 ;
  wire \TX_DATA_reg[50]_0 ;
  wire \TX_DATA_reg[51]_0 ;
  wire [2:0]\TX_DATA_reg[54]_0 ;
  wire [0:0]\TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire \TX_DATA_reg[55]_2 ;
  wire \TX_DATA_reg[56]_0 ;
  wire \TX_DATA_reg[57]_0 ;
  wire \TX_DATA_reg[58]_0 ;
  wire \TX_DATA_reg[59]_0 ;
  wire \TX_DATA_reg[59]_1 ;
  wire \TX_DATA_reg[5]_0 ;
  wire \TX_DATA_reg[60]_0 ;
  wire \TX_DATA_reg[61]_0 ;
  wire \TX_DATA_reg[62]_0 ;
  wire [63:0]\TX_DATA_reg[63]_0 ;
  wire \TX_DATA_reg[63]_1 ;
  wire \TX_DATA_reg[63]_2 ;
  wire \TX_DATA_reg[6]_0 ;
  wire \TX_DATA_reg[7]_0 ;
  wire \TX_DATA_reg[8]_0 ;
  wire \TX_DATA_reg[9]_0 ;
  wire TX_HEADER_0_reg_0;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire [55:55]p_1_in;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg4_reg;
  wire stg5_reg;
  wire txdatavalid_symgen_i;
  wire u_pma_init_data_sync_n_1;

  LUT5 #(
    .INIT(32'h00EF0000)) 
    \TX_DATA[62]_i_1 
       (.I0(gen_cc_i),
        .I1(gen_ch_bond_i),
        .I2(TX_HEADER_1_reg_0),
        .I3(stg5_reg),
        .I4(\TX_DATA_reg[59]_0 ),
        .O(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[0] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[0]_0 ),
        .Q(\TX_DATA_reg[63]_0 [0]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[10] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[10]_0 ),
        .Q(\TX_DATA_reg[63]_0 [10]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[11] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[11]_0 ),
        .Q(\TX_DATA_reg[63]_0 [11]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[12] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[12]_0 ),
        .Q(\TX_DATA_reg[63]_0 [12]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[13] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[13]_0 ),
        .Q(\TX_DATA_reg[63]_0 [13]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[14] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[14]_0 ),
        .Q(\TX_DATA_reg[63]_0 [14]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[15] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[15]_0 ),
        .Q(\TX_DATA_reg[63]_0 [15]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[16] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[16]_0 ),
        .Q(\TX_DATA_reg[63]_0 [16]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[17] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[17]_0 ),
        .Q(\TX_DATA_reg[63]_0 [17]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[18] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[18]_0 ),
        .Q(\TX_DATA_reg[63]_0 [18]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[19] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[19]_0 ),
        .Q(\TX_DATA_reg[63]_0 [19]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[1] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[1]_0 ),
        .Q(\TX_DATA_reg[63]_0 [1]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[20] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[20]_0 ),
        .Q(\TX_DATA_reg[63]_0 [20]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[21] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[21]_0 ),
        .Q(\TX_DATA_reg[63]_0 [21]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[22] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[22]_0 ),
        .Q(\TX_DATA_reg[63]_0 [22]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[23] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[23]_0 ),
        .Q(\TX_DATA_reg[63]_0 [23]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[24] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[24]_0 ),
        .Q(\TX_DATA_reg[63]_0 [24]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[25] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[25]_0 ),
        .Q(\TX_DATA_reg[63]_0 [25]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[26] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[26]_0 ),
        .Q(\TX_DATA_reg[63]_0 [26]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[27] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[27]_0 ),
        .Q(\TX_DATA_reg[63]_0 [27]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[28] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[28]_0 ),
        .Q(\TX_DATA_reg[63]_0 [28]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[29] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[29]_0 ),
        .Q(\TX_DATA_reg[63]_0 [29]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[2] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[2]_0 ),
        .Q(\TX_DATA_reg[63]_0 [2]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[30] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[30]_0 ),
        .Q(\TX_DATA_reg[63]_0 [30]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[31] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[31]_0 ),
        .Q(\TX_DATA_reg[63]_0 [31]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[32] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[32]_0 ),
        .Q(\TX_DATA_reg[63]_0 [32]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[33] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[33]_0 ),
        .Q(\TX_DATA_reg[63]_0 [33]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[34] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[34]_0 ),
        .Q(\TX_DATA_reg[63]_0 [34]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[35] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[35]_0 ),
        .Q(\TX_DATA_reg[63]_0 [35]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[36] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[36]_0 ),
        .Q(\TX_DATA_reg[63]_0 [36]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[37] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[37]_0 ),
        .Q(\TX_DATA_reg[63]_0 [37]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[38] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[38]_0 ),
        .Q(\TX_DATA_reg[63]_0 [38]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[39] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[39]_0 ),
        .Q(\TX_DATA_reg[63]_0 [39]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[3] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[3]_0 ),
        .Q(\TX_DATA_reg[63]_0 [3]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[40] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[40]_0 ),
        .Q(\TX_DATA_reg[63]_0 [40]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[41] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[41]_0 ),
        .Q(\TX_DATA_reg[63]_0 [41]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[42] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[42]_0 ),
        .Q(\TX_DATA_reg[63]_0 [42]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[43] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[43]_0 ),
        .Q(\TX_DATA_reg[63]_0 [43]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[44] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[44]_0 ),
        .Q(\TX_DATA_reg[63]_0 [44]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[45] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[45]_0 ),
        .Q(\TX_DATA_reg[63]_0 [45]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[46] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[46]_0 ),
        .Q(\TX_DATA_reg[63]_0 [46]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[47] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[47]_0 ),
        .Q(\TX_DATA_reg[63]_0 [47]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[48] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[48]_0 ),
        .Q(\TX_DATA_reg[63]_0 [48]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[49] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[49]_0 ),
        .Q(\TX_DATA_reg[63]_0 [49]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[4] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[4]_0 ),
        .Q(\TX_DATA_reg[63]_0 [4]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[50] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[50]_0 ),
        .Q(\TX_DATA_reg[63]_0 [50]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[51] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[51]_0 ),
        .Q(\TX_DATA_reg[63]_0 [51]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[52] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [0]),
        .Q(\TX_DATA_reg[63]_0 [52]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[53] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [1]),
        .Q(\TX_DATA_reg[63]_0 [53]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[54] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[54]_0 [2]),
        .Q(\TX_DATA_reg[63]_0 [54]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[55] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(p_1_in),
        .Q(\TX_DATA_reg[63]_0 [55]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[56] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[56]_0 ),
        .Q(\TX_DATA_reg[63]_0 [56]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[57] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[57]_0 ),
        .Q(\TX_DATA_reg[63]_0 [57]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[58] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[58]_0 ),
        .Q(\TX_DATA_reg[63]_0 [58]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[59] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[59]_1 ),
        .Q(\TX_DATA_reg[63]_0 [59]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[5] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[5]_0 ),
        .Q(\TX_DATA_reg[63]_0 [5]),
        .R(\TX_DATA_reg[63]_1 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[60] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[60]_0 ),
        .Q(\TX_DATA_reg[63]_0 [60]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[61] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[61]_0 ),
        .Q(\TX_DATA_reg[63]_0 [61]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDSE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[62] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[62]_0 ),
        .Q(\TX_DATA_reg[63]_0 [62]),
        .S(\TX_DATA[62]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[63] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[63]_2 ),
        .Q(\TX_DATA_reg[63]_0 [63]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[6] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[6]_0 ),
        .Q(\TX_DATA_reg[63]_0 [6]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[7] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[7]_0 ),
        .Q(\TX_DATA_reg[63]_0 [7]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[8] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[8]_0 ),
        .Q(\TX_DATA_reg[63]_0 [8]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \TX_DATA_reg[9] 
       (.C(stg4_reg),
        .CE(\TX_DATA_reg[59]_0 ),
        .D(\TX_DATA_reg[9]_0 ),
        .Q(\TX_DATA_reg[63]_0 [9]),
        .R(\TX_DATA_reg[63]_1 ));
  FDRE #(
    .INIT(1'b1)) 
    TX_HEADER_0_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(TX_HEADER_0_reg_0),
        .Q(D[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    TX_HEADER_1_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(u_pma_init_data_sync_n_1),
        .Q(D[1]),
        .R(1'b0));
  board_aurora_64b66b_0_2_rst_sync_118 u_pma_init_data_sync
       (.D(D[1]),
        .\TX_DATA_reg[55] (\TX_DATA_reg[55]_0 ),
        .\TX_DATA_reg[55]_0 (\TX_DATA_reg[55]_1 ),
        .\TX_DATA_reg[55]_1 (\TX_DATA_reg[55]_2 ),
        .TX_HEADER_1_reg(u_pma_init_data_sync_n_1),
        .TX_HEADER_1_reg_0(TX_HEADER_1_reg_0),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg4_reg_0(stg4_reg),
        .stg5_reg_0(stg5_reg),
        .stg5_reg_1(p_1_in),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
endmodule

module board_aurora_64b66b_0_2_TX_STREAM
   (gen_cc_i,
    tx_pe_data_v_i,
    do_cc_r,
    s_axi_tx_tready,
    extend_cc_r,
    \TX_PE_DATA_V_reg[0]_rep ,
    \TX_PE_DATA_V_reg[0]_rep__0 ,
    wait_for_lane_up_r_reg,
    Q,
    \TX_PE_DATA_reg[252] ,
    \TX_PE_DATA_reg[251] ,
    \TX_PE_DATA_reg[250] ,
    \TX_PE_DATA_reg[249] ,
    \TX_PE_DATA_reg[188] ,
    \TX_PE_DATA_reg[187] ,
    \TX_PE_DATA_reg[186] ,
    \TX_PE_DATA_reg[185] ,
    \TX_PE_DATA_reg[124] ,
    \TX_PE_DATA_reg[123] ,
    \TX_PE_DATA_reg[122] ,
    \TX_PE_DATA_reg[121] ,
    \TX_PE_DATA_reg[60] ,
    \TX_PE_DATA_reg[59] ,
    \TX_PE_DATA_reg[58] ,
    \TX_PE_DATA_reg[57] ,
    \TX_PE_DATA_reg[199] ,
    \TX_PE_DATA_reg[198] ,
    \TX_PE_DATA_reg[197] ,
    \TX_PE_DATA_reg[196] ,
    \TX_PE_DATA_reg[195] ,
    \TX_PE_DATA_reg[194] ,
    \TX_PE_DATA_reg[193] ,
    \TX_PE_DATA_reg[192] ,
    \TX_PE_DATA_reg[207] ,
    \TX_PE_DATA_reg[206] ,
    \TX_PE_DATA_reg[205] ,
    \TX_PE_DATA_reg[204] ,
    \TX_PE_DATA_reg[203] ,
    \TX_PE_DATA_reg[202] ,
    \TX_PE_DATA_reg[201] ,
    \TX_PE_DATA_reg[200] ,
    \TX_PE_DATA_reg[215] ,
    \TX_PE_DATA_reg[214] ,
    \TX_PE_DATA_reg[213] ,
    \TX_PE_DATA_reg[212] ,
    \TX_PE_DATA_reg[211] ,
    \TX_PE_DATA_reg[210] ,
    \TX_PE_DATA_reg[209] ,
    \TX_PE_DATA_reg[208] ,
    \TX_PE_DATA_reg[223] ,
    \TX_PE_DATA_reg[222] ,
    \TX_PE_DATA_reg[221] ,
    \TX_PE_DATA_reg[220] ,
    \TX_PE_DATA_reg[219] ,
    \TX_PE_DATA_reg[218] ,
    \TX_PE_DATA_reg[217] ,
    \TX_PE_DATA_reg[216] ,
    \TX_PE_DATA_reg[231] ,
    \TX_PE_DATA_reg[230] ,
    \TX_PE_DATA_reg[229] ,
    \TX_PE_DATA_reg[228] ,
    \TX_PE_DATA_reg[227] ,
    \TX_PE_DATA_reg[226] ,
    \TX_PE_DATA_reg[225] ,
    \TX_PE_DATA_reg[224] ,
    \TX_PE_DATA_reg[239] ,
    \TX_PE_DATA_reg[238] ,
    \TX_PE_DATA_reg[237] ,
    \TX_PE_DATA_reg[236] ,
    \TX_PE_DATA_reg[235] ,
    \TX_PE_DATA_reg[234] ,
    \TX_PE_DATA_reg[233] ,
    \TX_PE_DATA_reg[232] ,
    \TX_PE_DATA_reg[247] ,
    \TX_PE_DATA_reg[246] ,
    \TX_PE_DATA_reg[245] ,
    \TX_PE_DATA_reg[244] ,
    \TX_PE_DATA_reg[255] ,
    \TX_PE_DATA_reg[254] ,
    \TX_PE_DATA_reg[253] ,
    \TX_PE_DATA_reg[248] ,
    \TX_PE_DATA_reg[135] ,
    \TX_PE_DATA_reg[134] ,
    \TX_PE_DATA_reg[133] ,
    \TX_PE_DATA_reg[132] ,
    \TX_PE_DATA_reg[131] ,
    \TX_PE_DATA_reg[130] ,
    \TX_PE_DATA_reg[129] ,
    \TX_PE_DATA_reg[128] ,
    \TX_PE_DATA_reg[143] ,
    \TX_PE_DATA_reg[142] ,
    \TX_PE_DATA_reg[141] ,
    \TX_PE_DATA_reg[140] ,
    \TX_PE_DATA_reg[139] ,
    \TX_PE_DATA_reg[138] ,
    \TX_PE_DATA_reg[137] ,
    \TX_PE_DATA_reg[136] ,
    \TX_PE_DATA_reg[151] ,
    \TX_PE_DATA_reg[150] ,
    \TX_PE_DATA_reg[149] ,
    \TX_PE_DATA_reg[148] ,
    \TX_PE_DATA_reg[147] ,
    \TX_PE_DATA_reg[146] ,
    \TX_PE_DATA_reg[145] ,
    \TX_PE_DATA_reg[144] ,
    \TX_PE_DATA_reg[159] ,
    \TX_PE_DATA_reg[158] ,
    \TX_PE_DATA_reg[157] ,
    \TX_PE_DATA_reg[156] ,
    \TX_PE_DATA_reg[155] ,
    \TX_PE_DATA_reg[154] ,
    \TX_PE_DATA_reg[153] ,
    \TX_PE_DATA_reg[152] ,
    \TX_PE_DATA_reg[167] ,
    \TX_PE_DATA_reg[166] ,
    \TX_PE_DATA_reg[165] ,
    \TX_PE_DATA_reg[164] ,
    \TX_PE_DATA_reg[163] ,
    \TX_PE_DATA_reg[162] ,
    \TX_PE_DATA_reg[161] ,
    \TX_PE_DATA_reg[160] ,
    \TX_PE_DATA_reg[175] ,
    \TX_PE_DATA_reg[174] ,
    \TX_PE_DATA_reg[173] ,
    \TX_PE_DATA_reg[172] ,
    \TX_PE_DATA_reg[171] ,
    \TX_PE_DATA_reg[170] ,
    \TX_PE_DATA_reg[169] ,
    \TX_PE_DATA_reg[168] ,
    \TX_PE_DATA_reg[183] ,
    \TX_PE_DATA_reg[182] ,
    \TX_PE_DATA_reg[181] ,
    \TX_PE_DATA_reg[180] ,
    \TX_PE_DATA_reg[191] ,
    \TX_PE_DATA_reg[190] ,
    \TX_PE_DATA_reg[189] ,
    \TX_PE_DATA_reg[184] ,
    \TX_PE_DATA_reg[71] ,
    \TX_PE_DATA_reg[70] ,
    \TX_PE_DATA_reg[69] ,
    \TX_PE_DATA_reg[68] ,
    \TX_PE_DATA_reg[67] ,
    \TX_PE_DATA_reg[66] ,
    \TX_PE_DATA_reg[65] ,
    \TX_PE_DATA_reg[64] ,
    \TX_PE_DATA_reg[79] ,
    \TX_PE_DATA_reg[78] ,
    \TX_PE_DATA_reg[77] ,
    \TX_PE_DATA_reg[76] ,
    \TX_PE_DATA_reg[75] ,
    \TX_PE_DATA_reg[74] ,
    \TX_PE_DATA_reg[73] ,
    \TX_PE_DATA_reg[72] ,
    \TX_PE_DATA_reg[87] ,
    \TX_PE_DATA_reg[86] ,
    \TX_PE_DATA_reg[85] ,
    \TX_PE_DATA_reg[84] ,
    \TX_PE_DATA_reg[83] ,
    \TX_PE_DATA_reg[82] ,
    \TX_PE_DATA_reg[81] ,
    \TX_PE_DATA_reg[80] ,
    \TX_PE_DATA_reg[95] ,
    \TX_PE_DATA_reg[94] ,
    \TX_PE_DATA_reg[93] ,
    \TX_PE_DATA_reg[92] ,
    \TX_PE_DATA_reg[91] ,
    \TX_PE_DATA_reg[90] ,
    \TX_PE_DATA_reg[89] ,
    \TX_PE_DATA_reg[88] ,
    \TX_PE_DATA_reg[103] ,
    \TX_PE_DATA_reg[102] ,
    \TX_PE_DATA_reg[101] ,
    \TX_PE_DATA_reg[100] ,
    \TX_PE_DATA_reg[99] ,
    \TX_PE_DATA_reg[98] ,
    \TX_PE_DATA_reg[97] ,
    \TX_PE_DATA_reg[96] ,
    \TX_PE_DATA_reg[111] ,
    \TX_PE_DATA_reg[110] ,
    \TX_PE_DATA_reg[109] ,
    \TX_PE_DATA_reg[108] ,
    \TX_PE_DATA_reg[107] ,
    \TX_PE_DATA_reg[106] ,
    \TX_PE_DATA_reg[105] ,
    \TX_PE_DATA_reg[104] ,
    \TX_PE_DATA_reg[119] ,
    \TX_PE_DATA_reg[118] ,
    \TX_PE_DATA_reg[117] ,
    \TX_PE_DATA_reg[116] ,
    \TX_PE_DATA_reg[127] ,
    \TX_PE_DATA_reg[126] ,
    \TX_PE_DATA_reg[125] ,
    \TX_PE_DATA_reg[120] ,
    \TX_PE_DATA_reg[7] ,
    \TX_PE_DATA_reg[6] ,
    \TX_PE_DATA_reg[5] ,
    \TX_PE_DATA_reg[4] ,
    \TX_PE_DATA_reg[3] ,
    \TX_PE_DATA_reg[2] ,
    \TX_PE_DATA_reg[1] ,
    \TX_PE_DATA_reg[0] ,
    \TX_PE_DATA_reg[15] ,
    \TX_PE_DATA_reg[14] ,
    \TX_PE_DATA_reg[13] ,
    \TX_PE_DATA_reg[12] ,
    \TX_PE_DATA_reg[11] ,
    \TX_PE_DATA_reg[10] ,
    \TX_PE_DATA_reg[9] ,
    \TX_PE_DATA_reg[8] ,
    \TX_PE_DATA_reg[23] ,
    \TX_PE_DATA_reg[22] ,
    \TX_PE_DATA_reg[21] ,
    \TX_PE_DATA_reg[20] ,
    \TX_PE_DATA_reg[19] ,
    \TX_PE_DATA_reg[18] ,
    \TX_PE_DATA_reg[17] ,
    \TX_PE_DATA_reg[16] ,
    \TX_PE_DATA_reg[31] ,
    \TX_PE_DATA_reg[30] ,
    \TX_PE_DATA_reg[29] ,
    \TX_PE_DATA_reg[28] ,
    \TX_PE_DATA_reg[27] ,
    \TX_PE_DATA_reg[26] ,
    \TX_PE_DATA_reg[25] ,
    \TX_PE_DATA_reg[24] ,
    \TX_PE_DATA_reg[39] ,
    \TX_PE_DATA_reg[38] ,
    \TX_PE_DATA_reg[37] ,
    \TX_PE_DATA_reg[36] ,
    \TX_PE_DATA_reg[35] ,
    \TX_PE_DATA_reg[34] ,
    \TX_PE_DATA_reg[33] ,
    \TX_PE_DATA_reg[32] ,
    \TX_PE_DATA_reg[47] ,
    \TX_PE_DATA_reg[46] ,
    \TX_PE_DATA_reg[45] ,
    \TX_PE_DATA_reg[44] ,
    \TX_PE_DATA_reg[43] ,
    \TX_PE_DATA_reg[42] ,
    \TX_PE_DATA_reg[41] ,
    \TX_PE_DATA_reg[40] ,
    \TX_PE_DATA_reg[55] ,
    \TX_PE_DATA_reg[54] ,
    \TX_PE_DATA_reg[53] ,
    \TX_PE_DATA_reg[52] ,
    \TX_PE_DATA_reg[63] ,
    \TX_PE_DATA_reg[62] ,
    \TX_PE_DATA_reg[61] ,
    \TX_PE_DATA_reg[56] ,
    R0,
    \TX_PE_DATA_V_reg[0] ,
    do_cc_r0,
    pdu_ok_c,
    wait_for_lane_up_r,
    channel_bond_r,
    \TX_DATA_reg[61] ,
    gen_ch_bond_i,
    rst_pma_init_usrclk,
    txdatavalid_i,
    extend_cc_r_reg,
    \TX_DATA_reg[43] ,
    rst_pma_init_usrclk_0,
    channel_up_tx_if,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    s_axi_tx_tvalid,
    s_axi_tx_tdata);
  output [0:3]gen_cc_i;
  output [0:0]tx_pe_data_v_i;
  output do_cc_r;
  output s_axi_tx_tready;
  output extend_cc_r;
  output \TX_PE_DATA_V_reg[0]_rep ;
  output \TX_PE_DATA_V_reg[0]_rep__0 ;
  output [0:0]wait_for_lane_up_r_reg;
  output [14:0]Q;
  output \TX_PE_DATA_reg[252] ;
  output \TX_PE_DATA_reg[251] ;
  output \TX_PE_DATA_reg[250] ;
  output \TX_PE_DATA_reg[249] ;
  output \TX_PE_DATA_reg[188] ;
  output \TX_PE_DATA_reg[187] ;
  output \TX_PE_DATA_reg[186] ;
  output \TX_PE_DATA_reg[185] ;
  output \TX_PE_DATA_reg[124] ;
  output \TX_PE_DATA_reg[123] ;
  output \TX_PE_DATA_reg[122] ;
  output \TX_PE_DATA_reg[121] ;
  output \TX_PE_DATA_reg[60] ;
  output \TX_PE_DATA_reg[59] ;
  output \TX_PE_DATA_reg[58] ;
  output \TX_PE_DATA_reg[57] ;
  output \TX_PE_DATA_reg[199] ;
  output \TX_PE_DATA_reg[198] ;
  output \TX_PE_DATA_reg[197] ;
  output \TX_PE_DATA_reg[196] ;
  output \TX_PE_DATA_reg[195] ;
  output \TX_PE_DATA_reg[194] ;
  output \TX_PE_DATA_reg[193] ;
  output \TX_PE_DATA_reg[192] ;
  output \TX_PE_DATA_reg[207] ;
  output \TX_PE_DATA_reg[206] ;
  output \TX_PE_DATA_reg[205] ;
  output \TX_PE_DATA_reg[204] ;
  output \TX_PE_DATA_reg[203] ;
  output \TX_PE_DATA_reg[202] ;
  output \TX_PE_DATA_reg[201] ;
  output \TX_PE_DATA_reg[200] ;
  output \TX_PE_DATA_reg[215] ;
  output \TX_PE_DATA_reg[214] ;
  output \TX_PE_DATA_reg[213] ;
  output \TX_PE_DATA_reg[212] ;
  output \TX_PE_DATA_reg[211] ;
  output \TX_PE_DATA_reg[210] ;
  output \TX_PE_DATA_reg[209] ;
  output \TX_PE_DATA_reg[208] ;
  output \TX_PE_DATA_reg[223] ;
  output \TX_PE_DATA_reg[222] ;
  output \TX_PE_DATA_reg[221] ;
  output \TX_PE_DATA_reg[220] ;
  output \TX_PE_DATA_reg[219] ;
  output \TX_PE_DATA_reg[218] ;
  output \TX_PE_DATA_reg[217] ;
  output \TX_PE_DATA_reg[216] ;
  output \TX_PE_DATA_reg[231] ;
  output \TX_PE_DATA_reg[230] ;
  output \TX_PE_DATA_reg[229] ;
  output \TX_PE_DATA_reg[228] ;
  output \TX_PE_DATA_reg[227] ;
  output \TX_PE_DATA_reg[226] ;
  output \TX_PE_DATA_reg[225] ;
  output \TX_PE_DATA_reg[224] ;
  output \TX_PE_DATA_reg[239] ;
  output \TX_PE_DATA_reg[238] ;
  output \TX_PE_DATA_reg[237] ;
  output \TX_PE_DATA_reg[236] ;
  output \TX_PE_DATA_reg[235] ;
  output \TX_PE_DATA_reg[234] ;
  output \TX_PE_DATA_reg[233] ;
  output \TX_PE_DATA_reg[232] ;
  output \TX_PE_DATA_reg[247] ;
  output \TX_PE_DATA_reg[246] ;
  output \TX_PE_DATA_reg[245] ;
  output \TX_PE_DATA_reg[244] ;
  output \TX_PE_DATA_reg[255] ;
  output \TX_PE_DATA_reg[254] ;
  output \TX_PE_DATA_reg[253] ;
  output \TX_PE_DATA_reg[248] ;
  output \TX_PE_DATA_reg[135] ;
  output \TX_PE_DATA_reg[134] ;
  output \TX_PE_DATA_reg[133] ;
  output \TX_PE_DATA_reg[132] ;
  output \TX_PE_DATA_reg[131] ;
  output \TX_PE_DATA_reg[130] ;
  output \TX_PE_DATA_reg[129] ;
  output \TX_PE_DATA_reg[128] ;
  output \TX_PE_DATA_reg[143] ;
  output \TX_PE_DATA_reg[142] ;
  output \TX_PE_DATA_reg[141] ;
  output \TX_PE_DATA_reg[140] ;
  output \TX_PE_DATA_reg[139] ;
  output \TX_PE_DATA_reg[138] ;
  output \TX_PE_DATA_reg[137] ;
  output \TX_PE_DATA_reg[136] ;
  output \TX_PE_DATA_reg[151] ;
  output \TX_PE_DATA_reg[150] ;
  output \TX_PE_DATA_reg[149] ;
  output \TX_PE_DATA_reg[148] ;
  output \TX_PE_DATA_reg[147] ;
  output \TX_PE_DATA_reg[146] ;
  output \TX_PE_DATA_reg[145] ;
  output \TX_PE_DATA_reg[144] ;
  output \TX_PE_DATA_reg[159] ;
  output \TX_PE_DATA_reg[158] ;
  output \TX_PE_DATA_reg[157] ;
  output \TX_PE_DATA_reg[156] ;
  output \TX_PE_DATA_reg[155] ;
  output \TX_PE_DATA_reg[154] ;
  output \TX_PE_DATA_reg[153] ;
  output \TX_PE_DATA_reg[152] ;
  output \TX_PE_DATA_reg[167] ;
  output \TX_PE_DATA_reg[166] ;
  output \TX_PE_DATA_reg[165] ;
  output \TX_PE_DATA_reg[164] ;
  output \TX_PE_DATA_reg[163] ;
  output \TX_PE_DATA_reg[162] ;
  output \TX_PE_DATA_reg[161] ;
  output \TX_PE_DATA_reg[160] ;
  output \TX_PE_DATA_reg[175] ;
  output \TX_PE_DATA_reg[174] ;
  output \TX_PE_DATA_reg[173] ;
  output \TX_PE_DATA_reg[172] ;
  output \TX_PE_DATA_reg[171] ;
  output \TX_PE_DATA_reg[170] ;
  output \TX_PE_DATA_reg[169] ;
  output \TX_PE_DATA_reg[168] ;
  output \TX_PE_DATA_reg[183] ;
  output \TX_PE_DATA_reg[182] ;
  output \TX_PE_DATA_reg[181] ;
  output \TX_PE_DATA_reg[180] ;
  output \TX_PE_DATA_reg[191] ;
  output \TX_PE_DATA_reg[190] ;
  output \TX_PE_DATA_reg[189] ;
  output \TX_PE_DATA_reg[184] ;
  output \TX_PE_DATA_reg[71] ;
  output \TX_PE_DATA_reg[70] ;
  output \TX_PE_DATA_reg[69] ;
  output \TX_PE_DATA_reg[68] ;
  output \TX_PE_DATA_reg[67] ;
  output \TX_PE_DATA_reg[66] ;
  output \TX_PE_DATA_reg[65] ;
  output \TX_PE_DATA_reg[64] ;
  output \TX_PE_DATA_reg[79] ;
  output \TX_PE_DATA_reg[78] ;
  output \TX_PE_DATA_reg[77] ;
  output \TX_PE_DATA_reg[76] ;
  output \TX_PE_DATA_reg[75] ;
  output \TX_PE_DATA_reg[74] ;
  output \TX_PE_DATA_reg[73] ;
  output \TX_PE_DATA_reg[72] ;
  output \TX_PE_DATA_reg[87] ;
  output \TX_PE_DATA_reg[86] ;
  output \TX_PE_DATA_reg[85] ;
  output \TX_PE_DATA_reg[84] ;
  output \TX_PE_DATA_reg[83] ;
  output \TX_PE_DATA_reg[82] ;
  output \TX_PE_DATA_reg[81] ;
  output \TX_PE_DATA_reg[80] ;
  output \TX_PE_DATA_reg[95] ;
  output \TX_PE_DATA_reg[94] ;
  output \TX_PE_DATA_reg[93] ;
  output \TX_PE_DATA_reg[92] ;
  output \TX_PE_DATA_reg[91] ;
  output \TX_PE_DATA_reg[90] ;
  output \TX_PE_DATA_reg[89] ;
  output \TX_PE_DATA_reg[88] ;
  output \TX_PE_DATA_reg[103] ;
  output \TX_PE_DATA_reg[102] ;
  output \TX_PE_DATA_reg[101] ;
  output \TX_PE_DATA_reg[100] ;
  output \TX_PE_DATA_reg[99] ;
  output \TX_PE_DATA_reg[98] ;
  output \TX_PE_DATA_reg[97] ;
  output \TX_PE_DATA_reg[96] ;
  output \TX_PE_DATA_reg[111] ;
  output \TX_PE_DATA_reg[110] ;
  output \TX_PE_DATA_reg[109] ;
  output \TX_PE_DATA_reg[108] ;
  output \TX_PE_DATA_reg[107] ;
  output \TX_PE_DATA_reg[106] ;
  output \TX_PE_DATA_reg[105] ;
  output \TX_PE_DATA_reg[104] ;
  output \TX_PE_DATA_reg[119] ;
  output \TX_PE_DATA_reg[118] ;
  output \TX_PE_DATA_reg[117] ;
  output \TX_PE_DATA_reg[116] ;
  output \TX_PE_DATA_reg[127] ;
  output \TX_PE_DATA_reg[126] ;
  output \TX_PE_DATA_reg[125] ;
  output \TX_PE_DATA_reg[120] ;
  output \TX_PE_DATA_reg[7] ;
  output \TX_PE_DATA_reg[6] ;
  output \TX_PE_DATA_reg[5] ;
  output \TX_PE_DATA_reg[4] ;
  output \TX_PE_DATA_reg[3] ;
  output \TX_PE_DATA_reg[2] ;
  output \TX_PE_DATA_reg[1] ;
  output \TX_PE_DATA_reg[0] ;
  output \TX_PE_DATA_reg[15] ;
  output \TX_PE_DATA_reg[14] ;
  output \TX_PE_DATA_reg[13] ;
  output \TX_PE_DATA_reg[12] ;
  output \TX_PE_DATA_reg[11] ;
  output \TX_PE_DATA_reg[10] ;
  output \TX_PE_DATA_reg[9] ;
  output \TX_PE_DATA_reg[8] ;
  output \TX_PE_DATA_reg[23] ;
  output \TX_PE_DATA_reg[22] ;
  output \TX_PE_DATA_reg[21] ;
  output \TX_PE_DATA_reg[20] ;
  output \TX_PE_DATA_reg[19] ;
  output \TX_PE_DATA_reg[18] ;
  output \TX_PE_DATA_reg[17] ;
  output \TX_PE_DATA_reg[16] ;
  output \TX_PE_DATA_reg[31] ;
  output \TX_PE_DATA_reg[30] ;
  output \TX_PE_DATA_reg[29] ;
  output \TX_PE_DATA_reg[28] ;
  output \TX_PE_DATA_reg[27] ;
  output \TX_PE_DATA_reg[26] ;
  output \TX_PE_DATA_reg[25] ;
  output \TX_PE_DATA_reg[24] ;
  output \TX_PE_DATA_reg[39] ;
  output \TX_PE_DATA_reg[38] ;
  output \TX_PE_DATA_reg[37] ;
  output \TX_PE_DATA_reg[36] ;
  output \TX_PE_DATA_reg[35] ;
  output \TX_PE_DATA_reg[34] ;
  output \TX_PE_DATA_reg[33] ;
  output \TX_PE_DATA_reg[32] ;
  output \TX_PE_DATA_reg[47] ;
  output \TX_PE_DATA_reg[46] ;
  output \TX_PE_DATA_reg[45] ;
  output \TX_PE_DATA_reg[44] ;
  output \TX_PE_DATA_reg[43] ;
  output \TX_PE_DATA_reg[42] ;
  output \TX_PE_DATA_reg[41] ;
  output \TX_PE_DATA_reg[40] ;
  output \TX_PE_DATA_reg[55] ;
  output \TX_PE_DATA_reg[54] ;
  output \TX_PE_DATA_reg[53] ;
  output \TX_PE_DATA_reg[52] ;
  output \TX_PE_DATA_reg[63] ;
  output \TX_PE_DATA_reg[62] ;
  output \TX_PE_DATA_reg[61] ;
  output \TX_PE_DATA_reg[56] ;
  input R0;
  input \TX_PE_DATA_V_reg[0] ;
  input do_cc_r0;
  input pdu_ok_c;
  input wait_for_lane_up_r;
  input channel_bond_r;
  input \TX_DATA_reg[61] ;
  input [0:0]gen_ch_bond_i;
  input rst_pma_init_usrclk;
  input txdatavalid_i;
  input extend_cc_r_reg;
  input \TX_DATA_reg[43] ;
  input rst_pma_init_usrclk_0;
  input channel_up_tx_if;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input s_axi_tx_tvalid;
  input [0:255]s_axi_tx_tdata;

  wire [14:0]Q;
  wire R0;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[61] ;
  wire \TX_PE_DATA_V_reg[0] ;
  wire \TX_PE_DATA_V_reg[0]_rep ;
  wire \TX_PE_DATA_V_reg[0]_rep__0 ;
  wire \TX_PE_DATA_reg[0] ;
  wire \TX_PE_DATA_reg[100] ;
  wire \TX_PE_DATA_reg[101] ;
  wire \TX_PE_DATA_reg[102] ;
  wire \TX_PE_DATA_reg[103] ;
  wire \TX_PE_DATA_reg[104] ;
  wire \TX_PE_DATA_reg[105] ;
  wire \TX_PE_DATA_reg[106] ;
  wire \TX_PE_DATA_reg[107] ;
  wire \TX_PE_DATA_reg[108] ;
  wire \TX_PE_DATA_reg[109] ;
  wire \TX_PE_DATA_reg[10] ;
  wire \TX_PE_DATA_reg[110] ;
  wire \TX_PE_DATA_reg[111] ;
  wire \TX_PE_DATA_reg[116] ;
  wire \TX_PE_DATA_reg[117] ;
  wire \TX_PE_DATA_reg[118] ;
  wire \TX_PE_DATA_reg[119] ;
  wire \TX_PE_DATA_reg[11] ;
  wire \TX_PE_DATA_reg[120] ;
  wire \TX_PE_DATA_reg[121] ;
  wire \TX_PE_DATA_reg[122] ;
  wire \TX_PE_DATA_reg[123] ;
  wire \TX_PE_DATA_reg[124] ;
  wire \TX_PE_DATA_reg[125] ;
  wire \TX_PE_DATA_reg[126] ;
  wire \TX_PE_DATA_reg[127] ;
  wire \TX_PE_DATA_reg[128] ;
  wire \TX_PE_DATA_reg[129] ;
  wire \TX_PE_DATA_reg[12] ;
  wire \TX_PE_DATA_reg[130] ;
  wire \TX_PE_DATA_reg[131] ;
  wire \TX_PE_DATA_reg[132] ;
  wire \TX_PE_DATA_reg[133] ;
  wire \TX_PE_DATA_reg[134] ;
  wire \TX_PE_DATA_reg[135] ;
  wire \TX_PE_DATA_reg[136] ;
  wire \TX_PE_DATA_reg[137] ;
  wire \TX_PE_DATA_reg[138] ;
  wire \TX_PE_DATA_reg[139] ;
  wire \TX_PE_DATA_reg[13] ;
  wire \TX_PE_DATA_reg[140] ;
  wire \TX_PE_DATA_reg[141] ;
  wire \TX_PE_DATA_reg[142] ;
  wire \TX_PE_DATA_reg[143] ;
  wire \TX_PE_DATA_reg[144] ;
  wire \TX_PE_DATA_reg[145] ;
  wire \TX_PE_DATA_reg[146] ;
  wire \TX_PE_DATA_reg[147] ;
  wire \TX_PE_DATA_reg[148] ;
  wire \TX_PE_DATA_reg[149] ;
  wire \TX_PE_DATA_reg[14] ;
  wire \TX_PE_DATA_reg[150] ;
  wire \TX_PE_DATA_reg[151] ;
  wire \TX_PE_DATA_reg[152] ;
  wire \TX_PE_DATA_reg[153] ;
  wire \TX_PE_DATA_reg[154] ;
  wire \TX_PE_DATA_reg[155] ;
  wire \TX_PE_DATA_reg[156] ;
  wire \TX_PE_DATA_reg[157] ;
  wire \TX_PE_DATA_reg[158] ;
  wire \TX_PE_DATA_reg[159] ;
  wire \TX_PE_DATA_reg[15] ;
  wire \TX_PE_DATA_reg[160] ;
  wire \TX_PE_DATA_reg[161] ;
  wire \TX_PE_DATA_reg[162] ;
  wire \TX_PE_DATA_reg[163] ;
  wire \TX_PE_DATA_reg[164] ;
  wire \TX_PE_DATA_reg[165] ;
  wire \TX_PE_DATA_reg[166] ;
  wire \TX_PE_DATA_reg[167] ;
  wire \TX_PE_DATA_reg[168] ;
  wire \TX_PE_DATA_reg[169] ;
  wire \TX_PE_DATA_reg[16] ;
  wire \TX_PE_DATA_reg[170] ;
  wire \TX_PE_DATA_reg[171] ;
  wire \TX_PE_DATA_reg[172] ;
  wire \TX_PE_DATA_reg[173] ;
  wire \TX_PE_DATA_reg[174] ;
  wire \TX_PE_DATA_reg[175] ;
  wire \TX_PE_DATA_reg[17] ;
  wire \TX_PE_DATA_reg[180] ;
  wire \TX_PE_DATA_reg[181] ;
  wire \TX_PE_DATA_reg[182] ;
  wire \TX_PE_DATA_reg[183] ;
  wire \TX_PE_DATA_reg[184] ;
  wire \TX_PE_DATA_reg[185] ;
  wire \TX_PE_DATA_reg[186] ;
  wire \TX_PE_DATA_reg[187] ;
  wire \TX_PE_DATA_reg[188] ;
  wire \TX_PE_DATA_reg[189] ;
  wire \TX_PE_DATA_reg[18] ;
  wire \TX_PE_DATA_reg[190] ;
  wire \TX_PE_DATA_reg[191] ;
  wire \TX_PE_DATA_reg[192] ;
  wire \TX_PE_DATA_reg[193] ;
  wire \TX_PE_DATA_reg[194] ;
  wire \TX_PE_DATA_reg[195] ;
  wire \TX_PE_DATA_reg[196] ;
  wire \TX_PE_DATA_reg[197] ;
  wire \TX_PE_DATA_reg[198] ;
  wire \TX_PE_DATA_reg[199] ;
  wire \TX_PE_DATA_reg[19] ;
  wire \TX_PE_DATA_reg[1] ;
  wire \TX_PE_DATA_reg[200] ;
  wire \TX_PE_DATA_reg[201] ;
  wire \TX_PE_DATA_reg[202] ;
  wire \TX_PE_DATA_reg[203] ;
  wire \TX_PE_DATA_reg[204] ;
  wire \TX_PE_DATA_reg[205] ;
  wire \TX_PE_DATA_reg[206] ;
  wire \TX_PE_DATA_reg[207] ;
  wire \TX_PE_DATA_reg[208] ;
  wire \TX_PE_DATA_reg[209] ;
  wire \TX_PE_DATA_reg[20] ;
  wire \TX_PE_DATA_reg[210] ;
  wire \TX_PE_DATA_reg[211] ;
  wire \TX_PE_DATA_reg[212] ;
  wire \TX_PE_DATA_reg[213] ;
  wire \TX_PE_DATA_reg[214] ;
  wire \TX_PE_DATA_reg[215] ;
  wire \TX_PE_DATA_reg[216] ;
  wire \TX_PE_DATA_reg[217] ;
  wire \TX_PE_DATA_reg[218] ;
  wire \TX_PE_DATA_reg[219] ;
  wire \TX_PE_DATA_reg[21] ;
  wire \TX_PE_DATA_reg[220] ;
  wire \TX_PE_DATA_reg[221] ;
  wire \TX_PE_DATA_reg[222] ;
  wire \TX_PE_DATA_reg[223] ;
  wire \TX_PE_DATA_reg[224] ;
  wire \TX_PE_DATA_reg[225] ;
  wire \TX_PE_DATA_reg[226] ;
  wire \TX_PE_DATA_reg[227] ;
  wire \TX_PE_DATA_reg[228] ;
  wire \TX_PE_DATA_reg[229] ;
  wire \TX_PE_DATA_reg[22] ;
  wire \TX_PE_DATA_reg[230] ;
  wire \TX_PE_DATA_reg[231] ;
  wire \TX_PE_DATA_reg[232] ;
  wire \TX_PE_DATA_reg[233] ;
  wire \TX_PE_DATA_reg[234] ;
  wire \TX_PE_DATA_reg[235] ;
  wire \TX_PE_DATA_reg[236] ;
  wire \TX_PE_DATA_reg[237] ;
  wire \TX_PE_DATA_reg[238] ;
  wire \TX_PE_DATA_reg[239] ;
  wire \TX_PE_DATA_reg[23] ;
  wire \TX_PE_DATA_reg[244] ;
  wire \TX_PE_DATA_reg[245] ;
  wire \TX_PE_DATA_reg[246] ;
  wire \TX_PE_DATA_reg[247] ;
  wire \TX_PE_DATA_reg[248] ;
  wire \TX_PE_DATA_reg[249] ;
  wire \TX_PE_DATA_reg[24] ;
  wire \TX_PE_DATA_reg[250] ;
  wire \TX_PE_DATA_reg[251] ;
  wire \TX_PE_DATA_reg[252] ;
  wire \TX_PE_DATA_reg[253] ;
  wire \TX_PE_DATA_reg[254] ;
  wire \TX_PE_DATA_reg[255] ;
  wire \TX_PE_DATA_reg[25] ;
  wire \TX_PE_DATA_reg[26] ;
  wire \TX_PE_DATA_reg[27] ;
  wire \TX_PE_DATA_reg[28] ;
  wire \TX_PE_DATA_reg[29] ;
  wire \TX_PE_DATA_reg[2] ;
  wire \TX_PE_DATA_reg[30] ;
  wire \TX_PE_DATA_reg[31] ;
  wire \TX_PE_DATA_reg[32] ;
  wire \TX_PE_DATA_reg[33] ;
  wire \TX_PE_DATA_reg[34] ;
  wire \TX_PE_DATA_reg[35] ;
  wire \TX_PE_DATA_reg[36] ;
  wire \TX_PE_DATA_reg[37] ;
  wire \TX_PE_DATA_reg[38] ;
  wire \TX_PE_DATA_reg[39] ;
  wire \TX_PE_DATA_reg[3] ;
  wire \TX_PE_DATA_reg[40] ;
  wire \TX_PE_DATA_reg[41] ;
  wire \TX_PE_DATA_reg[42] ;
  wire \TX_PE_DATA_reg[43] ;
  wire \TX_PE_DATA_reg[44] ;
  wire \TX_PE_DATA_reg[45] ;
  wire \TX_PE_DATA_reg[46] ;
  wire \TX_PE_DATA_reg[47] ;
  wire \TX_PE_DATA_reg[4] ;
  wire \TX_PE_DATA_reg[52] ;
  wire \TX_PE_DATA_reg[53] ;
  wire \TX_PE_DATA_reg[54] ;
  wire \TX_PE_DATA_reg[55] ;
  wire \TX_PE_DATA_reg[56] ;
  wire \TX_PE_DATA_reg[57] ;
  wire \TX_PE_DATA_reg[58] ;
  wire \TX_PE_DATA_reg[59] ;
  wire \TX_PE_DATA_reg[5] ;
  wire \TX_PE_DATA_reg[60] ;
  wire \TX_PE_DATA_reg[61] ;
  wire \TX_PE_DATA_reg[62] ;
  wire \TX_PE_DATA_reg[63] ;
  wire \TX_PE_DATA_reg[64] ;
  wire \TX_PE_DATA_reg[65] ;
  wire \TX_PE_DATA_reg[66] ;
  wire \TX_PE_DATA_reg[67] ;
  wire \TX_PE_DATA_reg[68] ;
  wire \TX_PE_DATA_reg[69] ;
  wire \TX_PE_DATA_reg[6] ;
  wire \TX_PE_DATA_reg[70] ;
  wire \TX_PE_DATA_reg[71] ;
  wire \TX_PE_DATA_reg[72] ;
  wire \TX_PE_DATA_reg[73] ;
  wire \TX_PE_DATA_reg[74] ;
  wire \TX_PE_DATA_reg[75] ;
  wire \TX_PE_DATA_reg[76] ;
  wire \TX_PE_DATA_reg[77] ;
  wire \TX_PE_DATA_reg[78] ;
  wire \TX_PE_DATA_reg[79] ;
  wire \TX_PE_DATA_reg[7] ;
  wire \TX_PE_DATA_reg[80] ;
  wire \TX_PE_DATA_reg[81] ;
  wire \TX_PE_DATA_reg[82] ;
  wire \TX_PE_DATA_reg[83] ;
  wire \TX_PE_DATA_reg[84] ;
  wire \TX_PE_DATA_reg[85] ;
  wire \TX_PE_DATA_reg[86] ;
  wire \TX_PE_DATA_reg[87] ;
  wire \TX_PE_DATA_reg[88] ;
  wire \TX_PE_DATA_reg[89] ;
  wire \TX_PE_DATA_reg[8] ;
  wire \TX_PE_DATA_reg[90] ;
  wire \TX_PE_DATA_reg[91] ;
  wire \TX_PE_DATA_reg[92] ;
  wire \TX_PE_DATA_reg[93] ;
  wire \TX_PE_DATA_reg[94] ;
  wire \TX_PE_DATA_reg[95] ;
  wire \TX_PE_DATA_reg[96] ;
  wire \TX_PE_DATA_reg[97] ;
  wire \TX_PE_DATA_reg[98] ;
  wire \TX_PE_DATA_reg[99] ;
  wire \TX_PE_DATA_reg[9] ;
  wire channel_bond_r;
  wire channel_up_tx_if;
  wire do_cc_r;
  wire do_cc_r0;
  wire extend_cc_r;
  wire extend_cc_r_reg;
  wire [0:3]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire ll_valid_c;
  wire pdu_ok_c;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire [0:0]tx_pe_data_v_i;
  wire tx_stream_control_sm_i_n_7;
  wire txdatavalid_i;
  wire wait_for_lane_up_r;
  wire [0:0]wait_for_lane_up_r_reg;

  board_aurora_64b66b_0_2_TX_STREAM_CONTROL_SM tx_stream_control_sm_i
       (.R0(R0),
        .do_cc_r(do_cc_r),
        .do_cc_r0(do_cc_r0),
        .do_cc_r2_reg_0(\TX_PE_DATA_V_reg[0] ),
        .extend_cc_r(extend_cc_r),
        .extend_cc_r_reg_0(extend_cc_r_reg),
        .\gen_cc_blk[0].gen_cc_flop_0 (tx_stream_control_sm_i_n_7),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .ll_valid_c(ll_valid_c),
        .pdu_ok_c(pdu_ok_c),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .txdatavalid_i(txdatavalid_i));
  board_aurora_64b66b_0_2_TX_STREAM_DATAPATH tx_stream_datapath_i
       (.Q(Q),
        .\TX_DATA_reg[43] (\TX_DATA_reg[43] ),
        .\TX_DATA_reg[53] (tx_stream_control_sm_i_n_7),
        .\TX_DATA_reg[61] (\TX_DATA_reg[61] ),
        .\TX_PE_DATA_V_reg[0]_0 (tx_pe_data_v_i),
        .\TX_PE_DATA_V_reg[0]_1 (\TX_PE_DATA_V_reg[0] ),
        .\TX_PE_DATA_V_reg[0]_rep_0 (\TX_PE_DATA_V_reg[0]_rep ),
        .\TX_PE_DATA_V_reg[0]_rep__0_0 (\TX_PE_DATA_V_reg[0]_rep__0 ),
        .\TX_PE_DATA_reg[0]_0 (\TX_PE_DATA_reg[0] ),
        .\TX_PE_DATA_reg[100]_0 (\TX_PE_DATA_reg[100] ),
        .\TX_PE_DATA_reg[101]_0 (\TX_PE_DATA_reg[101] ),
        .\TX_PE_DATA_reg[102]_0 (\TX_PE_DATA_reg[102] ),
        .\TX_PE_DATA_reg[103]_0 (\TX_PE_DATA_reg[103] ),
        .\TX_PE_DATA_reg[104]_0 (\TX_PE_DATA_reg[104] ),
        .\TX_PE_DATA_reg[105]_0 (\TX_PE_DATA_reg[105] ),
        .\TX_PE_DATA_reg[106]_0 (\TX_PE_DATA_reg[106] ),
        .\TX_PE_DATA_reg[107]_0 (\TX_PE_DATA_reg[107] ),
        .\TX_PE_DATA_reg[108]_0 (\TX_PE_DATA_reg[108] ),
        .\TX_PE_DATA_reg[109]_0 (\TX_PE_DATA_reg[109] ),
        .\TX_PE_DATA_reg[10]_0 (\TX_PE_DATA_reg[10] ),
        .\TX_PE_DATA_reg[110]_0 (\TX_PE_DATA_reg[110] ),
        .\TX_PE_DATA_reg[111]_0 (\TX_PE_DATA_reg[111] ),
        .\TX_PE_DATA_reg[116]_0 (\TX_PE_DATA_reg[116] ),
        .\TX_PE_DATA_reg[117]_0 (\TX_PE_DATA_reg[117] ),
        .\TX_PE_DATA_reg[118]_0 (\TX_PE_DATA_reg[118] ),
        .\TX_PE_DATA_reg[119]_0 (\TX_PE_DATA_reg[119] ),
        .\TX_PE_DATA_reg[11]_0 (\TX_PE_DATA_reg[11] ),
        .\TX_PE_DATA_reg[120]_0 (\TX_PE_DATA_reg[120] ),
        .\TX_PE_DATA_reg[121]_0 (\TX_PE_DATA_reg[121] ),
        .\TX_PE_DATA_reg[122]_0 (\TX_PE_DATA_reg[122] ),
        .\TX_PE_DATA_reg[123]_0 (\TX_PE_DATA_reg[123] ),
        .\TX_PE_DATA_reg[124]_0 (\TX_PE_DATA_reg[124] ),
        .\TX_PE_DATA_reg[125]_0 (\TX_PE_DATA_reg[125] ),
        .\TX_PE_DATA_reg[126]_0 (\TX_PE_DATA_reg[126] ),
        .\TX_PE_DATA_reg[127]_0 (\TX_PE_DATA_reg[127] ),
        .\TX_PE_DATA_reg[128]_0 (\TX_PE_DATA_reg[128] ),
        .\TX_PE_DATA_reg[129]_0 (\TX_PE_DATA_reg[129] ),
        .\TX_PE_DATA_reg[12]_0 (\TX_PE_DATA_reg[12] ),
        .\TX_PE_DATA_reg[130]_0 (\TX_PE_DATA_reg[130] ),
        .\TX_PE_DATA_reg[131]_0 (\TX_PE_DATA_reg[131] ),
        .\TX_PE_DATA_reg[132]_0 (\TX_PE_DATA_reg[132] ),
        .\TX_PE_DATA_reg[133]_0 (\TX_PE_DATA_reg[133] ),
        .\TX_PE_DATA_reg[134]_0 (\TX_PE_DATA_reg[134] ),
        .\TX_PE_DATA_reg[135]_0 (\TX_PE_DATA_reg[135] ),
        .\TX_PE_DATA_reg[136]_0 (\TX_PE_DATA_reg[136] ),
        .\TX_PE_DATA_reg[137]_0 (\TX_PE_DATA_reg[137] ),
        .\TX_PE_DATA_reg[138]_0 (\TX_PE_DATA_reg[138] ),
        .\TX_PE_DATA_reg[139]_0 (\TX_PE_DATA_reg[139] ),
        .\TX_PE_DATA_reg[13]_0 (\TX_PE_DATA_reg[13] ),
        .\TX_PE_DATA_reg[140]_0 (\TX_PE_DATA_reg[140] ),
        .\TX_PE_DATA_reg[141]_0 (\TX_PE_DATA_reg[141] ),
        .\TX_PE_DATA_reg[142]_0 (\TX_PE_DATA_reg[142] ),
        .\TX_PE_DATA_reg[143]_0 (\TX_PE_DATA_reg[143] ),
        .\TX_PE_DATA_reg[144]_0 (\TX_PE_DATA_reg[144] ),
        .\TX_PE_DATA_reg[145]_0 (\TX_PE_DATA_reg[145] ),
        .\TX_PE_DATA_reg[146]_0 (\TX_PE_DATA_reg[146] ),
        .\TX_PE_DATA_reg[147]_0 (\TX_PE_DATA_reg[147] ),
        .\TX_PE_DATA_reg[148]_0 (\TX_PE_DATA_reg[148] ),
        .\TX_PE_DATA_reg[149]_0 (\TX_PE_DATA_reg[149] ),
        .\TX_PE_DATA_reg[14]_0 (\TX_PE_DATA_reg[14] ),
        .\TX_PE_DATA_reg[150]_0 (\TX_PE_DATA_reg[150] ),
        .\TX_PE_DATA_reg[151]_0 (\TX_PE_DATA_reg[151] ),
        .\TX_PE_DATA_reg[152]_0 (\TX_PE_DATA_reg[152] ),
        .\TX_PE_DATA_reg[153]_0 (\TX_PE_DATA_reg[153] ),
        .\TX_PE_DATA_reg[154]_0 (\TX_PE_DATA_reg[154] ),
        .\TX_PE_DATA_reg[155]_0 (\TX_PE_DATA_reg[155] ),
        .\TX_PE_DATA_reg[156]_0 (\TX_PE_DATA_reg[156] ),
        .\TX_PE_DATA_reg[157]_0 (\TX_PE_DATA_reg[157] ),
        .\TX_PE_DATA_reg[158]_0 (\TX_PE_DATA_reg[158] ),
        .\TX_PE_DATA_reg[159]_0 (\TX_PE_DATA_reg[159] ),
        .\TX_PE_DATA_reg[15]_0 (\TX_PE_DATA_reg[15] ),
        .\TX_PE_DATA_reg[160]_0 (\TX_PE_DATA_reg[160] ),
        .\TX_PE_DATA_reg[161]_0 (\TX_PE_DATA_reg[161] ),
        .\TX_PE_DATA_reg[162]_0 (\TX_PE_DATA_reg[162] ),
        .\TX_PE_DATA_reg[163]_0 (\TX_PE_DATA_reg[163] ),
        .\TX_PE_DATA_reg[164]_0 (\TX_PE_DATA_reg[164] ),
        .\TX_PE_DATA_reg[165]_0 (\TX_PE_DATA_reg[165] ),
        .\TX_PE_DATA_reg[166]_0 (\TX_PE_DATA_reg[166] ),
        .\TX_PE_DATA_reg[167]_0 (\TX_PE_DATA_reg[167] ),
        .\TX_PE_DATA_reg[168]_0 (\TX_PE_DATA_reg[168] ),
        .\TX_PE_DATA_reg[169]_0 (\TX_PE_DATA_reg[169] ),
        .\TX_PE_DATA_reg[16]_0 (\TX_PE_DATA_reg[16] ),
        .\TX_PE_DATA_reg[170]_0 (\TX_PE_DATA_reg[170] ),
        .\TX_PE_DATA_reg[171]_0 (\TX_PE_DATA_reg[171] ),
        .\TX_PE_DATA_reg[172]_0 (\TX_PE_DATA_reg[172] ),
        .\TX_PE_DATA_reg[173]_0 (\TX_PE_DATA_reg[173] ),
        .\TX_PE_DATA_reg[174]_0 (\TX_PE_DATA_reg[174] ),
        .\TX_PE_DATA_reg[175]_0 (\TX_PE_DATA_reg[175] ),
        .\TX_PE_DATA_reg[17]_0 (\TX_PE_DATA_reg[17] ),
        .\TX_PE_DATA_reg[180]_0 (\TX_PE_DATA_reg[180] ),
        .\TX_PE_DATA_reg[181]_0 (\TX_PE_DATA_reg[181] ),
        .\TX_PE_DATA_reg[182]_0 (\TX_PE_DATA_reg[182] ),
        .\TX_PE_DATA_reg[183]_0 (\TX_PE_DATA_reg[183] ),
        .\TX_PE_DATA_reg[184]_0 (\TX_PE_DATA_reg[184] ),
        .\TX_PE_DATA_reg[185]_0 (\TX_PE_DATA_reg[185] ),
        .\TX_PE_DATA_reg[186]_0 (\TX_PE_DATA_reg[186] ),
        .\TX_PE_DATA_reg[187]_0 (\TX_PE_DATA_reg[187] ),
        .\TX_PE_DATA_reg[188]_0 (\TX_PE_DATA_reg[188] ),
        .\TX_PE_DATA_reg[189]_0 (\TX_PE_DATA_reg[189] ),
        .\TX_PE_DATA_reg[18]_0 (\TX_PE_DATA_reg[18] ),
        .\TX_PE_DATA_reg[190]_0 (\TX_PE_DATA_reg[190] ),
        .\TX_PE_DATA_reg[191]_0 (\TX_PE_DATA_reg[191] ),
        .\TX_PE_DATA_reg[192]_0 (\TX_PE_DATA_reg[192] ),
        .\TX_PE_DATA_reg[193]_0 (\TX_PE_DATA_reg[193] ),
        .\TX_PE_DATA_reg[194]_0 (\TX_PE_DATA_reg[194] ),
        .\TX_PE_DATA_reg[195]_0 (\TX_PE_DATA_reg[195] ),
        .\TX_PE_DATA_reg[196]_0 (\TX_PE_DATA_reg[196] ),
        .\TX_PE_DATA_reg[197]_0 (\TX_PE_DATA_reg[197] ),
        .\TX_PE_DATA_reg[198]_0 (\TX_PE_DATA_reg[198] ),
        .\TX_PE_DATA_reg[199]_0 (\TX_PE_DATA_reg[199] ),
        .\TX_PE_DATA_reg[19]_0 (\TX_PE_DATA_reg[19] ),
        .\TX_PE_DATA_reg[1]_0 (\TX_PE_DATA_reg[1] ),
        .\TX_PE_DATA_reg[200]_0 (\TX_PE_DATA_reg[200] ),
        .\TX_PE_DATA_reg[201]_0 (\TX_PE_DATA_reg[201] ),
        .\TX_PE_DATA_reg[202]_0 (\TX_PE_DATA_reg[202] ),
        .\TX_PE_DATA_reg[203]_0 (\TX_PE_DATA_reg[203] ),
        .\TX_PE_DATA_reg[204]_0 (\TX_PE_DATA_reg[204] ),
        .\TX_PE_DATA_reg[205]_0 (\TX_PE_DATA_reg[205] ),
        .\TX_PE_DATA_reg[206]_0 (\TX_PE_DATA_reg[206] ),
        .\TX_PE_DATA_reg[207]_0 (\TX_PE_DATA_reg[207] ),
        .\TX_PE_DATA_reg[208]_0 (\TX_PE_DATA_reg[208] ),
        .\TX_PE_DATA_reg[209]_0 (\TX_PE_DATA_reg[209] ),
        .\TX_PE_DATA_reg[20]_0 (\TX_PE_DATA_reg[20] ),
        .\TX_PE_DATA_reg[210]_0 (\TX_PE_DATA_reg[210] ),
        .\TX_PE_DATA_reg[211]_0 (\TX_PE_DATA_reg[211] ),
        .\TX_PE_DATA_reg[212]_0 (\TX_PE_DATA_reg[212] ),
        .\TX_PE_DATA_reg[213]_0 (\TX_PE_DATA_reg[213] ),
        .\TX_PE_DATA_reg[214]_0 (\TX_PE_DATA_reg[214] ),
        .\TX_PE_DATA_reg[215]_0 (\TX_PE_DATA_reg[215] ),
        .\TX_PE_DATA_reg[216]_0 (\TX_PE_DATA_reg[216] ),
        .\TX_PE_DATA_reg[217]_0 (\TX_PE_DATA_reg[217] ),
        .\TX_PE_DATA_reg[218]_0 (\TX_PE_DATA_reg[218] ),
        .\TX_PE_DATA_reg[219]_0 (\TX_PE_DATA_reg[219] ),
        .\TX_PE_DATA_reg[21]_0 (\TX_PE_DATA_reg[21] ),
        .\TX_PE_DATA_reg[220]_0 (\TX_PE_DATA_reg[220] ),
        .\TX_PE_DATA_reg[221]_0 (\TX_PE_DATA_reg[221] ),
        .\TX_PE_DATA_reg[222]_0 (\TX_PE_DATA_reg[222] ),
        .\TX_PE_DATA_reg[223]_0 (\TX_PE_DATA_reg[223] ),
        .\TX_PE_DATA_reg[224]_0 (\TX_PE_DATA_reg[224] ),
        .\TX_PE_DATA_reg[225]_0 (\TX_PE_DATA_reg[225] ),
        .\TX_PE_DATA_reg[226]_0 (\TX_PE_DATA_reg[226] ),
        .\TX_PE_DATA_reg[227]_0 (\TX_PE_DATA_reg[227] ),
        .\TX_PE_DATA_reg[228]_0 (\TX_PE_DATA_reg[228] ),
        .\TX_PE_DATA_reg[229]_0 (\TX_PE_DATA_reg[229] ),
        .\TX_PE_DATA_reg[22]_0 (\TX_PE_DATA_reg[22] ),
        .\TX_PE_DATA_reg[230]_0 (\TX_PE_DATA_reg[230] ),
        .\TX_PE_DATA_reg[231]_0 (\TX_PE_DATA_reg[231] ),
        .\TX_PE_DATA_reg[232]_0 (\TX_PE_DATA_reg[232] ),
        .\TX_PE_DATA_reg[233]_0 (\TX_PE_DATA_reg[233] ),
        .\TX_PE_DATA_reg[234]_0 (\TX_PE_DATA_reg[234] ),
        .\TX_PE_DATA_reg[235]_0 (\TX_PE_DATA_reg[235] ),
        .\TX_PE_DATA_reg[236]_0 (\TX_PE_DATA_reg[236] ),
        .\TX_PE_DATA_reg[237]_0 (\TX_PE_DATA_reg[237] ),
        .\TX_PE_DATA_reg[238]_0 (\TX_PE_DATA_reg[238] ),
        .\TX_PE_DATA_reg[239]_0 (\TX_PE_DATA_reg[239] ),
        .\TX_PE_DATA_reg[23]_0 (\TX_PE_DATA_reg[23] ),
        .\TX_PE_DATA_reg[244]_0 (\TX_PE_DATA_reg[244] ),
        .\TX_PE_DATA_reg[245]_0 (\TX_PE_DATA_reg[245] ),
        .\TX_PE_DATA_reg[246]_0 (\TX_PE_DATA_reg[246] ),
        .\TX_PE_DATA_reg[247]_0 (\TX_PE_DATA_reg[247] ),
        .\TX_PE_DATA_reg[248]_0 (\TX_PE_DATA_reg[248] ),
        .\TX_PE_DATA_reg[249]_0 (\TX_PE_DATA_reg[249] ),
        .\TX_PE_DATA_reg[24]_0 (\TX_PE_DATA_reg[24] ),
        .\TX_PE_DATA_reg[250]_0 (\TX_PE_DATA_reg[250] ),
        .\TX_PE_DATA_reg[251]_0 (\TX_PE_DATA_reg[251] ),
        .\TX_PE_DATA_reg[252]_0 (\TX_PE_DATA_reg[252] ),
        .\TX_PE_DATA_reg[253]_0 (\TX_PE_DATA_reg[253] ),
        .\TX_PE_DATA_reg[254]_0 (\TX_PE_DATA_reg[254] ),
        .\TX_PE_DATA_reg[255]_0 (\TX_PE_DATA_reg[255] ),
        .\TX_PE_DATA_reg[25]_0 (\TX_PE_DATA_reg[25] ),
        .\TX_PE_DATA_reg[26]_0 (\TX_PE_DATA_reg[26] ),
        .\TX_PE_DATA_reg[27]_0 (\TX_PE_DATA_reg[27] ),
        .\TX_PE_DATA_reg[28]_0 (\TX_PE_DATA_reg[28] ),
        .\TX_PE_DATA_reg[29]_0 (\TX_PE_DATA_reg[29] ),
        .\TX_PE_DATA_reg[2]_0 (\TX_PE_DATA_reg[2] ),
        .\TX_PE_DATA_reg[30]_0 (\TX_PE_DATA_reg[30] ),
        .\TX_PE_DATA_reg[31]_0 (\TX_PE_DATA_reg[31] ),
        .\TX_PE_DATA_reg[32]_0 (\TX_PE_DATA_reg[32] ),
        .\TX_PE_DATA_reg[33]_0 (\TX_PE_DATA_reg[33] ),
        .\TX_PE_DATA_reg[34]_0 (\TX_PE_DATA_reg[34] ),
        .\TX_PE_DATA_reg[35]_0 (\TX_PE_DATA_reg[35] ),
        .\TX_PE_DATA_reg[36]_0 (\TX_PE_DATA_reg[36] ),
        .\TX_PE_DATA_reg[37]_0 (\TX_PE_DATA_reg[37] ),
        .\TX_PE_DATA_reg[38]_0 (\TX_PE_DATA_reg[38] ),
        .\TX_PE_DATA_reg[39]_0 (\TX_PE_DATA_reg[39] ),
        .\TX_PE_DATA_reg[3]_0 (\TX_PE_DATA_reg[3] ),
        .\TX_PE_DATA_reg[40]_0 (\TX_PE_DATA_reg[40] ),
        .\TX_PE_DATA_reg[41]_0 (\TX_PE_DATA_reg[41] ),
        .\TX_PE_DATA_reg[42]_0 (\TX_PE_DATA_reg[42] ),
        .\TX_PE_DATA_reg[43]_0 (\TX_PE_DATA_reg[43] ),
        .\TX_PE_DATA_reg[44]_0 (\TX_PE_DATA_reg[44] ),
        .\TX_PE_DATA_reg[45]_0 (\TX_PE_DATA_reg[45] ),
        .\TX_PE_DATA_reg[46]_0 (\TX_PE_DATA_reg[46] ),
        .\TX_PE_DATA_reg[47]_0 (\TX_PE_DATA_reg[47] ),
        .\TX_PE_DATA_reg[4]_0 (\TX_PE_DATA_reg[4] ),
        .\TX_PE_DATA_reg[52]_0 (\TX_PE_DATA_reg[52] ),
        .\TX_PE_DATA_reg[53]_0 (\TX_PE_DATA_reg[53] ),
        .\TX_PE_DATA_reg[54]_0 (\TX_PE_DATA_reg[54] ),
        .\TX_PE_DATA_reg[55]_0 (\TX_PE_DATA_reg[55] ),
        .\TX_PE_DATA_reg[56]_0 (\TX_PE_DATA_reg[56] ),
        .\TX_PE_DATA_reg[57]_0 (\TX_PE_DATA_reg[57] ),
        .\TX_PE_DATA_reg[58]_0 (\TX_PE_DATA_reg[58] ),
        .\TX_PE_DATA_reg[59]_0 (\TX_PE_DATA_reg[59] ),
        .\TX_PE_DATA_reg[5]_0 (\TX_PE_DATA_reg[5] ),
        .\TX_PE_DATA_reg[60]_0 (\TX_PE_DATA_reg[60] ),
        .\TX_PE_DATA_reg[61]_0 (\TX_PE_DATA_reg[61] ),
        .\TX_PE_DATA_reg[62]_0 (\TX_PE_DATA_reg[62] ),
        .\TX_PE_DATA_reg[63]_0 (\TX_PE_DATA_reg[63] ),
        .\TX_PE_DATA_reg[64]_0 (\TX_PE_DATA_reg[64] ),
        .\TX_PE_DATA_reg[65]_0 (\TX_PE_DATA_reg[65] ),
        .\TX_PE_DATA_reg[66]_0 (\TX_PE_DATA_reg[66] ),
        .\TX_PE_DATA_reg[67]_0 (\TX_PE_DATA_reg[67] ),
        .\TX_PE_DATA_reg[68]_0 (\TX_PE_DATA_reg[68] ),
        .\TX_PE_DATA_reg[69]_0 (\TX_PE_DATA_reg[69] ),
        .\TX_PE_DATA_reg[6]_0 (\TX_PE_DATA_reg[6] ),
        .\TX_PE_DATA_reg[70]_0 (\TX_PE_DATA_reg[70] ),
        .\TX_PE_DATA_reg[71]_0 (\TX_PE_DATA_reg[71] ),
        .\TX_PE_DATA_reg[72]_0 (\TX_PE_DATA_reg[72] ),
        .\TX_PE_DATA_reg[73]_0 (\TX_PE_DATA_reg[73] ),
        .\TX_PE_DATA_reg[74]_0 (\TX_PE_DATA_reg[74] ),
        .\TX_PE_DATA_reg[75]_0 (\TX_PE_DATA_reg[75] ),
        .\TX_PE_DATA_reg[76]_0 (\TX_PE_DATA_reg[76] ),
        .\TX_PE_DATA_reg[77]_0 (\TX_PE_DATA_reg[77] ),
        .\TX_PE_DATA_reg[78]_0 (\TX_PE_DATA_reg[78] ),
        .\TX_PE_DATA_reg[79]_0 (\TX_PE_DATA_reg[79] ),
        .\TX_PE_DATA_reg[7]_0 (\TX_PE_DATA_reg[7] ),
        .\TX_PE_DATA_reg[80]_0 (\TX_PE_DATA_reg[80] ),
        .\TX_PE_DATA_reg[81]_0 (\TX_PE_DATA_reg[81] ),
        .\TX_PE_DATA_reg[82]_0 (\TX_PE_DATA_reg[82] ),
        .\TX_PE_DATA_reg[83]_0 (\TX_PE_DATA_reg[83] ),
        .\TX_PE_DATA_reg[84]_0 (\TX_PE_DATA_reg[84] ),
        .\TX_PE_DATA_reg[85]_0 (\TX_PE_DATA_reg[85] ),
        .\TX_PE_DATA_reg[86]_0 (\TX_PE_DATA_reg[86] ),
        .\TX_PE_DATA_reg[87]_0 (\TX_PE_DATA_reg[87] ),
        .\TX_PE_DATA_reg[88]_0 (\TX_PE_DATA_reg[88] ),
        .\TX_PE_DATA_reg[89]_0 (\TX_PE_DATA_reg[89] ),
        .\TX_PE_DATA_reg[8]_0 (\TX_PE_DATA_reg[8] ),
        .\TX_PE_DATA_reg[90]_0 (\TX_PE_DATA_reg[90] ),
        .\TX_PE_DATA_reg[91]_0 (\TX_PE_DATA_reg[91] ),
        .\TX_PE_DATA_reg[92]_0 (\TX_PE_DATA_reg[92] ),
        .\TX_PE_DATA_reg[93]_0 (\TX_PE_DATA_reg[93] ),
        .\TX_PE_DATA_reg[94]_0 (\TX_PE_DATA_reg[94] ),
        .\TX_PE_DATA_reg[95]_0 (\TX_PE_DATA_reg[95] ),
        .\TX_PE_DATA_reg[96]_0 (\TX_PE_DATA_reg[96] ),
        .\TX_PE_DATA_reg[97]_0 (\TX_PE_DATA_reg[97] ),
        .\TX_PE_DATA_reg[98]_0 (\TX_PE_DATA_reg[98] ),
        .\TX_PE_DATA_reg[99]_0 (\TX_PE_DATA_reg[99] ),
        .\TX_PE_DATA_reg[9]_0 (\TX_PE_DATA_reg[9] ),
        .channel_bond_r(channel_bond_r),
        .channel_up_tx_if(channel_up_tx_if),
        .ll_valid_c(ll_valid_c),
        .rst_pma_init_usrclk(rst_pma_init_usrclk),
        .rst_pma_init_usrclk_0(rst_pma_init_usrclk_0),
        .rst_pma_init_usrclk_1(rst_pma_init_usrclk_1),
        .rst_pma_init_usrclk_2(rst_pma_init_usrclk_2),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .wait_for_lane_up_r(wait_for_lane_up_r),
        .wait_for_lane_up_r_reg(wait_for_lane_up_r_reg));
endmodule

module board_aurora_64b66b_0_2_TX_STREAM_CONTROL_SM
   (gen_cc_i,
    do_cc_r,
    s_axi_tx_tready,
    extend_cc_r,
    \gen_cc_blk[0].gen_cc_flop_0 ,
    ll_valid_c,
    R0,
    do_cc_r2_reg_0,
    do_cc_r0,
    pdu_ok_c,
    gen_ch_bond_i,
    rst_pma_init_usrclk,
    txdatavalid_i,
    extend_cc_r_reg_0,
    s_axi_tx_tvalid);
  output [0:3]gen_cc_i;
  output do_cc_r;
  output s_axi_tx_tready;
  output extend_cc_r;
  output \gen_cc_blk[0].gen_cc_flop_0 ;
  output ll_valid_c;
  input R0;
  input do_cc_r2_reg_0;
  input do_cc_r0;
  input pdu_ok_c;
  input [0:0]gen_ch_bond_i;
  input rst_pma_init_usrclk;
  input txdatavalid_i;
  input extend_cc_r_reg_0;
  input s_axi_tx_tvalid;

  wire R0;
  wire do_cc_r;
  wire do_cc_r0;
  wire do_cc_r2;
  wire do_cc_r2_reg_0;
  wire extend_cc_r;
  wire extend_cc_r_i_1_n_0;
  wire extend_cc_r_reg_0;
  wire \gen_cc_blk[0].gen_cc_flop_0 ;
  wire [0:3]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  wire ll_valid_c;
  wire pdu_ok_c;
  wire rst_pma_init_usrclk;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire txdatavalid_i;

  LUT3 #(
    .INIT(8'h01)) 
    \TX_DATA[53]_i_2 
       (.I0(gen_cc_i[0]),
        .I1(gen_ch_bond_i),
        .I2(rst_pma_init_usrclk),
        .O(\gen_cc_blk[0].gen_cc_flop_0 ));
  FDRE #(
    .INIT(1'b0)) 
    do_cc_r2_reg
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r),
        .Q(do_cc_r2),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    do_cc_r_reg
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r0),
        .Q(do_cc_r),
        .R(1'b0));
  LUT3 #(
    .INIT(8'hB0)) 
    extend_cc_r_i_1
       (.I0(extend_cc_r),
        .I1(txdatavalid_i),
        .I2(extend_cc_r_reg_0),
        .O(extend_cc_r_i_1_n_0));
  FDRE extend_cc_r_reg
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(extend_cc_r_i_1_n_0),
        .Q(extend_cc_r),
        .R(1'b0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[0].gen_cc_flop 
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[0]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[1].gen_cc_flop 
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[1]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[2].gen_cc_flop 
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[2]),
        .R(R0));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* XILINX_LEGACY_PRIM = "FDR" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_cc_blk[3].gen_cc_flop 
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(do_cc_r2),
        .Q(gen_cc_i[3]),
        .R(R0));
  FDRE s_axi_tx_tready_reg
       (.C(do_cc_r2_reg_0),
        .CE(1'b1),
        .D(pdu_ok_c),
        .Q(s_axi_tx_tready),
        .R(R0));
  LUT2 #(
    .INIT(4'h8)) 
    \tx_pe_data_v_d[0]_i_1 
       (.I0(s_axi_tx_tvalid),
        .I1(s_axi_tx_tready),
        .O(ll_valid_c));
endmodule

module board_aurora_64b66b_0_2_TX_STREAM_DATAPATH
   (\TX_PE_DATA_V_reg[0]_0 ,
    \TX_PE_DATA_V_reg[0]_rep_0 ,
    \TX_PE_DATA_V_reg[0]_rep__0_0 ,
    wait_for_lane_up_r_reg,
    \TX_PE_DATA_reg[252]_0 ,
    \TX_PE_DATA_reg[251]_0 ,
    \TX_PE_DATA_reg[250]_0 ,
    \TX_PE_DATA_reg[249]_0 ,
    \TX_PE_DATA_reg[188]_0 ,
    \TX_PE_DATA_reg[187]_0 ,
    \TX_PE_DATA_reg[186]_0 ,
    \TX_PE_DATA_reg[185]_0 ,
    \TX_PE_DATA_reg[124]_0 ,
    \TX_PE_DATA_reg[123]_0 ,
    \TX_PE_DATA_reg[122]_0 ,
    \TX_PE_DATA_reg[121]_0 ,
    \TX_PE_DATA_reg[60]_0 ,
    \TX_PE_DATA_reg[59]_0 ,
    \TX_PE_DATA_reg[58]_0 ,
    \TX_PE_DATA_reg[57]_0 ,
    \TX_PE_DATA_reg[199]_0 ,
    \TX_PE_DATA_reg[198]_0 ,
    \TX_PE_DATA_reg[197]_0 ,
    \TX_PE_DATA_reg[196]_0 ,
    \TX_PE_DATA_reg[195]_0 ,
    \TX_PE_DATA_reg[194]_0 ,
    \TX_PE_DATA_reg[193]_0 ,
    \TX_PE_DATA_reg[192]_0 ,
    \TX_PE_DATA_reg[207]_0 ,
    \TX_PE_DATA_reg[206]_0 ,
    \TX_PE_DATA_reg[205]_0 ,
    \TX_PE_DATA_reg[204]_0 ,
    \TX_PE_DATA_reg[203]_0 ,
    \TX_PE_DATA_reg[202]_0 ,
    \TX_PE_DATA_reg[201]_0 ,
    \TX_PE_DATA_reg[200]_0 ,
    \TX_PE_DATA_reg[215]_0 ,
    \TX_PE_DATA_reg[214]_0 ,
    \TX_PE_DATA_reg[213]_0 ,
    \TX_PE_DATA_reg[212]_0 ,
    \TX_PE_DATA_reg[211]_0 ,
    \TX_PE_DATA_reg[210]_0 ,
    \TX_PE_DATA_reg[209]_0 ,
    \TX_PE_DATA_reg[208]_0 ,
    \TX_PE_DATA_reg[223]_0 ,
    \TX_PE_DATA_reg[222]_0 ,
    \TX_PE_DATA_reg[221]_0 ,
    \TX_PE_DATA_reg[220]_0 ,
    \TX_PE_DATA_reg[219]_0 ,
    \TX_PE_DATA_reg[218]_0 ,
    \TX_PE_DATA_reg[217]_0 ,
    \TX_PE_DATA_reg[216]_0 ,
    \TX_PE_DATA_reg[231]_0 ,
    \TX_PE_DATA_reg[230]_0 ,
    \TX_PE_DATA_reg[229]_0 ,
    \TX_PE_DATA_reg[228]_0 ,
    \TX_PE_DATA_reg[227]_0 ,
    \TX_PE_DATA_reg[226]_0 ,
    \TX_PE_DATA_reg[225]_0 ,
    \TX_PE_DATA_reg[224]_0 ,
    \TX_PE_DATA_reg[239]_0 ,
    \TX_PE_DATA_reg[238]_0 ,
    \TX_PE_DATA_reg[237]_0 ,
    \TX_PE_DATA_reg[236]_0 ,
    \TX_PE_DATA_reg[235]_0 ,
    \TX_PE_DATA_reg[234]_0 ,
    \TX_PE_DATA_reg[233]_0 ,
    \TX_PE_DATA_reg[232]_0 ,
    \TX_PE_DATA_reg[247]_0 ,
    \TX_PE_DATA_reg[246]_0 ,
    \TX_PE_DATA_reg[245]_0 ,
    \TX_PE_DATA_reg[244]_0 ,
    \TX_PE_DATA_reg[255]_0 ,
    \TX_PE_DATA_reg[254]_0 ,
    \TX_PE_DATA_reg[253]_0 ,
    \TX_PE_DATA_reg[248]_0 ,
    \TX_PE_DATA_reg[135]_0 ,
    \TX_PE_DATA_reg[134]_0 ,
    \TX_PE_DATA_reg[133]_0 ,
    \TX_PE_DATA_reg[132]_0 ,
    \TX_PE_DATA_reg[131]_0 ,
    \TX_PE_DATA_reg[130]_0 ,
    \TX_PE_DATA_reg[129]_0 ,
    \TX_PE_DATA_reg[128]_0 ,
    \TX_PE_DATA_reg[143]_0 ,
    \TX_PE_DATA_reg[142]_0 ,
    \TX_PE_DATA_reg[141]_0 ,
    \TX_PE_DATA_reg[140]_0 ,
    \TX_PE_DATA_reg[139]_0 ,
    \TX_PE_DATA_reg[138]_0 ,
    \TX_PE_DATA_reg[137]_0 ,
    \TX_PE_DATA_reg[136]_0 ,
    \TX_PE_DATA_reg[151]_0 ,
    \TX_PE_DATA_reg[150]_0 ,
    \TX_PE_DATA_reg[149]_0 ,
    \TX_PE_DATA_reg[148]_0 ,
    \TX_PE_DATA_reg[147]_0 ,
    \TX_PE_DATA_reg[146]_0 ,
    \TX_PE_DATA_reg[145]_0 ,
    \TX_PE_DATA_reg[144]_0 ,
    \TX_PE_DATA_reg[159]_0 ,
    \TX_PE_DATA_reg[158]_0 ,
    \TX_PE_DATA_reg[157]_0 ,
    \TX_PE_DATA_reg[156]_0 ,
    \TX_PE_DATA_reg[155]_0 ,
    \TX_PE_DATA_reg[154]_0 ,
    \TX_PE_DATA_reg[153]_0 ,
    \TX_PE_DATA_reg[152]_0 ,
    \TX_PE_DATA_reg[167]_0 ,
    \TX_PE_DATA_reg[166]_0 ,
    \TX_PE_DATA_reg[165]_0 ,
    \TX_PE_DATA_reg[164]_0 ,
    \TX_PE_DATA_reg[163]_0 ,
    \TX_PE_DATA_reg[162]_0 ,
    \TX_PE_DATA_reg[161]_0 ,
    \TX_PE_DATA_reg[160]_0 ,
    \TX_PE_DATA_reg[175]_0 ,
    \TX_PE_DATA_reg[174]_0 ,
    \TX_PE_DATA_reg[173]_0 ,
    \TX_PE_DATA_reg[172]_0 ,
    \TX_PE_DATA_reg[171]_0 ,
    \TX_PE_DATA_reg[170]_0 ,
    \TX_PE_DATA_reg[169]_0 ,
    \TX_PE_DATA_reg[168]_0 ,
    \TX_PE_DATA_reg[183]_0 ,
    \TX_PE_DATA_reg[182]_0 ,
    \TX_PE_DATA_reg[181]_0 ,
    \TX_PE_DATA_reg[180]_0 ,
    \TX_PE_DATA_reg[191]_0 ,
    \TX_PE_DATA_reg[190]_0 ,
    \TX_PE_DATA_reg[189]_0 ,
    \TX_PE_DATA_reg[184]_0 ,
    \TX_PE_DATA_reg[71]_0 ,
    \TX_PE_DATA_reg[70]_0 ,
    \TX_PE_DATA_reg[69]_0 ,
    \TX_PE_DATA_reg[68]_0 ,
    \TX_PE_DATA_reg[67]_0 ,
    \TX_PE_DATA_reg[66]_0 ,
    \TX_PE_DATA_reg[65]_0 ,
    \TX_PE_DATA_reg[64]_0 ,
    \TX_PE_DATA_reg[79]_0 ,
    \TX_PE_DATA_reg[78]_0 ,
    \TX_PE_DATA_reg[77]_0 ,
    \TX_PE_DATA_reg[76]_0 ,
    \TX_PE_DATA_reg[75]_0 ,
    \TX_PE_DATA_reg[74]_0 ,
    \TX_PE_DATA_reg[73]_0 ,
    \TX_PE_DATA_reg[72]_0 ,
    \TX_PE_DATA_reg[87]_0 ,
    \TX_PE_DATA_reg[86]_0 ,
    \TX_PE_DATA_reg[85]_0 ,
    \TX_PE_DATA_reg[84]_0 ,
    \TX_PE_DATA_reg[83]_0 ,
    \TX_PE_DATA_reg[82]_0 ,
    \TX_PE_DATA_reg[81]_0 ,
    \TX_PE_DATA_reg[80]_0 ,
    \TX_PE_DATA_reg[95]_0 ,
    \TX_PE_DATA_reg[94]_0 ,
    \TX_PE_DATA_reg[93]_0 ,
    \TX_PE_DATA_reg[92]_0 ,
    \TX_PE_DATA_reg[91]_0 ,
    \TX_PE_DATA_reg[90]_0 ,
    \TX_PE_DATA_reg[89]_0 ,
    \TX_PE_DATA_reg[88]_0 ,
    \TX_PE_DATA_reg[103]_0 ,
    \TX_PE_DATA_reg[102]_0 ,
    \TX_PE_DATA_reg[101]_0 ,
    \TX_PE_DATA_reg[100]_0 ,
    \TX_PE_DATA_reg[99]_0 ,
    \TX_PE_DATA_reg[98]_0 ,
    \TX_PE_DATA_reg[97]_0 ,
    \TX_PE_DATA_reg[96]_0 ,
    \TX_PE_DATA_reg[111]_0 ,
    \TX_PE_DATA_reg[110]_0 ,
    \TX_PE_DATA_reg[109]_0 ,
    \TX_PE_DATA_reg[108]_0 ,
    \TX_PE_DATA_reg[107]_0 ,
    \TX_PE_DATA_reg[106]_0 ,
    \TX_PE_DATA_reg[105]_0 ,
    \TX_PE_DATA_reg[104]_0 ,
    \TX_PE_DATA_reg[119]_0 ,
    \TX_PE_DATA_reg[118]_0 ,
    \TX_PE_DATA_reg[117]_0 ,
    \TX_PE_DATA_reg[116]_0 ,
    \TX_PE_DATA_reg[127]_0 ,
    \TX_PE_DATA_reg[126]_0 ,
    \TX_PE_DATA_reg[125]_0 ,
    \TX_PE_DATA_reg[120]_0 ,
    \TX_PE_DATA_reg[7]_0 ,
    \TX_PE_DATA_reg[6]_0 ,
    \TX_PE_DATA_reg[5]_0 ,
    \TX_PE_DATA_reg[4]_0 ,
    \TX_PE_DATA_reg[3]_0 ,
    \TX_PE_DATA_reg[2]_0 ,
    \TX_PE_DATA_reg[1]_0 ,
    \TX_PE_DATA_reg[0]_0 ,
    \TX_PE_DATA_reg[15]_0 ,
    \TX_PE_DATA_reg[14]_0 ,
    \TX_PE_DATA_reg[13]_0 ,
    \TX_PE_DATA_reg[12]_0 ,
    \TX_PE_DATA_reg[11]_0 ,
    \TX_PE_DATA_reg[10]_0 ,
    \TX_PE_DATA_reg[9]_0 ,
    \TX_PE_DATA_reg[8]_0 ,
    \TX_PE_DATA_reg[23]_0 ,
    \TX_PE_DATA_reg[22]_0 ,
    \TX_PE_DATA_reg[21]_0 ,
    \TX_PE_DATA_reg[20]_0 ,
    \TX_PE_DATA_reg[19]_0 ,
    \TX_PE_DATA_reg[18]_0 ,
    \TX_PE_DATA_reg[17]_0 ,
    \TX_PE_DATA_reg[16]_0 ,
    \TX_PE_DATA_reg[31]_0 ,
    \TX_PE_DATA_reg[30]_0 ,
    \TX_PE_DATA_reg[29]_0 ,
    \TX_PE_DATA_reg[28]_0 ,
    \TX_PE_DATA_reg[27]_0 ,
    \TX_PE_DATA_reg[26]_0 ,
    \TX_PE_DATA_reg[25]_0 ,
    \TX_PE_DATA_reg[24]_0 ,
    \TX_PE_DATA_reg[39]_0 ,
    \TX_PE_DATA_reg[38]_0 ,
    \TX_PE_DATA_reg[37]_0 ,
    \TX_PE_DATA_reg[36]_0 ,
    \TX_PE_DATA_reg[35]_0 ,
    \TX_PE_DATA_reg[34]_0 ,
    \TX_PE_DATA_reg[33]_0 ,
    \TX_PE_DATA_reg[32]_0 ,
    \TX_PE_DATA_reg[47]_0 ,
    \TX_PE_DATA_reg[46]_0 ,
    \TX_PE_DATA_reg[45]_0 ,
    \TX_PE_DATA_reg[44]_0 ,
    \TX_PE_DATA_reg[43]_0 ,
    \TX_PE_DATA_reg[42]_0 ,
    \TX_PE_DATA_reg[41]_0 ,
    \TX_PE_DATA_reg[40]_0 ,
    \TX_PE_DATA_reg[55]_0 ,
    \TX_PE_DATA_reg[54]_0 ,
    \TX_PE_DATA_reg[53]_0 ,
    \TX_PE_DATA_reg[52]_0 ,
    \TX_PE_DATA_reg[63]_0 ,
    \TX_PE_DATA_reg[62]_0 ,
    \TX_PE_DATA_reg[61]_0 ,
    \TX_PE_DATA_reg[56]_0 ,
    Q,
    ll_valid_c,
    \TX_PE_DATA_V_reg[0]_1 ,
    \TX_DATA_reg[53] ,
    wait_for_lane_up_r,
    channel_bond_r,
    \TX_DATA_reg[61] ,
    \TX_DATA_reg[43] ,
    rst_pma_init_usrclk_0,
    channel_up_tx_if,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    rst_pma_init_usrclk,
    s_axi_tx_tdata);
  output \TX_PE_DATA_V_reg[0]_0 ;
  output \TX_PE_DATA_V_reg[0]_rep_0 ;
  output \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  output [0:0]wait_for_lane_up_r_reg;
  output \TX_PE_DATA_reg[252]_0 ;
  output \TX_PE_DATA_reg[251]_0 ;
  output \TX_PE_DATA_reg[250]_0 ;
  output \TX_PE_DATA_reg[249]_0 ;
  output \TX_PE_DATA_reg[188]_0 ;
  output \TX_PE_DATA_reg[187]_0 ;
  output \TX_PE_DATA_reg[186]_0 ;
  output \TX_PE_DATA_reg[185]_0 ;
  output \TX_PE_DATA_reg[124]_0 ;
  output \TX_PE_DATA_reg[123]_0 ;
  output \TX_PE_DATA_reg[122]_0 ;
  output \TX_PE_DATA_reg[121]_0 ;
  output \TX_PE_DATA_reg[60]_0 ;
  output \TX_PE_DATA_reg[59]_0 ;
  output \TX_PE_DATA_reg[58]_0 ;
  output \TX_PE_DATA_reg[57]_0 ;
  output \TX_PE_DATA_reg[199]_0 ;
  output \TX_PE_DATA_reg[198]_0 ;
  output \TX_PE_DATA_reg[197]_0 ;
  output \TX_PE_DATA_reg[196]_0 ;
  output \TX_PE_DATA_reg[195]_0 ;
  output \TX_PE_DATA_reg[194]_0 ;
  output \TX_PE_DATA_reg[193]_0 ;
  output \TX_PE_DATA_reg[192]_0 ;
  output \TX_PE_DATA_reg[207]_0 ;
  output \TX_PE_DATA_reg[206]_0 ;
  output \TX_PE_DATA_reg[205]_0 ;
  output \TX_PE_DATA_reg[204]_0 ;
  output \TX_PE_DATA_reg[203]_0 ;
  output \TX_PE_DATA_reg[202]_0 ;
  output \TX_PE_DATA_reg[201]_0 ;
  output \TX_PE_DATA_reg[200]_0 ;
  output \TX_PE_DATA_reg[215]_0 ;
  output \TX_PE_DATA_reg[214]_0 ;
  output \TX_PE_DATA_reg[213]_0 ;
  output \TX_PE_DATA_reg[212]_0 ;
  output \TX_PE_DATA_reg[211]_0 ;
  output \TX_PE_DATA_reg[210]_0 ;
  output \TX_PE_DATA_reg[209]_0 ;
  output \TX_PE_DATA_reg[208]_0 ;
  output \TX_PE_DATA_reg[223]_0 ;
  output \TX_PE_DATA_reg[222]_0 ;
  output \TX_PE_DATA_reg[221]_0 ;
  output \TX_PE_DATA_reg[220]_0 ;
  output \TX_PE_DATA_reg[219]_0 ;
  output \TX_PE_DATA_reg[218]_0 ;
  output \TX_PE_DATA_reg[217]_0 ;
  output \TX_PE_DATA_reg[216]_0 ;
  output \TX_PE_DATA_reg[231]_0 ;
  output \TX_PE_DATA_reg[230]_0 ;
  output \TX_PE_DATA_reg[229]_0 ;
  output \TX_PE_DATA_reg[228]_0 ;
  output \TX_PE_DATA_reg[227]_0 ;
  output \TX_PE_DATA_reg[226]_0 ;
  output \TX_PE_DATA_reg[225]_0 ;
  output \TX_PE_DATA_reg[224]_0 ;
  output \TX_PE_DATA_reg[239]_0 ;
  output \TX_PE_DATA_reg[238]_0 ;
  output \TX_PE_DATA_reg[237]_0 ;
  output \TX_PE_DATA_reg[236]_0 ;
  output \TX_PE_DATA_reg[235]_0 ;
  output \TX_PE_DATA_reg[234]_0 ;
  output \TX_PE_DATA_reg[233]_0 ;
  output \TX_PE_DATA_reg[232]_0 ;
  output \TX_PE_DATA_reg[247]_0 ;
  output \TX_PE_DATA_reg[246]_0 ;
  output \TX_PE_DATA_reg[245]_0 ;
  output \TX_PE_DATA_reg[244]_0 ;
  output \TX_PE_DATA_reg[255]_0 ;
  output \TX_PE_DATA_reg[254]_0 ;
  output \TX_PE_DATA_reg[253]_0 ;
  output \TX_PE_DATA_reg[248]_0 ;
  output \TX_PE_DATA_reg[135]_0 ;
  output \TX_PE_DATA_reg[134]_0 ;
  output \TX_PE_DATA_reg[133]_0 ;
  output \TX_PE_DATA_reg[132]_0 ;
  output \TX_PE_DATA_reg[131]_0 ;
  output \TX_PE_DATA_reg[130]_0 ;
  output \TX_PE_DATA_reg[129]_0 ;
  output \TX_PE_DATA_reg[128]_0 ;
  output \TX_PE_DATA_reg[143]_0 ;
  output \TX_PE_DATA_reg[142]_0 ;
  output \TX_PE_DATA_reg[141]_0 ;
  output \TX_PE_DATA_reg[140]_0 ;
  output \TX_PE_DATA_reg[139]_0 ;
  output \TX_PE_DATA_reg[138]_0 ;
  output \TX_PE_DATA_reg[137]_0 ;
  output \TX_PE_DATA_reg[136]_0 ;
  output \TX_PE_DATA_reg[151]_0 ;
  output \TX_PE_DATA_reg[150]_0 ;
  output \TX_PE_DATA_reg[149]_0 ;
  output \TX_PE_DATA_reg[148]_0 ;
  output \TX_PE_DATA_reg[147]_0 ;
  output \TX_PE_DATA_reg[146]_0 ;
  output \TX_PE_DATA_reg[145]_0 ;
  output \TX_PE_DATA_reg[144]_0 ;
  output \TX_PE_DATA_reg[159]_0 ;
  output \TX_PE_DATA_reg[158]_0 ;
  output \TX_PE_DATA_reg[157]_0 ;
  output \TX_PE_DATA_reg[156]_0 ;
  output \TX_PE_DATA_reg[155]_0 ;
  output \TX_PE_DATA_reg[154]_0 ;
  output \TX_PE_DATA_reg[153]_0 ;
  output \TX_PE_DATA_reg[152]_0 ;
  output \TX_PE_DATA_reg[167]_0 ;
  output \TX_PE_DATA_reg[166]_0 ;
  output \TX_PE_DATA_reg[165]_0 ;
  output \TX_PE_DATA_reg[164]_0 ;
  output \TX_PE_DATA_reg[163]_0 ;
  output \TX_PE_DATA_reg[162]_0 ;
  output \TX_PE_DATA_reg[161]_0 ;
  output \TX_PE_DATA_reg[160]_0 ;
  output \TX_PE_DATA_reg[175]_0 ;
  output \TX_PE_DATA_reg[174]_0 ;
  output \TX_PE_DATA_reg[173]_0 ;
  output \TX_PE_DATA_reg[172]_0 ;
  output \TX_PE_DATA_reg[171]_0 ;
  output \TX_PE_DATA_reg[170]_0 ;
  output \TX_PE_DATA_reg[169]_0 ;
  output \TX_PE_DATA_reg[168]_0 ;
  output \TX_PE_DATA_reg[183]_0 ;
  output \TX_PE_DATA_reg[182]_0 ;
  output \TX_PE_DATA_reg[181]_0 ;
  output \TX_PE_DATA_reg[180]_0 ;
  output \TX_PE_DATA_reg[191]_0 ;
  output \TX_PE_DATA_reg[190]_0 ;
  output \TX_PE_DATA_reg[189]_0 ;
  output \TX_PE_DATA_reg[184]_0 ;
  output \TX_PE_DATA_reg[71]_0 ;
  output \TX_PE_DATA_reg[70]_0 ;
  output \TX_PE_DATA_reg[69]_0 ;
  output \TX_PE_DATA_reg[68]_0 ;
  output \TX_PE_DATA_reg[67]_0 ;
  output \TX_PE_DATA_reg[66]_0 ;
  output \TX_PE_DATA_reg[65]_0 ;
  output \TX_PE_DATA_reg[64]_0 ;
  output \TX_PE_DATA_reg[79]_0 ;
  output \TX_PE_DATA_reg[78]_0 ;
  output \TX_PE_DATA_reg[77]_0 ;
  output \TX_PE_DATA_reg[76]_0 ;
  output \TX_PE_DATA_reg[75]_0 ;
  output \TX_PE_DATA_reg[74]_0 ;
  output \TX_PE_DATA_reg[73]_0 ;
  output \TX_PE_DATA_reg[72]_0 ;
  output \TX_PE_DATA_reg[87]_0 ;
  output \TX_PE_DATA_reg[86]_0 ;
  output \TX_PE_DATA_reg[85]_0 ;
  output \TX_PE_DATA_reg[84]_0 ;
  output \TX_PE_DATA_reg[83]_0 ;
  output \TX_PE_DATA_reg[82]_0 ;
  output \TX_PE_DATA_reg[81]_0 ;
  output \TX_PE_DATA_reg[80]_0 ;
  output \TX_PE_DATA_reg[95]_0 ;
  output \TX_PE_DATA_reg[94]_0 ;
  output \TX_PE_DATA_reg[93]_0 ;
  output \TX_PE_DATA_reg[92]_0 ;
  output \TX_PE_DATA_reg[91]_0 ;
  output \TX_PE_DATA_reg[90]_0 ;
  output \TX_PE_DATA_reg[89]_0 ;
  output \TX_PE_DATA_reg[88]_0 ;
  output \TX_PE_DATA_reg[103]_0 ;
  output \TX_PE_DATA_reg[102]_0 ;
  output \TX_PE_DATA_reg[101]_0 ;
  output \TX_PE_DATA_reg[100]_0 ;
  output \TX_PE_DATA_reg[99]_0 ;
  output \TX_PE_DATA_reg[98]_0 ;
  output \TX_PE_DATA_reg[97]_0 ;
  output \TX_PE_DATA_reg[96]_0 ;
  output \TX_PE_DATA_reg[111]_0 ;
  output \TX_PE_DATA_reg[110]_0 ;
  output \TX_PE_DATA_reg[109]_0 ;
  output \TX_PE_DATA_reg[108]_0 ;
  output \TX_PE_DATA_reg[107]_0 ;
  output \TX_PE_DATA_reg[106]_0 ;
  output \TX_PE_DATA_reg[105]_0 ;
  output \TX_PE_DATA_reg[104]_0 ;
  output \TX_PE_DATA_reg[119]_0 ;
  output \TX_PE_DATA_reg[118]_0 ;
  output \TX_PE_DATA_reg[117]_0 ;
  output \TX_PE_DATA_reg[116]_0 ;
  output \TX_PE_DATA_reg[127]_0 ;
  output \TX_PE_DATA_reg[126]_0 ;
  output \TX_PE_DATA_reg[125]_0 ;
  output \TX_PE_DATA_reg[120]_0 ;
  output \TX_PE_DATA_reg[7]_0 ;
  output \TX_PE_DATA_reg[6]_0 ;
  output \TX_PE_DATA_reg[5]_0 ;
  output \TX_PE_DATA_reg[4]_0 ;
  output \TX_PE_DATA_reg[3]_0 ;
  output \TX_PE_DATA_reg[2]_0 ;
  output \TX_PE_DATA_reg[1]_0 ;
  output \TX_PE_DATA_reg[0]_0 ;
  output \TX_PE_DATA_reg[15]_0 ;
  output \TX_PE_DATA_reg[14]_0 ;
  output \TX_PE_DATA_reg[13]_0 ;
  output \TX_PE_DATA_reg[12]_0 ;
  output \TX_PE_DATA_reg[11]_0 ;
  output \TX_PE_DATA_reg[10]_0 ;
  output \TX_PE_DATA_reg[9]_0 ;
  output \TX_PE_DATA_reg[8]_0 ;
  output \TX_PE_DATA_reg[23]_0 ;
  output \TX_PE_DATA_reg[22]_0 ;
  output \TX_PE_DATA_reg[21]_0 ;
  output \TX_PE_DATA_reg[20]_0 ;
  output \TX_PE_DATA_reg[19]_0 ;
  output \TX_PE_DATA_reg[18]_0 ;
  output \TX_PE_DATA_reg[17]_0 ;
  output \TX_PE_DATA_reg[16]_0 ;
  output \TX_PE_DATA_reg[31]_0 ;
  output \TX_PE_DATA_reg[30]_0 ;
  output \TX_PE_DATA_reg[29]_0 ;
  output \TX_PE_DATA_reg[28]_0 ;
  output \TX_PE_DATA_reg[27]_0 ;
  output \TX_PE_DATA_reg[26]_0 ;
  output \TX_PE_DATA_reg[25]_0 ;
  output \TX_PE_DATA_reg[24]_0 ;
  output \TX_PE_DATA_reg[39]_0 ;
  output \TX_PE_DATA_reg[38]_0 ;
  output \TX_PE_DATA_reg[37]_0 ;
  output \TX_PE_DATA_reg[36]_0 ;
  output \TX_PE_DATA_reg[35]_0 ;
  output \TX_PE_DATA_reg[34]_0 ;
  output \TX_PE_DATA_reg[33]_0 ;
  output \TX_PE_DATA_reg[32]_0 ;
  output \TX_PE_DATA_reg[47]_0 ;
  output \TX_PE_DATA_reg[46]_0 ;
  output \TX_PE_DATA_reg[45]_0 ;
  output \TX_PE_DATA_reg[44]_0 ;
  output \TX_PE_DATA_reg[43]_0 ;
  output \TX_PE_DATA_reg[42]_0 ;
  output \TX_PE_DATA_reg[41]_0 ;
  output \TX_PE_DATA_reg[40]_0 ;
  output \TX_PE_DATA_reg[55]_0 ;
  output \TX_PE_DATA_reg[54]_0 ;
  output \TX_PE_DATA_reg[53]_0 ;
  output \TX_PE_DATA_reg[52]_0 ;
  output \TX_PE_DATA_reg[63]_0 ;
  output \TX_PE_DATA_reg[62]_0 ;
  output \TX_PE_DATA_reg[61]_0 ;
  output \TX_PE_DATA_reg[56]_0 ;
  output [14:0]Q;
  input ll_valid_c;
  input \TX_PE_DATA_V_reg[0]_1 ;
  input \TX_DATA_reg[53] ;
  input wait_for_lane_up_r;
  input channel_bond_r;
  input \TX_DATA_reg[61] ;
  input \TX_DATA_reg[43] ;
  input rst_pma_init_usrclk_0;
  input channel_up_tx_if;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input rst_pma_init_usrclk;
  input [0:255]s_axi_tx_tdata;

  wire [14:0]Q;
  wire \TX_DATA_reg[43] ;
  wire \TX_DATA_reg[53] ;
  wire \TX_DATA_reg[61] ;
  wire [63:0]TX_PE_DATA;
  wire \TX_PE_DATA_V_reg[0]_0 ;
  wire \TX_PE_DATA_V_reg[0]_1 ;
  wire \TX_PE_DATA_V_reg[0]_rep_0 ;
  wire \TX_PE_DATA_V_reg[0]_rep__0_0 ;
  wire \TX_PE_DATA_reg[0]_0 ;
  wire \TX_PE_DATA_reg[100]_0 ;
  wire \TX_PE_DATA_reg[101]_0 ;
  wire \TX_PE_DATA_reg[102]_0 ;
  wire \TX_PE_DATA_reg[103]_0 ;
  wire \TX_PE_DATA_reg[104]_0 ;
  wire \TX_PE_DATA_reg[105]_0 ;
  wire \TX_PE_DATA_reg[106]_0 ;
  wire \TX_PE_DATA_reg[107]_0 ;
  wire \TX_PE_DATA_reg[108]_0 ;
  wire \TX_PE_DATA_reg[109]_0 ;
  wire \TX_PE_DATA_reg[10]_0 ;
  wire \TX_PE_DATA_reg[110]_0 ;
  wire \TX_PE_DATA_reg[111]_0 ;
  wire \TX_PE_DATA_reg[116]_0 ;
  wire \TX_PE_DATA_reg[117]_0 ;
  wire \TX_PE_DATA_reg[118]_0 ;
  wire \TX_PE_DATA_reg[119]_0 ;
  wire \TX_PE_DATA_reg[11]_0 ;
  wire \TX_PE_DATA_reg[120]_0 ;
  wire \TX_PE_DATA_reg[121]_0 ;
  wire \TX_PE_DATA_reg[122]_0 ;
  wire \TX_PE_DATA_reg[123]_0 ;
  wire \TX_PE_DATA_reg[124]_0 ;
  wire \TX_PE_DATA_reg[125]_0 ;
  wire \TX_PE_DATA_reg[126]_0 ;
  wire \TX_PE_DATA_reg[127]_0 ;
  wire \TX_PE_DATA_reg[128]_0 ;
  wire \TX_PE_DATA_reg[129]_0 ;
  wire \TX_PE_DATA_reg[12]_0 ;
  wire \TX_PE_DATA_reg[130]_0 ;
  wire \TX_PE_DATA_reg[131]_0 ;
  wire \TX_PE_DATA_reg[132]_0 ;
  wire \TX_PE_DATA_reg[133]_0 ;
  wire \TX_PE_DATA_reg[134]_0 ;
  wire \TX_PE_DATA_reg[135]_0 ;
  wire \TX_PE_DATA_reg[136]_0 ;
  wire \TX_PE_DATA_reg[137]_0 ;
  wire \TX_PE_DATA_reg[138]_0 ;
  wire \TX_PE_DATA_reg[139]_0 ;
  wire \TX_PE_DATA_reg[13]_0 ;
  wire \TX_PE_DATA_reg[140]_0 ;
  wire \TX_PE_DATA_reg[141]_0 ;
  wire \TX_PE_DATA_reg[142]_0 ;
  wire \TX_PE_DATA_reg[143]_0 ;
  wire \TX_PE_DATA_reg[144]_0 ;
  wire \TX_PE_DATA_reg[145]_0 ;
  wire \TX_PE_DATA_reg[146]_0 ;
  wire \TX_PE_DATA_reg[147]_0 ;
  wire \TX_PE_DATA_reg[148]_0 ;
  wire \TX_PE_DATA_reg[149]_0 ;
  wire \TX_PE_DATA_reg[14]_0 ;
  wire \TX_PE_DATA_reg[150]_0 ;
  wire \TX_PE_DATA_reg[151]_0 ;
  wire \TX_PE_DATA_reg[152]_0 ;
  wire \TX_PE_DATA_reg[153]_0 ;
  wire \TX_PE_DATA_reg[154]_0 ;
  wire \TX_PE_DATA_reg[155]_0 ;
  wire \TX_PE_DATA_reg[156]_0 ;
  wire \TX_PE_DATA_reg[157]_0 ;
  wire \TX_PE_DATA_reg[158]_0 ;
  wire \TX_PE_DATA_reg[159]_0 ;
  wire \TX_PE_DATA_reg[15]_0 ;
  wire \TX_PE_DATA_reg[160]_0 ;
  wire \TX_PE_DATA_reg[161]_0 ;
  wire \TX_PE_DATA_reg[162]_0 ;
  wire \TX_PE_DATA_reg[163]_0 ;
  wire \TX_PE_DATA_reg[164]_0 ;
  wire \TX_PE_DATA_reg[165]_0 ;
  wire \TX_PE_DATA_reg[166]_0 ;
  wire \TX_PE_DATA_reg[167]_0 ;
  wire \TX_PE_DATA_reg[168]_0 ;
  wire \TX_PE_DATA_reg[169]_0 ;
  wire \TX_PE_DATA_reg[16]_0 ;
  wire \TX_PE_DATA_reg[170]_0 ;
  wire \TX_PE_DATA_reg[171]_0 ;
  wire \TX_PE_DATA_reg[172]_0 ;
  wire \TX_PE_DATA_reg[173]_0 ;
  wire \TX_PE_DATA_reg[174]_0 ;
  wire \TX_PE_DATA_reg[175]_0 ;
  wire \TX_PE_DATA_reg[17]_0 ;
  wire \TX_PE_DATA_reg[180]_0 ;
  wire \TX_PE_DATA_reg[181]_0 ;
  wire \TX_PE_DATA_reg[182]_0 ;
  wire \TX_PE_DATA_reg[183]_0 ;
  wire \TX_PE_DATA_reg[184]_0 ;
  wire \TX_PE_DATA_reg[185]_0 ;
  wire \TX_PE_DATA_reg[186]_0 ;
  wire \TX_PE_DATA_reg[187]_0 ;
  wire \TX_PE_DATA_reg[188]_0 ;
  wire \TX_PE_DATA_reg[189]_0 ;
  wire \TX_PE_DATA_reg[18]_0 ;
  wire \TX_PE_DATA_reg[190]_0 ;
  wire \TX_PE_DATA_reg[191]_0 ;
  wire \TX_PE_DATA_reg[192]_0 ;
  wire \TX_PE_DATA_reg[193]_0 ;
  wire \TX_PE_DATA_reg[194]_0 ;
  wire \TX_PE_DATA_reg[195]_0 ;
  wire \TX_PE_DATA_reg[196]_0 ;
  wire \TX_PE_DATA_reg[197]_0 ;
  wire \TX_PE_DATA_reg[198]_0 ;
  wire \TX_PE_DATA_reg[199]_0 ;
  wire \TX_PE_DATA_reg[19]_0 ;
  wire \TX_PE_DATA_reg[1]_0 ;
  wire \TX_PE_DATA_reg[200]_0 ;
  wire \TX_PE_DATA_reg[201]_0 ;
  wire \TX_PE_DATA_reg[202]_0 ;
  wire \TX_PE_DATA_reg[203]_0 ;
  wire \TX_PE_DATA_reg[204]_0 ;
  wire \TX_PE_DATA_reg[205]_0 ;
  wire \TX_PE_DATA_reg[206]_0 ;
  wire \TX_PE_DATA_reg[207]_0 ;
  wire \TX_PE_DATA_reg[208]_0 ;
  wire \TX_PE_DATA_reg[209]_0 ;
  wire \TX_PE_DATA_reg[20]_0 ;
  wire \TX_PE_DATA_reg[210]_0 ;
  wire \TX_PE_DATA_reg[211]_0 ;
  wire \TX_PE_DATA_reg[212]_0 ;
  wire \TX_PE_DATA_reg[213]_0 ;
  wire \TX_PE_DATA_reg[214]_0 ;
  wire \TX_PE_DATA_reg[215]_0 ;
  wire \TX_PE_DATA_reg[216]_0 ;
  wire \TX_PE_DATA_reg[217]_0 ;
  wire \TX_PE_DATA_reg[218]_0 ;
  wire \TX_PE_DATA_reg[219]_0 ;
  wire \TX_PE_DATA_reg[21]_0 ;
  wire \TX_PE_DATA_reg[220]_0 ;
  wire \TX_PE_DATA_reg[221]_0 ;
  wire \TX_PE_DATA_reg[222]_0 ;
  wire \TX_PE_DATA_reg[223]_0 ;
  wire \TX_PE_DATA_reg[224]_0 ;
  wire \TX_PE_DATA_reg[225]_0 ;
  wire \TX_PE_DATA_reg[226]_0 ;
  wire \TX_PE_DATA_reg[227]_0 ;
  wire \TX_PE_DATA_reg[228]_0 ;
  wire \TX_PE_DATA_reg[229]_0 ;
  wire \TX_PE_DATA_reg[22]_0 ;
  wire \TX_PE_DATA_reg[230]_0 ;
  wire \TX_PE_DATA_reg[231]_0 ;
  wire \TX_PE_DATA_reg[232]_0 ;
  wire \TX_PE_DATA_reg[233]_0 ;
  wire \TX_PE_DATA_reg[234]_0 ;
  wire \TX_PE_DATA_reg[235]_0 ;
  wire \TX_PE_DATA_reg[236]_0 ;
  wire \TX_PE_DATA_reg[237]_0 ;
  wire \TX_PE_DATA_reg[238]_0 ;
  wire \TX_PE_DATA_reg[239]_0 ;
  wire \TX_PE_DATA_reg[23]_0 ;
  wire \TX_PE_DATA_reg[244]_0 ;
  wire \TX_PE_DATA_reg[245]_0 ;
  wire \TX_PE_DATA_reg[246]_0 ;
  wire \TX_PE_DATA_reg[247]_0 ;
  wire \TX_PE_DATA_reg[248]_0 ;
  wire \TX_PE_DATA_reg[249]_0 ;
  wire \TX_PE_DATA_reg[24]_0 ;
  wire \TX_PE_DATA_reg[250]_0 ;
  wire \TX_PE_DATA_reg[251]_0 ;
  wire \TX_PE_DATA_reg[252]_0 ;
  wire \TX_PE_DATA_reg[253]_0 ;
  wire \TX_PE_DATA_reg[254]_0 ;
  wire \TX_PE_DATA_reg[255]_0 ;
  wire \TX_PE_DATA_reg[25]_0 ;
  wire \TX_PE_DATA_reg[26]_0 ;
  wire \TX_PE_DATA_reg[27]_0 ;
  wire \TX_PE_DATA_reg[28]_0 ;
  wire \TX_PE_DATA_reg[29]_0 ;
  wire \TX_PE_DATA_reg[2]_0 ;
  wire \TX_PE_DATA_reg[30]_0 ;
  wire \TX_PE_DATA_reg[31]_0 ;
  wire \TX_PE_DATA_reg[32]_0 ;
  wire \TX_PE_DATA_reg[33]_0 ;
  wire \TX_PE_DATA_reg[34]_0 ;
  wire \TX_PE_DATA_reg[35]_0 ;
  wire \TX_PE_DATA_reg[36]_0 ;
  wire \TX_PE_DATA_reg[37]_0 ;
  wire \TX_PE_DATA_reg[38]_0 ;
  wire \TX_PE_DATA_reg[39]_0 ;
  wire \TX_PE_DATA_reg[3]_0 ;
  wire \TX_PE_DATA_reg[40]_0 ;
  wire \TX_PE_DATA_reg[41]_0 ;
  wire \TX_PE_DATA_reg[42]_0 ;
  wire \TX_PE_DATA_reg[43]_0 ;
  wire \TX_PE_DATA_reg[44]_0 ;
  wire \TX_PE_DATA_reg[45]_0 ;
  wire \TX_PE_DATA_reg[46]_0 ;
  wire \TX_PE_DATA_reg[47]_0 ;
  wire \TX_PE_DATA_reg[4]_0 ;
  wire \TX_PE_DATA_reg[52]_0 ;
  wire \TX_PE_DATA_reg[53]_0 ;
  wire \TX_PE_DATA_reg[54]_0 ;
  wire \TX_PE_DATA_reg[55]_0 ;
  wire \TX_PE_DATA_reg[56]_0 ;
  wire \TX_PE_DATA_reg[57]_0 ;
  wire \TX_PE_DATA_reg[58]_0 ;
  wire \TX_PE_DATA_reg[59]_0 ;
  wire \TX_PE_DATA_reg[5]_0 ;
  wire \TX_PE_DATA_reg[60]_0 ;
  wire \TX_PE_DATA_reg[61]_0 ;
  wire \TX_PE_DATA_reg[62]_0 ;
  wire \TX_PE_DATA_reg[63]_0 ;
  wire \TX_PE_DATA_reg[64]_0 ;
  wire \TX_PE_DATA_reg[65]_0 ;
  wire \TX_PE_DATA_reg[66]_0 ;
  wire \TX_PE_DATA_reg[67]_0 ;
  wire \TX_PE_DATA_reg[68]_0 ;
  wire \TX_PE_DATA_reg[69]_0 ;
  wire \TX_PE_DATA_reg[6]_0 ;
  wire \TX_PE_DATA_reg[70]_0 ;
  wire \TX_PE_DATA_reg[71]_0 ;
  wire \TX_PE_DATA_reg[72]_0 ;
  wire \TX_PE_DATA_reg[73]_0 ;
  wire \TX_PE_DATA_reg[74]_0 ;
  wire \TX_PE_DATA_reg[75]_0 ;
  wire \TX_PE_DATA_reg[76]_0 ;
  wire \TX_PE_DATA_reg[77]_0 ;
  wire \TX_PE_DATA_reg[78]_0 ;
  wire \TX_PE_DATA_reg[79]_0 ;
  wire \TX_PE_DATA_reg[7]_0 ;
  wire \TX_PE_DATA_reg[80]_0 ;
  wire \TX_PE_DATA_reg[81]_0 ;
  wire \TX_PE_DATA_reg[82]_0 ;
  wire \TX_PE_DATA_reg[83]_0 ;
  wire \TX_PE_DATA_reg[84]_0 ;
  wire \TX_PE_DATA_reg[85]_0 ;
  wire \TX_PE_DATA_reg[86]_0 ;
  wire \TX_PE_DATA_reg[87]_0 ;
  wire \TX_PE_DATA_reg[88]_0 ;
  wire \TX_PE_DATA_reg[89]_0 ;
  wire \TX_PE_DATA_reg[8]_0 ;
  wire \TX_PE_DATA_reg[90]_0 ;
  wire \TX_PE_DATA_reg[91]_0 ;
  wire \TX_PE_DATA_reg[92]_0 ;
  wire \TX_PE_DATA_reg[93]_0 ;
  wire \TX_PE_DATA_reg[94]_0 ;
  wire \TX_PE_DATA_reg[95]_0 ;
  wire \TX_PE_DATA_reg[96]_0 ;
  wire \TX_PE_DATA_reg[97]_0 ;
  wire \TX_PE_DATA_reg[98]_0 ;
  wire \TX_PE_DATA_reg[99]_0 ;
  wire \TX_PE_DATA_reg[9]_0 ;
  wire \TX_PE_DATA_reg_n_0_[100] ;
  wire \TX_PE_DATA_reg_n_0_[101] ;
  wire \TX_PE_DATA_reg_n_0_[102] ;
  wire \TX_PE_DATA_reg_n_0_[103] ;
  wire \TX_PE_DATA_reg_n_0_[104] ;
  wire \TX_PE_DATA_reg_n_0_[105] ;
  wire \TX_PE_DATA_reg_n_0_[106] ;
  wire \TX_PE_DATA_reg_n_0_[107] ;
  wire \TX_PE_DATA_reg_n_0_[108] ;
  wire \TX_PE_DATA_reg_n_0_[109] ;
  wire \TX_PE_DATA_reg_n_0_[110] ;
  wire \TX_PE_DATA_reg_n_0_[111] ;
  wire \TX_PE_DATA_reg_n_0_[116] ;
  wire \TX_PE_DATA_reg_n_0_[117] ;
  wire \TX_PE_DATA_reg_n_0_[118] ;
  wire \TX_PE_DATA_reg_n_0_[119] ;
  wire \TX_PE_DATA_reg_n_0_[120] ;
  wire \TX_PE_DATA_reg_n_0_[121] ;
  wire \TX_PE_DATA_reg_n_0_[122] ;
  wire \TX_PE_DATA_reg_n_0_[123] ;
  wire \TX_PE_DATA_reg_n_0_[124] ;
  wire \TX_PE_DATA_reg_n_0_[125] ;
  wire \TX_PE_DATA_reg_n_0_[126] ;
  wire \TX_PE_DATA_reg_n_0_[127] ;
  wire \TX_PE_DATA_reg_n_0_[128] ;
  wire \TX_PE_DATA_reg_n_0_[129] ;
  wire \TX_PE_DATA_reg_n_0_[130] ;
  wire \TX_PE_DATA_reg_n_0_[131] ;
  wire \TX_PE_DATA_reg_n_0_[132] ;
  wire \TX_PE_DATA_reg_n_0_[133] ;
  wire \TX_PE_DATA_reg_n_0_[134] ;
  wire \TX_PE_DATA_reg_n_0_[135] ;
  wire \TX_PE_DATA_reg_n_0_[136] ;
  wire \TX_PE_DATA_reg_n_0_[137] ;
  wire \TX_PE_DATA_reg_n_0_[138] ;
  wire \TX_PE_DATA_reg_n_0_[139] ;
  wire \TX_PE_DATA_reg_n_0_[140] ;
  wire \TX_PE_DATA_reg_n_0_[141] ;
  wire \TX_PE_DATA_reg_n_0_[142] ;
  wire \TX_PE_DATA_reg_n_0_[143] ;
  wire \TX_PE_DATA_reg_n_0_[144] ;
  wire \TX_PE_DATA_reg_n_0_[145] ;
  wire \TX_PE_DATA_reg_n_0_[146] ;
  wire \TX_PE_DATA_reg_n_0_[147] ;
  wire \TX_PE_DATA_reg_n_0_[148] ;
  wire \TX_PE_DATA_reg_n_0_[149] ;
  wire \TX_PE_DATA_reg_n_0_[150] ;
  wire \TX_PE_DATA_reg_n_0_[151] ;
  wire \TX_PE_DATA_reg_n_0_[152] ;
  wire \TX_PE_DATA_reg_n_0_[153] ;
  wire \TX_PE_DATA_reg_n_0_[154] ;
  wire \TX_PE_DATA_reg_n_0_[155] ;
  wire \TX_PE_DATA_reg_n_0_[156] ;
  wire \TX_PE_DATA_reg_n_0_[157] ;
  wire \TX_PE_DATA_reg_n_0_[158] ;
  wire \TX_PE_DATA_reg_n_0_[159] ;
  wire \TX_PE_DATA_reg_n_0_[160] ;
  wire \TX_PE_DATA_reg_n_0_[161] ;
  wire \TX_PE_DATA_reg_n_0_[162] ;
  wire \TX_PE_DATA_reg_n_0_[163] ;
  wire \TX_PE_DATA_reg_n_0_[164] ;
  wire \TX_PE_DATA_reg_n_0_[165] ;
  wire \TX_PE_DATA_reg_n_0_[166] ;
  wire \TX_PE_DATA_reg_n_0_[167] ;
  wire \TX_PE_DATA_reg_n_0_[168] ;
  wire \TX_PE_DATA_reg_n_0_[169] ;
  wire \TX_PE_DATA_reg_n_0_[170] ;
  wire \TX_PE_DATA_reg_n_0_[171] ;
  wire \TX_PE_DATA_reg_n_0_[172] ;
  wire \TX_PE_DATA_reg_n_0_[173] ;
  wire \TX_PE_DATA_reg_n_0_[174] ;
  wire \TX_PE_DATA_reg_n_0_[175] ;
  wire \TX_PE_DATA_reg_n_0_[180] ;
  wire \TX_PE_DATA_reg_n_0_[181] ;
  wire \TX_PE_DATA_reg_n_0_[182] ;
  wire \TX_PE_DATA_reg_n_0_[183] ;
  wire \TX_PE_DATA_reg_n_0_[184] ;
  wire \TX_PE_DATA_reg_n_0_[185] ;
  wire \TX_PE_DATA_reg_n_0_[186] ;
  wire \TX_PE_DATA_reg_n_0_[187] ;
  wire \TX_PE_DATA_reg_n_0_[188] ;
  wire \TX_PE_DATA_reg_n_0_[189] ;
  wire \TX_PE_DATA_reg_n_0_[190] ;
  wire \TX_PE_DATA_reg_n_0_[191] ;
  wire \TX_PE_DATA_reg_n_0_[192] ;
  wire \TX_PE_DATA_reg_n_0_[193] ;
  wire \TX_PE_DATA_reg_n_0_[194] ;
  wire \TX_PE_DATA_reg_n_0_[195] ;
  wire \TX_PE_DATA_reg_n_0_[196] ;
  wire \TX_PE_DATA_reg_n_0_[197] ;
  wire \TX_PE_DATA_reg_n_0_[198] ;
  wire \TX_PE_DATA_reg_n_0_[199] ;
  wire \TX_PE_DATA_reg_n_0_[200] ;
  wire \TX_PE_DATA_reg_n_0_[201] ;
  wire \TX_PE_DATA_reg_n_0_[202] ;
  wire \TX_PE_DATA_reg_n_0_[203] ;
  wire \TX_PE_DATA_reg_n_0_[204] ;
  wire \TX_PE_DATA_reg_n_0_[205] ;
  wire \TX_PE_DATA_reg_n_0_[206] ;
  wire \TX_PE_DATA_reg_n_0_[207] ;
  wire \TX_PE_DATA_reg_n_0_[208] ;
  wire \TX_PE_DATA_reg_n_0_[209] ;
  wire \TX_PE_DATA_reg_n_0_[210] ;
  wire \TX_PE_DATA_reg_n_0_[211] ;
  wire \TX_PE_DATA_reg_n_0_[212] ;
  wire \TX_PE_DATA_reg_n_0_[213] ;
  wire \TX_PE_DATA_reg_n_0_[214] ;
  wire \TX_PE_DATA_reg_n_0_[215] ;
  wire \TX_PE_DATA_reg_n_0_[216] ;
  wire \TX_PE_DATA_reg_n_0_[217] ;
  wire \TX_PE_DATA_reg_n_0_[218] ;
  wire \TX_PE_DATA_reg_n_0_[219] ;
  wire \TX_PE_DATA_reg_n_0_[220] ;
  wire \TX_PE_DATA_reg_n_0_[221] ;
  wire \TX_PE_DATA_reg_n_0_[222] ;
  wire \TX_PE_DATA_reg_n_0_[223] ;
  wire \TX_PE_DATA_reg_n_0_[224] ;
  wire \TX_PE_DATA_reg_n_0_[225] ;
  wire \TX_PE_DATA_reg_n_0_[226] ;
  wire \TX_PE_DATA_reg_n_0_[227] ;
  wire \TX_PE_DATA_reg_n_0_[228] ;
  wire \TX_PE_DATA_reg_n_0_[229] ;
  wire \TX_PE_DATA_reg_n_0_[230] ;
  wire \TX_PE_DATA_reg_n_0_[231] ;
  wire \TX_PE_DATA_reg_n_0_[232] ;
  wire \TX_PE_DATA_reg_n_0_[233] ;
  wire \TX_PE_DATA_reg_n_0_[234] ;
  wire \TX_PE_DATA_reg_n_0_[235] ;
  wire \TX_PE_DATA_reg_n_0_[236] ;
  wire \TX_PE_DATA_reg_n_0_[237] ;
  wire \TX_PE_DATA_reg_n_0_[238] ;
  wire \TX_PE_DATA_reg_n_0_[239] ;
  wire \TX_PE_DATA_reg_n_0_[244] ;
  wire \TX_PE_DATA_reg_n_0_[245] ;
  wire \TX_PE_DATA_reg_n_0_[246] ;
  wire \TX_PE_DATA_reg_n_0_[247] ;
  wire \TX_PE_DATA_reg_n_0_[248] ;
  wire \TX_PE_DATA_reg_n_0_[249] ;
  wire \TX_PE_DATA_reg_n_0_[250] ;
  wire \TX_PE_DATA_reg_n_0_[251] ;
  wire \TX_PE_DATA_reg_n_0_[252] ;
  wire \TX_PE_DATA_reg_n_0_[253] ;
  wire \TX_PE_DATA_reg_n_0_[254] ;
  wire \TX_PE_DATA_reg_n_0_[255] ;
  wire \TX_PE_DATA_reg_n_0_[64] ;
  wire \TX_PE_DATA_reg_n_0_[65] ;
  wire \TX_PE_DATA_reg_n_0_[66] ;
  wire \TX_PE_DATA_reg_n_0_[67] ;
  wire \TX_PE_DATA_reg_n_0_[68] ;
  wire \TX_PE_DATA_reg_n_0_[69] ;
  wire \TX_PE_DATA_reg_n_0_[70] ;
  wire \TX_PE_DATA_reg_n_0_[71] ;
  wire \TX_PE_DATA_reg_n_0_[72] ;
  wire \TX_PE_DATA_reg_n_0_[73] ;
  wire \TX_PE_DATA_reg_n_0_[74] ;
  wire \TX_PE_DATA_reg_n_0_[75] ;
  wire \TX_PE_DATA_reg_n_0_[76] ;
  wire \TX_PE_DATA_reg_n_0_[77] ;
  wire \TX_PE_DATA_reg_n_0_[78] ;
  wire \TX_PE_DATA_reg_n_0_[79] ;
  wire \TX_PE_DATA_reg_n_0_[80] ;
  wire \TX_PE_DATA_reg_n_0_[81] ;
  wire \TX_PE_DATA_reg_n_0_[82] ;
  wire \TX_PE_DATA_reg_n_0_[83] ;
  wire \TX_PE_DATA_reg_n_0_[84] ;
  wire \TX_PE_DATA_reg_n_0_[85] ;
  wire \TX_PE_DATA_reg_n_0_[86] ;
  wire \TX_PE_DATA_reg_n_0_[87] ;
  wire \TX_PE_DATA_reg_n_0_[88] ;
  wire \TX_PE_DATA_reg_n_0_[89] ;
  wire \TX_PE_DATA_reg_n_0_[90] ;
  wire \TX_PE_DATA_reg_n_0_[91] ;
  wire \TX_PE_DATA_reg_n_0_[92] ;
  wire \TX_PE_DATA_reg_n_0_[93] ;
  wire \TX_PE_DATA_reg_n_0_[94] ;
  wire \TX_PE_DATA_reg_n_0_[95] ;
  wire \TX_PE_DATA_reg_n_0_[96] ;
  wire \TX_PE_DATA_reg_n_0_[97] ;
  wire \TX_PE_DATA_reg_n_0_[98] ;
  wire \TX_PE_DATA_reg_n_0_[99] ;
  wire channel_bond_r;
  wire channel_up_tx_if;
  wire ll_valid_c;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire [0:255]s_axi_tx_tdata;
  wire [0:255]tx_pe_data_d;
  wire [0:0]tx_pe_data_v_d;
  wire wait_for_lane_up_r;
  wire [0:0]wait_for_lane_up_r_reg;

  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[0]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[199] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[199]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[0]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[135] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[135]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[0]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[71] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[71]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[0]_i_1__2 
       (.I0(TX_PE_DATA[56]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[10]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[205] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[205]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[10]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[141] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[141]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[10]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[77] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[77]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[10]_i_1__2 
       (.I0(TX_PE_DATA[50]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[13]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair469" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[11]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[204] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[204]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair388" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[11]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[140] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[140]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair416" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[11]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[76] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[76]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair443" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[11]_i_1__2 
       (.I0(TX_PE_DATA[51]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[12]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[12]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[203] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[203]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[12]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[139] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[139]_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[12]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[75] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[75]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[12]_i_1__2 
       (.I0(TX_PE_DATA[52]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[11]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair470" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[13]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[202] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[202]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair389" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[13]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[138] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[138]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[13]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[74] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[74]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair444" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[13]_i_1__2 
       (.I0(TX_PE_DATA[53]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[10]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[14]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[201] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[201]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[14]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[137] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[137]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair417" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[14]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[73] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[73]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[14]_i_1__2 
       (.I0(TX_PE_DATA[54]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[9]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair471" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[15]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[200] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[200]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair390" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[15]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[136] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[136]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[15]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[72] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[72]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair445" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[15]_i_1__2 
       (.I0(TX_PE_DATA[55]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[8]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[16]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[215] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[215]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[16]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[151] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[151]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair418" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[16]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[87] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[87]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[16]_i_1__2 
       (.I0(TX_PE_DATA[40]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[23]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair472" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[17]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[214] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[214]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair391" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[17]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[150] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[150]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[17]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[86] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[86]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair446" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[17]_i_1__2 
       (.I0(TX_PE_DATA[41]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[22]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[18]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[213] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[213]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[18]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[149] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[149]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair419" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[18]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[85] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[85]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[18]_i_1__2 
       (.I0(TX_PE_DATA[42]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[21]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair473" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[19]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[212] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[212]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair392" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[19]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[148] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[148]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[19]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[84] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[84]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair447" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[19]_i_1__2 
       (.I0(TX_PE_DATA[43]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[20]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[1]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[198] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[198]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair383" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[1]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[134] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[134]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[1]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[70] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[70]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair438" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[1]_i_1__2 
       (.I0(TX_PE_DATA[57]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[20]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[211] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[211]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[20]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[147] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[147]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[20]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[83] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[83]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[20]_i_1__2 
       (.I0(TX_PE_DATA[44]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[19]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[21]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[210] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[210]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair393" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[21]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[146] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[146]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair421" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[21]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[82] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[82]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair448" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[21]_i_1__2 
       (.I0(TX_PE_DATA[45]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[18]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair380" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[22]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[209] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[209]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[22]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[145] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[145]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair420" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[22]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[81] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[81]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[22]_i_1__2 
       (.I0(TX_PE_DATA[46]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[17]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[23]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[208] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[208]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair394" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[23]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[144] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[144]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[23]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[80] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[80]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair449" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[23]_i_1__2 
       (.I0(TX_PE_DATA[47]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[16]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[24]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[223] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[223]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[24]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[159] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[159]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair422" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[24]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[95] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[95]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[24]_i_1__2 
       (.I0(TX_PE_DATA[32]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[31]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair474" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[25]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[222] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[222]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair395" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[25]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[158] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[158]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[25]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[94] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[94]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair450" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[25]_i_1__2 
       (.I0(TX_PE_DATA[33]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[30]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[26]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[221] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[221]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[26]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[157] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[157]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair423" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[26]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[93] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[93]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[26]_i_1__2 
       (.I0(TX_PE_DATA[34]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[29]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair475" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[27]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[220] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[220]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair396" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[27]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[156] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[156]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[27]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[92] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[92]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair451" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[27]_i_1__2 
       (.I0(TX_PE_DATA[35]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[28]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[28]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[219] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[219]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[28]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[155] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[155]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair424" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[28]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[91] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[91]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[28]_i_1__2 
       (.I0(TX_PE_DATA[36]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[27]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair476" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[29]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[218] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[218]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair397" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[29]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[154] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[154]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[29]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[90] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[90]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair452" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[29]_i_1__2 
       (.I0(TX_PE_DATA[37]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[26]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[2]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[197] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[197]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[2]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[133] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[133]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair412" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[2]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[69] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[69]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[2]_i_1__2 
       (.I0(TX_PE_DATA[58]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[30]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[217] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[217]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[30]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[153] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[153]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair425" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[30]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[89] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[89]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[30]_i_1__2 
       (.I0(TX_PE_DATA[38]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[25]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair477" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[31]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[216] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[216]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair398" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[31]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[152] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[152]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[31]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[88] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[88]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair453" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[31]_i_1__2 
       (.I0(TX_PE_DATA[39]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[24]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[32]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[231] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[231]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[32]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[167] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[167]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair426" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[32]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[103] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[103]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[32]_i_1__2 
       (.I0(TX_PE_DATA[24]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[39]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair478" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[33]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[230] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[230]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair399" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[33]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[166] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[166]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[33]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[102] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[102]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair454" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[33]_i_1__2 
       (.I0(TX_PE_DATA[25]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[38]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[34]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[229] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[229]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[34]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[165] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[165]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair427" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[34]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[101] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[101]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[34]_i_1__2 
       (.I0(TX_PE_DATA[26]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[37]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair479" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[35]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[228] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[228]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair400" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[35]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[164] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[164]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[35]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[100] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[100]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair455" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[35]_i_1__2 
       (.I0(TX_PE_DATA[27]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[36]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[36]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[227] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[227]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[36]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[163] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[163]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair428" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[36]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[99] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[99]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[36]_i_1__2 
       (.I0(TX_PE_DATA[28]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[35]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair480" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[37]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[226] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[226]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair401" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[37]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[162] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[162]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[37]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[98] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[98]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair456" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[37]_i_1__2 
       (.I0(TX_PE_DATA[29]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[34]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[38]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[225] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[225]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[38]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[161] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[161]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair429" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[38]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[97] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[97]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[38]_i_1__2 
       (.I0(TX_PE_DATA[30]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[33]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair481" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[39]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[224] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[224]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair402" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[39]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[160] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[160]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[39]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[96] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[96]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair457" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[39]_i_1__2 
       (.I0(TX_PE_DATA[31]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[32]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair378" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[3]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[196] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[196]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair384" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[3]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[132] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[132]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair411" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[3]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[68] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[68]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair439" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[3]_i_1__2 
       (.I0(TX_PE_DATA[59]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair381" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[40]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[239] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[239]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[40]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[175] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[175]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[40]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[111] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[111]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[40]_i_1__2 
       (.I0(TX_PE_DATA[16]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[47]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[41]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[238] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[238]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair403" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[41]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[174] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[174]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair431" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[41]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[110] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[110]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair458" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[41]_i_1__2 
       (.I0(TX_PE_DATA[17]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[46]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair382" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[42]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[237] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[237]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[42]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[173] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[173]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair430" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[42]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[109] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[109]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[42]_i_1__2 
       (.I0(TX_PE_DATA[18]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[45]_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[43]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[236] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[236]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair404" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[43]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[172] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[172]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[43]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[108] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[108]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair459" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[43]_i_1__2 
       (.I0(TX_PE_DATA[19]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[44]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[44]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[235] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[235]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[44]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[171] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[171]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair432" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[44]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[107] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[107]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[44]_i_1__2 
       (.I0(TX_PE_DATA[20]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[43]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair482" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[45]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[234] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[234]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair405" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[45]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[170] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[170]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[45]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[106] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[106]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair460" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[45]_i_1__2 
       (.I0(TX_PE_DATA[21]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[42]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[46]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[233] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[233]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[46]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[169] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[169]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair433" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[46]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[105] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[105]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[46]_i_1__2 
       (.I0(TX_PE_DATA[22]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[41]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair483" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[47]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[232] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[232]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair406" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[47]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[168] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[168]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[47]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[104] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[104]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair461" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[47]_i_1__2 
       (.I0(TX_PE_DATA[23]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[40]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[48]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[247] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[247]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[48]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[183] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[183]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair434" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[48]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[119] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[119]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[48]_i_1__2 
       (.I0(TX_PE_DATA[8]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[55]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair484" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[49]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[246] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[246]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair407" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[49]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[182] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[182]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[49]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[118] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[118]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair462" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[49]_i_1__2 
       (.I0(TX_PE_DATA[9]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[54]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair379" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[4]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[195] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[195]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[4]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[131] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[131]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[4]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[67] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[67]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[4]_i_1__2 
       (.I0(TX_PE_DATA[60]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[50]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[245] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[245]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[50]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[181] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[181]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair435" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[50]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[117] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[117]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[50]_i_1__2 
       (.I0(TX_PE_DATA[10]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[53]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair485" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[51]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[244] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[244]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair408" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[51]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[180] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[180]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[51]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[116] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[116]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair463" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[51]_i_1__2 
       (.I0(TX_PE_DATA[11]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[52]_0 ));
  LUT6 #(
    .INIT(64'hAAA8A8A8A8A8A8A8)) 
    \TX_DATA[53]_i_1__2 
       (.I0(\TX_DATA_reg[53] ),
        .I1(wait_for_lane_up_r),
        .I2(channel_bond_r),
        .I3(TX_PE_DATA[13]),
        .I4(\TX_DATA_reg[61] ),
        .I5(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .O(wait_for_lane_up_r_reg));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[56]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[255] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[255]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[56]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[191] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[191]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair436" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[56]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[127] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[127]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[56]_i_1__2 
       (.I0(TX_PE_DATA[0]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[63]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair486" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[57]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[254] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[254]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair409" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[57]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[190] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[190]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[57]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[126] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[126]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair464" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[57]_i_1__2 
       (.I0(TX_PE_DATA[1]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[62]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[58]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[253] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[253]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[58]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[189] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[189]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair437" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[58]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[125] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[125]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[58]_i_1__2 
       (.I0(TX_PE_DATA[2]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[61]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[59]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[252] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[252]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[59]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[188] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[188]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[59]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[124] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[124]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[59]_i_1__2 
       (.I0(TX_PE_DATA[3]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[60]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair466" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[5]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[194] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[194]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair385" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[5]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[130] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[130]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair413" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[5]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[66] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[66]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair440" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[5]_i_1__2 
       (.I0(TX_PE_DATA[61]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[2]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair370" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[60]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[251] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[251]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair372" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[60]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[187] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[187]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair374" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[60]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[123] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[123]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair376" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[60]_i_1__2 
       (.I0(TX_PE_DATA[4]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[59]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair371" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[61]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[250] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[250]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[61]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[186] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[186]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[61]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[122] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[122]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[61]_i_1__2 
       (.I0(TX_PE_DATA[5]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[58]_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[62]_i_2 
       (.I0(\TX_PE_DATA_reg_n_0_[249] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[249]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair373" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[62]_i_2__0 
       (.I0(\TX_PE_DATA_reg_n_0_[185] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[185]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair375" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[62]_i_2__1 
       (.I0(\TX_PE_DATA_reg_n_0_[121] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[121]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair377" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[62]_i_2__2 
       (.I0(TX_PE_DATA[6]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[57]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair487" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[63]_i_2 
       (.I0(\TX_PE_DATA_reg_n_0_[248] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[248]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair410" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[63]_i_2__0 
       (.I0(\TX_PE_DATA_reg_n_0_[184] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[184]_0 ));
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[63]_i_2__1 
       (.I0(\TX_PE_DATA_reg_n_0_[120] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[120]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair465" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[63]_i_2__2 
       (.I0(TX_PE_DATA[7]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[56]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[6]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[193] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[193]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[6]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[129] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[129]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[6]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[65] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[65]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[6]_i_1__2 
       (.I0(TX_PE_DATA[62]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair467" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[7]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[192] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[192]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair386" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[7]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[128] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[128]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair414" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[7]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[64] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[64]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair441" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[7]_i_1__2 
       (.I0(TX_PE_DATA[63]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[8]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[207] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[207]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[8]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[143] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[143]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[8]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[79] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[79]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[8]_i_1__2 
       (.I0(TX_PE_DATA[48]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair468" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[9]_i_1 
       (.I0(\TX_PE_DATA_reg_n_0_[206] ),
        .I1(channel_up_tx_if),
        .I2(\TX_PE_DATA_V_reg[0]_0 ),
        .I3(rst_pma_init_usrclk_0),
        .O(\TX_PE_DATA_reg[206]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair387" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[9]_i_1__0 
       (.I0(\TX_PE_DATA_reg_n_0_[142] ),
        .I1(\TX_DATA_reg[43] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .I3(rst_pma_init_usrclk_1),
        .O(\TX_PE_DATA_reg[142]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair415" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[9]_i_1__1 
       (.I0(\TX_PE_DATA_reg_n_0_[78] ),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk_2),
        .O(\TX_PE_DATA_reg[78]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair442" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    \TX_DATA[9]_i_1__2 
       (.I0(TX_PE_DATA[49]),
        .I1(\TX_DATA_reg[61] ),
        .I2(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .I3(rst_pma_init_usrclk),
        .O(\TX_PE_DATA_reg[14]_0 ));
  (* ORIG_CELL_NAME = "TX_PE_DATA_V_reg[0]" *) 
  FDRE \TX_PE_DATA_V_reg[0] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_v_d),
        .Q(\TX_PE_DATA_V_reg[0]_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "TX_PE_DATA_V_reg[0]" *) 
  FDRE \TX_PE_DATA_V_reg[0]_rep 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_v_d),
        .Q(\TX_PE_DATA_V_reg[0]_rep_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "TX_PE_DATA_V_reg[0]" *) 
  FDRE \TX_PE_DATA_V_reg[0]_rep__0 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_v_d),
        .Q(\TX_PE_DATA_V_reg[0]_rep__0_0 ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[0] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[0]),
        .Q(TX_PE_DATA[63]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[100] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[100]),
        .Q(\TX_PE_DATA_reg_n_0_[100] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[101] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[101]),
        .Q(\TX_PE_DATA_reg_n_0_[101] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[102] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[102]),
        .Q(\TX_PE_DATA_reg_n_0_[102] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[103] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[103]),
        .Q(\TX_PE_DATA_reg_n_0_[103] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[104] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[104]),
        .Q(\TX_PE_DATA_reg_n_0_[104] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[105] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[105]),
        .Q(\TX_PE_DATA_reg_n_0_[105] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[106] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[106]),
        .Q(\TX_PE_DATA_reg_n_0_[106] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[107] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[107]),
        .Q(\TX_PE_DATA_reg_n_0_[107] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[108] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[108]),
        .Q(\TX_PE_DATA_reg_n_0_[108] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[109] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[109]),
        .Q(\TX_PE_DATA_reg_n_0_[109] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[10] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[10]),
        .Q(TX_PE_DATA[53]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[110] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[110]),
        .Q(\TX_PE_DATA_reg_n_0_[110] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[111] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[111]),
        .Q(\TX_PE_DATA_reg_n_0_[111] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[112] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[112]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[113] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[113]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[114] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[114]),
        .Q(Q[9]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[115] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[115]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[116] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[116]),
        .Q(\TX_PE_DATA_reg_n_0_[116] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[117] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[117]),
        .Q(\TX_PE_DATA_reg_n_0_[117] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[118] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[118]),
        .Q(\TX_PE_DATA_reg_n_0_[118] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[119] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[119]),
        .Q(\TX_PE_DATA_reg_n_0_[119] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[11] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[11]),
        .Q(TX_PE_DATA[52]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[120] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[120]),
        .Q(\TX_PE_DATA_reg_n_0_[120] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[121] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[121]),
        .Q(\TX_PE_DATA_reg_n_0_[121] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[122] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[122]),
        .Q(\TX_PE_DATA_reg_n_0_[122] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[123] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[123]),
        .Q(\TX_PE_DATA_reg_n_0_[123] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[124] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[124]),
        .Q(\TX_PE_DATA_reg_n_0_[124] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[125] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[125]),
        .Q(\TX_PE_DATA_reg_n_0_[125] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[126] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[126]),
        .Q(\TX_PE_DATA_reg_n_0_[126] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[127] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[127]),
        .Q(\TX_PE_DATA_reg_n_0_[127] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[128] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[128]),
        .Q(\TX_PE_DATA_reg_n_0_[128] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[129] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[129]),
        .Q(\TX_PE_DATA_reg_n_0_[129] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[12] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[12]),
        .Q(TX_PE_DATA[51]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[130] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[130]),
        .Q(\TX_PE_DATA_reg_n_0_[130] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[131] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[131]),
        .Q(\TX_PE_DATA_reg_n_0_[131] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[132] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[132]),
        .Q(\TX_PE_DATA_reg_n_0_[132] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[133] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[133]),
        .Q(\TX_PE_DATA_reg_n_0_[133] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[134] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[134]),
        .Q(\TX_PE_DATA_reg_n_0_[134] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[135] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[135]),
        .Q(\TX_PE_DATA_reg_n_0_[135] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[136] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[136]),
        .Q(\TX_PE_DATA_reg_n_0_[136] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[137] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[137]),
        .Q(\TX_PE_DATA_reg_n_0_[137] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[138] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[138]),
        .Q(\TX_PE_DATA_reg_n_0_[138] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[139] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[139]),
        .Q(\TX_PE_DATA_reg_n_0_[139] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[13] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[13]),
        .Q(TX_PE_DATA[50]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[140] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[140]),
        .Q(\TX_PE_DATA_reg_n_0_[140] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[141] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[141]),
        .Q(\TX_PE_DATA_reg_n_0_[141] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[142] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[142]),
        .Q(\TX_PE_DATA_reg_n_0_[142] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[143] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[143]),
        .Q(\TX_PE_DATA_reg_n_0_[143] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[144] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[144]),
        .Q(\TX_PE_DATA_reg_n_0_[144] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[145] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[145]),
        .Q(\TX_PE_DATA_reg_n_0_[145] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[146] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[146]),
        .Q(\TX_PE_DATA_reg_n_0_[146] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[147] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[147]),
        .Q(\TX_PE_DATA_reg_n_0_[147] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[148] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[148]),
        .Q(\TX_PE_DATA_reg_n_0_[148] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[149] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[149]),
        .Q(\TX_PE_DATA_reg_n_0_[149] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[14] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[14]),
        .Q(TX_PE_DATA[49]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[150] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[150]),
        .Q(\TX_PE_DATA_reg_n_0_[150] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[151] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[151]),
        .Q(\TX_PE_DATA_reg_n_0_[151] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[152] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[152]),
        .Q(\TX_PE_DATA_reg_n_0_[152] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[153] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[153]),
        .Q(\TX_PE_DATA_reg_n_0_[153] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[154] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[154]),
        .Q(\TX_PE_DATA_reg_n_0_[154] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[155] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[155]),
        .Q(\TX_PE_DATA_reg_n_0_[155] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[156] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[156]),
        .Q(\TX_PE_DATA_reg_n_0_[156] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[157] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[157]),
        .Q(\TX_PE_DATA_reg_n_0_[157] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[158] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[158]),
        .Q(\TX_PE_DATA_reg_n_0_[158] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[159] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[159]),
        .Q(\TX_PE_DATA_reg_n_0_[159] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[15] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[15]),
        .Q(TX_PE_DATA[48]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[160] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[160]),
        .Q(\TX_PE_DATA_reg_n_0_[160] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[161] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[161]),
        .Q(\TX_PE_DATA_reg_n_0_[161] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[162] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[162]),
        .Q(\TX_PE_DATA_reg_n_0_[162] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[163] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[163]),
        .Q(\TX_PE_DATA_reg_n_0_[163] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[164] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[164]),
        .Q(\TX_PE_DATA_reg_n_0_[164] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[165] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[165]),
        .Q(\TX_PE_DATA_reg_n_0_[165] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[166] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[166]),
        .Q(\TX_PE_DATA_reg_n_0_[166] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[167] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[167]),
        .Q(\TX_PE_DATA_reg_n_0_[167] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[168] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[168]),
        .Q(\TX_PE_DATA_reg_n_0_[168] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[169] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[169]),
        .Q(\TX_PE_DATA_reg_n_0_[169] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[16] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[16]),
        .Q(TX_PE_DATA[47]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[170] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[170]),
        .Q(\TX_PE_DATA_reg_n_0_[170] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[171] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[171]),
        .Q(\TX_PE_DATA_reg_n_0_[171] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[172] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[172]),
        .Q(\TX_PE_DATA_reg_n_0_[172] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[173] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[173]),
        .Q(\TX_PE_DATA_reg_n_0_[173] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[174] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[174]),
        .Q(\TX_PE_DATA_reg_n_0_[174] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[175] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[175]),
        .Q(\TX_PE_DATA_reg_n_0_[175] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[176] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[176]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[177] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[177]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[178] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[178]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[179] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[179]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[17] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[17]),
        .Q(TX_PE_DATA[46]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[180] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[180]),
        .Q(\TX_PE_DATA_reg_n_0_[180] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[181] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[181]),
        .Q(\TX_PE_DATA_reg_n_0_[181] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[182] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[182]),
        .Q(\TX_PE_DATA_reg_n_0_[182] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[183] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[183]),
        .Q(\TX_PE_DATA_reg_n_0_[183] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[184] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[184]),
        .Q(\TX_PE_DATA_reg_n_0_[184] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[185] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[185]),
        .Q(\TX_PE_DATA_reg_n_0_[185] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[186] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[186]),
        .Q(\TX_PE_DATA_reg_n_0_[186] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[187] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[187]),
        .Q(\TX_PE_DATA_reg_n_0_[187] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[188] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[188]),
        .Q(\TX_PE_DATA_reg_n_0_[188] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[189] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[189]),
        .Q(\TX_PE_DATA_reg_n_0_[189] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[18] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[18]),
        .Q(TX_PE_DATA[45]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[190] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[190]),
        .Q(\TX_PE_DATA_reg_n_0_[190] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[191] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[191]),
        .Q(\TX_PE_DATA_reg_n_0_[191] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[192] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[192]),
        .Q(\TX_PE_DATA_reg_n_0_[192] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[193] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[193]),
        .Q(\TX_PE_DATA_reg_n_0_[193] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[194] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[194]),
        .Q(\TX_PE_DATA_reg_n_0_[194] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[195] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[195]),
        .Q(\TX_PE_DATA_reg_n_0_[195] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[196] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[196]),
        .Q(\TX_PE_DATA_reg_n_0_[196] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[197] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[197]),
        .Q(\TX_PE_DATA_reg_n_0_[197] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[198] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[198]),
        .Q(\TX_PE_DATA_reg_n_0_[198] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[199] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[199]),
        .Q(\TX_PE_DATA_reg_n_0_[199] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[19] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[19]),
        .Q(TX_PE_DATA[44]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[1] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[1]),
        .Q(TX_PE_DATA[62]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[200] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[200]),
        .Q(\TX_PE_DATA_reg_n_0_[200] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[201] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[201]),
        .Q(\TX_PE_DATA_reg_n_0_[201] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[202] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[202]),
        .Q(\TX_PE_DATA_reg_n_0_[202] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[203] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[203]),
        .Q(\TX_PE_DATA_reg_n_0_[203] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[204] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[204]),
        .Q(\TX_PE_DATA_reg_n_0_[204] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[205] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[205]),
        .Q(\TX_PE_DATA_reg_n_0_[205] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[206] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[206]),
        .Q(\TX_PE_DATA_reg_n_0_[206] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[207] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[207]),
        .Q(\TX_PE_DATA_reg_n_0_[207] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[208] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[208]),
        .Q(\TX_PE_DATA_reg_n_0_[208] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[209] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[209]),
        .Q(\TX_PE_DATA_reg_n_0_[209] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[20] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[20]),
        .Q(TX_PE_DATA[43]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[210] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[210]),
        .Q(\TX_PE_DATA_reg_n_0_[210] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[211] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[211]),
        .Q(\TX_PE_DATA_reg_n_0_[211] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[212] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[212]),
        .Q(\TX_PE_DATA_reg_n_0_[212] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[213] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[213]),
        .Q(\TX_PE_DATA_reg_n_0_[213] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[214] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[214]),
        .Q(\TX_PE_DATA_reg_n_0_[214] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[215] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[215]),
        .Q(\TX_PE_DATA_reg_n_0_[215] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[216] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[216]),
        .Q(\TX_PE_DATA_reg_n_0_[216] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[217] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[217]),
        .Q(\TX_PE_DATA_reg_n_0_[217] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[218] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[218]),
        .Q(\TX_PE_DATA_reg_n_0_[218] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[219] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[219]),
        .Q(\TX_PE_DATA_reg_n_0_[219] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[21] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[21]),
        .Q(TX_PE_DATA[42]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[220] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[220]),
        .Q(\TX_PE_DATA_reg_n_0_[220] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[221] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[221]),
        .Q(\TX_PE_DATA_reg_n_0_[221] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[222] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[222]),
        .Q(\TX_PE_DATA_reg_n_0_[222] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[223] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[223]),
        .Q(\TX_PE_DATA_reg_n_0_[223] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[224] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[224]),
        .Q(\TX_PE_DATA_reg_n_0_[224] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[225] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[225]),
        .Q(\TX_PE_DATA_reg_n_0_[225] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[226] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[226]),
        .Q(\TX_PE_DATA_reg_n_0_[226] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[227] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[227]),
        .Q(\TX_PE_DATA_reg_n_0_[227] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[228] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[228]),
        .Q(\TX_PE_DATA_reg_n_0_[228] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[229] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[229]),
        .Q(\TX_PE_DATA_reg_n_0_[229] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[22] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[22]),
        .Q(TX_PE_DATA[41]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[230] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[230]),
        .Q(\TX_PE_DATA_reg_n_0_[230] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[231] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[231]),
        .Q(\TX_PE_DATA_reg_n_0_[231] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[232] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[232]),
        .Q(\TX_PE_DATA_reg_n_0_[232] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[233] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[233]),
        .Q(\TX_PE_DATA_reg_n_0_[233] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[234] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[234]),
        .Q(\TX_PE_DATA_reg_n_0_[234] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[235] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[235]),
        .Q(\TX_PE_DATA_reg_n_0_[235] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[236] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[236]),
        .Q(\TX_PE_DATA_reg_n_0_[236] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[237] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[237]),
        .Q(\TX_PE_DATA_reg_n_0_[237] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[238] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[238]),
        .Q(\TX_PE_DATA_reg_n_0_[238] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[239] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[239]),
        .Q(\TX_PE_DATA_reg_n_0_[239] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[23] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[23]),
        .Q(TX_PE_DATA[40]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[240] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[240]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[241] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[241]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[242] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[242]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[243] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[243]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[244] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[244]),
        .Q(\TX_PE_DATA_reg_n_0_[244] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[245] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[245]),
        .Q(\TX_PE_DATA_reg_n_0_[245] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[246] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[246]),
        .Q(\TX_PE_DATA_reg_n_0_[246] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[247] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[247]),
        .Q(\TX_PE_DATA_reg_n_0_[247] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[248] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[248]),
        .Q(\TX_PE_DATA_reg_n_0_[248] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[249] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[249]),
        .Q(\TX_PE_DATA_reg_n_0_[249] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[24] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[24]),
        .Q(TX_PE_DATA[39]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[250] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[250]),
        .Q(\TX_PE_DATA_reg_n_0_[250] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[251] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[251]),
        .Q(\TX_PE_DATA_reg_n_0_[251] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[252] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[252]),
        .Q(\TX_PE_DATA_reg_n_0_[252] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[253] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[253]),
        .Q(\TX_PE_DATA_reg_n_0_[253] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[254] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[254]),
        .Q(\TX_PE_DATA_reg_n_0_[254] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[255] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[255]),
        .Q(\TX_PE_DATA_reg_n_0_[255] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[25] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[25]),
        .Q(TX_PE_DATA[38]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[26] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[26]),
        .Q(TX_PE_DATA[37]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[27] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[27]),
        .Q(TX_PE_DATA[36]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[28] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[28]),
        .Q(TX_PE_DATA[35]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[29] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[29]),
        .Q(TX_PE_DATA[34]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[2] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[2]),
        .Q(TX_PE_DATA[61]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[30] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[30]),
        .Q(TX_PE_DATA[33]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[31] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[31]),
        .Q(TX_PE_DATA[32]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[32] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[32]),
        .Q(TX_PE_DATA[31]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[33] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[33]),
        .Q(TX_PE_DATA[30]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[34] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[34]),
        .Q(TX_PE_DATA[29]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[35] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[35]),
        .Q(TX_PE_DATA[28]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[36] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[36]),
        .Q(TX_PE_DATA[27]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[37] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[37]),
        .Q(TX_PE_DATA[26]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[38] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[38]),
        .Q(TX_PE_DATA[25]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[39] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[39]),
        .Q(TX_PE_DATA[24]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[3] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[3]),
        .Q(TX_PE_DATA[60]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[40] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[40]),
        .Q(TX_PE_DATA[23]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[41] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[41]),
        .Q(TX_PE_DATA[22]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[42] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[42]),
        .Q(TX_PE_DATA[21]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[43] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[43]),
        .Q(TX_PE_DATA[20]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[44] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[44]),
        .Q(TX_PE_DATA[19]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[45] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[45]),
        .Q(TX_PE_DATA[18]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[46] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[46]),
        .Q(TX_PE_DATA[17]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[47] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[47]),
        .Q(TX_PE_DATA[16]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[48] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[48]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[49] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[49]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[4] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[4]),
        .Q(TX_PE_DATA[59]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[50] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[50]),
        .Q(TX_PE_DATA[13]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[51] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[51]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[52] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[52]),
        .Q(TX_PE_DATA[11]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[53] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[53]),
        .Q(TX_PE_DATA[10]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[54] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[54]),
        .Q(TX_PE_DATA[9]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[55] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[55]),
        .Q(TX_PE_DATA[8]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[56] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[56]),
        .Q(TX_PE_DATA[7]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[57] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[57]),
        .Q(TX_PE_DATA[6]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[58] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[58]),
        .Q(TX_PE_DATA[5]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[59] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[59]),
        .Q(TX_PE_DATA[4]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[5] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[5]),
        .Q(TX_PE_DATA[58]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[60] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[60]),
        .Q(TX_PE_DATA[3]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[61] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[61]),
        .Q(TX_PE_DATA[2]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[62] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[62]),
        .Q(TX_PE_DATA[1]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[63] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[63]),
        .Q(TX_PE_DATA[0]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[64] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[64]),
        .Q(\TX_PE_DATA_reg_n_0_[64] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[65] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[65]),
        .Q(\TX_PE_DATA_reg_n_0_[65] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[66] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[66]),
        .Q(\TX_PE_DATA_reg_n_0_[66] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[67] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[67]),
        .Q(\TX_PE_DATA_reg_n_0_[67] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[68] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[68]),
        .Q(\TX_PE_DATA_reg_n_0_[68] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[69] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[69]),
        .Q(\TX_PE_DATA_reg_n_0_[69] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[6] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[6]),
        .Q(TX_PE_DATA[57]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[70] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[70]),
        .Q(\TX_PE_DATA_reg_n_0_[70] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[71] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[71]),
        .Q(\TX_PE_DATA_reg_n_0_[71] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[72] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[72]),
        .Q(\TX_PE_DATA_reg_n_0_[72] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[73] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[73]),
        .Q(\TX_PE_DATA_reg_n_0_[73] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[74] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[74]),
        .Q(\TX_PE_DATA_reg_n_0_[74] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[75] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[75]),
        .Q(\TX_PE_DATA_reg_n_0_[75] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[76] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[76]),
        .Q(\TX_PE_DATA_reg_n_0_[76] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[77] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[77]),
        .Q(\TX_PE_DATA_reg_n_0_[77] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[78] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[78]),
        .Q(\TX_PE_DATA_reg_n_0_[78] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[79] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[79]),
        .Q(\TX_PE_DATA_reg_n_0_[79] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[7] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[7]),
        .Q(TX_PE_DATA[56]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[80] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[80]),
        .Q(\TX_PE_DATA_reg_n_0_[80] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[81] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[81]),
        .Q(\TX_PE_DATA_reg_n_0_[81] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[82] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[82]),
        .Q(\TX_PE_DATA_reg_n_0_[82] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[83] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[83]),
        .Q(\TX_PE_DATA_reg_n_0_[83] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[84] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[84]),
        .Q(\TX_PE_DATA_reg_n_0_[84] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[85] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[85]),
        .Q(\TX_PE_DATA_reg_n_0_[85] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[86] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[86]),
        .Q(\TX_PE_DATA_reg_n_0_[86] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[87] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[87]),
        .Q(\TX_PE_DATA_reg_n_0_[87] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[88] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[88]),
        .Q(\TX_PE_DATA_reg_n_0_[88] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[89] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[89]),
        .Q(\TX_PE_DATA_reg_n_0_[89] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[8] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[8]),
        .Q(TX_PE_DATA[55]),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[90] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[90]),
        .Q(\TX_PE_DATA_reg_n_0_[90] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[91] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[91]),
        .Q(\TX_PE_DATA_reg_n_0_[91] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[92] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[92]),
        .Q(\TX_PE_DATA_reg_n_0_[92] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[93] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[93]),
        .Q(\TX_PE_DATA_reg_n_0_[93] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[94] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[94]),
        .Q(\TX_PE_DATA_reg_n_0_[94] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[95] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[95]),
        .Q(\TX_PE_DATA_reg_n_0_[95] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[96] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[96]),
        .Q(\TX_PE_DATA_reg_n_0_[96] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[97] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[97]),
        .Q(\TX_PE_DATA_reg_n_0_[97] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[98] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[98]),
        .Q(\TX_PE_DATA_reg_n_0_[98] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[99] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[99]),
        .Q(\TX_PE_DATA_reg_n_0_[99] ),
        .R(1'b0));
  FDRE \TX_PE_DATA_reg[9] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(tx_pe_data_d[9]),
        .Q(TX_PE_DATA[54]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[0] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[0]),
        .Q(tx_pe_data_d[0]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[100] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[100]),
        .Q(tx_pe_data_d[100]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[101] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[101]),
        .Q(tx_pe_data_d[101]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[102] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[102]),
        .Q(tx_pe_data_d[102]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[103] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[103]),
        .Q(tx_pe_data_d[103]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[104] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[104]),
        .Q(tx_pe_data_d[104]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[105] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[105]),
        .Q(tx_pe_data_d[105]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[106] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[106]),
        .Q(tx_pe_data_d[106]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[107] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[107]),
        .Q(tx_pe_data_d[107]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[108] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[108]),
        .Q(tx_pe_data_d[108]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[109] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[109]),
        .Q(tx_pe_data_d[109]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[10] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[10]),
        .Q(tx_pe_data_d[10]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[110] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[110]),
        .Q(tx_pe_data_d[110]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[111] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[111]),
        .Q(tx_pe_data_d[111]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[112] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[112]),
        .Q(tx_pe_data_d[112]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[113] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[113]),
        .Q(tx_pe_data_d[113]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[114] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[114]),
        .Q(tx_pe_data_d[114]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[115] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[115]),
        .Q(tx_pe_data_d[115]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[116] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[116]),
        .Q(tx_pe_data_d[116]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[117] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[117]),
        .Q(tx_pe_data_d[117]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[118] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[118]),
        .Q(tx_pe_data_d[118]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[119] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[119]),
        .Q(tx_pe_data_d[119]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[11] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[11]),
        .Q(tx_pe_data_d[11]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[120] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[120]),
        .Q(tx_pe_data_d[120]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[121] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[121]),
        .Q(tx_pe_data_d[121]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[122] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[122]),
        .Q(tx_pe_data_d[122]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[123] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[123]),
        .Q(tx_pe_data_d[123]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[124] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[124]),
        .Q(tx_pe_data_d[124]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[125] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[125]),
        .Q(tx_pe_data_d[125]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[126] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[126]),
        .Q(tx_pe_data_d[126]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[127] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[127]),
        .Q(tx_pe_data_d[127]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[128] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[128]),
        .Q(tx_pe_data_d[128]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[129] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[129]),
        .Q(tx_pe_data_d[129]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[12] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[12]),
        .Q(tx_pe_data_d[12]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[130] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[130]),
        .Q(tx_pe_data_d[130]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[131] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[131]),
        .Q(tx_pe_data_d[131]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[132] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[132]),
        .Q(tx_pe_data_d[132]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[133] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[133]),
        .Q(tx_pe_data_d[133]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[134] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[134]),
        .Q(tx_pe_data_d[134]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[135] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[135]),
        .Q(tx_pe_data_d[135]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[136] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[136]),
        .Q(tx_pe_data_d[136]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[137] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[137]),
        .Q(tx_pe_data_d[137]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[138] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[138]),
        .Q(tx_pe_data_d[138]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[139] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[139]),
        .Q(tx_pe_data_d[139]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[13] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[13]),
        .Q(tx_pe_data_d[13]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[140] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[140]),
        .Q(tx_pe_data_d[140]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[141] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[141]),
        .Q(tx_pe_data_d[141]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[142] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[142]),
        .Q(tx_pe_data_d[142]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[143] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[143]),
        .Q(tx_pe_data_d[143]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[144] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[144]),
        .Q(tx_pe_data_d[144]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[145] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[145]),
        .Q(tx_pe_data_d[145]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[146] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[146]),
        .Q(tx_pe_data_d[146]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[147] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[147]),
        .Q(tx_pe_data_d[147]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[148] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[148]),
        .Q(tx_pe_data_d[148]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[149] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[149]),
        .Q(tx_pe_data_d[149]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[14] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[14]),
        .Q(tx_pe_data_d[14]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[150] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[150]),
        .Q(tx_pe_data_d[150]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[151] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[151]),
        .Q(tx_pe_data_d[151]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[152] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[152]),
        .Q(tx_pe_data_d[152]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[153] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[153]),
        .Q(tx_pe_data_d[153]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[154] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[154]),
        .Q(tx_pe_data_d[154]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[155] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[155]),
        .Q(tx_pe_data_d[155]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[156] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[156]),
        .Q(tx_pe_data_d[156]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[157] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[157]),
        .Q(tx_pe_data_d[157]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[158] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[158]),
        .Q(tx_pe_data_d[158]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[159] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[159]),
        .Q(tx_pe_data_d[159]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[15] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[15]),
        .Q(tx_pe_data_d[15]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[160] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[160]),
        .Q(tx_pe_data_d[160]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[161] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[161]),
        .Q(tx_pe_data_d[161]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[162] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[162]),
        .Q(tx_pe_data_d[162]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[163] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[163]),
        .Q(tx_pe_data_d[163]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[164] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[164]),
        .Q(tx_pe_data_d[164]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[165] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[165]),
        .Q(tx_pe_data_d[165]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[166] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[166]),
        .Q(tx_pe_data_d[166]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[167] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[167]),
        .Q(tx_pe_data_d[167]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[168] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[168]),
        .Q(tx_pe_data_d[168]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[169] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[169]),
        .Q(tx_pe_data_d[169]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[16] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[16]),
        .Q(tx_pe_data_d[16]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[170] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[170]),
        .Q(tx_pe_data_d[170]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[171] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[171]),
        .Q(tx_pe_data_d[171]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[172] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[172]),
        .Q(tx_pe_data_d[172]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[173] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[173]),
        .Q(tx_pe_data_d[173]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[174] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[174]),
        .Q(tx_pe_data_d[174]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[175] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[175]),
        .Q(tx_pe_data_d[175]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[176] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[176]),
        .Q(tx_pe_data_d[176]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[177] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[177]),
        .Q(tx_pe_data_d[177]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[178] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[178]),
        .Q(tx_pe_data_d[178]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[179] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[179]),
        .Q(tx_pe_data_d[179]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[17] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[17]),
        .Q(tx_pe_data_d[17]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[180] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[180]),
        .Q(tx_pe_data_d[180]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[181] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[181]),
        .Q(tx_pe_data_d[181]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[182] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[182]),
        .Q(tx_pe_data_d[182]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[183] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[183]),
        .Q(tx_pe_data_d[183]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[184] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[184]),
        .Q(tx_pe_data_d[184]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[185] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[185]),
        .Q(tx_pe_data_d[185]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[186] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[186]),
        .Q(tx_pe_data_d[186]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[187] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[187]),
        .Q(tx_pe_data_d[187]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[188] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[188]),
        .Q(tx_pe_data_d[188]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[189] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[189]),
        .Q(tx_pe_data_d[189]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[18] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[18]),
        .Q(tx_pe_data_d[18]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[190] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[190]),
        .Q(tx_pe_data_d[190]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[191] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[191]),
        .Q(tx_pe_data_d[191]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[192] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[192]),
        .Q(tx_pe_data_d[192]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[193] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[193]),
        .Q(tx_pe_data_d[193]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[194] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[194]),
        .Q(tx_pe_data_d[194]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[195] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[195]),
        .Q(tx_pe_data_d[195]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[196] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[196]),
        .Q(tx_pe_data_d[196]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[197] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[197]),
        .Q(tx_pe_data_d[197]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[198] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[198]),
        .Q(tx_pe_data_d[198]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[199] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[199]),
        .Q(tx_pe_data_d[199]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[19] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[19]),
        .Q(tx_pe_data_d[19]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[1] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[1]),
        .Q(tx_pe_data_d[1]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[200] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[200]),
        .Q(tx_pe_data_d[200]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[201] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[201]),
        .Q(tx_pe_data_d[201]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[202] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[202]),
        .Q(tx_pe_data_d[202]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[203] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[203]),
        .Q(tx_pe_data_d[203]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[204] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[204]),
        .Q(tx_pe_data_d[204]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[205] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[205]),
        .Q(tx_pe_data_d[205]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[206] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[206]),
        .Q(tx_pe_data_d[206]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[207] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[207]),
        .Q(tx_pe_data_d[207]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[208] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[208]),
        .Q(tx_pe_data_d[208]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[209] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[209]),
        .Q(tx_pe_data_d[209]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[20] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[20]),
        .Q(tx_pe_data_d[20]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[210] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[210]),
        .Q(tx_pe_data_d[210]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[211] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[211]),
        .Q(tx_pe_data_d[211]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[212] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[212]),
        .Q(tx_pe_data_d[212]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[213] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[213]),
        .Q(tx_pe_data_d[213]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[214] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[214]),
        .Q(tx_pe_data_d[214]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[215] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[215]),
        .Q(tx_pe_data_d[215]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[216] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[216]),
        .Q(tx_pe_data_d[216]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[217] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[217]),
        .Q(tx_pe_data_d[217]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[218] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[218]),
        .Q(tx_pe_data_d[218]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[219] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[219]),
        .Q(tx_pe_data_d[219]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[21] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[21]),
        .Q(tx_pe_data_d[21]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[220] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[220]),
        .Q(tx_pe_data_d[220]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[221] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[221]),
        .Q(tx_pe_data_d[221]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[222] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[222]),
        .Q(tx_pe_data_d[222]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[223] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[223]),
        .Q(tx_pe_data_d[223]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[224] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[224]),
        .Q(tx_pe_data_d[224]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[225] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[225]),
        .Q(tx_pe_data_d[225]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[226] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[226]),
        .Q(tx_pe_data_d[226]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[227] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[227]),
        .Q(tx_pe_data_d[227]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[228] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[228]),
        .Q(tx_pe_data_d[228]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[229] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[229]),
        .Q(tx_pe_data_d[229]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[22] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[22]),
        .Q(tx_pe_data_d[22]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[230] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[230]),
        .Q(tx_pe_data_d[230]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[231] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[231]),
        .Q(tx_pe_data_d[231]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[232] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[232]),
        .Q(tx_pe_data_d[232]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[233] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[233]),
        .Q(tx_pe_data_d[233]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[234] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[234]),
        .Q(tx_pe_data_d[234]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[235] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[235]),
        .Q(tx_pe_data_d[235]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[236] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[236]),
        .Q(tx_pe_data_d[236]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[237] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[237]),
        .Q(tx_pe_data_d[237]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[238] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[238]),
        .Q(tx_pe_data_d[238]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[239] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[239]),
        .Q(tx_pe_data_d[239]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[23] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[23]),
        .Q(tx_pe_data_d[23]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[240] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[240]),
        .Q(tx_pe_data_d[240]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[241] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[241]),
        .Q(tx_pe_data_d[241]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[242] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[242]),
        .Q(tx_pe_data_d[242]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[243] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[243]),
        .Q(tx_pe_data_d[243]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[244] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[244]),
        .Q(tx_pe_data_d[244]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[245] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[245]),
        .Q(tx_pe_data_d[245]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[246] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[246]),
        .Q(tx_pe_data_d[246]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[247] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[247]),
        .Q(tx_pe_data_d[247]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[248] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[248]),
        .Q(tx_pe_data_d[248]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[249] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[249]),
        .Q(tx_pe_data_d[249]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[24] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[24]),
        .Q(tx_pe_data_d[24]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[250] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[250]),
        .Q(tx_pe_data_d[250]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[251] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[251]),
        .Q(tx_pe_data_d[251]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[252] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[252]),
        .Q(tx_pe_data_d[252]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[253] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[253]),
        .Q(tx_pe_data_d[253]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[254] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[254]),
        .Q(tx_pe_data_d[254]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[255] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[255]),
        .Q(tx_pe_data_d[255]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[25] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[25]),
        .Q(tx_pe_data_d[25]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[26] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[26]),
        .Q(tx_pe_data_d[26]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[27] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[27]),
        .Q(tx_pe_data_d[27]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[28] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[28]),
        .Q(tx_pe_data_d[28]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[29] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[29]),
        .Q(tx_pe_data_d[29]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[2] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[2]),
        .Q(tx_pe_data_d[2]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[30] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[30]),
        .Q(tx_pe_data_d[30]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[31] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[31]),
        .Q(tx_pe_data_d[31]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[32] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[32]),
        .Q(tx_pe_data_d[32]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[33] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[33]),
        .Q(tx_pe_data_d[33]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[34] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[34]),
        .Q(tx_pe_data_d[34]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[35] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[35]),
        .Q(tx_pe_data_d[35]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[36] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[36]),
        .Q(tx_pe_data_d[36]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[37] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[37]),
        .Q(tx_pe_data_d[37]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[38] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[38]),
        .Q(tx_pe_data_d[38]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[39] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[39]),
        .Q(tx_pe_data_d[39]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[3] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[3]),
        .Q(tx_pe_data_d[3]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[40] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[40]),
        .Q(tx_pe_data_d[40]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[41] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[41]),
        .Q(tx_pe_data_d[41]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[42] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[42]),
        .Q(tx_pe_data_d[42]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[43] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[43]),
        .Q(tx_pe_data_d[43]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[44] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[44]),
        .Q(tx_pe_data_d[44]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[45] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[45]),
        .Q(tx_pe_data_d[45]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[46] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[46]),
        .Q(tx_pe_data_d[46]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[47] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[47]),
        .Q(tx_pe_data_d[47]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[48] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[48]),
        .Q(tx_pe_data_d[48]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[49] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[49]),
        .Q(tx_pe_data_d[49]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[4] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[4]),
        .Q(tx_pe_data_d[4]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[50] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[50]),
        .Q(tx_pe_data_d[50]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[51] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[51]),
        .Q(tx_pe_data_d[51]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[52] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[52]),
        .Q(tx_pe_data_d[52]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[53] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[53]),
        .Q(tx_pe_data_d[53]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[54] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[54]),
        .Q(tx_pe_data_d[54]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[55] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[55]),
        .Q(tx_pe_data_d[55]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[56] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[56]),
        .Q(tx_pe_data_d[56]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[57] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[57]),
        .Q(tx_pe_data_d[57]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[58] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[58]),
        .Q(tx_pe_data_d[58]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[59] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[59]),
        .Q(tx_pe_data_d[59]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[5] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[5]),
        .Q(tx_pe_data_d[5]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[60] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[60]),
        .Q(tx_pe_data_d[60]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[61] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[61]),
        .Q(tx_pe_data_d[61]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[62] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[62]),
        .Q(tx_pe_data_d[62]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[63] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[63]),
        .Q(tx_pe_data_d[63]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[64] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[64]),
        .Q(tx_pe_data_d[64]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[65] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[65]),
        .Q(tx_pe_data_d[65]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[66] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[66]),
        .Q(tx_pe_data_d[66]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[67] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[67]),
        .Q(tx_pe_data_d[67]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[68] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[68]),
        .Q(tx_pe_data_d[68]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[69] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[69]),
        .Q(tx_pe_data_d[69]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[6] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[6]),
        .Q(tx_pe_data_d[6]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[70] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[70]),
        .Q(tx_pe_data_d[70]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[71] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[71]),
        .Q(tx_pe_data_d[71]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[72] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[72]),
        .Q(tx_pe_data_d[72]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[73] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[73]),
        .Q(tx_pe_data_d[73]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[74] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[74]),
        .Q(tx_pe_data_d[74]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[75] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[75]),
        .Q(tx_pe_data_d[75]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[76] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[76]),
        .Q(tx_pe_data_d[76]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[77] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[77]),
        .Q(tx_pe_data_d[77]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[78] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[78]),
        .Q(tx_pe_data_d[78]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[79] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[79]),
        .Q(tx_pe_data_d[79]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[7] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[7]),
        .Q(tx_pe_data_d[7]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[80] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[80]),
        .Q(tx_pe_data_d[80]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[81] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[81]),
        .Q(tx_pe_data_d[81]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[82] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[82]),
        .Q(tx_pe_data_d[82]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[83] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[83]),
        .Q(tx_pe_data_d[83]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[84] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[84]),
        .Q(tx_pe_data_d[84]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[85] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[85]),
        .Q(tx_pe_data_d[85]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[86] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[86]),
        .Q(tx_pe_data_d[86]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[87] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[87]),
        .Q(tx_pe_data_d[87]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[88] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[88]),
        .Q(tx_pe_data_d[88]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[89] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[89]),
        .Q(tx_pe_data_d[89]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[8] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[8]),
        .Q(tx_pe_data_d[8]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[90] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[90]),
        .Q(tx_pe_data_d[90]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[91] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[91]),
        .Q(tx_pe_data_d[91]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[92] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[92]),
        .Q(tx_pe_data_d[92]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[93] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[93]),
        .Q(tx_pe_data_d[93]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[94] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[94]),
        .Q(tx_pe_data_d[94]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[95] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[95]),
        .Q(tx_pe_data_d[95]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[96] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[96]),
        .Q(tx_pe_data_d[96]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[97] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[97]),
        .Q(tx_pe_data_d[97]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[98] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[98]),
        .Q(tx_pe_data_d[98]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[99] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[99]),
        .Q(tx_pe_data_d[99]),
        .R(1'b0));
  FDRE \tx_pe_data_d_reg[9] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(s_axi_tx_tdata[9]),
        .Q(tx_pe_data_d[9]),
        .R(1'b0));
  FDRE \tx_pe_data_v_d_reg[0] 
       (.C(\TX_PE_DATA_V_reg[0]_1 ),
        .CE(1'b1),
        .D(ll_valid_c),
        .Q(tx_pe_data_v_d),
        .R(1'b0));
endmodule

module board_aurora_64b66b_0_2_WRAPPER
   (gtwiz_reset_qpll0reset_out,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    rx_header_err_i_3,
    rx_lossofsync_i_3,
    ch_bond_done_i,
    rx_header_err_i_2,
    rx_lossofsync_i_2,
    rx_header_err_i_1,
    rx_lossofsync_i_1,
    rx_header_err_i_0,
    rx_lossofsync_i_0,
    gt_pll_lock,
    link_reset_out,
    stg3_reg,
    RX_NEG_OUT_reg_0,
    RX_NEG_OUT_LANE1_reg_0,
    RX_NEG_OUT_LANE2_reg_0,
    RX_NEG_OUT_LANE3_reg_0,
    txdatavalid_i,
    stg5_reg,
    txdatavalid_symgen_i,
    stg5_reg_0,
    txdatavalid_symgen_i_lane1,
    stg5_reg_1,
    txdatavalid_symgen_i_lane2,
    stg5_reg_2,
    txdatavalid_symgen_i_lane3,
    rxdatavalid_to_lanes_i,
    \fifo_dout_reg[68] ,
    Q,
    \fifo_dout_reg[65] ,
    \fifo_dout_reg[65]_0 ,
    \fifo_dout_reg[65]_1 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    pdu_ok_c,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ,
    hold_reg_r_reg,
    hold_reg_r_reg_0,
    hold_reg_r_reg_1,
    hold_reg_r_reg_2,
    gt_qplllock_quad1_out,
    rst_in_out_reg,
    init_clk,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_rxcdrovrden_in,
    stg4_reg,
    in0,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    en_chan_sync_i,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_1,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_2,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_3,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_4,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_5,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_6,
    SR,
    rxreset_for_lanes,
    rst_pma_init_usrclk,
    rst_pma_init_usrclk_0,
    rst_pma_init_usrclk_1,
    rst_pma_init_usrclk_2,
    channel_up_tx_if,
    hard_err_usr_reg_0,
    s_axi_tx_tready_reg,
    do_cc_r,
    D,
    \tx_hdr_lane1_r_reg[1]_0 ,
    \tx_hdr_lane2_r_reg[1]_0 ,
    \tx_hdr_lane3_r_reg[1]_0 ,
    \TXDATA_IN_REG_reg[63]_0 ,
    \TXDATA_IN_REG_LANE1_reg[63]_0 ,
    \TXDATA_IN_REG_LANE2_reg[63]_0 ,
    \TXDATA_IN_REG_LANE3_reg[63]_0 ,
    mmcm_not_locked_out2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [3:0]gt_powergood;
  output [0:3]txn;
  output [0:3]txp;
  output tx_out_clk;
  output rx_header_err_i_3;
  output rx_lossofsync_i_3;
  output [0:3]ch_bond_done_i;
  output rx_header_err_i_2;
  output rx_lossofsync_i_2;
  output rx_header_err_i_1;
  output rx_lossofsync_i_1;
  output rx_header_err_i_0;
  output rx_lossofsync_i_0;
  output gt_pll_lock;
  output link_reset_out;
  output stg3_reg;
  output RX_NEG_OUT_reg_0;
  output RX_NEG_OUT_LANE1_reg_0;
  output RX_NEG_OUT_LANE2_reg_0;
  output RX_NEG_OUT_LANE3_reg_0;
  output txdatavalid_i;
  output stg5_reg;
  output txdatavalid_symgen_i;
  output stg5_reg_0;
  output txdatavalid_symgen_i_lane1;
  output stg5_reg_1;
  output txdatavalid_symgen_i_lane2;
  output stg5_reg_2;
  output txdatavalid_symgen_i_lane3;
  output rxdatavalid_to_lanes_i;
  output \fifo_dout_reg[68] ;
  output [65:0]Q;
  output [65:0]\fifo_dout_reg[65] ;
  output [65:0]\fifo_dout_reg[65]_0 ;
  output [65:0]\fifo_dout_reg[65]_1 ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  output pdu_ok_c;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  output hold_reg_r_reg;
  output hold_reg_r_reg_0;
  output hold_reg_r_reg_1;
  output hold_reg_r_reg_2;
  input gt_qplllock_quad1_out;
  input rst_in_out_reg;
  input init_clk;
  input gt_refclk1_out;
  input [0:3]rxn;
  input [0:3]rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_out;
  input gt_qpllrefclk_quad1_out;
  input gt_rxcdrovrden_in;
  input stg4_reg;
  input in0;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input en_chan_sync_i;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_1;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_2;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_3;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_4;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_5;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_6;
  input [0:0]SR;
  input rxreset_for_lanes;
  input rst_pma_init_usrclk;
  input rst_pma_init_usrclk_0;
  input rst_pma_init_usrclk_1;
  input rst_pma_init_usrclk_2;
  input channel_up_tx_if;
  input hard_err_usr_reg_0;
  input s_axi_tx_tready_reg;
  input do_cc_r;
  input [1:0]D;
  input [1:0]\tx_hdr_lane1_r_reg[1]_0 ;
  input [1:0]\tx_hdr_lane2_r_reg[1]_0 ;
  input [1:0]\tx_hdr_lane3_r_reg[1]_0 ;
  input [63:0]\TXDATA_IN_REG_reg[63]_0 ;
  input [63:0]\TXDATA_IN_REG_LANE1_reg[63]_0 ;
  input [63:0]\TXDATA_IN_REG_LANE2_reg[63]_0 ;
  input [63:0]\TXDATA_IN_REG_LANE3_reg[63]_0 ;
  input mmcm_not_locked_out2;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire CB_detect;
  wire CB_detect0;
  wire CB_detect0_16;
  wire CB_detect0_20;
  wire CB_detect0_23;
  wire CB_detect_17;
  wire CB_detect_21;
  wire CB_detect_24;
  wire CB_detect_dlyd0p5;
  wire CB_detect_dlyd0p5_13;
  wire CB_detect_dlyd0p5_3;
  wire CB_detect_dlyd0p5_7;
  wire CB_flag_direct;
  wire CB_flag_direct_0;
  wire CB_flag_direct_1;
  wire CC_detect_dlyd1;
  wire CC_detect_dlyd1_14;
  wire CC_detect_dlyd1_4;
  wire CC_detect_dlyd1_8;
  wire CC_detect_pulse_i;
  wire CC_detect_pulse_i_19;
  wire CC_detect_pulse_i_22;
  wire CC_detect_pulse_i_26;
  wire [1:0]D;
  wire FSM_RESETDONE_j;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ;
  wire \FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ;
  wire HPCNT_RESET_IN;
  wire LINK_RESET_OUT0;
  wire [65:0]Q;
  wire RX_NEG_OUT_LANE1_reg_0;
  wire RX_NEG_OUT_LANE2_reg_0;
  wire RX_NEG_OUT_LANE3_reg_0;
  wire RX_NEG_OUT_reg_0;
  wire [0:0]SR;
  wire [63:0]TXDATA_IN_REG;
  wire [63:0]TXDATA_IN_REG_LANE1;
  wire [63:0]\TXDATA_IN_REG_LANE1_reg[63]_0 ;
  wire [63:0]TXDATA_IN_REG_LANE2;
  wire [63:0]\TXDATA_IN_REG_LANE2_reg[63]_0 ;
  wire [63:0]TXDATA_IN_REG_LANE3;
  wire [63:0]\TXDATA_IN_REG_LANE3_reg[63]_0 ;
  wire [63:0]\TXDATA_IN_REG_reg[63]_0 ;
  (* RTL_KEEP = "true" *) wire all_start_cb_writes_i;
  (* RTL_KEEP = "true" *) wire all_vld_btf_flag_i;
  wire allow_block_sync_propagation;
  wire allow_block_sync_propagation_reg_n_0;
  wire any_vld_btf_i;
  wire any_vld_btf_lane1_i;
  wire any_vld_btf_lane2_i;
  wire any_vld_btf_lane3_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane1_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane2_i;
  (* RTL_KEEP = "true" *) wire bit_err_chan_bond_lane3_i;
  wire blocksync_all_lanes_inrxclk;
  wire blocksync_all_lanes_inrxclk_q;
  wire blocksync_out_i;
  wire blocksync_out_lane1_i;
  wire blocksync_out_lane2_i;
  wire blocksync_out_lane3_i;
  wire cb_bit_err_i;
  wire cbcc_data_srst;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_gtx0_i_n_82;
  wire cbcc_gtx0_i_n_85;
  wire cbcc_gtx0_lane1_i_n_81;
  wire cbcc_gtx0_lane1_i_n_82;
  wire cbcc_gtx0_lane2_i_n_80;
  wire cbcc_gtx0_lane2_i_n_84;
  wire cbcc_gtx0_lane3_i_n_80;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire [7:0]cdr_reset_fsm_cntr_r;
  wire \cdr_reset_fsm_cntr_r[0]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[1]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[2]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[3]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[4]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[5]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[6]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_1_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_2_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_3_n_0 ;
  wire \cdr_reset_fsm_cntr_r[7]_i_4_n_0 ;
  wire cdr_reset_fsm_lnkreset;
  wire cdr_reset_fsm_lnkreset_i_1_n_0;
  wire cdr_reset_fsm_lnkreset_reg_n_0;
  wire [0:3]ch_bond_done_i;
  wire channel_up_tx_if;
  wire [1:0]chbondi;
  wire common_reset_cbcc_i_n_6;
  wire data_valid_i;
  wire do_cc_r;
  (* RTL_KEEP = "true" *) wire do_rd_en_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane1_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane2_i;
  (* RTL_KEEP = "true" *) wire do_rd_en_lane3_i;
  wire en_chan_sync_i;
  wire enchansync_dlyd_i;
  wire enchansync_dlyd_i_15;
  wire [65:0]\fifo_dout_reg[65] ;
  wire [65:0]\fifo_dout_reg[65]_0 ;
  wire [65:0]\fifo_dout_reg[65]_1 ;
  wire \fifo_dout_reg[68] ;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane1_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane2_i;
  (* RTL_KEEP = "true" *) wire final_gater_for_fifo_din_lane3_i;
  wire fsm_resetdone_initclk;
  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire fsm_resetdone_to_rxreset_in;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_i;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtx_reset_comb;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire hard_err_cntr_r;
  wire \hard_err_cntr_r[7]_i_4_n_0 ;
  wire \hard_err_cntr_r[7]_i_5_n_0 ;
  wire \hard_err_cntr_r[7]_i_6_n_0 ;
  wire [7:0]hard_err_cntr_r_reg;
  wire hard_err_rst_int;
  wire hard_err_rst_int0;
  wire hard_err_rst_int_i_4_n_0;
  wire hard_err_usr;
  wire hard_err_usr0;
  wire hard_err_usr_reg_0;
  wire hold_reg_r_reg;
  wire hold_reg_r_reg_0;
  wire hold_reg_r_reg_1;
  wire hold_reg_r_reg_2;
  wire in0;
  wire init_clk;
  wire [11:2]int_gt_rxbufstatus;
  wire link_reset_0_c;
  wire link_reset_1_c;
  wire link_reset_2_c;
  wire link_reset_3_c;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire master_do_rd_en;
  (* RTL_KEEP = "true" *) wire master_do_rd_en_i;
  wire mmcm_not_locked_out2;
  wire new_gtx_rx_pcsreset_comb;
  wire new_gtx_rx_pcsreset_comb0;
  wire p_0_in11_in;
  wire p_0_in11_in_10;
  wire p_0_in13_in;
  wire p_0_in13_in_5;
  wire p_0_in13_in_9;
  wire p_0_in15_in;
  wire [7:0]p_0_in__10;
  wire p_27_in;
  wire p_6_in;
  wire p_6_in_18;
  wire p_6_in_25;
  wire p_9_in;
  wire pdu_ok_c;
  wire [63:0]pos_rxdata_from_gtx_i;
  wire [63:0]pos_rxdata_from_gtx_lane1_i;
  wire [63:0]pos_rxdata_from_gtx_lane2_i;
  wire [63:0]pos_rxdata_from_gtx_lane3_i;
  wire pos_rxdatavalid_i;
  wire pos_rxdatavalid_lane1_i;
  wire pos_rxdatavalid_lane2_i;
  wire pos_rxdatavalid_lane3_i;
  wire [1:0]pos_rxheader_from_gtx_i;
  wire [1:0]pos_rxheader_from_gtx_lane1_i;
  wire [1:0]pos_rxheader_from_gtx_lane2_i;
  wire [1:0]pos_rxheader_from_gtx_lane3_i;
  wire pos_rxheadervalid_i;
  wire pos_rxheadervalid_lane1_i;
  wire pos_rxheadervalid_lane2_i;
  wire pos_rxheadervalid_lane3_i;
  wire [63:0]pre_r1_rxdata_from_gtx_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane1_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane2_i;
  wire [63:0]pre_r1_rxdata_from_gtx_lane3_i;
  wire pre_r1_rxdatavalid_i;
  wire pre_r1_rxdatavalid_lane1_i;
  wire pre_r1_rxdatavalid_lane2_i;
  wire pre_r1_rxdatavalid_lane3_i;
  wire [1:0]pre_r1_rxheader_from_gtx_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane1_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane2_i;
  wire [1:0]pre_r1_rxheader_from_gtx_lane3_i;
  wire pre_r1_rxheadervalid_i;
  wire pre_r1_rxheadervalid_lane1_i;
  wire pre_r1_rxheadervalid_lane2_i;
  wire pre_r1_rxheadervalid_lane3_i;
  wire [63:0]pre_rxdata_from_gtx_i;
  wire [63:0]pre_rxdata_from_gtx_lane1_i;
  wire [63:0]pre_rxdata_from_gtx_lane2_i;
  wire [63:0]pre_rxdata_from_gtx_lane3_i;
  wire pre_rxdatavalid_i;
  wire pre_rxdatavalid_lane1_i;
  wire pre_rxdatavalid_lane2_i;
  wire pre_rxdatavalid_lane3_i;
  wire [1:0]pre_rxheader_from_gtx_i;
  wire [1:0]pre_rxheader_from_gtx_lane1_i;
  wire [1:0]pre_rxheader_from_gtx_lane2_i;
  wire [1:0]pre_rxheader_from_gtx_lane3_i;
  wire pre_rxheadervalid_i;
  wire pre_rxheadervalid_lane1_i;
  wire pre_rxheadervalid_lane2_i;
  wire pre_rxheadervalid_lane3_i;
  wire reset_initclk;
  wire rst_in_out_reg;
  wire rst_pma_init_usrclk;
  wire rst_pma_init_usrclk_0;
  wire rst_pma_init_usrclk_1;
  wire rst_pma_init_usrclk_2;
  wire rx_elastic_buf_err;
  wire rx_elastic_buf_err_int__0;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_i;
  wire rx_fsm_resetdone_i_i;
  (* RTL_KEEP = "true" *) wire rx_fsm_resetdone_ii;
  wire rx_header_err_i_0;
  wire rx_header_err_i_1;
  wire rx_header_err_i_2;
  wire rx_header_err_i_3;
  wire rx_lossofsync_i_0;
  wire rx_lossofsync_i_1;
  wire rx_lossofsync_i_2;
  wire rx_lossofsync_i_3;
  wire [1:0]rxbuferr_out_i;
  wire [0:0]rxbuferr_out_lane1_i;
  wire [1:0]rxbuferr_out_lane2_i;
  wire [63:0]rxdata_from_gtx_i;
  wire [63:0]rxdata_from_gtx_lane1_i;
  wire [63:0]rxdata_from_gtx_lane2_i;
  wire [63:0]rxdata_from_gtx_lane3_i;
  wire [63:0]rxdata_to_fifo_i;
  wire [63:0]rxdata_to_fifo_lane1_i;
  wire [63:0]rxdata_to_fifo_lane2_i;
  wire [63:0]rxdata_to_fifo_lane3_i;
  wire rxdatavalid_i;
  wire rxdatavalid_lane1_i;
  wire rxdatavalid_lane2_i;
  wire rxdatavalid_lane3_i;
  wire rxdatavalid_to_fifo_i;
  wire rxdatavalid_to_fifo_lane1_i;
  wire rxdatavalid_to_fifo_lane2_i;
  wire rxdatavalid_to_fifo_lane3_i;
  wire rxdatavalid_to_lanes_i;
  (* RTL_KEEP = "true" *) wire rxfsm_reset_i;
  wire rxgearboxslip_i;
  wire rxgearboxslip_lane1_i;
  wire rxgearboxslip_lane2_i;
  wire rxgearboxslip_lane3_i;
  wire [1:0]rxheader_from_gtx_i;
  wire [1:0]rxheader_from_gtx_lane1_i;
  wire [1:0]rxheader_from_gtx_lane2_i;
  wire [1:0]rxheader_from_gtx_lane3_i;
  wire [1:0]rxheader_to_fifo_i;
  wire [1:0]rxheader_to_fifo_lane1_i;
  wire [1:0]rxheader_to_fifo_lane2_i;
  wire [1:0]rxheader_to_fifo_lane3_i;
  wire rxheadervalid_i;
  wire rxheadervalid_lane1_i;
  wire rxheadervalid_lane2_i;
  wire rxheadervalid_lane3_i;
  wire rxlossofsync_out_lane1_q;
  wire rxlossofsync_out_lane2_q;
  wire rxlossofsync_out_lane3_q;
  wire rxlossofsync_out_q;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire rxreset_for_lanes;
  wire rxreset_for_lanes_q;
  wire rxusrclk_out;
  wire s_axi_tx_tready_reg;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_1;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_2;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_3;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_4;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_5;
  wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_6;
  wire [63:0]scrambled_data_i;
  wire [63:0]scrambled_data_lane1_i;
  wire [63:0]scrambled_data_lane2_i;
  wire [63:0]scrambled_data_lane3_i;
  wire scrambler_64b66b_gtx0_lane1_i_n_0;
  wire scrambler_64b66b_gtx0_lane2_i_n_0;
  wire scrambler_64b66b_gtx0_lane3_i_n_0;
  wire sel;
  wire \slave.slave/master_stop_prev_cb_r ;
  wire \slave.slave/master_stop_prev_cb_r_12 ;
  wire stableclk_gtx_reset_comb;
  wire start_cb_writes_lane2_i;
  wire stg3_reg;
  wire stg4_reg;
  wire stg5_reg;
  wire stg5_reg_0;
  wire stg5_reg_1;
  wire stg5_reg_2;
  wire [3:0]sync_rx_polarity_r_j;
  wire system_reset_r2;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_i;
  (* RTL_KEEP = "true" *) wire tx_fsm_resetdone_ii;
  wire [1:0]tx_hdr_lane1_r;
  wire [1:0]\tx_hdr_lane1_r_reg[1]_0 ;
  wire [1:0]tx_hdr_lane2_r;
  wire [1:0]\tx_hdr_lane2_r_reg[1]_0 ;
  wire [1:0]tx_hdr_lane3_r;
  wire [1:0]\tx_hdr_lane3_r_reg[1]_0 ;
  wire [1:0]tx_hdr_r;
  wire tx_out_clk;
  wire txdatavalid_i;
  wire txdatavalid_in_r1_i_2_n_0;
  wire txdatavalid_symgen_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire [1:0]txheader_lane1_r;
  wire [1:0]txheader_lane2_r;
  wire [1:0]txheader_lane3_r;
  wire [1:0]txheader_r;
  wire [0:3]txn;
  wire [0:3]txp;
  wire [6:0]txseq_counter_i;
  wire \txseq_counter_i[6]_i_2_n_0 ;
  wire [6:0]txseq_counter_i_lane1;
  wire \txseq_counter_i_lane1[4]_i_1_n_0 ;
  wire \txseq_counter_i_lane1[6]_i_2_n_0 ;
  wire \txseq_counter_i_lane1_reg_n_0_[0] ;
  wire \txseq_counter_i_lane1_reg_n_0_[1] ;
  wire \txseq_counter_i_lane1_reg_n_0_[2] ;
  wire \txseq_counter_i_lane1_reg_n_0_[3] ;
  wire \txseq_counter_i_lane1_reg_n_0_[4] ;
  wire \txseq_counter_i_lane1_reg_n_0_[5] ;
  wire \txseq_counter_i_lane1_reg_n_0_[6] ;
  wire [6:0]txseq_counter_i_lane2;
  wire \txseq_counter_i_lane2[4]_i_1_n_0 ;
  wire \txseq_counter_i_lane2[6]_i_2_n_0 ;
  wire \txseq_counter_i_lane2_reg_n_0_[0] ;
  wire \txseq_counter_i_lane2_reg_n_0_[1] ;
  wire \txseq_counter_i_lane2_reg_n_0_[2] ;
  wire \txseq_counter_i_lane2_reg_n_0_[3] ;
  wire \txseq_counter_i_lane2_reg_n_0_[4] ;
  wire \txseq_counter_i_lane2_reg_n_0_[5] ;
  wire \txseq_counter_i_lane2_reg_n_0_[6] ;
  wire [6:0]txseq_counter_i_lane3;
  wire \txseq_counter_i_lane3[6]_i_2_n_0 ;
  wire \txseq_counter_i_lane3_reg_n_0_[0] ;
  wire \txseq_counter_i_lane3_reg_n_0_[1] ;
  wire \txseq_counter_i_lane3_reg_n_0_[2] ;
  wire \txseq_counter_i_lane3_reg_n_0_[3] ;
  wire \txseq_counter_i_lane3_reg_n_0_[4] ;
  wire \txseq_counter_i_lane3_reg_n_0_[5] ;
  wire \txseq_counter_i_lane3_reg_n_0_[6] ;
  wire \txseq_counter_i_reg_n_0_[0] ;
  wire \txseq_counter_i_reg_n_0_[1] ;
  wire \txseq_counter_i_reg_n_0_[2] ;
  wire \txseq_counter_i_reg_n_0_[3] ;
  wire \txseq_counter_i_reg_n_0_[4] ;
  wire \txseq_counter_i_reg_n_0_[5] ;
  wire \txseq_counter_i_reg_n_0_[6] ;
  wire txsequence_ctr_en_int;
  wire txsequence_ctr_en_int_i_1_n_0;
  wire u_cdc__check_polarity_n_0;
  wire u_cdc__lane1_check_polarity_n_0;
  wire u_cdc__lane2_check_polarity_n_0;
  wire u_cdc__lane3_check_polarity_n_0;
  wire u_cdc_hard_err_init_n_0;
  wire u_rst_sync_blocksyncall_initclk_sync_n_0;
  wire u_rst_sync_blocksyncprop_inrxclk_sync_n_0;
  wire u_rst_sync_reset_initclk_n_1;
  wire u_rst_sync_reset_initclk_n_2;
  wire u_rst_sync_reset_initclk_n_3;
  wire u_rst_sync_reset_initclk_n_4;
  wire valid_btf_detect_dlyd1;
  wire valid_btf_detect_dlyd1_11;
  wire valid_btf_detect_dlyd1_2;
  wire valid_btf_detect_dlyd1_6;

  FDRE FSM_RESETDONE_j_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(stg3_reg),
        .Q(FSM_RESETDONE_j),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_3 
       (.I0(allow_block_sync_propagation),
        .I1(cdr_reset_fsm_lnkreset),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_4 
       (.I0(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I1(cdr_reset_fsm_cntr_r[7]),
        .I2(cdr_reset_fsm_cntr_r[6]),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[5]),
        .O(\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDSE #(
    .INIT(1'b1)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[0] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(1'b0),
        .Q(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .S(p_27_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[1] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .Q(cdr_reset_fsm_lnkreset),
        .R(p_27_in));
  (* FSM_ENCODED_STATES = "IDLE:001,ASSERT_RXRESET:010,DONE:100," *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_cdr_reset_fsm_r_reg[2] 
       (.C(init_clk),
        .CE(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .D(\FSM_onehot_cdr_reset_fsm_r[2]_i_3_n_0 ),
        .Q(allow_block_sync_propagation),
        .R(p_27_in));
  FDRE LINK_RESET_OUT_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(LINK_RESET_OUT0),
        .Q(link_reset_out),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h80)) 
    PLLLKDET_OUT
       (.I0(gt_qplllock_quad1_i),
        .I1(rx_fsm_resetdone_ii),
        .I2(tx_fsm_resetdone_ii),
        .O(gt_pll_lock));
  FDRE RX_NEG_OUT_LANE1_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane1_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE1_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_LANE2_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane2_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE2_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_LANE3_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__lane3_check_polarity_n_0),
        .Q(RX_NEG_OUT_LANE3_reg_0),
        .R(1'b0));
  FDRE RX_NEG_OUT_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(u_cdc__check_polarity_n_0),
        .Q(RX_NEG_OUT_reg_0),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [0]),
        .Q(TXDATA_IN_REG_LANE1[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[10] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [10]),
        .Q(TXDATA_IN_REG_LANE1[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[11] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [11]),
        .Q(TXDATA_IN_REG_LANE1[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[12] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [12]),
        .Q(TXDATA_IN_REG_LANE1[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[13] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [13]),
        .Q(TXDATA_IN_REG_LANE1[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[14] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [14]),
        .Q(TXDATA_IN_REG_LANE1[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[15] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [15]),
        .Q(TXDATA_IN_REG_LANE1[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[16] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [16]),
        .Q(TXDATA_IN_REG_LANE1[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[17] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [17]),
        .Q(TXDATA_IN_REG_LANE1[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[18] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [18]),
        .Q(TXDATA_IN_REG_LANE1[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[19] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [19]),
        .Q(TXDATA_IN_REG_LANE1[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [1]),
        .Q(TXDATA_IN_REG_LANE1[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[20] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [20]),
        .Q(TXDATA_IN_REG_LANE1[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[21] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [21]),
        .Q(TXDATA_IN_REG_LANE1[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[22] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [22]),
        .Q(TXDATA_IN_REG_LANE1[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[23] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [23]),
        .Q(TXDATA_IN_REG_LANE1[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[24] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [24]),
        .Q(TXDATA_IN_REG_LANE1[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[25] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [25]),
        .Q(TXDATA_IN_REG_LANE1[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[26] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [26]),
        .Q(TXDATA_IN_REG_LANE1[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[27] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [27]),
        .Q(TXDATA_IN_REG_LANE1[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[28] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [28]),
        .Q(TXDATA_IN_REG_LANE1[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[29] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [29]),
        .Q(TXDATA_IN_REG_LANE1[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[2] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [2]),
        .Q(TXDATA_IN_REG_LANE1[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[30] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [30]),
        .Q(TXDATA_IN_REG_LANE1[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[31] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [31]),
        .Q(TXDATA_IN_REG_LANE1[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[32] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [32]),
        .Q(TXDATA_IN_REG_LANE1[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[33] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [33]),
        .Q(TXDATA_IN_REG_LANE1[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[34] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [34]),
        .Q(TXDATA_IN_REG_LANE1[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[35] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [35]),
        .Q(TXDATA_IN_REG_LANE1[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[36] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [36]),
        .Q(TXDATA_IN_REG_LANE1[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[37] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [37]),
        .Q(TXDATA_IN_REG_LANE1[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[38] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [38]),
        .Q(TXDATA_IN_REG_LANE1[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[39] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [39]),
        .Q(TXDATA_IN_REG_LANE1[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[3] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [3]),
        .Q(TXDATA_IN_REG_LANE1[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[40] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [40]),
        .Q(TXDATA_IN_REG_LANE1[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[41] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [41]),
        .Q(TXDATA_IN_REG_LANE1[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[42] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [42]),
        .Q(TXDATA_IN_REG_LANE1[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[43] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [43]),
        .Q(TXDATA_IN_REG_LANE1[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[44] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [44]),
        .Q(TXDATA_IN_REG_LANE1[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[45] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [45]),
        .Q(TXDATA_IN_REG_LANE1[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[46] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [46]),
        .Q(TXDATA_IN_REG_LANE1[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[47] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [47]),
        .Q(TXDATA_IN_REG_LANE1[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[48] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [48]),
        .Q(TXDATA_IN_REG_LANE1[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[49] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [49]),
        .Q(TXDATA_IN_REG_LANE1[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[4] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [4]),
        .Q(TXDATA_IN_REG_LANE1[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[50] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [50]),
        .Q(TXDATA_IN_REG_LANE1[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[51] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [51]),
        .Q(TXDATA_IN_REG_LANE1[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[52] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [52]),
        .Q(TXDATA_IN_REG_LANE1[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[53] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [53]),
        .Q(TXDATA_IN_REG_LANE1[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[54] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [54]),
        .Q(TXDATA_IN_REG_LANE1[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[55] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [55]),
        .Q(TXDATA_IN_REG_LANE1[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[56] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [56]),
        .Q(TXDATA_IN_REG_LANE1[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[57] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [57]),
        .Q(TXDATA_IN_REG_LANE1[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[58] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [58]),
        .Q(TXDATA_IN_REG_LANE1[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[59] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [59]),
        .Q(TXDATA_IN_REG_LANE1[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[5] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [5]),
        .Q(TXDATA_IN_REG_LANE1[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[60] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [60]),
        .Q(TXDATA_IN_REG_LANE1[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[61] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [61]),
        .Q(TXDATA_IN_REG_LANE1[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[62] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [62]),
        .Q(TXDATA_IN_REG_LANE1[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[63] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [63]),
        .Q(TXDATA_IN_REG_LANE1[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[6] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [6]),
        .Q(TXDATA_IN_REG_LANE1[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[7] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [7]),
        .Q(TXDATA_IN_REG_LANE1[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[8] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [8]),
        .Q(TXDATA_IN_REG_LANE1[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE1_reg[9] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE1_reg[63]_0 [9]),
        .Q(TXDATA_IN_REG_LANE1[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [0]),
        .Q(TXDATA_IN_REG_LANE2[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[10] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [10]),
        .Q(TXDATA_IN_REG_LANE2[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[11] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [11]),
        .Q(TXDATA_IN_REG_LANE2[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[12] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [12]),
        .Q(TXDATA_IN_REG_LANE2[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[13] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [13]),
        .Q(TXDATA_IN_REG_LANE2[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[14] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [14]),
        .Q(TXDATA_IN_REG_LANE2[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[15] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [15]),
        .Q(TXDATA_IN_REG_LANE2[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[16] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [16]),
        .Q(TXDATA_IN_REG_LANE2[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[17] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [17]),
        .Q(TXDATA_IN_REG_LANE2[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[18] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [18]),
        .Q(TXDATA_IN_REG_LANE2[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[19] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [19]),
        .Q(TXDATA_IN_REG_LANE2[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [1]),
        .Q(TXDATA_IN_REG_LANE2[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[20] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [20]),
        .Q(TXDATA_IN_REG_LANE2[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[21] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [21]),
        .Q(TXDATA_IN_REG_LANE2[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[22] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [22]),
        .Q(TXDATA_IN_REG_LANE2[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[23] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [23]),
        .Q(TXDATA_IN_REG_LANE2[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[24] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [24]),
        .Q(TXDATA_IN_REG_LANE2[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[25] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [25]),
        .Q(TXDATA_IN_REG_LANE2[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[26] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [26]),
        .Q(TXDATA_IN_REG_LANE2[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[27] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [27]),
        .Q(TXDATA_IN_REG_LANE2[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[28] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [28]),
        .Q(TXDATA_IN_REG_LANE2[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[29] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [29]),
        .Q(TXDATA_IN_REG_LANE2[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[2] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [2]),
        .Q(TXDATA_IN_REG_LANE2[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[30] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [30]),
        .Q(TXDATA_IN_REG_LANE2[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[31] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [31]),
        .Q(TXDATA_IN_REG_LANE2[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[32] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [32]),
        .Q(TXDATA_IN_REG_LANE2[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[33] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [33]),
        .Q(TXDATA_IN_REG_LANE2[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[34] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [34]),
        .Q(TXDATA_IN_REG_LANE2[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[35] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [35]),
        .Q(TXDATA_IN_REG_LANE2[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[36] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [36]),
        .Q(TXDATA_IN_REG_LANE2[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[37] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [37]),
        .Q(TXDATA_IN_REG_LANE2[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[38] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [38]),
        .Q(TXDATA_IN_REG_LANE2[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[39] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [39]),
        .Q(TXDATA_IN_REG_LANE2[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[3] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [3]),
        .Q(TXDATA_IN_REG_LANE2[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[40] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [40]),
        .Q(TXDATA_IN_REG_LANE2[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[41] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [41]),
        .Q(TXDATA_IN_REG_LANE2[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[42] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [42]),
        .Q(TXDATA_IN_REG_LANE2[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[43] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [43]),
        .Q(TXDATA_IN_REG_LANE2[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[44] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [44]),
        .Q(TXDATA_IN_REG_LANE2[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[45] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [45]),
        .Q(TXDATA_IN_REG_LANE2[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[46] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [46]),
        .Q(TXDATA_IN_REG_LANE2[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[47] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [47]),
        .Q(TXDATA_IN_REG_LANE2[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[48] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [48]),
        .Q(TXDATA_IN_REG_LANE2[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[49] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [49]),
        .Q(TXDATA_IN_REG_LANE2[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[4] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [4]),
        .Q(TXDATA_IN_REG_LANE2[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[50] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [50]),
        .Q(TXDATA_IN_REG_LANE2[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[51] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [51]),
        .Q(TXDATA_IN_REG_LANE2[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[52] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [52]),
        .Q(TXDATA_IN_REG_LANE2[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[53] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [53]),
        .Q(TXDATA_IN_REG_LANE2[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[54] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [54]),
        .Q(TXDATA_IN_REG_LANE2[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[55] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [55]),
        .Q(TXDATA_IN_REG_LANE2[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[56] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [56]),
        .Q(TXDATA_IN_REG_LANE2[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[57] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [57]),
        .Q(TXDATA_IN_REG_LANE2[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[58] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [58]),
        .Q(TXDATA_IN_REG_LANE2[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[59] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [59]),
        .Q(TXDATA_IN_REG_LANE2[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[5] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [5]),
        .Q(TXDATA_IN_REG_LANE2[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[60] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [60]),
        .Q(TXDATA_IN_REG_LANE2[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[61] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [61]),
        .Q(TXDATA_IN_REG_LANE2[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[62] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [62]),
        .Q(TXDATA_IN_REG_LANE2[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[63] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [63]),
        .Q(TXDATA_IN_REG_LANE2[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[6] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [6]),
        .Q(TXDATA_IN_REG_LANE2[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[7] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [7]),
        .Q(TXDATA_IN_REG_LANE2[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[8] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [8]),
        .Q(TXDATA_IN_REG_LANE2[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE2_reg[9] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE2_reg[63]_0 [9]),
        .Q(TXDATA_IN_REG_LANE2[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [0]),
        .Q(TXDATA_IN_REG_LANE3[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[10] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [10]),
        .Q(TXDATA_IN_REG_LANE3[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[11] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [11]),
        .Q(TXDATA_IN_REG_LANE3[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[12] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [12]),
        .Q(TXDATA_IN_REG_LANE3[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[13] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [13]),
        .Q(TXDATA_IN_REG_LANE3[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[14] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [14]),
        .Q(TXDATA_IN_REG_LANE3[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[15] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [15]),
        .Q(TXDATA_IN_REG_LANE3[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[16] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [16]),
        .Q(TXDATA_IN_REG_LANE3[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[17] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [17]),
        .Q(TXDATA_IN_REG_LANE3[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[18] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [18]),
        .Q(TXDATA_IN_REG_LANE3[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[19] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [19]),
        .Q(TXDATA_IN_REG_LANE3[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [1]),
        .Q(TXDATA_IN_REG_LANE3[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[20] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [20]),
        .Q(TXDATA_IN_REG_LANE3[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[21] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [21]),
        .Q(TXDATA_IN_REG_LANE3[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[22] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [22]),
        .Q(TXDATA_IN_REG_LANE3[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[23] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [23]),
        .Q(TXDATA_IN_REG_LANE3[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[24] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [24]),
        .Q(TXDATA_IN_REG_LANE3[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[25] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [25]),
        .Q(TXDATA_IN_REG_LANE3[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[26] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [26]),
        .Q(TXDATA_IN_REG_LANE3[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[27] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [27]),
        .Q(TXDATA_IN_REG_LANE3[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[28] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [28]),
        .Q(TXDATA_IN_REG_LANE3[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[29] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [29]),
        .Q(TXDATA_IN_REG_LANE3[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[2] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [2]),
        .Q(TXDATA_IN_REG_LANE3[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[30] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [30]),
        .Q(TXDATA_IN_REG_LANE3[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[31] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [31]),
        .Q(TXDATA_IN_REG_LANE3[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[32] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [32]),
        .Q(TXDATA_IN_REG_LANE3[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[33] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [33]),
        .Q(TXDATA_IN_REG_LANE3[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[34] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [34]),
        .Q(TXDATA_IN_REG_LANE3[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[35] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [35]),
        .Q(TXDATA_IN_REG_LANE3[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[36] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [36]),
        .Q(TXDATA_IN_REG_LANE3[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[37] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [37]),
        .Q(TXDATA_IN_REG_LANE3[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[38] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [38]),
        .Q(TXDATA_IN_REG_LANE3[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[39] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [39]),
        .Q(TXDATA_IN_REG_LANE3[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[3] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [3]),
        .Q(TXDATA_IN_REG_LANE3[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[40] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [40]),
        .Q(TXDATA_IN_REG_LANE3[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[41] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [41]),
        .Q(TXDATA_IN_REG_LANE3[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[42] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [42]),
        .Q(TXDATA_IN_REG_LANE3[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[43] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [43]),
        .Q(TXDATA_IN_REG_LANE3[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[44] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [44]),
        .Q(TXDATA_IN_REG_LANE3[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[45] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [45]),
        .Q(TXDATA_IN_REG_LANE3[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[46] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [46]),
        .Q(TXDATA_IN_REG_LANE3[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[47] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [47]),
        .Q(TXDATA_IN_REG_LANE3[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[48] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [48]),
        .Q(TXDATA_IN_REG_LANE3[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[49] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [49]),
        .Q(TXDATA_IN_REG_LANE3[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[4] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [4]),
        .Q(TXDATA_IN_REG_LANE3[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[50] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [50]),
        .Q(TXDATA_IN_REG_LANE3[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[51] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [51]),
        .Q(TXDATA_IN_REG_LANE3[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[52] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [52]),
        .Q(TXDATA_IN_REG_LANE3[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[53] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [53]),
        .Q(TXDATA_IN_REG_LANE3[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[54] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [54]),
        .Q(TXDATA_IN_REG_LANE3[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[55] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [55]),
        .Q(TXDATA_IN_REG_LANE3[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[56] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [56]),
        .Q(TXDATA_IN_REG_LANE3[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[57] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [57]),
        .Q(TXDATA_IN_REG_LANE3[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[58] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [58]),
        .Q(TXDATA_IN_REG_LANE3[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[59] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [59]),
        .Q(TXDATA_IN_REG_LANE3[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[5] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [5]),
        .Q(TXDATA_IN_REG_LANE3[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[60] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [60]),
        .Q(TXDATA_IN_REG_LANE3[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[61] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [61]),
        .Q(TXDATA_IN_REG_LANE3[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[62] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [62]),
        .Q(TXDATA_IN_REG_LANE3[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[63] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [63]),
        .Q(TXDATA_IN_REG_LANE3[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[6] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [6]),
        .Q(TXDATA_IN_REG_LANE3[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[7] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [7]),
        .Q(TXDATA_IN_REG_LANE3[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[8] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [8]),
        .Q(TXDATA_IN_REG_LANE3[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_LANE3_reg[9] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_LANE3_reg[63]_0 [9]),
        .Q(TXDATA_IN_REG_LANE3[9]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [0]),
        .Q(TXDATA_IN_REG[0]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[10] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [10]),
        .Q(TXDATA_IN_REG[10]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[11] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [11]),
        .Q(TXDATA_IN_REG[11]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[12] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [12]),
        .Q(TXDATA_IN_REG[12]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[13] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [13]),
        .Q(TXDATA_IN_REG[13]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[14] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [14]),
        .Q(TXDATA_IN_REG[14]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[15] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [15]),
        .Q(TXDATA_IN_REG[15]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[16] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [16]),
        .Q(TXDATA_IN_REG[16]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[17] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [17]),
        .Q(TXDATA_IN_REG[17]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[18] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [18]),
        .Q(TXDATA_IN_REG[18]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[19] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [19]),
        .Q(TXDATA_IN_REG[19]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [1]),
        .Q(TXDATA_IN_REG[1]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[20] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [20]),
        .Q(TXDATA_IN_REG[20]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[21] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [21]),
        .Q(TXDATA_IN_REG[21]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[22] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [22]),
        .Q(TXDATA_IN_REG[22]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[23] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [23]),
        .Q(TXDATA_IN_REG[23]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[24] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [24]),
        .Q(TXDATA_IN_REG[24]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[25] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [25]),
        .Q(TXDATA_IN_REG[25]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[26] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [26]),
        .Q(TXDATA_IN_REG[26]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[27] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [27]),
        .Q(TXDATA_IN_REG[27]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[28] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [28]),
        .Q(TXDATA_IN_REG[28]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[29] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [29]),
        .Q(TXDATA_IN_REG[29]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[2] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [2]),
        .Q(TXDATA_IN_REG[2]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[30] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [30]),
        .Q(TXDATA_IN_REG[30]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[31] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [31]),
        .Q(TXDATA_IN_REG[31]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[32] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [32]),
        .Q(TXDATA_IN_REG[32]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[33] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [33]),
        .Q(TXDATA_IN_REG[33]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[34] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [34]),
        .Q(TXDATA_IN_REG[34]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[35] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [35]),
        .Q(TXDATA_IN_REG[35]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[36] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [36]),
        .Q(TXDATA_IN_REG[36]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[37] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [37]),
        .Q(TXDATA_IN_REG[37]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[38] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [38]),
        .Q(TXDATA_IN_REG[38]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[39] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [39]),
        .Q(TXDATA_IN_REG[39]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[3] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [3]),
        .Q(TXDATA_IN_REG[3]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[40] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [40]),
        .Q(TXDATA_IN_REG[40]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[41] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [41]),
        .Q(TXDATA_IN_REG[41]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[42] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [42]),
        .Q(TXDATA_IN_REG[42]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[43] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [43]),
        .Q(TXDATA_IN_REG[43]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[44] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [44]),
        .Q(TXDATA_IN_REG[44]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[45] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [45]),
        .Q(TXDATA_IN_REG[45]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[46] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [46]),
        .Q(TXDATA_IN_REG[46]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[47] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [47]),
        .Q(TXDATA_IN_REG[47]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[48] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [48]),
        .Q(TXDATA_IN_REG[48]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[49] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [49]),
        .Q(TXDATA_IN_REG[49]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[4] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [4]),
        .Q(TXDATA_IN_REG[4]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[50] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [50]),
        .Q(TXDATA_IN_REG[50]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[51] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [51]),
        .Q(TXDATA_IN_REG[51]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[52] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [52]),
        .Q(TXDATA_IN_REG[52]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[53] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [53]),
        .Q(TXDATA_IN_REG[53]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[54] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [54]),
        .Q(TXDATA_IN_REG[54]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[55] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [55]),
        .Q(TXDATA_IN_REG[55]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[56] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [56]),
        .Q(TXDATA_IN_REG[56]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[57] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [57]),
        .Q(TXDATA_IN_REG[57]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[58] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [58]),
        .Q(TXDATA_IN_REG[58]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[59] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [59]),
        .Q(TXDATA_IN_REG[59]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[5] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [5]),
        .Q(TXDATA_IN_REG[5]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[60] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [60]),
        .Q(TXDATA_IN_REG[60]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[61] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [61]),
        .Q(TXDATA_IN_REG[61]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[62] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [62]),
        .Q(TXDATA_IN_REG[62]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[63] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [63]),
        .Q(TXDATA_IN_REG[63]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[6] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [6]),
        .Q(TXDATA_IN_REG[6]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[7] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [7]),
        .Q(TXDATA_IN_REG[7]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[8] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [8]),
        .Q(TXDATA_IN_REG[8]),
        .R(1'b0));
  FDRE \TXDATA_IN_REG_reg[9] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\TXDATA_IN_REG_reg[63]_0 [9]),
        .Q(TXDATA_IN_REG[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT5 #(
    .INIT(32'hFFFFFBFF)) 
    \TX_DATA[55]_i_1 
       (.I0(rst_pma_init_usrclk),
        .I1(\txseq_counter_i[6]_i_2_n_0 ),
        .I2(\txseq_counter_i_reg_n_0_[5] ),
        .I3(\txseq_counter_i_reg_n_0_[4] ),
        .I4(\txseq_counter_i_reg_n_0_[6] ),
        .O(stg5_reg));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__0 
       (.I0(rst_pma_init_usrclk_0),
        .I1(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I3(\txseq_counter_i_lane1[6]_i_2_n_0 ),
        .O(stg5_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__1 
       (.I0(rst_pma_init_usrclk_1),
        .I1(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I3(\txseq_counter_i_lane2[6]_i_2_n_0 ),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \TX_DATA[55]_i_1__2 
       (.I0(rst_pma_init_usrclk_2),
        .I1(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I3(\txseq_counter_i_lane3[6]_i_2_n_0 ),
        .O(stg5_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair340" *) 
  LUT4 #(
    .INIT(16'hFBFF)) 
    TX_HEADER_0_i_2
       (.I0(\txseq_counter_i_reg_n_0_[6] ),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(\txseq_counter_i_reg_n_0_[5] ),
        .I3(\txseq_counter_i[6]_i_2_n_0 ),
        .O(txdatavalid_symgen_i));
  (* SOFT_HLUTNM = "soft_lutpair349" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_0_i_2__0
       (.I0(\txseq_counter_i_lane1[6]_i_2_n_0 ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane1));
  (* SOFT_HLUTNM = "soft_lutpair350" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_0_i_2__1
       (.I0(\txseq_counter_i_lane2[6]_i_2_n_0 ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane2));
  (* SOFT_HLUTNM = "soft_lutpair351" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    TX_HEADER_0_i_2__2
       (.I0(\txseq_counter_i_lane3[6]_i_2_n_0 ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .O(txdatavalid_symgen_i_lane3));
  FDRE #(
    .INIT(1'b0)) 
    allow_block_sync_propagation_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(allow_block_sync_propagation),
        .Q(allow_block_sync_propagation_reg_n_0),
        .R(p_27_in));
  board_aurora_64b66b_0_2_BLOCK_SYNC_SM block_sync_sm_gtx0_i
       (.D(rxgearboxslip_i),
        .Q(rxheader_from_gtx_i),
        .SR(new_gtx_rx_pcsreset_comb),
        .blocksync_out_i(blocksync_out_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_i(rxheadervalid_i),
        .system_reset_r2(system_reset_r2));
  board_aurora_64b66b_0_2_BLOCK_SYNC_SM_8 block_sync_sm_gtx0_lane1_i
       (.D(rxgearboxslip_lane1_i),
        .Q(rxheader_from_gtx_lane1_i),
        .blocksync_out_lane1_i(blocksync_out_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane1_i(rxheadervalid_lane1_i),
        .system_reset_r2(system_reset_r2));
  board_aurora_64b66b_0_2_BLOCK_SYNC_SM_9 block_sync_sm_gtx0_lane2_i
       (.D(rxgearboxslip_lane2_i),
        .Q(rxheader_from_gtx_lane2_i),
        .blocksync_all_lanes_inrxclk(blocksync_all_lanes_inrxclk),
        .blocksync_out_i(blocksync_out_i),
        .blocksync_out_lane1_i(blocksync_out_lane1_i),
        .blocksync_out_lane2_i(blocksync_out_lane2_i),
        .blocksync_out_lane3_i(blocksync_out_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane2_i(rxheadervalid_lane2_i),
        .system_reset_r2(system_reset_r2));
  board_aurora_64b66b_0_2_BLOCK_SYNC_SM_10 block_sync_sm_gtx0_lane3_i
       (.D(rxgearboxslip_lane3_i),
        .Q(rxheader_from_gtx_lane3_i),
        .blocksync_out_lane3_i(blocksync_out_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .rxheadervalid_lane3_i(rxheadervalid_lane3_i),
        .system_reset_r2(system_reset_r2));
  FDRE #(
    .INIT(1'b0)) 
    blocksync_all_lanes_inrxclk_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_all_lanes_inrxclk),
        .Q(blocksync_all_lanes_inrxclk_q),
        .R(1'b0));
  board_aurora_64b66b_0_2_MULTI_GT board_aurora_64b66b_0_2_multi_gt_i
       (.E(sel),
        .Q({\txseq_counter_i_lane3_reg_n_0_[6] ,\txseq_counter_i_lane3_reg_n_0_[5] ,\txseq_counter_i_lane3_reg_n_0_[4] ,\txseq_counter_i_lane3_reg_n_0_[3] ,\txseq_counter_i_lane3_reg_n_0_[2] ,\txseq_counter_i_lane3_reg_n_0_[1] ,\txseq_counter_i_lane3_reg_n_0_[0] }),
        .channel_up_tx_if(channel_up_tx_if),
        .\fabric_pcs_rst_extend_cntr_reg[8]_0 (stg4_reg),
        .fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_done_out(rx_fsm_resetdone_i),
        .gtwiz_reset_tx_done_out(tx_fsm_resetdone_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .gtwiz_userdata_rx_out({pre_rxdata_from_gtx_lane3_i,pre_rxdata_from_gtx_lane2_i,pre_rxdata_from_gtx_lane1_i,pre_rxdata_from_gtx_i}),
        .gtwiz_userdata_tx_in({scrambled_data_lane3_i,scrambled_data_lane2_i,scrambled_data_lane1_i,scrambled_data_i}),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST (\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_1 ({\txseq_counter_i_lane1_reg_n_0_[6] ,\txseq_counter_i_lane1_reg_n_0_[5] ,\txseq_counter_i_lane1_reg_n_0_[4] ,\txseq_counter_i_lane1_reg_n_0_[3] ,\txseq_counter_i_lane1_reg_n_0_[2] ,\txseq_counter_i_lane1_reg_n_0_[1] ,\txseq_counter_i_lane1_reg_n_0_[0] }),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ({\txseq_counter_i_lane2_reg_n_0_[6] ,\txseq_counter_i_lane2_reg_n_0_[5] ,\txseq_counter_i_lane2_reg_n_0_[4] ,\txseq_counter_i_lane2_reg_n_0_[3] ,\txseq_counter_i_lane2_reg_n_0_[2] ,\txseq_counter_i_lane2_reg_n_0_[1] ,\txseq_counter_i_lane2_reg_n_0_[0] }),
        .hard_err_usr0(hard_err_usr0),
        .hard_err_usr_reg(cbcc_gtx0_lane1_i_n_81),
        .hard_err_usr_reg_0(hard_err_usr_reg_0),
        .i_in_meta_reg(gt_qplllock_quad1_i),
        .init_clk(init_clk),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .new_gtx_rx_pcsreset_comb0(new_gtx_rx_pcsreset_comb0),
        .out(rxfsm_reset_i),
        .rst_in_out_reg(rst_in_out_reg),
        .rxbufstatus_out({int_gt_rxbufstatus[11],int_gt_rxbufstatus[8],int_gt_rxbufstatus[5],int_gt_rxbufstatus[2]}),
        .rxdatavalid_out({pre_rxdatavalid_lane3_i,pre_rxdatavalid_lane2_i,pre_rxdatavalid_lane1_i,pre_rxdatavalid_i}),
        .rxgearboxslip_in({rxgearboxslip_lane3_i,rxgearboxslip_lane2_i,rxgearboxslip_lane1_i,rxgearboxslip_i}),
        .rxheader_out({pre_rxheader_from_gtx_lane3_i,pre_rxheader_from_gtx_lane2_i,pre_rxheader_from_gtx_lane1_i,pre_rxheader_from_gtx_i}),
        .rxheadervalid_out({pre_rxheadervalid_lane3_i,pre_rxheadervalid_lane2_i,pre_rxheadervalid_lane1_i,pre_rxheadervalid_i}),
        .rxn(rxn),
        .rxp(rxp),
        .rxpolarity_in(sync_rx_polarity_r_j),
        .tx_out_clk(tx_out_clk),
        .txheader_in({txheader_lane3_r,txheader_lane2_r,txheader_lane1_r,txheader_r}),
        .txn(txn),
        .txp(txp));
  board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__1 cbcc_gtx0_i
       (.CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CB_flag_direct(CB_flag_direct_1),
        .CB_flag_direct_0(CB_flag_direct_0),
        .CB_flag_direct_1(CB_flag_direct),
        .CB_flag_flopped_reg_0({p_0_in13_in_5,p_0_in15_in}),
        .CB_flag_flopped_reg_1({p_0_in11_in_10,p_0_in13_in_9}),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .D({rxheader_to_fifo_i,rxdata_to_fifo_i}),
        .FINAL_GATER_FOR_FIFO_DIN_i_2_0(all_start_cb_writes_i),
        .Q({p_0_in11_in,p_0_in13_in}),
        .SR(new_gtx_rx_pcsreset_comb),
        .any_vld_btf_i(any_vld_btf_i),
        .bit_err_chan_bond_i(bit_err_chan_bond_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[0]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_1),
        .do_rd_en_i(do_rd_en_i),
        .en_chan_sync_i(en_chan_sync_i),
        .\fifo_dout_reg[65]_0 (Q),
        .\fifo_dout_reg[68]_0 (\fifo_dout_reg[68] ),
        .final_gater_for_fifo_din_i(final_gater_for_fifo_din_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hold_reg_r_reg_0(hold_reg_r_reg),
        .in0(rxlossofsync_out_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .master_do_rd_en(master_do_rd_en),
        .master_do_rd_en_reg_0(cbcc_gtx0_i_n_82),
        .master_do_rd_en_reg_1(cbcc_gtx0_i_n_85),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in),
        .rx_header_err_i_3(rx_header_err_i_3),
        .rx_lossofsync_i_3(rx_lossofsync_i_3),
        .rxbuferr_out_i(rxbuferr_out_i),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_i(rxdatavalid_to_fifo_i),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .s_level_out_d5_reg(stg4_reg),
        .srst(cbcc_data_srst),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1));
  board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__xdcDup__2 cbcc_gtx0_lane1_i
       (.CB_detect(CB_detect_17),
        .CB_detect0(CB_detect0_16),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_3),
        .CB_flag_direct(CB_flag_direct_1),
        .CC_detect_dlyd1(CC_detect_dlyd1_4),
        .CC_detect_pulse_i(CC_detect_pulse_i_19),
        .D({rxheader_to_fifo_lane1_i,rxdata_to_fifo_lane1_i}),
        .FINAL_GATER_FOR_FIFO_DIN_i_2__0_0(all_start_cb_writes_i),
        .Q({p_0_in11_in,p_0_in13_in,\fifo_dout_reg[65] }),
        .SR(new_gtx_rx_pcsreset_comb),
        .START_CB_WRITES_OUT_reg_0(cbcc_gtx0_lane1_i_n_82),
        .START_CB_WRITES_OUT_reg_1(all_vld_btf_flag_i),
        .any_vld_btf_lane1_i(any_vld_btf_lane1_i),
        .bit_err_chan_bond_lane1_i(bit_err_chan_bond_lane1_i),
        .\cb_rxdatavalid_cnt_reg[1] (cbcc_gtx0_i_n_82),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[1]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_2),
        .do_rd_en_lane1_i(do_rd_en_lane1_i),
        .en_chan_sync_i(en_chan_sync_i),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .final_gater_for_fifo_din_lane1_i(final_gater_for_fifo_din_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_usr_reg(cbcc_gtx0_lane3_i_n_80),
        .hold_reg_r_reg_0(hold_reg_r_reg_0),
        .in0(rxlossofsync_out_lane1_q),
        .init_clk(init_clk),
        .link_reset_1_c(link_reset_1_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r ),
        .master_stop_prev_cb_r_reg(cbcc_gtx0_lane2_i_n_80),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in_18),
        .rd_err_q_reg_0(rxbuferr_out_lane1_i),
        .rx_header_err_i_2(rx_header_err_i_2),
        .rx_lossofsync_i_2(rx_lossofsync_i_2),
        .rxbuferr_out_i(rxbuferr_out_i[0]),
        .rxbuferr_out_lane2_i(rxbuferr_out_lane2_i[1]),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_lane1_i(rxdatavalid_to_fifo_lane1_i),
        .s_level_out_d5_reg(stg4_reg),
        .srst(cbcc_data_srst),
        .start_cb_writes_lane2_i(start_cb_writes_lane2_i),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_2),
        .wr_err_rd_clk_sync_reg_0(cbcc_gtx0_lane1_i_n_81));
  board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING__parameterized0 cbcc_gtx0_lane2_i
       (.CB_detect(CB_detect_21),
        .CB_detect0(CB_detect0_20),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_7),
        .CB_flag_direct(CB_flag_direct_0),
        .CC_detect_dlyd1(CC_detect_dlyd1_8),
        .CC_detect_pulse_i(CC_detect_pulse_i_22),
        .\CHBONDO_reg[0]_0 (cbcc_gtx0_lane2_i_n_80),
        .\CHBONDO_reg[0]_1 (cbcc_gtx0_lane2_i_n_84),
        .\CHBONDO_reg[1]_0 (chbondi),
        .D({rxdatavalid_to_fifo_lane2_i,rxheader_to_fifo_lane2_i,rxdata_to_fifo_lane2_i}),
        .FINAL_GATER_FOR_FIFO_DIN_reg_0(all_start_cb_writes_i),
        .LINK_RESET_OUT0(LINK_RESET_OUT0),
        .LINK_RESET_OUT_reg(cdr_reset_fsm_lnkreset_reg_n_0),
        .Q({p_0_in13_in_5,p_0_in15_in,\fifo_dout_reg[65]_0 }),
        .SR(p_27_in),
        .allow_block_sync_propagation_reg(rst_in_out_reg),
        .any_vld_btf_lane2_i(any_vld_btf_lane2_i),
        .bit_err_chan_bond_lane2_i(bit_err_chan_bond_lane2_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[2]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_3),
        .do_rd_en_lane2_i(do_rd_en_lane2_i),
        .en_chan_sync_i(en_chan_sync_i),
        .enchansync_dlyd_i(enchansync_dlyd_i),
        .enchansync_dlyd_i_0(enchansync_dlyd_i_15),
        .final_gater_for_fifo_din_lane2_i(final_gater_for_fifo_din_lane2_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_rst_int(hard_err_rst_int),
        .hold_reg_r_reg_0(hold_reg_r_reg_1),
        .in0(rxlossofsync_out_lane2_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .link_reset_1_c(link_reset_1_c),
        .link_reset_2_c(link_reset_2_c),
        .link_reset_3_c(link_reset_3_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r ),
        .master_stop_prev_cb_r_1(\slave.slave/master_stop_prev_cb_r_12 ),
        .out(master_do_rd_en_i),
        .p_9_in(p_9_in),
        .rx_header_err_i_1(rx_header_err_i_1),
        .rx_lossofsync_i_1(rx_lossofsync_i_1),
        .rxbuferr_out_lane2_i(rxbuferr_out_lane2_i),
        .s_level_out_d6_reg(stg4_reg),
        .srst(cbcc_data_srst),
        .start_cb_writes_lane2_i(start_cb_writes_lane2_i),
        .start_cb_writes_mastr_reg_0(all_vld_btf_flag_i),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_6),
        .\valid_btf_detect_extend_r_reg[4]_0 (new_gtx_rx_pcsreset_comb));
  board_aurora_64b66b_0_2_CLOCK_CORRECTION_CHANNEL_BONDING cbcc_gtx0_lane3_i
       (.CB_detect(CB_detect_24),
        .CB_detect0(CB_detect0_23),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_13),
        .CB_flag_direct(CB_flag_direct),
        .CC_detect_dlyd1(CC_detect_dlyd1_14),
        .CC_detect_pulse_i(CC_detect_pulse_i_26),
        .D({rxheader_to_fifo_lane3_i,rxdata_to_fifo_lane3_i}),
        .FINAL_GATER_FOR_FIFO_DIN_i_2__1_0(all_start_cb_writes_i),
        .Q({p_0_in11_in_10,p_0_in13_in_9,\fifo_dout_reg[65]_1 }),
        .any_vld_btf_lane3_i(any_vld_btf_lane3_i),
        .bit_err_chan_bond_lane3_i(bit_err_chan_bond_lane3_i),
        .\cb_rxdatavalid_cnt_reg[1] (cbcc_gtx0_i_n_85),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .ch_bond_done_i(ch_bond_done_i[3]),
        .\count_for_reset_r_reg[23]_0 (u_rst_sync_reset_initclk_n_4),
        .\count_for_reset_r_reg[23]_1 (cdr_reset_fsm_lnkreset_reg_n_0),
        .\count_for_reset_r_reg[23]_2 (rst_in_out_reg),
        .do_rd_en_lane3_i(do_rd_en_lane3_i),
        .en_chan_sync_i(en_chan_sync_i),
        .enchansync_dlyd_i(enchansync_dlyd_i_15),
        .final_gater_for_fifo_din_lane3_i(final_gater_for_fifo_din_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_usr_i_3(rx_elastic_buf_err),
        .hard_err_usr_i_3_0(rxbuferr_out_lane1_i),
        .hold_reg_r_reg_0(hold_reg_r_reg_2),
        .in0(rxlossofsync_out_lane3_q),
        .init_clk(init_clk),
        .link_reset_0_c(link_reset_0_c),
        .link_reset_1_c(link_reset_1_c),
        .link_reset_2_c(link_reset_2_c),
        .link_reset_3_c(link_reset_3_c),
        .master_do_rd_en(master_do_rd_en),
        .master_stop_prev_cb_r(\slave.slave/master_stop_prev_cb_r_12 ),
        .master_stop_prev_cb_r_reg(cbcc_gtx0_lane2_i_n_84),
        .out(master_do_rd_en_i),
        .p_6_in(p_6_in_25),
        .rx_header_err_i_0(rx_header_err_i_0),
        .rx_lossofsync_i_0(rx_lossofsync_i_0),
        .rxbuferr_out_i(rxbuferr_out_i[1]),
        .rxbuferr_out_lane2_i(rxbuferr_out_lane2_i[0]),
        .rxchanisaligned_reg(chbondi),
        .rxdatavalid_to_fifo_lane3_i(rxdatavalid_to_fifo_lane3_i),
        .rxfsm_reset_i(rxfsm_reset_i),
        .s_level_out_d6_reg(stg4_reg),
        .srst(cbcc_data_srst),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1_11),
        .\valid_btf_detect_extend_r_reg[4]_0 (new_gtx_rx_pcsreset_comb),
        .wr_err_rd_clk_sync_reg_0(cbcc_gtx0_lane3_i_n_80));
  (* SOFT_HLUTNM = "soft_lutpair361" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \cdr_reset_fsm_cntr_r[0]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .O(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT3 #(
    .INIT(8'h60)) 
    \cdr_reset_fsm_cntr_r[1]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT4 #(
    .INIT(16'h7800)) 
    \cdr_reset_fsm_cntr_r[2]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[0]),
        .I1(cdr_reset_fsm_cntr_r[1]),
        .I2(cdr_reset_fsm_cntr_r[2]),
        .I3(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair347" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[3]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[2]),
        .I2(cdr_reset_fsm_cntr_r[1]),
        .I3(cdr_reset_fsm_cntr_r[0]),
        .I4(cdr_reset_fsm_cntr_r[3]),
        .O(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFF800000000000)) 
    \cdr_reset_fsm_cntr_r[4]_i_1 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .I4(cdr_reset_fsm_cntr_r[4]),
        .I5(cdr_reset_fsm_lnkreset),
        .O(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \cdr_reset_fsm_cntr_r[5]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .O(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair346" *) 
  LUT5 #(
    .INIT(32'h2AAA8000)) 
    \cdr_reset_fsm_cntr_r[6]_i_1 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[4]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .O(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hFE)) 
    \cdr_reset_fsm_cntr_r[7]_i_1 
       (.I0(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I1(allow_block_sync_propagation),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAA80000000)) 
    \cdr_reset_fsm_cntr_r[7]_i_2 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[4]),
        .I2(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .I3(cdr_reset_fsm_cntr_r[5]),
        .I4(cdr_reset_fsm_cntr_r[6]),
        .I5(cdr_reset_fsm_cntr_r[7]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \cdr_reset_fsm_cntr_r[7]_i_3 
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(cdr_reset_fsm_cntr_r[5]),
        .I2(cdr_reset_fsm_cntr_r[4]),
        .I3(cdr_reset_fsm_cntr_r[6]),
        .I4(cdr_reset_fsm_cntr_r[7]),
        .I5(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ),
        .O(\cdr_reset_fsm_cntr_r[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair357" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \cdr_reset_fsm_cntr_r[7]_i_4 
       (.I0(cdr_reset_fsm_cntr_r[1]),
        .I1(cdr_reset_fsm_cntr_r[0]),
        .I2(cdr_reset_fsm_cntr_r[3]),
        .I3(cdr_reset_fsm_cntr_r[2]),
        .O(\cdr_reset_fsm_cntr_r[7]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[0]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[0]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[1]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[1]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[2]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[2]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[3]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[3]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[4]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[4]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[5]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[5]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[6]_i_1_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[6]),
        .R(p_27_in));
  FDRE #(
    .INIT(1'b0)) 
    \cdr_reset_fsm_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(\cdr_reset_fsm_cntr_r[7]_i_1_n_0 ),
        .D(\cdr_reset_fsm_cntr_r[7]_i_2_n_0 ),
        .Q(cdr_reset_fsm_cntr_r[7]),
        .R(p_27_in));
  LUT3 #(
    .INIT(8'hFE)) 
    cdr_reset_fsm_lnkreset_i_1
       (.I0(cdr_reset_fsm_lnkreset),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] ),
        .I2(allow_block_sync_propagation),
        .O(cdr_reset_fsm_lnkreset_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    cdr_reset_fsm_lnkreset_reg
       (.C(init_clk),
        .CE(cdr_reset_fsm_lnkreset_i_1_n_0),
        .D(cdr_reset_fsm_lnkreset),
        .Q(cdr_reset_fsm_lnkreset_reg_n_0),
        .R(p_27_in));
  board_aurora_64b66b_0_2_common_logic_cbcc common_logic_cbcc_i
       (.SR(common_reset_cbcc_i_n_6),
        .all_start_cb_writes_out_reg_0(cbcc_gtx0_lane1_i_n_82),
        .all_vld_btf_flag_i(all_vld_btf_flag_i),
        .any_vld_btf_i(any_vld_btf_i),
        .any_vld_btf_lane1_i(any_vld_btf_lane1_i),
        .any_vld_btf_lane2_i(any_vld_btf_lane2_i),
        .any_vld_btf_lane3_i(any_vld_btf_lane3_i),
        .cb_bit_err_i(cb_bit_err_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .\first_cb_to_fifo_wr_window_reg[0]_0 (final_gater_for_fifo_din_lane3_i),
        .\first_cb_to_fifo_wr_window_reg[0]_1 (final_gater_for_fifo_din_i),
        .\first_cb_to_fifo_wr_window_reg[0]_2 (final_gater_for_fifo_din_lane1_i),
        .\first_cb_to_fifo_wr_window_reg[0]_3 (final_gater_for_fifo_din_lane2_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(all_start_cb_writes_i),
        .master_do_rd_en_i(master_do_rd_en_i),
        .master_do_rd_en_out_reg_0(do_rd_en_lane2_i),
        .master_do_rd_en_out_reg_1(stg4_reg),
        .out(bit_err_chan_bond_lane3_i),
        .second_cb_write_failed_reg_0(bit_err_chan_bond_i),
        .second_cb_write_failed_reg_1(bit_err_chan_bond_lane1_i),
        .second_cb_write_failed_reg_2(bit_err_chan_bond_lane2_i));
  board_aurora_64b66b_0_2_common_reset_cbcc common_reset_cbcc_i
       (.SR(common_reset_cbcc_i_n_6),
        .cb_bit_err_i(cb_bit_err_i),
        .cbcc_fifo_reset_rd_clk(cbcc_fifo_reset_rd_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_wr_clk(cbcc_fifo_reset_wr_clk),
        .cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .cbcc_reset_cbstg2_rd_clk(cbcc_reset_cbstg2_rd_clk),
        .en_chan_sync_i(en_chan_sync_i),
        .\first_cb_to_fifo_wr_window_reg[0] (final_gater_for_fifo_din_lane1_i),
        .\first_cb_to_fifo_wr_window_reg[0]_0 (final_gater_for_fifo_din_i),
        .\first_cb_to_fifo_wr_window_reg[0]_1 (final_gater_for_fifo_din_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(in0),
        .out(final_gater_for_fifo_din_lane2_i),
        .srst(cbcc_data_srst),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(new_gtx_rx_pcsreset_comb),
        .stg4_reg(stg4_reg));
  board_aurora_64b66b_0_2_DESCRAMBLER_64B66B descrambler_64b66b_gtx0_i
       (.CB_detect(CB_detect),
        .CB_detect0(CB_detect0),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5),
        .CC_detect_dlyd1(CC_detect_dlyd1),
        .CC_detect_pulse_i(CC_detect_pulse_i),
        .E(rxdatavalid_i),
        .Q(rxheader_to_fifo_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_q),
        .p_6_in(p_6_in),
        .rxdatavalid_to_fifo_i(rxdatavalid_to_fifo_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_i));
  board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_11 descrambler_64b66b_gtx0_lane1_i
       (.CB_detect(CB_detect_17),
        .CB_detect0(CB_detect0_16),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_3),
        .CC_detect_dlyd1(CC_detect_dlyd1_4),
        .CC_detect_pulse_i(CC_detect_pulse_i_19),
        .E(rxdatavalid_lane1_i),
        .Q(rxheader_to_fifo_lane1_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_lane1_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane1_q),
        .p_6_in(p_6_in_18),
        .rxdatavalid_to_fifo_lane1_i(rxdatavalid_to_fifo_lane1_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_lane1_i));
  board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_12 descrambler_64b66b_gtx0_lane2_i
       (.CB_detect(CB_detect_21),
        .CB_detect0(CB_detect0_20),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_7),
        .CC_detect_dlyd1(CC_detect_dlyd1_8),
        .CC_detect_pulse_i(CC_detect_pulse_i_22),
        .D({rxdatavalid_to_fifo_lane2_i,rxheader_to_fifo_lane2_i}),
        .E(rxdatavalid_lane2_i),
        .Q(rxdata_from_gtx_lane2_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_lane2_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane2_q),
        .p_9_in(p_9_in));
  board_aurora_64b66b_0_2_DESCRAMBLER_64B66B_13 descrambler_64b66b_gtx0_lane3_i
       (.CB_detect(CB_detect_24),
        .CB_detect0(CB_detect0_23),
        .CB_detect_dlyd0p5(CB_detect_dlyd0p5_13),
        .CC_detect_dlyd1(CC_detect_dlyd1_14),
        .CC_detect_pulse_i(CC_detect_pulse_i_26),
        .E(rxdatavalid_lane3_i),
        .Q(rxheader_to_fifo_lane3_i),
        .UNSCRAMBLED_DATA_OUT(rxdata_to_fifo_lane3_i),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxlossofsync_out_lane3_q),
        .p_6_in(p_6_in_25),
        .rxdatavalid_to_fifo_lane3_i(rxdatavalid_to_fifo_lane3_i),
        .\unscrambled_data_i_reg[63]_0 (rxdata_from_gtx_lane3_i));
  LUT1 #(
    .INIT(2'h1)) 
    \hard_err_cntr_r[0]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .O(p_0_in__10[0]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \hard_err_cntr_r[1]_i_1 
       (.I0(hard_err_cntr_r_reg[0]),
        .I1(hard_err_cntr_r_reg[1]),
        .O(p_0_in__10[1]));
  (* SOFT_HLUTNM = "soft_lutpair359" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \hard_err_cntr_r[2]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(p_0_in__10[2]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \hard_err_cntr_r[3]_i_1 
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[1]),
        .I3(hard_err_cntr_r_reg[3]),
        .O(p_0_in__10[3]));
  (* SOFT_HLUTNM = "soft_lutpair348" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \hard_err_cntr_r[4]_i_1 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[1]),
        .I2(hard_err_cntr_r_reg[0]),
        .I3(hard_err_cntr_r_reg[2]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(p_0_in__10[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \hard_err_cntr_r[5]_i_1 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[4]),
        .I5(hard_err_cntr_r_reg[5]),
        .O(p_0_in__10[5]));
  LUT5 #(
    .INIT(32'hBFFF4000)) 
    \hard_err_cntr_r[6]_i_1 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[6]),
        .O(p_0_in__10[6]));
  LUT6 #(
    .INIT(64'hBFFFFFFF40000000)) 
    \hard_err_cntr_r[7]_i_3 
       (.I0(\hard_err_cntr_r[7]_i_6_n_0 ),
        .I1(hard_err_cntr_r_reg[5]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[4]),
        .I4(hard_err_cntr_r_reg[6]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(p_0_in__10[7]));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \hard_err_cntr_r[7]_i_4 
       (.I0(hard_err_cntr_r_reg[6]),
        .I1(hard_err_cntr_r_reg[4]),
        .I2(hard_err_cntr_r_reg[3]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[7]),
        .O(\hard_err_cntr_r[7]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair345" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \hard_err_cntr_r[7]_i_5 
       (.I0(hard_err_cntr_r_reg[3]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[7]),
        .I3(hard_err_cntr_r_reg[5]),
        .I4(hard_err_cntr_r_reg[4]),
        .O(\hard_err_cntr_r[7]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT3 #(
    .INIT(8'h7F)) 
    \hard_err_cntr_r[7]_i_6 
       (.I0(hard_err_cntr_r_reg[1]),
        .I1(hard_err_cntr_r_reg[0]),
        .I2(hard_err_cntr_r_reg[2]),
        .O(\hard_err_cntr_r[7]_i_6_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[0] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[0]),
        .Q(hard_err_cntr_r_reg[0]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[1] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[1]),
        .Q(hard_err_cntr_r_reg[1]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[2] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[2]),
        .Q(hard_err_cntr_r_reg[2]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[3] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[3]),
        .Q(hard_err_cntr_r_reg[3]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[4] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[4]),
        .Q(hard_err_cntr_r_reg[4]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[5] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[5]),
        .Q(hard_err_cntr_r_reg[5]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[6] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[6]),
        .Q(hard_err_cntr_r_reg[6]),
        .R(HPCNT_RESET_IN));
  FDRE #(
    .INIT(1'b0)) 
    \hard_err_cntr_r_reg[7] 
       (.C(init_clk),
        .CE(hard_err_cntr_r),
        .D(p_0_in__10[7]),
        .Q(hard_err_cntr_r_reg[7]),
        .R(HPCNT_RESET_IN));
  (* SOFT_HLUTNM = "soft_lutpair358" *) 
  LUT4 #(
    .INIT(16'hAAAE)) 
    hard_err_rst_int_i_3
       (.I0(hard_err_rst_int_i_4_n_0),
        .I1(hard_err_cntr_r_reg[2]),
        .I2(hard_err_cntr_r_reg[0]),
        .I3(hard_err_cntr_r_reg[1]),
        .O(hard_err_rst_int0));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFE)) 
    hard_err_rst_int_i_4
       (.I0(hard_err_cntr_r_reg[2]),
        .I1(hard_err_cntr_r_reg[6]),
        .I2(hard_err_cntr_r_reg[4]),
        .I3(hard_err_cntr_r_reg[3]),
        .I4(hard_err_cntr_r_reg[5]),
        .I5(hard_err_cntr_r_reg[7]),
        .O(hard_err_rst_int_i_4_n_0));
  FDRE hard_err_rst_int_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(u_cdc_hard_err_init_n_0),
        .Q(hard_err_rst_int),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    hard_err_usr_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(hard_err_usr0),
        .Q(hard_err_usr),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    new_gtx_rx_pcsreset_comb_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(new_gtx_rx_pcsreset_comb0),
        .Q(new_gtx_rx_pcsreset_comb),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[0]),
        .Q(pos_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[10]),
        .Q(pos_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[11]),
        .Q(pos_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[12]),
        .Q(pos_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[13]),
        .Q(pos_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[14]),
        .Q(pos_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[15]),
        .Q(pos_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[16]),
        .Q(pos_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[17]),
        .Q(pos_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[18]),
        .Q(pos_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[19]),
        .Q(pos_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[1]),
        .Q(pos_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[20]),
        .Q(pos_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[21]),
        .Q(pos_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[22]),
        .Q(pos_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[23]),
        .Q(pos_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[24]),
        .Q(pos_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[25]),
        .Q(pos_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[26]),
        .Q(pos_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[27]),
        .Q(pos_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[28]),
        .Q(pos_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[29]),
        .Q(pos_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[2]),
        .Q(pos_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[30]),
        .Q(pos_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[31]),
        .Q(pos_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[32]),
        .Q(pos_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[33]),
        .Q(pos_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[34]),
        .Q(pos_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[35]),
        .Q(pos_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[36]),
        .Q(pos_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[37]),
        .Q(pos_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[38]),
        .Q(pos_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[39]),
        .Q(pos_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[3]),
        .Q(pos_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[40]),
        .Q(pos_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[41]),
        .Q(pos_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[42]),
        .Q(pos_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[43]),
        .Q(pos_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[44]),
        .Q(pos_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[45]),
        .Q(pos_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[46]),
        .Q(pos_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[47]),
        .Q(pos_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[48]),
        .Q(pos_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[49]),
        .Q(pos_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[4]),
        .Q(pos_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[50]),
        .Q(pos_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[51]),
        .Q(pos_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[52]),
        .Q(pos_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[53]),
        .Q(pos_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[54]),
        .Q(pos_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[55]),
        .Q(pos_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[56]),
        .Q(pos_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[57]),
        .Q(pos_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[58]),
        .Q(pos_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[59]),
        .Q(pos_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[5]),
        .Q(pos_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[60]),
        .Q(pos_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[61]),
        .Q(pos_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[62]),
        .Q(pos_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[63]),
        .Q(pos_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[6]),
        .Q(pos_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[7]),
        .Q(pos_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[8]),
        .Q(pos_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_i),
        .D(pre_r1_rxdata_from_gtx_i[9]),
        .Q(pos_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[0]),
        .Q(pos_rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[10]),
        .Q(pos_rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[11]),
        .Q(pos_rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[12]),
        .Q(pos_rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[13]),
        .Q(pos_rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[14]),
        .Q(pos_rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[15]),
        .Q(pos_rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[16]),
        .Q(pos_rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[17]),
        .Q(pos_rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[18]),
        .Q(pos_rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[19]),
        .Q(pos_rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[1]),
        .Q(pos_rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[20]),
        .Q(pos_rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[21]),
        .Q(pos_rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[22]),
        .Q(pos_rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[23]),
        .Q(pos_rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[24]),
        .Q(pos_rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[25]),
        .Q(pos_rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[26]),
        .Q(pos_rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[27]),
        .Q(pos_rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[28]),
        .Q(pos_rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[29]),
        .Q(pos_rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[2]),
        .Q(pos_rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[30]),
        .Q(pos_rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[31]),
        .Q(pos_rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[32]),
        .Q(pos_rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[33]),
        .Q(pos_rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[34]),
        .Q(pos_rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[35]),
        .Q(pos_rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[36]),
        .Q(pos_rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[37]),
        .Q(pos_rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[38]),
        .Q(pos_rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[39]),
        .Q(pos_rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[3]),
        .Q(pos_rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[40]),
        .Q(pos_rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[41]),
        .Q(pos_rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[42]),
        .Q(pos_rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[43]),
        .Q(pos_rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[44]),
        .Q(pos_rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[45]),
        .Q(pos_rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[46]),
        .Q(pos_rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[47]),
        .Q(pos_rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[48]),
        .Q(pos_rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[49]),
        .Q(pos_rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[4]),
        .Q(pos_rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[50]),
        .Q(pos_rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[51]),
        .Q(pos_rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[52]),
        .Q(pos_rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[53]),
        .Q(pos_rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[54]),
        .Q(pos_rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[55]),
        .Q(pos_rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[56]),
        .Q(pos_rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[57]),
        .Q(pos_rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[58]),
        .Q(pos_rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[59]),
        .Q(pos_rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[5]),
        .Q(pos_rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[60]),
        .Q(pos_rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[61]),
        .Q(pos_rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[62]),
        .Q(pos_rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[63]),
        .Q(pos_rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[6]),
        .Q(pos_rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[7]),
        .Q(pos_rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[8]),
        .Q(pos_rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane1_i),
        .D(pre_r1_rxdata_from_gtx_lane1_i[9]),
        .Q(pos_rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[0]),
        .Q(pos_rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[10]),
        .Q(pos_rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[11]),
        .Q(pos_rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[12]),
        .Q(pos_rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[13]),
        .Q(pos_rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[14]),
        .Q(pos_rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[15]),
        .Q(pos_rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[16]),
        .Q(pos_rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[17]),
        .Q(pos_rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[18]),
        .Q(pos_rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[19]),
        .Q(pos_rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[1]),
        .Q(pos_rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[20]),
        .Q(pos_rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[21]),
        .Q(pos_rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[22]),
        .Q(pos_rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[23]),
        .Q(pos_rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[24]),
        .Q(pos_rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[25]),
        .Q(pos_rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[26]),
        .Q(pos_rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[27]),
        .Q(pos_rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[28]),
        .Q(pos_rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[29]),
        .Q(pos_rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[2]),
        .Q(pos_rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[30]),
        .Q(pos_rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[31]),
        .Q(pos_rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[32]),
        .Q(pos_rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[33]),
        .Q(pos_rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[34]),
        .Q(pos_rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[35]),
        .Q(pos_rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[36]),
        .Q(pos_rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[37]),
        .Q(pos_rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[38]),
        .Q(pos_rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[39]),
        .Q(pos_rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[3]),
        .Q(pos_rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[40]),
        .Q(pos_rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[41]),
        .Q(pos_rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[42]),
        .Q(pos_rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[43]),
        .Q(pos_rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[44]),
        .Q(pos_rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[45]),
        .Q(pos_rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[46]),
        .Q(pos_rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[47]),
        .Q(pos_rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[48]),
        .Q(pos_rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[49]),
        .Q(pos_rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[4]),
        .Q(pos_rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[50]),
        .Q(pos_rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[51]),
        .Q(pos_rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[52]),
        .Q(pos_rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[53]),
        .Q(pos_rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[54]),
        .Q(pos_rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[55]),
        .Q(pos_rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[56]),
        .Q(pos_rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[57]),
        .Q(pos_rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[58]),
        .Q(pos_rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[59]),
        .Q(pos_rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[5]),
        .Q(pos_rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[60]),
        .Q(pos_rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[61]),
        .Q(pos_rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[62]),
        .Q(pos_rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[63]),
        .Q(pos_rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[6]),
        .Q(pos_rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[7]),
        .Q(pos_rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[8]),
        .Q(pos_rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane2_i),
        .D(pre_r1_rxdata_from_gtx_lane2_i[9]),
        .Q(pos_rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[0]),
        .Q(pos_rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[10]),
        .Q(pos_rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[11]),
        .Q(pos_rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[12]),
        .Q(pos_rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[13]),
        .Q(pos_rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[14]),
        .Q(pos_rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[15]),
        .Q(pos_rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[16]),
        .Q(pos_rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[17]),
        .Q(pos_rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[18]),
        .Q(pos_rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[19]),
        .Q(pos_rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[1]),
        .Q(pos_rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[20]),
        .Q(pos_rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[21]),
        .Q(pos_rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[22]),
        .Q(pos_rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[23]),
        .Q(pos_rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[24]),
        .Q(pos_rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[25]),
        .Q(pos_rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[26]),
        .Q(pos_rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[27]),
        .Q(pos_rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[28]),
        .Q(pos_rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[29]),
        .Q(pos_rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[2]),
        .Q(pos_rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[30]),
        .Q(pos_rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[31]),
        .Q(pos_rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[32]),
        .Q(pos_rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[33]),
        .Q(pos_rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[34]),
        .Q(pos_rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[35]),
        .Q(pos_rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[36]),
        .Q(pos_rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[37]),
        .Q(pos_rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[38]),
        .Q(pos_rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[39]),
        .Q(pos_rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[3]),
        .Q(pos_rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[40]),
        .Q(pos_rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[41]),
        .Q(pos_rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[42]),
        .Q(pos_rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[43]),
        .Q(pos_rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[44]),
        .Q(pos_rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[45]),
        .Q(pos_rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[46]),
        .Q(pos_rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[47]),
        .Q(pos_rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[48]),
        .Q(pos_rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[49]),
        .Q(pos_rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[4]),
        .Q(pos_rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[50]),
        .Q(pos_rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[51]),
        .Q(pos_rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[52]),
        .Q(pos_rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[53]),
        .Q(pos_rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[54]),
        .Q(pos_rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[55]),
        .Q(pos_rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[56]),
        .Q(pos_rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[57]),
        .Q(pos_rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[58]),
        .Q(pos_rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[59]),
        .Q(pos_rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[5]),
        .Q(pos_rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[60]),
        .Q(pos_rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[61]),
        .Q(pos_rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[62]),
        .Q(pos_rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[63]),
        .Q(pos_rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[6]),
        .Q(pos_rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[7]),
        .Q(pos_rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[8]),
        .Q(pos_rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxdatavalid_lane3_i),
        .D(pre_r1_rxdata_from_gtx_lane3_i[9]),
        .Q(pos_rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_i),
        .Q(pos_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane1_i),
        .Q(pos_rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane2_i),
        .Q(pos_rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxdatavalid_lane3_i),
        .Q(pos_rxdatavalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[0]),
        .Q(pos_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_i),
        .D(pre_r1_rxheader_from_gtx_i[1]),
        .Q(pos_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane1_i),
        .D(pre_r1_rxheader_from_gtx_lane1_i[0]),
        .Q(pos_rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane1_i),
        .D(pre_r1_rxheader_from_gtx_lane1_i[1]),
        .Q(pos_rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane2_i),
        .D(pre_r1_rxheader_from_gtx_lane2_i[0]),
        .Q(pos_rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane2_i),
        .D(pre_r1_rxheader_from_gtx_lane2_i[1]),
        .Q(pos_rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane3_i),
        .D(pre_r1_rxheader_from_gtx_lane3_i[0]),
        .Q(pos_rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pos_rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(pre_r1_rxheadervalid_lane3_i),
        .D(pre_r1_rxheader_from_gtx_lane3_i[1]),
        .Q(pos_rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_i),
        .Q(pos_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane1_i),
        .Q(pos_rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane2_i),
        .Q(pos_rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pos_rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_r1_rxheadervalid_lane3_i),
        .Q(pos_rxheadervalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[0]),
        .Q(pre_r1_rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[10]),
        .Q(pre_r1_rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[11]),
        .Q(pre_r1_rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[12]),
        .Q(pre_r1_rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[13]),
        .Q(pre_r1_rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[14]),
        .Q(pre_r1_rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[15]),
        .Q(pre_r1_rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[16]),
        .Q(pre_r1_rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[17]),
        .Q(pre_r1_rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[18]),
        .Q(pre_r1_rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[19]),
        .Q(pre_r1_rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[1]),
        .Q(pre_r1_rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[20]),
        .Q(pre_r1_rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[21]),
        .Q(pre_r1_rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[22]),
        .Q(pre_r1_rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[23]),
        .Q(pre_r1_rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[24]),
        .Q(pre_r1_rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[25]),
        .Q(pre_r1_rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[26]),
        .Q(pre_r1_rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[27]),
        .Q(pre_r1_rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[28]),
        .Q(pre_r1_rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[29]),
        .Q(pre_r1_rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[2]),
        .Q(pre_r1_rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[30]),
        .Q(pre_r1_rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[31]),
        .Q(pre_r1_rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[32]),
        .Q(pre_r1_rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[33]),
        .Q(pre_r1_rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[34]),
        .Q(pre_r1_rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[35]),
        .Q(pre_r1_rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[36]),
        .Q(pre_r1_rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[37]),
        .Q(pre_r1_rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[38]),
        .Q(pre_r1_rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[39]),
        .Q(pre_r1_rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[3]),
        .Q(pre_r1_rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[40]),
        .Q(pre_r1_rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[41]),
        .Q(pre_r1_rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[42]),
        .Q(pre_r1_rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[43]),
        .Q(pre_r1_rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[44]),
        .Q(pre_r1_rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[45]),
        .Q(pre_r1_rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[46]),
        .Q(pre_r1_rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[47]),
        .Q(pre_r1_rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[48]),
        .Q(pre_r1_rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[49]),
        .Q(pre_r1_rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[4]),
        .Q(pre_r1_rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[50]),
        .Q(pre_r1_rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[51]),
        .Q(pre_r1_rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[52]),
        .Q(pre_r1_rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[53]),
        .Q(pre_r1_rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[54]),
        .Q(pre_r1_rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[55]),
        .Q(pre_r1_rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[56]),
        .Q(pre_r1_rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[57]),
        .Q(pre_r1_rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[58]),
        .Q(pre_r1_rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[59]),
        .Q(pre_r1_rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[5]),
        .Q(pre_r1_rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[60]),
        .Q(pre_r1_rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[61]),
        .Q(pre_r1_rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[62]),
        .Q(pre_r1_rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[63]),
        .Q(pre_r1_rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[6]),
        .Q(pre_r1_rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[7]),
        .Q(pre_r1_rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[8]),
        .Q(pre_r1_rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_i[9]),
        .Q(pre_r1_rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane1_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane2_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[0]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[10]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[11]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[12]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[13]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[14]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[15]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[16]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[17]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[18]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[19]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[1]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[20]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[21]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[22]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[23]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[24]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[25]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[26]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[27]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[28]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[29]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[2]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[30]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[31]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[32]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[33]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[34]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[35]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[36]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[37]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[38]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[39]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[3]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[40]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[41]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[42]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[43]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[44]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[45]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[46]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[47]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[48]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[49]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[4]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[50]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[51]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[52]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[53]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[54]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[55]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[56]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[57]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[58]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[59]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[5]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[60]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[61]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[62]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[63]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[6]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[7]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[8]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdata_from_gtx_lane3_i[9]),
        .Q(pre_r1_rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_i),
        .Q(pre_r1_rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane1_i),
        .Q(pre_r1_rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane2_i),
        .Q(pre_r1_rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxdatavalid_lane3_i),
        .Q(pre_r1_rxdatavalid_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[0]),
        .Q(pre_r1_rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_i[1]),
        .Q(pre_r1_rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane1_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane1_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane2_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane2_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane3_i[0]),
        .Q(pre_r1_rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \pre_r1_rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheader_from_gtx_lane3_i[1]),
        .Q(pre_r1_rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_i),
        .Q(pre_r1_rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane1_i),
        .Q(pre_r1_rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane2_i),
        .Q(pre_r1_rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE pre_r1_rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pre_rxheadervalid_lane3_i),
        .Q(pre_r1_rxheadervalid_lane3_i),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rx_elastic_buf_err_int
       (.I0(int_gt_rxbufstatus[8]),
        .I1(int_gt_rxbufstatus[2]),
        .I2(int_gt_rxbufstatus[5]),
        .I3(int_gt_rxbufstatus[11]),
        .O(rx_elastic_buf_err_int__0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[0]),
        .Q(rxdata_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[10]),
        .Q(rxdata_from_gtx_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[11]),
        .Q(rxdata_from_gtx_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[12]),
        .Q(rxdata_from_gtx_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[13]),
        .Q(rxdata_from_gtx_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[14]),
        .Q(rxdata_from_gtx_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[15]),
        .Q(rxdata_from_gtx_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[16]),
        .Q(rxdata_from_gtx_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[17]),
        .Q(rxdata_from_gtx_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[18]),
        .Q(rxdata_from_gtx_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[19]),
        .Q(rxdata_from_gtx_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[1]),
        .Q(rxdata_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[20]),
        .Q(rxdata_from_gtx_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[21]),
        .Q(rxdata_from_gtx_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[22]),
        .Q(rxdata_from_gtx_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[23]),
        .Q(rxdata_from_gtx_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[24]),
        .Q(rxdata_from_gtx_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[25]),
        .Q(rxdata_from_gtx_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[26]),
        .Q(rxdata_from_gtx_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[27]),
        .Q(rxdata_from_gtx_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[28]),
        .Q(rxdata_from_gtx_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[29]),
        .Q(rxdata_from_gtx_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[2]),
        .Q(rxdata_from_gtx_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[30]),
        .Q(rxdata_from_gtx_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[31]),
        .Q(rxdata_from_gtx_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[32]),
        .Q(rxdata_from_gtx_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[33]),
        .Q(rxdata_from_gtx_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[34]),
        .Q(rxdata_from_gtx_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[35]),
        .Q(rxdata_from_gtx_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[36]),
        .Q(rxdata_from_gtx_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[37]),
        .Q(rxdata_from_gtx_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[38]),
        .Q(rxdata_from_gtx_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[39]),
        .Q(rxdata_from_gtx_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[3]),
        .Q(rxdata_from_gtx_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[40]),
        .Q(rxdata_from_gtx_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[41]),
        .Q(rxdata_from_gtx_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[42]),
        .Q(rxdata_from_gtx_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[43]),
        .Q(rxdata_from_gtx_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[44]),
        .Q(rxdata_from_gtx_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[45]),
        .Q(rxdata_from_gtx_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[46]),
        .Q(rxdata_from_gtx_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[47]),
        .Q(rxdata_from_gtx_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[48]),
        .Q(rxdata_from_gtx_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[49]),
        .Q(rxdata_from_gtx_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[4]),
        .Q(rxdata_from_gtx_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[50]),
        .Q(rxdata_from_gtx_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[51]),
        .Q(rxdata_from_gtx_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[52]),
        .Q(rxdata_from_gtx_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[53]),
        .Q(rxdata_from_gtx_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[54]),
        .Q(rxdata_from_gtx_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[55]),
        .Q(rxdata_from_gtx_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[56]),
        .Q(rxdata_from_gtx_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[57]),
        .Q(rxdata_from_gtx_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[58]),
        .Q(rxdata_from_gtx_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[59]),
        .Q(rxdata_from_gtx_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[5]),
        .Q(rxdata_from_gtx_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[60]),
        .Q(rxdata_from_gtx_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[61]),
        .Q(rxdata_from_gtx_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[62]),
        .Q(rxdata_from_gtx_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[63]),
        .Q(rxdata_from_gtx_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[6]),
        .Q(rxdata_from_gtx_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[7]),
        .Q(rxdata_from_gtx_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[8]),
        .Q(rxdata_from_gtx_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_i[9]),
        .Q(rxdata_from_gtx_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[0]),
        .Q(rxdata_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[10]),
        .Q(rxdata_from_gtx_lane1_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[11]),
        .Q(rxdata_from_gtx_lane1_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[12]),
        .Q(rxdata_from_gtx_lane1_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[13]),
        .Q(rxdata_from_gtx_lane1_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[14]),
        .Q(rxdata_from_gtx_lane1_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[15]),
        .Q(rxdata_from_gtx_lane1_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[16]),
        .Q(rxdata_from_gtx_lane1_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[17]),
        .Q(rxdata_from_gtx_lane1_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[18]),
        .Q(rxdata_from_gtx_lane1_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[19]),
        .Q(rxdata_from_gtx_lane1_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[1]),
        .Q(rxdata_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[20]),
        .Q(rxdata_from_gtx_lane1_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[21]),
        .Q(rxdata_from_gtx_lane1_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[22]),
        .Q(rxdata_from_gtx_lane1_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[23]),
        .Q(rxdata_from_gtx_lane1_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[24]),
        .Q(rxdata_from_gtx_lane1_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[25]),
        .Q(rxdata_from_gtx_lane1_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[26]),
        .Q(rxdata_from_gtx_lane1_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[27]),
        .Q(rxdata_from_gtx_lane1_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[28]),
        .Q(rxdata_from_gtx_lane1_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[29]),
        .Q(rxdata_from_gtx_lane1_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[2]),
        .Q(rxdata_from_gtx_lane1_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[30]),
        .Q(rxdata_from_gtx_lane1_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[31]),
        .Q(rxdata_from_gtx_lane1_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[32]),
        .Q(rxdata_from_gtx_lane1_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[33]),
        .Q(rxdata_from_gtx_lane1_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[34]),
        .Q(rxdata_from_gtx_lane1_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[35]),
        .Q(rxdata_from_gtx_lane1_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[36]),
        .Q(rxdata_from_gtx_lane1_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[37]),
        .Q(rxdata_from_gtx_lane1_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[38]),
        .Q(rxdata_from_gtx_lane1_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[39]),
        .Q(rxdata_from_gtx_lane1_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[3]),
        .Q(rxdata_from_gtx_lane1_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[40]),
        .Q(rxdata_from_gtx_lane1_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[41]),
        .Q(rxdata_from_gtx_lane1_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[42]),
        .Q(rxdata_from_gtx_lane1_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[43]),
        .Q(rxdata_from_gtx_lane1_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[44]),
        .Q(rxdata_from_gtx_lane1_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[45]),
        .Q(rxdata_from_gtx_lane1_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[46]),
        .Q(rxdata_from_gtx_lane1_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[47]),
        .Q(rxdata_from_gtx_lane1_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[48]),
        .Q(rxdata_from_gtx_lane1_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[49]),
        .Q(rxdata_from_gtx_lane1_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[4]),
        .Q(rxdata_from_gtx_lane1_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[50]),
        .Q(rxdata_from_gtx_lane1_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[51]),
        .Q(rxdata_from_gtx_lane1_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[52]),
        .Q(rxdata_from_gtx_lane1_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[53]),
        .Q(rxdata_from_gtx_lane1_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[54]),
        .Q(rxdata_from_gtx_lane1_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[55]),
        .Q(rxdata_from_gtx_lane1_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[56]),
        .Q(rxdata_from_gtx_lane1_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[57]),
        .Q(rxdata_from_gtx_lane1_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[58]),
        .Q(rxdata_from_gtx_lane1_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[59]),
        .Q(rxdata_from_gtx_lane1_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[5]),
        .Q(rxdata_from_gtx_lane1_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[60]),
        .Q(rxdata_from_gtx_lane1_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[61]),
        .Q(rxdata_from_gtx_lane1_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[62]),
        .Q(rxdata_from_gtx_lane1_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[63]),
        .Q(rxdata_from_gtx_lane1_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[6]),
        .Q(rxdata_from_gtx_lane1_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[7]),
        .Q(rxdata_from_gtx_lane1_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[8]),
        .Q(rxdata_from_gtx_lane1_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane1_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane1_i[9]),
        .Q(rxdata_from_gtx_lane1_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[0]),
        .Q(rxdata_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[10]),
        .Q(rxdata_from_gtx_lane2_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[11]),
        .Q(rxdata_from_gtx_lane2_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[12]),
        .Q(rxdata_from_gtx_lane2_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[13]),
        .Q(rxdata_from_gtx_lane2_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[14]),
        .Q(rxdata_from_gtx_lane2_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[15]),
        .Q(rxdata_from_gtx_lane2_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[16]),
        .Q(rxdata_from_gtx_lane2_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[17]),
        .Q(rxdata_from_gtx_lane2_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[18]),
        .Q(rxdata_from_gtx_lane2_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[19]),
        .Q(rxdata_from_gtx_lane2_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[1]),
        .Q(rxdata_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[20]),
        .Q(rxdata_from_gtx_lane2_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[21]),
        .Q(rxdata_from_gtx_lane2_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[22]),
        .Q(rxdata_from_gtx_lane2_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[23]),
        .Q(rxdata_from_gtx_lane2_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[24]),
        .Q(rxdata_from_gtx_lane2_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[25]),
        .Q(rxdata_from_gtx_lane2_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[26]),
        .Q(rxdata_from_gtx_lane2_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[27]),
        .Q(rxdata_from_gtx_lane2_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[28]),
        .Q(rxdata_from_gtx_lane2_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[29]),
        .Q(rxdata_from_gtx_lane2_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[2]),
        .Q(rxdata_from_gtx_lane2_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[30]),
        .Q(rxdata_from_gtx_lane2_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[31]),
        .Q(rxdata_from_gtx_lane2_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[32]),
        .Q(rxdata_from_gtx_lane2_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[33]),
        .Q(rxdata_from_gtx_lane2_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[34]),
        .Q(rxdata_from_gtx_lane2_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[35]),
        .Q(rxdata_from_gtx_lane2_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[36]),
        .Q(rxdata_from_gtx_lane2_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[37]),
        .Q(rxdata_from_gtx_lane2_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[38]),
        .Q(rxdata_from_gtx_lane2_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[39]),
        .Q(rxdata_from_gtx_lane2_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[3]),
        .Q(rxdata_from_gtx_lane2_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[40]),
        .Q(rxdata_from_gtx_lane2_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[41]),
        .Q(rxdata_from_gtx_lane2_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[42]),
        .Q(rxdata_from_gtx_lane2_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[43]),
        .Q(rxdata_from_gtx_lane2_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[44]),
        .Q(rxdata_from_gtx_lane2_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[45]),
        .Q(rxdata_from_gtx_lane2_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[46]),
        .Q(rxdata_from_gtx_lane2_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[47]),
        .Q(rxdata_from_gtx_lane2_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[48]),
        .Q(rxdata_from_gtx_lane2_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[49]),
        .Q(rxdata_from_gtx_lane2_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[4]),
        .Q(rxdata_from_gtx_lane2_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[50]),
        .Q(rxdata_from_gtx_lane2_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[51]),
        .Q(rxdata_from_gtx_lane2_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[52]),
        .Q(rxdata_from_gtx_lane2_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[53]),
        .Q(rxdata_from_gtx_lane2_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[54]),
        .Q(rxdata_from_gtx_lane2_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[55]),
        .Q(rxdata_from_gtx_lane2_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[56]),
        .Q(rxdata_from_gtx_lane2_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[57]),
        .Q(rxdata_from_gtx_lane2_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[58]),
        .Q(rxdata_from_gtx_lane2_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[59]),
        .Q(rxdata_from_gtx_lane2_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[5]),
        .Q(rxdata_from_gtx_lane2_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[60]),
        .Q(rxdata_from_gtx_lane2_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[61]),
        .Q(rxdata_from_gtx_lane2_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[62]),
        .Q(rxdata_from_gtx_lane2_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[63]),
        .Q(rxdata_from_gtx_lane2_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[6]),
        .Q(rxdata_from_gtx_lane2_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[7]),
        .Q(rxdata_from_gtx_lane2_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[8]),
        .Q(rxdata_from_gtx_lane2_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane2_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane2_i[9]),
        .Q(rxdata_from_gtx_lane2_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[0]),
        .Q(rxdata_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[10] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[10]),
        .Q(rxdata_from_gtx_lane3_i[10]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[11] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[11]),
        .Q(rxdata_from_gtx_lane3_i[11]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[12] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[12]),
        .Q(rxdata_from_gtx_lane3_i[12]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[13] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[13]),
        .Q(rxdata_from_gtx_lane3_i[13]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[14] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[14]),
        .Q(rxdata_from_gtx_lane3_i[14]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[15] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[15]),
        .Q(rxdata_from_gtx_lane3_i[15]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[16] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[16]),
        .Q(rxdata_from_gtx_lane3_i[16]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[17] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[17]),
        .Q(rxdata_from_gtx_lane3_i[17]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[18] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[18]),
        .Q(rxdata_from_gtx_lane3_i[18]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[19] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[19]),
        .Q(rxdata_from_gtx_lane3_i[19]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[1]),
        .Q(rxdata_from_gtx_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[20] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[20]),
        .Q(rxdata_from_gtx_lane3_i[20]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[21] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[21]),
        .Q(rxdata_from_gtx_lane3_i[21]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[22] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[22]),
        .Q(rxdata_from_gtx_lane3_i[22]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[23] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[23]),
        .Q(rxdata_from_gtx_lane3_i[23]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[24] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[24]),
        .Q(rxdata_from_gtx_lane3_i[24]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[25] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[25]),
        .Q(rxdata_from_gtx_lane3_i[25]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[26] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[26]),
        .Q(rxdata_from_gtx_lane3_i[26]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[27] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[27]),
        .Q(rxdata_from_gtx_lane3_i[27]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[28] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[28]),
        .Q(rxdata_from_gtx_lane3_i[28]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[29] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[29]),
        .Q(rxdata_from_gtx_lane3_i[29]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[2] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[2]),
        .Q(rxdata_from_gtx_lane3_i[2]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[30] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[30]),
        .Q(rxdata_from_gtx_lane3_i[30]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[31] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[31]),
        .Q(rxdata_from_gtx_lane3_i[31]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[32] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[32]),
        .Q(rxdata_from_gtx_lane3_i[32]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[33] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[33]),
        .Q(rxdata_from_gtx_lane3_i[33]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[34] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[34]),
        .Q(rxdata_from_gtx_lane3_i[34]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[35] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[35]),
        .Q(rxdata_from_gtx_lane3_i[35]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[36] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[36]),
        .Q(rxdata_from_gtx_lane3_i[36]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[37] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[37]),
        .Q(rxdata_from_gtx_lane3_i[37]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[38] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[38]),
        .Q(rxdata_from_gtx_lane3_i[38]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[39] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[39]),
        .Q(rxdata_from_gtx_lane3_i[39]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[3] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[3]),
        .Q(rxdata_from_gtx_lane3_i[3]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[40] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[40]),
        .Q(rxdata_from_gtx_lane3_i[40]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[41] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[41]),
        .Q(rxdata_from_gtx_lane3_i[41]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[42] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[42]),
        .Q(rxdata_from_gtx_lane3_i[42]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[43] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[43]),
        .Q(rxdata_from_gtx_lane3_i[43]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[44] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[44]),
        .Q(rxdata_from_gtx_lane3_i[44]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[45] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[45]),
        .Q(rxdata_from_gtx_lane3_i[45]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[46] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[46]),
        .Q(rxdata_from_gtx_lane3_i[46]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[47] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[47]),
        .Q(rxdata_from_gtx_lane3_i[47]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[48] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[48]),
        .Q(rxdata_from_gtx_lane3_i[48]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[49] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[49]),
        .Q(rxdata_from_gtx_lane3_i[49]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[4] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[4]),
        .Q(rxdata_from_gtx_lane3_i[4]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[50] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[50]),
        .Q(rxdata_from_gtx_lane3_i[50]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[51] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[51]),
        .Q(rxdata_from_gtx_lane3_i[51]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[52] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[52]),
        .Q(rxdata_from_gtx_lane3_i[52]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[53] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[53]),
        .Q(rxdata_from_gtx_lane3_i[53]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[54] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[54]),
        .Q(rxdata_from_gtx_lane3_i[54]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[55] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[55]),
        .Q(rxdata_from_gtx_lane3_i[55]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[56] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[56]),
        .Q(rxdata_from_gtx_lane3_i[56]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[57] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[57]),
        .Q(rxdata_from_gtx_lane3_i[57]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[58] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[58]),
        .Q(rxdata_from_gtx_lane3_i[58]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[59] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[59]),
        .Q(rxdata_from_gtx_lane3_i[59]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[5] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[5]),
        .Q(rxdata_from_gtx_lane3_i[5]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[60] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[60]),
        .Q(rxdata_from_gtx_lane3_i[60]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[61] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[61]),
        .Q(rxdata_from_gtx_lane3_i[61]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[62] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[62]),
        .Q(rxdata_from_gtx_lane3_i[62]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[63] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[63]),
        .Q(rxdata_from_gtx_lane3_i[63]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[6] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[6]),
        .Q(rxdata_from_gtx_lane3_i[6]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[7] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[7]),
        .Q(rxdata_from_gtx_lane3_i[7]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[8] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[8]),
        .Q(rxdata_from_gtx_lane3_i[8]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxdata_from_gtx_lane3_i_reg[9] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdata_from_gtx_lane3_i[9]),
        .Q(rxdata_from_gtx_lane3_i[9]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_i),
        .Q(rxdatavalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane1_i),
        .Q(rxdatavalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane2_i),
        .Q(rxdatavalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxdatavalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxdatavalid_lane3_i),
        .Q(rxdatavalid_lane3_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_i),
        .Q(rxdatavalid_to_fifo_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane1_i),
        .Q(rxdatavalid_to_fifo_lane1_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane2_i),
        .Q(rxdatavalid_to_fifo_lane2_i),
        .R(1'b0));
  FDRE rxdatavalid_to_fifo_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxdatavalid_lane3_i),
        .Q(rxdatavalid_to_fifo_lane3_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[0]),
        .Q(rxheader_from_gtx_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_i[1]),
        .Q(rxheader_from_gtx_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane1_i[0]),
        .Q(rxheader_from_gtx_lane1_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane1_i[1]),
        .Q(rxheader_from_gtx_lane1_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane2_i[0]),
        .Q(rxheader_from_gtx_lane2_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane2_i[1]),
        .Q(rxheader_from_gtx_lane2_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane3_i[0]),
        .Q(rxheader_from_gtx_lane3_i[0]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE \rxheader_from_gtx_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheader_from_gtx_lane3_i[1]),
        .Q(rxheader_from_gtx_lane3_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[0]),
        .Q(rxheader_to_fifo_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_i[1]),
        .Q(rxheader_to_fifo_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane1_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane1_i[0]),
        .Q(rxheader_to_fifo_lane1_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane1_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane1_i[1]),
        .Q(rxheader_to_fifo_lane1_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane2_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane2_i[0]),
        .Q(rxheader_to_fifo_lane2_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane2_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane2_i[1]),
        .Q(rxheader_to_fifo_lane2_i[1]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane3_i_reg[0] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane3_i[0]),
        .Q(rxheader_to_fifo_lane3_i[0]),
        .R(1'b0));
  FDRE \rxheader_to_fifo_lane3_i_reg[1] 
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(rxheader_from_gtx_lane3_i[1]),
        .Q(rxheader_to_fifo_lane3_i[1]),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_i),
        .Q(rxheadervalid_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane1_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane1_i),
        .Q(rxheadervalid_lane1_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane2_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane2_i),
        .Q(rxheadervalid_lane2_i),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE rxheadervalid_lane3_i_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(pos_rxheadervalid_lane3_i),
        .Q(rxheadervalid_lane3_i),
        .R(1'b0));
  FDRE rxlossofsync_out_lane1_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane1_i),
        .Q(rxlossofsync_out_lane1_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_lane2_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane2_i),
        .Q(rxlossofsync_out_lane2_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_lane3_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_lane3_i),
        .Q(rxlossofsync_out_lane3_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxlossofsync_out_q_reg
       (.C(rxusrclk_out),
        .CE(1'b1),
        .D(blocksync_out_i),
        .Q(rxlossofsync_out_q),
        .R(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  FDRE rxreset_for_lanes_q_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(rxreset_for_lanes),
        .Q(rxreset_for_lanes_q),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h02)) 
    s_axi_tx_tready_i_2
       (.I0(txdatavalid_i),
        .I1(s_axi_tx_tready_reg),
        .I2(do_cc_r),
        .O(pdu_ok_c));
  board_aurora_64b66b_0_2_SCRAMBLER_64B66B scrambler_64b66b_gtx0_i
       (.E(data_valid_i),
        .Q({\txseq_counter_i_reg_n_0_[6] ,\txseq_counter_i_reg_n_0_[5] ,\txseq_counter_i_reg_n_0_[4] ,\txseq_counter_i_reg_n_0_[3] ,\txseq_counter_i_reg_n_0_[2] ,\txseq_counter_i_reg_n_0_[1] ,\txseq_counter_i_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (TXDATA_IN_REG),
        .\scrambler_reg[57]_0 (stg4_reg));
  board_aurora_64b66b_0_2_SCRAMBLER_64B66B_14 scrambler_64b66b_gtx0_lane1_i
       (.Q({\txseq_counter_i_lane1_reg_n_0_[6] ,\txseq_counter_i_lane1_reg_n_0_[5] ,\txseq_counter_i_lane1_reg_n_0_[4] ,\txseq_counter_i_lane1_reg_n_0_[3] ,\txseq_counter_i_lane1_reg_n_0_[2] ,\txseq_counter_i_lane1_reg_n_0_[1] ,\txseq_counter_i_lane1_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_lane1_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (stg4_reg),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG_LANE1),
        .\txseq_counter_i_lane1_reg[1] (scrambler_64b66b_gtx0_lane1_i_n_0));
  board_aurora_64b66b_0_2_SCRAMBLER_64B66B_15 scrambler_64b66b_gtx0_lane2_i
       (.Q({\txseq_counter_i_lane2_reg_n_0_[6] ,\txseq_counter_i_lane2_reg_n_0_[5] ,\txseq_counter_i_lane2_reg_n_0_[4] ,\txseq_counter_i_lane2_reg_n_0_[3] ,\txseq_counter_i_lane2_reg_n_0_[2] ,\txseq_counter_i_lane2_reg_n_0_[1] ,\txseq_counter_i_lane2_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_lane2_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (TXDATA_IN_REG_LANE2),
        .\scrambler_reg[57]_0 (stg4_reg),
        .\txseq_counter_i_lane2_reg[1] (scrambler_64b66b_gtx0_lane2_i_n_0));
  board_aurora_64b66b_0_2_SCRAMBLER_64B66B_16 scrambler_64b66b_gtx0_lane3_i
       (.Q({\txseq_counter_i_lane3_reg_n_0_[6] ,\txseq_counter_i_lane3_reg_n_0_[5] ,\txseq_counter_i_lane3_reg_n_0_[4] ,\txseq_counter_i_lane3_reg_n_0_[3] ,\txseq_counter_i_lane3_reg_n_0_[2] ,\txseq_counter_i_lane3_reg_n_0_[1] ,\txseq_counter_i_lane3_reg_n_0_[0] }),
        .SCRAMBLED_DATA_OUT(scrambled_data_lane3_i),
        .\SCRAMBLED_DATA_OUT_reg[63]_0 (stg4_reg),
        .\SCRAMBLED_DATA_OUT_reg[63]_1 (TXDATA_IN_REG_LANE3),
        .\txseq_counter_i_lane3_reg[1] (scrambler_64b66b_gtx0_lane3_i_n_0));
  FDRE \tx_hdr_lane1_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane1_r_reg[1]_0 [0]),
        .Q(tx_hdr_lane1_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane1_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane1_r_reg[1]_0 [1]),
        .Q(tx_hdr_lane1_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_lane2_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane2_r_reg[1]_0 [0]),
        .Q(tx_hdr_lane2_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane2_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane2_r_reg[1]_0 [1]),
        .Q(tx_hdr_lane2_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_lane3_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane3_r_reg[1]_0 [0]),
        .Q(tx_hdr_lane3_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_lane3_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(\tx_hdr_lane3_r_reg[1]_0 [1]),
        .Q(tx_hdr_lane3_r[1]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(D[0]),
        .Q(tx_hdr_r[0]),
        .R(1'b0));
  FDRE \tx_hdr_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(D[1]),
        .Q(tx_hdr_r[1]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFBFFFFFFFFFBFFF)) 
    txdatavalid_in_r1_i_1
       (.I0(txdatavalid_in_r1_i_2_n_0),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[3] ),
        .I3(\txseq_counter_i_reg_n_0_[1] ),
        .I4(\txseq_counter_i_reg_n_0_[0] ),
        .I5(txsequence_ctr_en_int),
        .O(txdatavalid_i));
  LUT3 #(
    .INIT(8'hFB)) 
    txdatavalid_in_r1_i_2
       (.I0(\txseq_counter_i_reg_n_0_[5] ),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(\txseq_counter_i_reg_n_0_[6] ),
        .O(txdatavalid_in_r1_i_2_n_0));
  FDRE \txheader_lane1_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane1_r[0]),
        .Q(txheader_lane1_r[0]),
        .R(1'b0));
  FDRE \txheader_lane1_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane1_r[1]),
        .Q(txheader_lane1_r[1]),
        .R(1'b0));
  FDRE \txheader_lane2_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane2_r[0]),
        .Q(txheader_lane2_r[0]),
        .R(1'b0));
  FDRE \txheader_lane2_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane2_r[1]),
        .Q(txheader_lane2_r[1]),
        .R(1'b0));
  FDRE \txheader_lane3_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane3_r[0]),
        .Q(txheader_lane3_r[0]),
        .R(1'b0));
  FDRE \txheader_lane3_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_lane3_r[1]),
        .Q(txheader_lane3_r[1]),
        .R(1'b0));
  FDRE \txheader_r_reg[0] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_r[0]),
        .Q(txheader_r[0]),
        .R(1'b0));
  FDRE \txheader_r_reg[1] 
       (.C(stg4_reg),
        .CE(1'b1),
        .D(tx_hdr_r[1]),
        .Q(txheader_r[1]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \txseq_counter_i[0]_i_1 
       (.I0(data_valid_i),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .O(txseq_counter_i[0]));
  (* SOFT_HLUTNM = "soft_lutpair360" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i[1]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[0] ),
        .I1(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[1]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i[2]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[2] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[2]));
  (* SOFT_HLUTNM = "soft_lutpair356" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i[3]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[3] ),
        .I1(\txseq_counter_i_reg_n_0_[2] ),
        .I2(\txseq_counter_i_reg_n_0_[0] ),
        .I3(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[3]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i[4]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[4] ),
        .I1(\txseq_counter_i_reg_n_0_[3] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(\txseq_counter_i_reg_n_0_[0] ),
        .I4(\txseq_counter_i_reg_n_0_[1] ),
        .O(txseq_counter_i[4]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT4 #(
    .INIT(16'h2A80)) 
    \txseq_counter_i[5]_i_1 
       (.I0(data_valid_i),
        .I1(\txseq_counter_i_reg_n_0_[4] ),
        .I2(\txseq_counter_i[6]_i_2_n_0 ),
        .I3(\txseq_counter_i_reg_n_0_[5] ),
        .O(txseq_counter_i[5]));
  (* SOFT_HLUTNM = "soft_lutpair352" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i[6]_i_1 
       (.I0(\txseq_counter_i_reg_n_0_[6] ),
        .I1(\txseq_counter_i_reg_n_0_[5] ),
        .I2(\txseq_counter_i_reg_n_0_[4] ),
        .I3(\txseq_counter_i[6]_i_2_n_0 ),
        .O(txseq_counter_i[6]));
  (* SOFT_HLUTNM = "soft_lutpair344" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    \txseq_counter_i[6]_i_2 
       (.I0(\txseq_counter_i_reg_n_0_[1] ),
        .I1(\txseq_counter_i_reg_n_0_[0] ),
        .I2(\txseq_counter_i_reg_n_0_[2] ),
        .I3(\txseq_counter_i_reg_n_0_[3] ),
        .O(\txseq_counter_i[6]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \txseq_counter_i_lane1[0]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane1_i_n_0),
        .I4(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .O(txseq_counter_i_lane1[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane1[1]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .O(txseq_counter_i_lane1[1]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane1[2]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .O(txseq_counter_i_lane1[2]));
  (* SOFT_HLUTNM = "soft_lutpair353" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane1[3]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .O(txseq_counter_i_lane1[3]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane1[4]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .O(\txseq_counter_i_lane1[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0E00F0F)) 
    \txseq_counter_i_lane1[5]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane1_i_n_0),
        .I4(\txseq_counter_i_lane1[6]_i_2_n_0 ),
        .O(txseq_counter_i_lane1[5]));
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane1[6]_i_1 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane1[6]_i_2_n_0 ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .O(txseq_counter_i_lane1[6]));
  (* SOFT_HLUTNM = "soft_lutpair342" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \txseq_counter_i_lane1[6]_i_2 
       (.I0(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .I4(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .O(\txseq_counter_i_lane1[6]_i_2_n_0 ));
  FDRE \txseq_counter_i_lane1_reg[0] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[0]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[1] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[1]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[2] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[2]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[3] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[3]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[4] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(\txseq_counter_i_lane1[4]_i_1_n_0 ),
        .Q(\txseq_counter_i_lane1_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[5] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[5]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane1_reg[6] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane1[6]),
        .Q(\txseq_counter_i_lane1_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \txseq_counter_i_lane2[0]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane2_i_n_0),
        .I4(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .O(txseq_counter_i_lane2[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane2[1]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .O(txseq_counter_i_lane2[1]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane2[2]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .O(txseq_counter_i_lane2[2]));
  (* SOFT_HLUTNM = "soft_lutpair354" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane2[3]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .O(txseq_counter_i_lane2[3]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane2[4]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .O(\txseq_counter_i_lane2[4]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hF0E00F0F)) 
    \txseq_counter_i_lane2[5]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane2_i_n_0),
        .I4(\txseq_counter_i_lane2[6]_i_2_n_0 ),
        .O(txseq_counter_i_lane2[5]));
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane2[6]_i_1 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane2[6]_i_2_n_0 ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .O(txseq_counter_i_lane2[6]));
  (* SOFT_HLUTNM = "soft_lutpair343" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \txseq_counter_i_lane2[6]_i_2 
       (.I0(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .I4(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .O(\txseq_counter_i_lane2[6]_i_2_n_0 ));
  FDRE \txseq_counter_i_lane2_reg[0] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[0]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[1] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[1]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[2] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[2]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[3] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[3]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[4] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(\txseq_counter_i_lane2[4]_i_1_n_0 ),
        .Q(\txseq_counter_i_lane2_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[5] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[5]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane2_reg[6] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane2[6]),
        .Q(\txseq_counter_i_lane2_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT5 #(
    .INIT(32'h0000FFEF)) 
    \txseq_counter_i_lane3[0]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane3_i_n_0),
        .I4(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .O(txseq_counter_i_lane3[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \txseq_counter_i_lane3[1]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .O(txseq_counter_i_lane3[1]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \txseq_counter_i_lane3[2]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .O(txseq_counter_i_lane3[2]));
  (* SOFT_HLUTNM = "soft_lutpair355" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \txseq_counter_i_lane3[3]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .O(txseq_counter_i_lane3[3]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'h6AAAAAAA)) 
    \txseq_counter_i_lane3[4]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .O(txseq_counter_i_lane3[4]));
  LUT5 #(
    .INIT(32'hF0E00F0F)) 
    \txseq_counter_i_lane3[5]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .I3(scrambler_64b66b_gtx0_lane3_i_n_0),
        .I4(\txseq_counter_i_lane3[6]_i_2_n_0 ),
        .O(txseq_counter_i_lane3[5]));
  LUT3 #(
    .INIT(8'h9A)) 
    \txseq_counter_i_lane3[6]_i_1 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .I1(\txseq_counter_i_lane3[6]_i_2_n_0 ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .O(txseq_counter_i_lane3[6]));
  (* SOFT_HLUTNM = "soft_lutpair341" *) 
  LUT5 #(
    .INIT(32'h7FFFFFFF)) 
    \txseq_counter_i_lane3[6]_i_2 
       (.I0(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .I1(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .I2(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .I3(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .I4(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .O(\txseq_counter_i_lane3[6]_i_2_n_0 ));
  FDRE \txseq_counter_i_lane3_reg[0] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[0]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[1] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[1]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[2] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[2]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[3] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[3]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[4] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[4]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[5] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[5]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_lane3_reg[6] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i_lane3[6]),
        .Q(\txseq_counter_i_lane3_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[0] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[0]),
        .Q(\txseq_counter_i_reg_n_0_[0] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[1] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[1]),
        .Q(\txseq_counter_i_reg_n_0_[1] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[2] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[2]),
        .Q(\txseq_counter_i_reg_n_0_[2] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[3] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[3]),
        .Q(\txseq_counter_i_reg_n_0_[3] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[4] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[4]),
        .Q(\txseq_counter_i_reg_n_0_[4] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[5] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[5]),
        .Q(\txseq_counter_i_reg_n_0_[5] ),
        .R(gtx_reset_comb));
  FDRE \txseq_counter_i_reg[6] 
       (.C(stg4_reg),
        .CE(txsequence_ctr_en_int),
        .D(txseq_counter_i[6]),
        .Q(\txseq_counter_i_reg_n_0_[6] ),
        .R(gtx_reset_comb));
  LUT1 #(
    .INIT(2'h1)) 
    txsequence_ctr_en_int_i_1
       (.I0(txsequence_ctr_en_int),
        .O(txsequence_ctr_en_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    txsequence_ctr_en_int_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(txsequence_ctr_en_int_i_1_n_0),
        .Q(txsequence_ctr_en_int),
        .R(1'b0));
  board_aurora_64b66b_0_2_cdc_sync u_cdc__check_polarity
       (.Q(rxheader_from_gtx_i),
        .RX_NEG_OUT_reg(RX_NEG_OUT_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .\rxheader_from_gtx_i_reg[0] (u_cdc__check_polarity_n_0),
        .rxheadervalid_i(rxheadervalid_i),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg));
  board_aurora_64b66b_0_2_cdc_sync_17 u_cdc__lane1_check_polarity
       (.Q(rxheader_from_gtx_lane1_i),
        .RX_NEG_OUT_LANE1_reg(RX_NEG_OUT_LANE1_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .\rxheader_from_gtx_lane1_i_reg[0] (u_cdc__lane1_check_polarity_n_0),
        .rxheadervalid_lane1_i(rxheadervalid_lane1_i),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_1));
  board_aurora_64b66b_0_2_cdc_sync_18 u_cdc__lane2_check_polarity
       (.Q(rxheader_from_gtx_lane2_i),
        .RX_NEG_OUT_LANE2_reg(RX_NEG_OUT_LANE2_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .\rxheader_from_gtx_lane2_i_reg[0] (u_cdc__lane2_check_polarity_n_0),
        .rxheadervalid_lane2_i(rxheadervalid_lane2_i),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_3));
  board_aurora_64b66b_0_2_cdc_sync_19 u_cdc__lane3_check_polarity
       (.Q(rxheader_from_gtx_lane3_i),
        .RX_NEG_OUT_LANE3_reg(RX_NEG_OUT_LANE3_reg_0),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .\rxheader_from_gtx_lane3_i_reg[0] (u_cdc__lane3_check_polarity_n_0),
        .rxheadervalid_lane3_i(rxheadervalid_lane3_i),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_5));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0 u_cdc_gt_qplllock_quad1_i
       (.gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .init_clk(init_clk),
        .out(gt_qplllock_quad1_i));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_20 u_cdc_hard_err_init
       (.E(hard_err_cntr_r),
        .Q(hard_err_cntr_r_reg[2:0]),
        .SR(HPCNT_RESET_IN),
        .\hard_err_cntr_r_reg[0] (\hard_err_cntr_r[7]_i_4_n_0 ),
        .\hard_err_cntr_r_reg[0]_0 (\hard_err_cntr_r[7]_i_5_n_0 ),
        .hard_err_rst_int(hard_err_rst_int),
        .hard_err_rst_int0(hard_err_rst_int0),
        .hard_err_rst_int_reg(u_cdc_hard_err_init_n_0),
        .in0(hard_err_usr),
        .init_clk(init_clk));
  board_aurora_64b66b_0_2_cdc_sync__parameterized1 u_cdc_rx_elastic_buferr
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_elastic_buf_err),
        .rx_elastic_buf_err_int(rx_elastic_buf_err_int__0),
        .s_level_out_d6_reg_0(stg4_reg));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_21 u_cdc_rx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(rx_fsm_resetdone_i),
        .rx_fsm_resetdone_ii(rx_fsm_resetdone_ii));
  board_aurora_64b66b_0_2_cdc_sync__parameterized2 u_cdc_rxpolarity_
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[0]),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0));
  board_aurora_64b66b_0_2_cdc_sync__parameterized2_22 u_cdc_rxpolarity__LANE1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[1]),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_2));
  board_aurora_64b66b_0_2_cdc_sync__parameterized2_23 u_cdc_rxpolarity__LANE2
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[2]),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_4));
  board_aurora_64b66b_0_2_cdc_sync__parameterized2_24 u_cdc_rxpolarity__LANE3
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(sync_rx_polarity_r_j[3]),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_6));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_25 u_cdc_tx_fsm_resetdone_i
       (.init_clk(init_clk),
        .out(tx_fsm_resetdone_i),
        .tx_fsm_resetdone_ii(tx_fsm_resetdone_ii));
  board_aurora_64b66b_0_2_rst_sync__parameterized0 u_rst_done_sync_rx
       (.out(rx_fsm_resetdone_i),
        .stg2_reg_0(stg4_reg),
        .stg3_reg_0(rx_fsm_resetdone_i_i));
  board_aurora_64b66b_0_2_rst_sync__parameterized0_26 u_rst_done_sync_rx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(rx_fsm_resetdone_i));
  board_aurora_64b66b_0_2_rst_sync__parameterized0_27 u_rst_done_sync_tx
       (.FSM_RESETDONE_j_reg(rx_fsm_resetdone_i_i),
        .out(tx_fsm_resetdone_i),
        .stg3_reg_0(stg3_reg),
        .stg3_reg_1(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized0_28 u_rst_done_sync_tx1
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .out(tx_fsm_resetdone_i));
  board_aurora_64b66b_0_2_rst_sync__parameterized1 u_rst_sync_blocksyncall_initclk_sync
       (.E(u_rst_sync_blocksyncall_initclk_sync_n_0),
        .\FSM_onehot_cdr_reset_fsm_r_reg[0] (\FSM_onehot_cdr_reset_fsm_r[2]_i_4_n_0 ),
        .Q({allow_block_sync_propagation,cdr_reset_fsm_lnkreset,\FSM_onehot_cdr_reset_fsm_r_reg_n_0_[0] }),
        .in0(blocksync_all_lanes_inrxclk_q),
        .init_clk(init_clk));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_29 u_rst_sync_blocksyncprop_inrxclk_sync
       (.gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(allow_block_sync_propagation_reg_n_0),
        .stg5_reg_0(u_rst_sync_blocksyncprop_inrxclk_sync_n_0));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_30 u_rst_sync_fsm_resetdone
       (.fsm_resetdone_to_new_gtx_rx_comb(fsm_resetdone_to_new_gtx_rx_comb),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(FSM_RESETDONE_j));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_31 u_rst_sync_fsm_resetdone_initclk
       (.SR(HPCNT_RESET_IN),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .\hard_err_cntr_r_reg[7] (cdr_reset_fsm_lnkreset_reg_n_0),
        .\hard_err_cntr_r_reg[7]_0 (rst_in_out_reg),
        .in0(FSM_RESETDONE_j),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_32 u_rst_sync_gtx_reset_comb
       (.SR(gtx_reset_comb),
        .in0(stableclk_gtx_reset_comb),
        .stg4_reg_0(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_33 u_rst_sync_reset_initclk
       (.SR(SR),
        .\count_for_reset_r_reg[23] (rst_in_out_reg),
        .\count_for_reset_r_reg[23]_0 (cdr_reset_fsm_lnkreset_reg_n_0),
        .\dly_gt_rst_r_reg[18] (u_rst_sync_reset_initclk_n_1),
        .\dly_gt_rst_r_reg[18]_0 (u_rst_sync_reset_initclk_n_2),
        .\dly_gt_rst_r_reg[18]_1 (u_rst_sync_reset_initclk_n_3),
        .\dly_gt_rst_r_reg[18]_2 (u_rst_sync_reset_initclk_n_4),
        .fsm_resetdone_initclk(fsm_resetdone_initclk),
        .init_clk(init_clk),
        .out(rxfsm_reset_i),
        .reset_initclk(reset_initclk),
        .valid_btf_detect_dlyd1(valid_btf_detect_dlyd1),
        .valid_btf_detect_dlyd1_0(valid_btf_detect_dlyd1_2),
        .valid_btf_detect_dlyd1_1(valid_btf_detect_dlyd1_6),
        .valid_btf_detect_dlyd1_2(valid_btf_detect_dlyd1_11));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_34 u_rst_sync_rxreset_in
       (.fsm_resetdone_to_rxreset_in(fsm_resetdone_to_rxreset_in),
        .gtwiz_userclk_rx_usrclk_out(rxusrclk_out),
        .in0(rxreset_for_lanes_q));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_35 u_rst_sync_txusrclk_gtx_reset_comb
       (.E(sel),
        .in0(stableclk_gtx_reset_comb),
        .init_clk(init_clk));
endmodule

module board_aurora_64b66b_0_2_cdc_sync
   (\rxheader_from_gtx_i_reg[0] ,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    rxheadervalid_i,
    RX_NEG_OUT_reg);
  output \rxheader_from_gtx_i_reg[0] ;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input [1:0]Q;
  input rxheadervalid_i;
  input RX_NEG_OUT_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire \rxheader_from_gtx_i_reg[0] ;
  wire rxheadervalid_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT5 #(
    .INIT(32'hFF002000)) 
    RX_NEG_OUT_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rxheadervalid_i),
        .I3(s_level_out_d2),
        .I4(RX_NEG_OUT_reg),
        .O(\rxheader_from_gtx_i_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_101
   (next_ready_c,
    next_begin_c,
    prev_rx_polarity_r_reg,
    in0,
    s_level_out_d5_reg_0,
    tx_reset_i_0,
    ready_r,
    polarity_r,
    align_r,
    begin_r,
    rx_lossofsync_i_0,
    reset_lanes_i,
    rx_polarity_dlyd_i,
    begin_r_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg,
    SR);
  output next_ready_c;
  output next_begin_c;
  output prev_rx_polarity_r_reg;
  input in0;
  input s_level_out_d5_reg_0;
  input tx_reset_i_0;
  input ready_r;
  input polarity_r;
  input align_r;
  input begin_r;
  input rx_lossofsync_i_0;
  input reset_lanes_i;
  input rx_polarity_dlyd_i;
  input begin_r_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg;
  input [0:0]SR;

  wire [0:0]SR;
  wire align_r;
  wire begin_r;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_reg;
  wire ready_r;
  wire ready_r_i_2__0_n_0;
  wire reset_lanes_i;
  wire rx_lossofsync_i_0;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;
  wire tx_reset_i_0;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFFFFA8A0)) 
    begin_r_i_1__0
       (.I0(polarity_r),
        .I1(s_level_out_d2),
        .I2(reset_lanes_i),
        .I3(rx_polarity_dlyd_i),
        .I4(begin_r_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h0000000000002220)) 
    ready_r_i_1__1
       (.I0(ready_r_i_2__0_n_0),
        .I1(tx_reset_i_0),
        .I2(ready_r),
        .I3(polarity_r),
        .I4(align_r),
        .I5(begin_r),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h01010101010F0101)) 
    ready_r_i_2__0
       (.I0(rx_lossofsync_i_0),
        .I1(polarity_r),
        .I2(reset_lanes_i),
        .I3(s_level_out_d2),
        .I4(rx_polarity_dlyd_i),
        .I5(ready_r),
        .O(ready_r_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1__2
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg),
        .I3(SR),
        .O(prev_rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_107
   (next_ready_c,
    next_begin_c,
    prev_rx_polarity_r_reg,
    in0,
    s_level_out_d6_reg_0,
    ready_r_reg,
    ready_r,
    polarity_r,
    align_r,
    begin_r,
    rx_lossofsync_i_1,
    reset_lanes_i,
    rx_polarity_dlyd_i,
    begin_r_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg,
    SR);
  output next_ready_c;
  output next_begin_c;
  output prev_rx_polarity_r_reg;
  input in0;
  input s_level_out_d6_reg_0;
  input ready_r_reg;
  input ready_r;
  input polarity_r;
  input align_r;
  input begin_r;
  input rx_lossofsync_i_1;
  input reset_lanes_i;
  input rx_polarity_dlyd_i;
  input begin_r_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg;
  input [0:0]SR;

  wire [0:0]SR;
  wire align_r;
  wire begin_r;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_reg;
  wire ready_r;
  wire ready_r_i_2__1_n_0;
  wire ready_r_reg;
  wire reset_lanes_i;
  wire rx_lossofsync_i_1;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFFFFA8A0)) 
    begin_r_i_1__1
       (.I0(polarity_r),
        .I1(s_level_out_d2),
        .I2(reset_lanes_i),
        .I3(rx_polarity_dlyd_i),
        .I4(begin_r_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h0000000000002220)) 
    ready_r_i_1__2
       (.I0(ready_r_i_2__1_n_0),
        .I1(ready_r_reg),
        .I2(ready_r),
        .I3(polarity_r),
        .I4(align_r),
        .I5(begin_r),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h01010101010F0101)) 
    ready_r_i_2__1
       (.I0(rx_lossofsync_i_1),
        .I1(polarity_r),
        .I2(reset_lanes_i),
        .I3(s_level_out_d2),
        .I4(rx_polarity_dlyd_i),
        .I5(ready_r),
        .O(ready_r_i_2__1_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1__1
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg),
        .I3(SR),
        .O(prev_rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_113
   (next_ready_c,
    next_begin_c,
    prev_rx_polarity_r_reg,
    in0,
    s_level_out_d5_reg_0,
    ready_r_reg,
    ready_r,
    polarity_r,
    align_r,
    begin_r,
    rx_lossofsync_i_2,
    reset_lanes_i,
    rx_polarity_dlyd_i,
    begin_r_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg,
    SR);
  output next_ready_c;
  output next_begin_c;
  output prev_rx_polarity_r_reg;
  input in0;
  input s_level_out_d5_reg_0;
  input ready_r_reg;
  input ready_r;
  input polarity_r;
  input align_r;
  input begin_r;
  input rx_lossofsync_i_2;
  input reset_lanes_i;
  input rx_polarity_dlyd_i;
  input begin_r_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg;
  input [0:0]SR;

  wire [0:0]SR;
  wire align_r;
  wire begin_r;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_reg;
  wire ready_r;
  wire ready_r_i_2__2_n_0;
  wire ready_r_reg;
  wire reset_lanes_i;
  wire rx_lossofsync_i_2;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFFFFA8A0)) 
    begin_r_i_1__2
       (.I0(polarity_r),
        .I1(s_level_out_d2),
        .I2(reset_lanes_i),
        .I3(rx_polarity_dlyd_i),
        .I4(begin_r_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h0000000000002220)) 
    ready_r_i_1__3
       (.I0(ready_r_i_2__2_n_0),
        .I1(ready_r_reg),
        .I2(ready_r),
        .I3(polarity_r),
        .I4(align_r),
        .I5(begin_r),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h01010101010F0101)) 
    ready_r_i_2__2
       (.I0(rx_lossofsync_i_2),
        .I1(polarity_r),
        .I2(reset_lanes_i),
        .I3(s_level_out_d2),
        .I4(rx_polarity_dlyd_i),
        .I5(ready_r),
        .O(ready_r_i_2__2_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1__0
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg),
        .I3(SR),
        .O(prev_rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_119
   (next_ready_c,
    next_begin_c,
    prev_rx_polarity_r_reg,
    in0,
    s_level_out_d6_reg_0,
    align_r,
    ready_r,
    polarity_r,
    ready_r_reg,
    begin_r,
    rx_lossofsync_i_3,
    rx_polarity_dlyd_i,
    reset_lanes_i,
    begin_r_reg,
    prev_rx_polarity_r,
    rx_polarity_r_reg,
    SR);
  output next_ready_c;
  output next_begin_c;
  output prev_rx_polarity_r_reg;
  input in0;
  input s_level_out_d6_reg_0;
  input align_r;
  input ready_r;
  input polarity_r;
  input ready_r_reg;
  input begin_r;
  input rx_lossofsync_i_3;
  input rx_polarity_dlyd_i;
  input reset_lanes_i;
  input begin_r_reg;
  input prev_rx_polarity_r;
  input rx_polarity_r_reg;
  input [0:0]SR;

  wire [0:0]SR;
  wire align_r;
  wire begin_r;
  wire begin_r_reg;
  wire next_begin_c;
  wire next_ready_c;
  wire p_level_in_int;
  wire polarity_r;
  wire prev_rx_polarity_r;
  wire prev_rx_polarity_r_reg;
  wire ready_r;
  wire ready_r_i_3_n_0;
  wire ready_r_reg;
  wire reset_lanes_i;
  wire rx_lossofsync_i_3;
  wire rx_polarity_dlyd_i;
  wire rx_polarity_r_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT5 #(
    .INIT(32'hFFFFE0A0)) 
    begin_r_i_1
       (.I0(reset_lanes_i),
        .I1(s_level_out_d2),
        .I2(polarity_r),
        .I3(rx_polarity_dlyd_i),
        .I4(begin_r_reg),
        .O(next_begin_c));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'h0000000000002220)) 
    ready_r_i_2
       (.I0(ready_r_i_3_n_0),
        .I1(align_r),
        .I2(ready_r),
        .I3(polarity_r),
        .I4(ready_r_reg),
        .I5(begin_r),
        .O(next_ready_c));
  LUT6 #(
    .INIT(64'h0000000011111F11)) 
    ready_r_i_3
       (.I0(rx_lossofsync_i_3),
        .I1(polarity_r),
        .I2(ready_r),
        .I3(rx_polarity_dlyd_i),
        .I4(s_level_out_d2),
        .I5(reset_lanes_i),
        .O(ready_r_i_3_n_0));
  LUT4 #(
    .INIT(16'h0074)) 
    rx_polarity_r_i_1
       (.I0(prev_rx_polarity_r),
        .I1(s_level_out_d2),
        .I2(rx_polarity_r_reg),
        .I3(SR),
        .O(prev_rx_polarity_r_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_17
   (\rxheader_from_gtx_lane1_i_reg[0] ,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    rxheadervalid_lane1_i,
    RX_NEG_OUT_LANE1_reg);
  output \rxheader_from_gtx_lane1_i_reg[0] ;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input [1:0]Q;
  input rxheadervalid_lane1_i;
  input RX_NEG_OUT_LANE1_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE1_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire \rxheader_from_gtx_lane1_i_reg[0] ;
  wire rxheadervalid_lane1_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT5 #(
    .INIT(32'hFF002000)) 
    RX_NEG_OUT_LANE1_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rxheadervalid_lane1_i),
        .I3(s_level_out_d2),
        .I4(RX_NEG_OUT_LANE1_reg),
        .O(\rxheader_from_gtx_lane1_i_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_18
   (\rxheader_from_gtx_lane2_i_reg[0] ,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    rxheadervalid_lane2_i,
    RX_NEG_OUT_LANE2_reg);
  output \rxheader_from_gtx_lane2_i_reg[0] ;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input [1:0]Q;
  input rxheadervalid_lane2_i;
  input RX_NEG_OUT_LANE2_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE2_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire \rxheader_from_gtx_lane2_i_reg[0] ;
  wire rxheadervalid_lane2_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT5 #(
    .INIT(32'hFF002000)) 
    RX_NEG_OUT_LANE2_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rxheadervalid_lane2_i),
        .I3(s_level_out_d2),
        .I4(RX_NEG_OUT_LANE2_reg),
        .O(\rxheader_from_gtx_lane2_i_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync_19
   (\rxheader_from_gtx_lane3_i_reg[0] ,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    rxheadervalid_lane3_i,
    RX_NEG_OUT_LANE3_reg);
  output \rxheader_from_gtx_lane3_i_reg[0] ;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input [1:0]Q;
  input rxheadervalid_lane3_i;
  input RX_NEG_OUT_LANE3_reg;

  wire [1:0]Q;
  wire RX_NEG_OUT_LANE3_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire \rxheader_from_gtx_lane3_i_reg[0] ;
  wire rxheadervalid_lane3_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT5 #(
    .INIT(32'hFF002000)) 
    RX_NEG_OUT_LANE3_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(rxheadervalid_lane3_i),
        .I3(s_level_out_d2),
        .I4(RX_NEG_OUT_LANE3_reg),
        .O(\rxheader_from_gtx_lane3_i_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0
   (out,
    gt_qplllock_quad1_out,
    init_clk);
  output out;
  input gt_qplllock_quad1_out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  assign p_level_in_int = gt_qplllock_quad1_out;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_20
   (hard_err_rst_int_reg,
    E,
    in0,
    init_clk,
    hard_err_rst_int,
    Q,
    hard_err_rst_int0,
    SR,
    \hard_err_cntr_r_reg[0] ,
    \hard_err_cntr_r_reg[0]_0 );
  output hard_err_rst_int_reg;
  output [0:0]E;
  input in0;
  input init_clk;
  input hard_err_rst_int;
  input [2:0]Q;
  input hard_err_rst_int0;
  input [0:0]SR;
  input \hard_err_cntr_r_reg[0] ;
  input \hard_err_cntr_r_reg[0]_0 ;

  wire [0:0]E;
  wire [2:0]Q;
  wire [0:0]SR;
  wire \hard_err_cntr_r_reg[0] ;
  wire \hard_err_cntr_r_reg[0]_0 ;
  wire hard_err_rst_int;
  wire hard_err_rst_int0;
  wire hard_err_rst_int_i_2_n_0;
  wire hard_err_rst_int_reg;
  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT6 #(
    .INIT(64'hAAFFFFFFFFFFFFFC)) 
    \hard_err_cntr_r[7]_i_2 
       (.I0(\hard_err_cntr_r_reg[0] ),
        .I1(\hard_err_cntr_r_reg[0]_0 ),
        .I2(s_level_out_d5),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(E));
  LUT6 #(
    .INIT(64'h00000000FFFE0002)) 
    hard_err_rst_int_i_1
       (.I0(hard_err_rst_int),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(hard_err_rst_int_i_2_n_0),
        .I4(hard_err_rst_int0),
        .I5(SR),
        .O(hard_err_rst_int_reg));
  LUT3 #(
    .INIT(8'hFE)) 
    hard_err_rst_int_i_2
       (.I0(s_level_out_d5),
        .I1(Q[2]),
        .I2(\hard_err_cntr_r_reg[0]_0 ),
        .O(hard_err_rst_int_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_21
   (rx_fsm_resetdone_ii,
    out,
    init_clk);
  output rx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign rx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_25
   (tx_fsm_resetdone_ii,
    out,
    init_clk);
  output tx_fsm_resetdone_ii;
  input out;
  input init_clk;

  wire init_clk;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = out;
  assign tx_fsm_resetdone_ii = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_36
   (\cb_bit_err_ext_cnt_reg[3] ,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    Q,
    reset_cbcc_comb_reg);
  output \cb_bit_err_ext_cnt_reg[3] ;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input [3:0]Q;
  input [0:0]reset_cbcc_comb_reg;

  wire [3:0]Q;
  wire \cb_bit_err_ext_cnt_reg[3] ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire [0:0]reset_cbcc_comb_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    reset_cbcc_comb_i_1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(s_level_out_d5),
        .I5(reset_cbcc_comb_reg),
        .O(\cb_bit_err_ext_cnt_reg[3] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_43
   (s_level_out_d5_reg_0,
    in0,
    s_level_out_d6_reg_0);
  output s_level_out_d5_reg_0;
  input in0;
  input s_level_out_d6_reg_0;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__2
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_47
   (s_level_out_d5_reg_0,
    in0,
    s_level_out_d6_reg_0);
  output s_level_out_d5_reg_0;
  input in0;
  input s_level_out_d6_reg_0;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__1
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_52
   (s_level_out_d5_reg_0,
    in0,
    s_level_out_d5_reg_1);
  output s_level_out_d5_reg_0;
  input in0;
  input s_level_out_d5_reg_1;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  wire s_level_out_d5_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1__0
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized0_63
   (s_level_out_d5_reg_0,
    in0,
    s_level_out_d5_reg_1);
  output s_level_out_d5_reg_0;
  input in0;
  input s_level_out_d5_reg_1;

  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  wire s_level_out_d5_reg_1;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign p_level_in_int = in0;
  LUT1 #(
    .INIT(2'h1)) 
    CC_RXLOSSOFSYNC_OUT_i_1
       (.I0(s_level_out_d5),
        .O(s_level_out_d5_reg_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_1),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized1
   (out,
    rx_elastic_buf_err_int,
    gtwiz_userclk_rx_usrclk_out,
    s_level_out_d6_reg_0);
  output out;
  input rx_elastic_buf_err_int;
  input gtwiz_userclk_rx_usrclk_out;
  input s_level_out_d6_reg_0;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  wire rx_elastic_buf_err_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  FDRE p_level_in_d1_cdc_from_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(rx_elastic_buf_err_int),
        .Q(p_level_in_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized2
   (out,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized2_22
   (out,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized2_23
   (out,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized2_24
   (out,
    s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out);
  output out;
  input s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire p_level_in_int;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d3;
  assign p_level_in_int = s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(p_level_in_int),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3
   (cbcc_reset_cbstg2_rd_clk,
    full,
    s_level_out_d6_reg_0);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input s_level_out_d6_reg_0;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_44
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    s_level_out_d6_reg_0);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input s_level_out_d6_reg_0;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_46
   (rxchanisaligned1_out,
    cbcc_reset_cbstg2_rd_clk,
    full,
    s_level_out_d6_reg_0,
    empty);
  output rxchanisaligned1_out;
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input s_level_out_d6_reg_0;
  input empty;

  wire cbcc_reset_cbstg2_rd_clk;
  wire empty;
  wire full;
  wire rxchanisaligned1_out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  LUT2 #(
    .INIT(4'h1)) 
    rxchanisaligned_i_1
       (.I0(empty),
        .I1(s_level_out_d5),
        .O(rxchanisaligned1_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_48
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    s_level_out_d6_reg_0);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input s_level_out_d6_reg_0;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  wire s_level_out_d6_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d6_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_51
   (cbcc_reset_cbstg2_rd_clk,
    full,
    s_level_out_d5_reg_0);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input s_level_out_d5_reg_0;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_53
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    s_level_out_d5_reg_0);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input s_level_out_d5_reg_0;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_62
   (cbcc_reset_cbstg2_rd_clk,
    full,
    s_level_out_d5_reg_0);
  input cbcc_reset_cbstg2_rd_clk;
  input full;
  input s_level_out_d5_reg_0;

  wire cbcc_reset_cbstg2_rd_clk;
  wire full;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(full),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_reset_cbstg2_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_reset_cbstg2_rd_clk));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_cdc_sync" *) 
module board_aurora_64b66b_0_2_cdc_sync__parameterized3_64
   (out,
    cbcc_fifo_reset_rd_clk,
    overflow,
    s_level_out_d5_reg_0);
  output out;
  input cbcc_fifo_reset_rd_clk;
  input overflow;
  input s_level_out_d5_reg_0;

  wire cbcc_fifo_reset_rd_clk;
  wire overflow;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d5;
  wire s_level_out_d5_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_level_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d3;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d4;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d5;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d6;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire s_out_d7;

  assign out = s_level_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(s_out_d1_board_aurora_64b66b_0_2_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_100
       (.I0(1'b0),
        .O(s_level_out_bus_d3[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_101
       (.I0(1'b0),
        .O(s_level_out_bus_d3[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_102
       (.I0(1'b0),
        .O(s_level_out_bus_d3[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_103
       (.I0(1'b0),
        .O(s_level_out_bus_d4[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_104
       (.I0(1'b0),
        .O(s_level_out_bus_d4[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_105
       (.I0(1'b0),
        .O(s_level_out_bus_d4[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_106
       (.I0(1'b0),
        .O(s_level_out_bus_d4[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_107
       (.I0(1'b0),
        .O(s_level_out_bus_d4[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_108
       (.I0(1'b0),
        .O(s_level_out_bus_d4[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_109
       (.I0(1'b0),
        .O(s_level_out_bus_d4[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_110
       (.I0(1'b0),
        .O(s_level_out_bus_d4[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_111
       (.I0(1'b0),
        .O(s_level_out_bus_d4[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_112
       (.I0(1'b0),
        .O(s_level_out_bus_d4[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_113
       (.I0(1'b0),
        .O(s_level_out_bus_d4[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_114
       (.I0(1'b0),
        .O(s_level_out_bus_d4[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_115
       (.I0(1'b0),
        .O(s_level_out_bus_d4[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_116
       (.I0(1'b0),
        .O(s_level_out_bus_d4[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_117
       (.I0(1'b0),
        .O(s_level_out_bus_d4[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_118
       (.I0(1'b0),
        .O(s_level_out_bus_d4[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_119
       (.I0(1'b0),
        .O(s_level_out_bus_d4[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_120
       (.I0(1'b0),
        .O(s_level_out_bus_d4[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_121
       (.I0(1'b0),
        .O(s_level_out_bus_d4[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_122
       (.I0(1'b0),
        .O(s_level_out_bus_d4[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_123
       (.I0(1'b0),
        .O(s_level_out_bus_d4[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_124
       (.I0(1'b0),
        .O(s_level_out_bus_d4[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_125
       (.I0(1'b0),
        .O(s_level_out_bus_d4[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_126
       (.I0(1'b0),
        .O(s_level_out_bus_d4[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_127
       (.I0(1'b0),
        .O(s_level_out_bus_d4[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_128
       (.I0(1'b0),
        .O(s_level_out_bus_d4[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_129
       (.I0(1'b0),
        .O(s_level_out_bus_d4[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_130
       (.I0(1'b0),
        .O(s_level_out_bus_d4[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_131
       (.I0(1'b0),
        .O(s_level_out_bus_d4[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_132
       (.I0(1'b0),
        .O(s_level_out_bus_d4[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_133
       (.I0(1'b0),
        .O(s_level_out_bus_d4[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_134
       (.I0(1'b0),
        .O(s_level_out_bus_d4[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_135
       (.I0(1'b0),
        .O(s_level_out_bus_d5[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_136
       (.I0(1'b0),
        .O(s_level_out_bus_d5[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_137
       (.I0(1'b0),
        .O(s_level_out_bus_d5[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_138
       (.I0(1'b0),
        .O(s_level_out_bus_d5[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_139
       (.I0(1'b0),
        .O(s_level_out_bus_d5[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_140
       (.I0(1'b0),
        .O(s_level_out_bus_d5[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_141
       (.I0(1'b0),
        .O(s_level_out_bus_d5[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_142
       (.I0(1'b0),
        .O(s_level_out_bus_d5[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_143
       (.I0(1'b0),
        .O(s_level_out_bus_d5[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_144
       (.I0(1'b0),
        .O(s_level_out_bus_d5[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_145
       (.I0(1'b0),
        .O(s_level_out_bus_d5[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_146
       (.I0(1'b0),
        .O(s_level_out_bus_d5[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_147
       (.I0(1'b0),
        .O(s_level_out_bus_d5[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_148
       (.I0(1'b0),
        .O(s_level_out_bus_d5[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_149
       (.I0(1'b0),
        .O(s_level_out_bus_d5[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_150
       (.I0(1'b0),
        .O(s_level_out_bus_d5[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_151
       (.I0(1'b0),
        .O(s_level_out_bus_d5[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_152
       (.I0(1'b0),
        .O(s_level_out_bus_d5[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_153
       (.I0(1'b0),
        .O(s_level_out_bus_d5[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_154
       (.I0(1'b0),
        .O(s_level_out_bus_d5[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_155
       (.I0(1'b0),
        .O(s_level_out_bus_d5[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_156
       (.I0(1'b0),
        .O(s_level_out_bus_d5[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_157
       (.I0(1'b0),
        .O(s_level_out_bus_d5[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_158
       (.I0(1'b0),
        .O(s_level_out_bus_d5[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_159
       (.I0(1'b0),
        .O(s_level_out_bus_d5[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_160
       (.I0(1'b0),
        .O(s_level_out_bus_d5[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_161
       (.I0(1'b0),
        .O(s_level_out_bus_d5[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_162
       (.I0(1'b0),
        .O(s_level_out_bus_d5[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_163
       (.I0(1'b0),
        .O(s_level_out_bus_d5[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_164
       (.I0(1'b0),
        .O(s_level_out_bus_d5[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_165
       (.I0(1'b0),
        .O(s_level_out_bus_d5[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_166
       (.I0(1'b0),
        .O(s_level_out_bus_d5[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_167
       (.I0(1'b0),
        .O(s_level_out_bus_d6[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_168
       (.I0(1'b0),
        .O(s_level_out_bus_d6[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_169
       (.I0(1'b0),
        .O(s_level_out_bus_d6[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_170
       (.I0(1'b0),
        .O(s_level_out_bus_d6[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_171
       (.I0(1'b0),
        .O(s_level_out_bus_d6[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_172
       (.I0(1'b0),
        .O(s_level_out_bus_d6[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_173
       (.I0(1'b0),
        .O(s_level_out_bus_d6[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_174
       (.I0(1'b0),
        .O(s_level_out_bus_d6[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_175
       (.I0(1'b0),
        .O(s_level_out_bus_d6[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_176
       (.I0(1'b0),
        .O(s_level_out_bus_d6[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_177
       (.I0(1'b0),
        .O(s_level_out_bus_d6[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_178
       (.I0(1'b0),
        .O(s_level_out_bus_d6[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_179
       (.I0(1'b0),
        .O(s_level_out_bus_d6[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_180
       (.I0(1'b0),
        .O(s_level_out_bus_d6[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_181
       (.I0(1'b0),
        .O(s_level_out_bus_d6[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_182
       (.I0(1'b0),
        .O(s_level_out_bus_d6[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_183
       (.I0(1'b0),
        .O(s_level_out_bus_d6[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_184
       (.I0(1'b0),
        .O(s_level_out_bus_d6[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_185
       (.I0(1'b0),
        .O(s_level_out_bus_d6[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_186
       (.I0(1'b0),
        .O(s_level_out_bus_d6[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_187
       (.I0(1'b0),
        .O(s_level_out_bus_d6[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_188
       (.I0(1'b0),
        .O(s_level_out_bus_d6[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_189
       (.I0(1'b0),
        .O(s_level_out_bus_d6[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_190
       (.I0(1'b0),
        .O(s_level_out_bus_d6[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_191
       (.I0(1'b0),
        .O(s_level_out_bus_d6[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_192
       (.I0(1'b0),
        .O(s_level_out_bus_d6[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_193
       (.I0(1'b0),
        .O(s_level_out_bus_d6[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_194
       (.I0(1'b0),
        .O(s_level_out_bus_d6[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_195
       (.I0(1'b0),
        .O(s_level_out_bus_d6[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_196
       (.I0(1'b0),
        .O(s_level_out_bus_d6[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_197
       (.I0(1'b0),
        .O(s_level_out_bus_d6[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_198
       (.I0(1'b0),
        .O(s_level_out_bus_d6[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_24
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_25
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_26
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_27
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_28
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_29
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_30
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_31
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_32
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_33
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_34
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_35
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_36
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_37
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_38
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_39
       (.I0(1'b0),
        .O(s_level_out_bus_d2[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_40
       (.I0(1'b0),
        .O(s_level_out_bus_d2[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_41
       (.I0(1'b0),
        .O(s_level_out_bus_d2[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_42
       (.I0(1'b0),
        .O(s_level_out_bus_d2[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_43
       (.I0(1'b0),
        .O(s_level_out_bus_d2[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_44
       (.I0(1'b0),
        .O(s_level_out_bus_d2[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_45
       (.I0(1'b0),
        .O(s_level_out_bus_d2[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_46
       (.I0(1'b0),
        .O(s_level_out_bus_d2[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_47
       (.I0(1'b0),
        .O(s_level_out_bus_d2[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_48
       (.I0(1'b0),
        .O(s_level_out_bus_d2[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_49
       (.I0(1'b0),
        .O(s_level_out_bus_d2[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_50
       (.I0(1'b0),
        .O(s_level_out_bus_d2[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_51
       (.I0(1'b0),
        .O(s_level_out_bus_d2[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_52
       (.I0(1'b0),
        .O(s_level_out_bus_d2[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_53
       (.I0(1'b0),
        .O(s_level_out_bus_d2[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_54
       (.I0(1'b0),
        .O(s_level_out_bus_d2[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_55
       (.I0(1'b0),
        .O(s_level_out_bus_d2[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_56
       (.I0(1'b0),
        .O(s_level_out_bus_d2[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_57
       (.I0(1'b0),
        .O(s_level_out_bus_d2[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_58
       (.I0(1'b0),
        .O(s_level_out_bus_d2[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_59
       (.I0(1'b0),
        .O(s_level_out_bus_d2[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_60
       (.I0(1'b0),
        .O(s_level_out_bus_d2[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_61
       (.I0(1'b0),
        .O(s_level_out_bus_d2[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_62
       (.I0(1'b0),
        .O(s_level_out_bus_d2[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_63
       (.I0(1'b0),
        .O(s_level_out_bus_d2[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_64
       (.I0(1'b0),
        .O(s_level_out_bus_d2[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_65
       (.I0(1'b0),
        .O(s_level_out_bus_d2[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_66
       (.I0(1'b0),
        .O(s_level_out_bus_d2[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_67
       (.I0(1'b0),
        .O(s_level_out_bus_d2[3]));
  LUT1 #(
    .INIT(2'h2)) 
    i_68
       (.I0(1'b0),
        .O(s_level_out_bus_d2[2]));
  LUT1 #(
    .INIT(2'h2)) 
    i_69
       (.I0(1'b0),
        .O(s_level_out_bus_d2[1]));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_70
       (.I0(1'b0),
        .O(s_level_out_bus_d2[0]));
  LUT1 #(
    .INIT(2'h2)) 
    i_71
       (.I0(1'b0),
        .O(s_level_out_bus_d3[31]));
  LUT1 #(
    .INIT(2'h2)) 
    i_72
       (.I0(1'b0),
        .O(s_level_out_bus_d3[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_73
       (.I0(1'b0),
        .O(s_level_out_bus_d3[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_74
       (.I0(1'b0),
        .O(s_level_out_bus_d3[28]));
  LUT1 #(
    .INIT(2'h2)) 
    i_75
       (.I0(1'b0),
        .O(s_level_out_bus_d3[27]));
  LUT1 #(
    .INIT(2'h2)) 
    i_76
       (.I0(1'b0),
        .O(s_level_out_bus_d3[26]));
  LUT1 #(
    .INIT(2'h2)) 
    i_77
       (.I0(1'b0),
        .O(s_level_out_bus_d3[25]));
  LUT1 #(
    .INIT(2'h2)) 
    i_78
       (.I0(1'b0),
        .O(s_level_out_bus_d3[24]));
  LUT1 #(
    .INIT(2'h2)) 
    i_79
       (.I0(1'b0),
        .O(s_level_out_bus_d3[23]));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[30]));
  LUT1 #(
    .INIT(2'h2)) 
    i_80
       (.I0(1'b0),
        .O(s_level_out_bus_d3[22]));
  LUT1 #(
    .INIT(2'h2)) 
    i_81
       (.I0(1'b0),
        .O(s_level_out_bus_d3[21]));
  LUT1 #(
    .INIT(2'h2)) 
    i_82
       (.I0(1'b0),
        .O(s_level_out_bus_d3[20]));
  LUT1 #(
    .INIT(2'h2)) 
    i_83
       (.I0(1'b0),
        .O(s_level_out_bus_d3[19]));
  LUT1 #(
    .INIT(2'h2)) 
    i_84
       (.I0(1'b0),
        .O(s_level_out_bus_d3[18]));
  LUT1 #(
    .INIT(2'h2)) 
    i_85
       (.I0(1'b0),
        .O(s_level_out_bus_d3[17]));
  LUT1 #(
    .INIT(2'h2)) 
    i_86
       (.I0(1'b0),
        .O(s_level_out_bus_d3[16]));
  LUT1 #(
    .INIT(2'h2)) 
    i_87
       (.I0(1'b0),
        .O(s_level_out_bus_d3[15]));
  LUT1 #(
    .INIT(2'h2)) 
    i_88
       (.I0(1'b0),
        .O(s_level_out_bus_d3[14]));
  LUT1 #(
    .INIT(2'h2)) 
    i_89
       (.I0(1'b0),
        .O(s_level_out_bus_d3[13]));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_bus_d1_board_aurora_64b66b_0_2_cdc_to[29]));
  LUT1 #(
    .INIT(2'h2)) 
    i_90
       (.I0(1'b0),
        .O(s_level_out_bus_d3[12]));
  LUT1 #(
    .INIT(2'h2)) 
    i_91
       (.I0(1'b0),
        .O(s_level_out_bus_d3[11]));
  LUT1 #(
    .INIT(2'h2)) 
    i_92
       (.I0(1'b0),
        .O(s_level_out_bus_d3[10]));
  LUT1 #(
    .INIT(2'h2)) 
    i_93
       (.I0(1'b0),
        .O(s_level_out_bus_d3[9]));
  LUT1 #(
    .INIT(2'h2)) 
    i_94
       (.I0(1'b0),
        .O(s_level_out_bus_d3[8]));
  LUT1 #(
    .INIT(2'h2)) 
    i_95
       (.I0(1'b0),
        .O(s_level_out_bus_d3[7]));
  LUT1 #(
    .INIT(2'h2)) 
    i_96
       (.I0(1'b0),
        .O(s_level_out_bus_d3[6]));
  LUT1 #(
    .INIT(2'h2)) 
    i_97
       (.I0(1'b0),
        .O(s_level_out_bus_d3[5]));
  LUT1 #(
    .INIT(2'h2)) 
    i_98
       (.I0(1'b0),
        .O(s_level_out_bus_d3[4]));
  LUT1 #(
    .INIT(2'h2)) 
    i_99
       (.I0(1'b0),
        .O(s_level_out_bus_d3[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(overflow),
        .Q(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d2_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d1_board_aurora_64b66b_0_2_cdc_to),
        .Q(s_level_out_d2),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d3_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d4_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d5_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(cbcc_fifo_reset_rd_clk));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE s_level_out_d6_reg
       (.C(s_level_out_d5_reg_0),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(cbcc_fifo_reset_rd_clk));
endmodule

module board_aurora_64b66b_0_2_common_logic_cbcc
   (in0,
    master_do_rd_en_i,
    cb_bit_err_i,
    all_vld_btf_flag_i,
    out,
    second_cb_write_failed_reg_0,
    second_cb_write_failed_reg_1,
    second_cb_write_failed_reg_2,
    any_vld_btf_lane3_i,
    any_vld_btf_i,
    any_vld_btf_lane1_i,
    any_vld_btf_lane2_i,
    cbcc_fifo_reset_wr_clk,
    all_start_cb_writes_out_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    cbcc_fifo_reset_rd_clk,
    master_do_rd_en_out_reg_0,
    master_do_rd_en_out_reg_1,
    \first_cb_to_fifo_wr_window_reg[0]_0 ,
    \first_cb_to_fifo_wr_window_reg[0]_1 ,
    \first_cb_to_fifo_wr_window_reg[0]_2 ,
    \first_cb_to_fifo_wr_window_reg[0]_3 ,
    SR);
  output in0;
  output master_do_rd_en_i;
  output cb_bit_err_i;
  output all_vld_btf_flag_i;
  input out;
  input second_cb_write_failed_reg_0;
  input second_cb_write_failed_reg_1;
  input second_cb_write_failed_reg_2;
  input any_vld_btf_lane3_i;
  input any_vld_btf_i;
  input any_vld_btf_lane1_i;
  input any_vld_btf_lane2_i;
  input cbcc_fifo_reset_wr_clk;
  input all_start_cb_writes_out_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input cbcc_fifo_reset_rd_clk;
  input master_do_rd_en_out_reg_0;
  input master_do_rd_en_out_reg_1;
  input \first_cb_to_fifo_wr_window_reg[0]_0 ;
  input \first_cb_to_fifo_wr_window_reg[0]_1 ;
  input \first_cb_to_fifo_wr_window_reg[0]_2 ;
  input \first_cb_to_fifo_wr_window_reg[0]_3 ;
  input [0:0]SR;

  wire [0:0]SR;
  wire all_start_cb_writes_out_reg_0;
  wire all_vld_btf_flag_i;
  wire all_vld_btf_out0__0;
  wire any_vld_btf_i;
  wire any_vld_btf_lane1_i;
  wire any_vld_btf_lane2_i;
  wire any_vld_btf_lane3_i;
  wire cb_bit_err_i;
  wire cb_bit_err_out0;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_wr_clk;
  wire first_cb_to_fifo_wr_window0;
  wire [3:0]first_cb_to_fifo_wr_window_reg;
  wire \first_cb_to_fifo_wr_window_reg[0]_0 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_1 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_2 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_3 ;
  wire first_cb_write_failed;
  wire first_cb_write_failed_i_1_n_0;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire master_do_rd_en_i;
  wire master_do_rd_en_out_reg_0;
  wire master_do_rd_en_out_reg_1;
  wire out;
  wire [3:0]p_0_in__28;
  wire second_cb_write_failed;
  wire second_cb_write_failed0__0;
  wire second_cb_write_failed_reg_0;
  wire second_cb_write_failed_reg_1;
  wire second_cb_write_failed_reg_2;

  FDRE all_start_cb_writes_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(all_start_cb_writes_out_reg_0),
        .Q(in0),
        .R(cbcc_fifo_reset_wr_clk));
  LUT4 #(
    .INIT(16'h8000)) 
    all_vld_btf_out0
       (.I0(any_vld_btf_lane3_i),
        .I1(any_vld_btf_i),
        .I2(any_vld_btf_lane1_i),
        .I3(any_vld_btf_lane2_i),
        .O(all_vld_btf_out0__0));
  FDRE all_vld_btf_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(all_vld_btf_out0__0),
        .Q(all_vld_btf_flag_i),
        .R(cbcc_fifo_reset_wr_clk));
  LUT2 #(
    .INIT(4'hE)) 
    cb_bit_err_out_i_1
       (.I0(first_cb_write_failed),
        .I1(second_cb_write_failed),
        .O(cb_bit_err_out0));
  FDRE cb_bit_err_out_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cb_bit_err_out0),
        .Q(cb_bit_err_i),
        .R(cbcc_fifo_reset_wr_clk));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \first_cb_to_fifo_wr_window[0]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .O(p_0_in__28[0]));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \first_cb_to_fifo_wr_window[1]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .I1(first_cb_to_fifo_wr_window_reg[1]),
        .O(p_0_in__28[1]));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \first_cb_to_fifo_wr_window[2]_i_1 
       (.I0(first_cb_to_fifo_wr_window_reg[0]),
        .I1(first_cb_to_fifo_wr_window_reg[1]),
        .I2(first_cb_to_fifo_wr_window_reg[2]),
        .O(p_0_in__28[2]));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \first_cb_to_fifo_wr_window[3]_i_2 
       (.I0(\first_cb_to_fifo_wr_window_reg[0]_0 ),
        .I1(\first_cb_to_fifo_wr_window_reg[0]_1 ),
        .I2(\first_cb_to_fifo_wr_window_reg[0]_2 ),
        .I3(\first_cb_to_fifo_wr_window_reg[0]_3 ),
        .O(first_cb_to_fifo_wr_window0));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \first_cb_to_fifo_wr_window[3]_i_3 
       (.I0(first_cb_to_fifo_wr_window_reg[1]),
        .I1(first_cb_to_fifo_wr_window_reg[0]),
        .I2(first_cb_to_fifo_wr_window_reg[2]),
        .I3(first_cb_to_fifo_wr_window_reg[3]),
        .O(p_0_in__28[3]));
  FDRE \first_cb_to_fifo_wr_window_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__28[0]),
        .Q(first_cb_to_fifo_wr_window_reg[0]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__28[1]),
        .Q(first_cb_to_fifo_wr_window_reg[1]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__28[2]),
        .Q(first_cb_to_fifo_wr_window_reg[2]),
        .R(SR));
  FDRE \first_cb_to_fifo_wr_window_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(first_cb_to_fifo_wr_window0),
        .D(p_0_in__28[3]),
        .Q(first_cb_to_fifo_wr_window_reg[3]),
        .R(SR));
  LUT5 #(
    .INIT(32'hFFFFEAAA)) 
    first_cb_write_failed_i_1
       (.I0(first_cb_to_fifo_wr_window_reg[3]),
        .I1(first_cb_to_fifo_wr_window_reg[2]),
        .I2(first_cb_to_fifo_wr_window_reg[1]),
        .I3(first_cb_to_fifo_wr_window_reg[0]),
        .I4(first_cb_write_failed),
        .O(first_cb_write_failed_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    first_cb_write_failed_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(first_cb_write_failed_i_1_n_0),
        .Q(first_cb_write_failed),
        .R(cbcc_fifo_reset_wr_clk));
  FDRE master_do_rd_en_out_reg
       (.C(master_do_rd_en_out_reg_1),
        .CE(1'b1),
        .D(master_do_rd_en_out_reg_0),
        .Q(master_do_rd_en_i),
        .R(cbcc_fifo_reset_rd_clk));
  LUT4 #(
    .INIT(16'hFFFE)) 
    second_cb_write_failed0
       (.I0(out),
        .I1(second_cb_write_failed_reg_0),
        .I2(second_cb_write_failed_reg_1),
        .I3(second_cb_write_failed_reg_2),
        .O(second_cb_write_failed0__0));
  FDRE #(
    .INIT(1'b0)) 
    second_cb_write_failed_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(second_cb_write_failed0__0),
        .Q(second_cb_write_failed),
        .R(cbcc_fifo_reset_wr_clk));
endmodule

module board_aurora_64b66b_0_2_common_reset_cbcc
   (cbcc_only_reset_rd_clk,
    srst,
    cbcc_fifo_reset_to_fifo_wr_clk,
    cbcc_reset_cbstg2_rd_clk,
    cbcc_fifo_reset_wr_clk,
    cbcc_fifo_reset_rd_clk,
    SR,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg,
    in0,
    stg4_reg,
    gtwiz_userclk_rx_usrclk_out,
    en_chan_sync_i,
    out,
    \first_cb_to_fifo_wr_window_reg[0] ,
    \first_cb_to_fifo_wr_window_reg[0]_0 ,
    \first_cb_to_fifo_wr_window_reg[0]_1 ,
    cb_bit_err_i);
  output cbcc_only_reset_rd_clk;
  output srst;
  output cbcc_fifo_reset_to_fifo_wr_clk;
  output cbcc_reset_cbstg2_rd_clk;
  output cbcc_fifo_reset_wr_clk;
  output cbcc_fifo_reset_rd_clk;
  output [0:0]SR;
  input [0:0]stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  input in0;
  input stg4_reg;
  input gtwiz_userclk_rx_usrclk_out;
  input en_chan_sync_i;
  input out;
  input \first_cb_to_fifo_wr_window_reg[0] ;
  input \first_cb_to_fifo_wr_window_reg[0]_0 ;
  input \first_cb_to_fifo_wr_window_reg[0]_1 ;
  input cb_bit_err_i;

  wire [0:0]SR;
  wire [3:0]cb_bit_err_ext_cnt;
  wire \cb_bit_err_ext_cnt[0]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[1]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[2]_i_1_n_0 ;
  wire \cb_bit_err_ext_cnt[3]_i_1_n_0 ;
  wire cb_bit_err_i;
  wire cbc_rd_if_reset;
  wire cbc_wr_if_reset;
  wire cbcc_data_srst0;
  wire cbcc_fifo_reset_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire cbcc_fifo_reset_wr_clk;
  wire cbcc_only_reset_rd_clk;
  wire cbcc_reset_cbstg2_rd_clk;
  wire dbg_extend_srst0;
  wire [3:0]dbg_extend_srst_reg;
  wire dbg_srst_assert;
  wire dbg_srst_assert0;
  wire en_chan_sync_i;
  wire fifo_reset_comb;
  wire fifo_reset_comb_read_clk;
  wire fifo_reset_comb_user_clk;
  wire fifo_reset_comb_user_clk_int;
  wire fifo_reset_comb_user_clk_int_22q;
  wire fifo_reset_rd;
  wire fifo_reset_rd_i_1_n_0;
  wire \first_cb_to_fifo_wr_window_reg[0] ;
  wire \first_cb_to_fifo_wr_window_reg[0]_0 ;
  wire \first_cb_to_fifo_wr_window_reg[0]_1 ;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire out;
  wire [3:0]p_0_in__11;
  wire rd_stg1;
  wire reset_cbcc_comb;
  wire srst;
  wire [0:0]stg1_board_aurora_64b66b_0_2_cdc_to_reg;
  wire stg4_reg;
  wire stg5;
  wire u_cdc_chan_bond_reset_n_0;
  wire u_rst_sync_reset_rd_clk_n_0;
  wire u_rst_sync_reset_to_fifo_rd_clk_n_1;
  wire u_rst_sync_reset_to_fifo_wr_clk_n_1;
  wire u_rst_sync_reset_wr_clk_n_0;
  wire u_rst_sync_rst_cbcc_rd_clk_n_1;

  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hFFFF5554)) 
    \cb_bit_err_ext_cnt[0]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[2]),
        .I2(cb_bit_err_ext_cnt[3]),
        .I3(cb_bit_err_ext_cnt[1]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'hFFFF9998)) 
    \cb_bit_err_ext_cnt[1]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'hFFFFE1E0)) 
    \cb_bit_err_ext_cnt[2]_i_1 
       (.I0(cb_bit_err_ext_cnt[1]),
        .I1(cb_bit_err_ext_cnt[0]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'hFFFFFE00)) 
    \cb_bit_err_ext_cnt[3]_i_1 
       (.I0(cb_bit_err_ext_cnt[0]),
        .I1(cb_bit_err_ext_cnt[1]),
        .I2(cb_bit_err_ext_cnt[2]),
        .I3(cb_bit_err_ext_cnt[3]),
        .I4(cb_bit_err_i),
        .O(\cb_bit_err_ext_cnt[3]_i_1_n_0 ));
  FDRE \cb_bit_err_ext_cnt_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[0]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[0]),
        .R(stg1_board_aurora_64b66b_0_2_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[1]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[1]),
        .R(stg1_board_aurora_64b66b_0_2_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[2]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[2]),
        .R(stg1_board_aurora_64b66b_0_2_cdc_to_reg));
  FDRE \cb_bit_err_ext_cnt_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(\cb_bit_err_ext_cnt[3]_i_1_n_0 ),
        .Q(cb_bit_err_ext_cnt[3]),
        .R(stg1_board_aurora_64b66b_0_2_cdc_to_reg));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_rd_if_reset_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .Q(cbc_rd_if_reset),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbc_wr_if_reset_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .Q(cbc_wr_if_reset),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hBBBBBFFF)) 
    cbcc_data_srst_i_1
       (.I0(dbg_srst_assert),
        .I1(dbg_extend_srst_reg[3]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[1]),
        .I4(dbg_extend_srst_reg[2]),
        .O(cbcc_data_srst0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_data_srst_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbcc_data_srst0),
        .Q(srst),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_rd_clk_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(u_rst_sync_reset_rd_clk_n_0),
        .Q(cbcc_fifo_reset_rd_clk),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_rd_clk),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(cbcc_fifo_reset_to_fifo_wr_clk),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    cbcc_fifo_reset_wr_clk_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_rst_sync_reset_wr_clk_n_0),
        .Q(cbcc_fifo_reset_wr_clk),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE cbcc_reset_cbstg2_rd_clk_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .Q(cbcc_reset_cbstg2_rd_clk),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \dbg_extend_srst[0]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .O(p_0_in__11[0]));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \dbg_extend_srst[1]_i_1 
       (.I0(dbg_extend_srst_reg[0]),
        .I1(dbg_extend_srst_reg[1]),
        .O(p_0_in__11[1]));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \dbg_extend_srst[2]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[1]),
        .O(p_0_in__11[2]));
  LUT4 #(
    .INIT(16'h15FF)) 
    \dbg_extend_srst[3]_i_1 
       (.I0(dbg_extend_srst_reg[2]),
        .I1(dbg_extend_srst_reg[1]),
        .I2(dbg_extend_srst_reg[0]),
        .I3(dbg_extend_srst_reg[3]),
        .O(dbg_extend_srst0));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \dbg_extend_srst[3]_i_2 
       (.I0(dbg_extend_srst_reg[1]),
        .I1(dbg_extend_srst_reg[0]),
        .I2(dbg_extend_srst_reg[2]),
        .I3(dbg_extend_srst_reg[3]),
        .O(p_0_in__11[3]));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[0] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__11[0]),
        .Q(dbg_extend_srst_reg[0]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[1] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__11[1]),
        .Q(dbg_extend_srst_reg[1]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    \dbg_extend_srst_reg[2] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__11[2]),
        .Q(dbg_extend_srst_reg[2]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b1)) 
    \dbg_extend_srst_reg[3] 
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(dbg_extend_srst0),
        .D(p_0_in__11[3]),
        .Q(dbg_extend_srst_reg[3]),
        .R(dbg_srst_assert));
  FDRE #(
    .INIT(1'b0)) 
    dbg_srst_assert_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(dbg_srst_assert0),
        .Q(dbg_srst_assert),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    fifo_reset_comb_user_clk_int_22q_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(fifo_reset_comb_user_clk_int),
        .Q(fifo_reset_comb_user_clk_int_22q),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    fifo_reset_rd_i_1
       (.I0(fifo_reset_rd),
        .I1(en_chan_sync_i),
        .O(fifo_reset_rd_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    fifo_reset_rd_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(fifo_reset_rd_i_1_n_0),
        .Q(fifo_reset_rd),
        .S(cbcc_reset_cbstg2_rd_clk));
  LUT5 #(
    .INIT(32'hFFFF8000)) 
    \first_cb_to_fifo_wr_window[3]_i_1 
       (.I0(out),
        .I1(\first_cb_to_fifo_wr_window_reg[0] ),
        .I2(\first_cb_to_fifo_wr_window_reg[0]_0 ),
        .I3(\first_cb_to_fifo_wr_window_reg[0]_1 ),
        .I4(cbcc_fifo_reset_wr_clk),
        .O(SR));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    rd_stg1_reg
       (.C(stg4_reg),
        .CE(1'b1),
        .D(stg5),
        .Q(rd_stg1),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    reset_cbcc_comb_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(u_cdc_chan_bond_reset_n_0),
        .Q(reset_cbcc_comb),
        .R(1'b0));
  board_aurora_64b66b_0_2_cdc_sync__parameterized0_36 u_cdc_chan_bond_reset
       (.Q(cb_bit_err_ext_cnt),
        .\cb_bit_err_ext_cnt_reg[3] (u_cdc_chan_bond_reset_n_0),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(in0),
        .reset_cbcc_comb_reg(stg1_board_aurora_64b66b_0_2_cdc_to_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_37 u_rst_sync_cbcc_fifo_reset_rd_clk
       (.in0(fifo_reset_comb_user_clk),
        .stg5_reg_0(fifo_reset_comb_read_clk),
        .stg5_reg_1(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_38 u_rst_sync_cbcc_only_reset_rd_clk
       (.cbcc_only_reset_rd_clk(cbcc_only_reset_rd_clk),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(stg1_board_aurora_64b66b_0_2_cdc_to_reg),
        .stg5_reg_0(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized3 u_rst_sync_fifo_reset_comb_user_clk_in
       (.dbg_srst_assert0(dbg_srst_assert0),
        .dbg_srst_assert_reg(fifo_reset_comb_user_clk_int_22q),
        .fifo_reset_comb_user_clk_int(fifo_reset_comb_user_clk_int),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb_user_clk));
  board_aurora_64b66b_0_2_rst_sync__parameterized2 u_rst_sync_fifo_reset_user_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_comb),
        .stg11_reg_0(fifo_reset_comb_user_clk));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_39 u_rst_sync_r_sync3
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(fifo_reset_rd),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(reset_cbcc_comb),
        .stg5_reg_0(fifo_reset_comb));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_40 u_rst_sync_reset_rd_clk
       (.in0(cbc_rd_if_reset),
        .stg3_reg_0(u_rst_sync_reset_rd_clk_n_0),
        .stg3_reg_1(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized5 u_rst_sync_reset_to_fifo_rd_clk
       (.cbcc_fifo_reset_to_fifo_rd_clk(cbcc_fifo_reset_to_fifo_rd_clk),
        .cbcc_fifo_reset_to_fifo_rd_clk_dlyd(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg(u_rst_sync_reset_to_fifo_rd_clk_n_1),
        .in0(cbc_rd_if_reset),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(fifo_reset_comb_read_clk),
        .stg31_reg_0(stg4_reg));
  board_aurora_64b66b_0_2_rst_sync__parameterized4 u_rst_sync_reset_to_fifo_wr_clk
       (.cbc_wr_if_reset_reg(fifo_reset_comb_user_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk(cbcc_fifo_reset_to_fifo_wr_clk),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg(u_rst_sync_reset_to_fifo_wr_clk_n_1),
        .gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(cbc_wr_if_reset),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(fifo_reset_comb_user_clk_int_22q));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_41 u_rst_sync_reset_wr_clk
       (.gtwiz_userclk_rx_usrclk_out(gtwiz_userclk_rx_usrclk_out),
        .in0(cbc_wr_if_reset),
        .stg3_reg_0(u_rst_sync_reset_wr_clk_n_0));
  board_aurora_64b66b_0_2_rst_sync__parameterized1_42 u_rst_sync_rst_cbcc_rd_clk
       (.rd_stg1(rd_stg1),
        .rd_stg1_reg(u_rst_sync_rst_cbcc_rd_clk_n_1),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg_0(reset_cbcc_comb),
        .stg4_reg_0(stg4_reg),
        .stg5(stg5));
endmodule

module board_aurora_64b66b_0_2_core
   (link_reset_out,
    lane_up_flop_i,
    SYSTEM_RESET_reg,
    lane_up_flop_i_0,
    lane_up_flop_i_1,
    lane_up_flop_i_2,
    gtwiz_reset_qpll0reset_out,
    gt_powergood,
    txn,
    txp,
    tx_out_clk,
    gt_pll_lock,
    CHANNEL_UP_RX_IF_reg,
    s_axi_tx_tready,
    soft_err,
    hard_err,
    m_axi_rx_tvalid,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    m_axi_rx_tdata,
    power_down,
    sysreset_from_support,
    \TX_PE_DATA_V_reg[0] ,
    rst_in_out_reg,
    gt_qplllock_quad1_out,
    init_clk,
    gt_refclk1_out,
    rxn,
    rxp,
    loopback,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_rxcdrovrden_in,
    s_axi_tx_tvalid,
    s_axi_tx_tdata,
    mmcm_not_locked_out2,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3);
  output link_reset_out;
  output lane_up_flop_i;
  output SYSTEM_RESET_reg;
  output lane_up_flop_i_0;
  output lane_up_flop_i_1;
  output lane_up_flop_i_2;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [3:0]gt_powergood;
  output [0:3]txn;
  output [0:3]txp;
  output tx_out_clk;
  output gt_pll_lock;
  output CHANNEL_UP_RX_IF_reg;
  output s_axi_tx_tready;
  output soft_err;
  output hard_err;
  output m_axi_rx_tvalid;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  output [0:255]m_axi_rx_tdata;
  input power_down;
  input sysreset_from_support;
  input \TX_PE_DATA_V_reg[0] ;
  input rst_in_out_reg;
  input gt_qplllock_quad1_out;
  input init_clk;
  input gt_refclk1_out;
  input [0:3]rxn;
  input [0:3]rxp;
  input [2:0]loopback;
  input gt_qpllclk_quad1_out;
  input gt_qpllrefclk_quad1_out;
  input gt_rxcdrovrden_in;
  input s_axi_tx_tvalid;
  input [0:255]s_axi_tx_tdata;
  input mmcm_not_locked_out2;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;

  wire CHANNEL_UP_RX_IF_reg;
  wire [0:3]RX_IDLES;
  wire [0:255]RX_PE_DATA;
  wire [0:3]RX_PE_DATA_V;
  wire SYSTEM_RESET_reg;
  wire [15:12]TX_PE_DATA;
  wire \TX_PE_DATA_V_reg[0] ;
  wire aurora_lane_0_i_n_12;
  wire aurora_lane_1_i_n_11;
  wire aurora_lane_1_i_n_12;
  wire aurora_lane_2_i_n_11;
  wire aurora_lane_2_i_n_12;
  wire aurora_lane_3_i_n_10;
  wire aurora_lane_3_i_n_14;
  wire board_aurora_64b66b_0_2_wrapper_i_n_100;
  wire board_aurora_64b66b_0_2_wrapper_i_n_101;
  wire board_aurora_64b66b_0_2_wrapper_i_n_102;
  wire board_aurora_64b66b_0_2_wrapper_i_n_103;
  wire board_aurora_64b66b_0_2_wrapper_i_n_104;
  wire board_aurora_64b66b_0_2_wrapper_i_n_105;
  wire board_aurora_64b66b_0_2_wrapper_i_n_106;
  wire board_aurora_64b66b_0_2_wrapper_i_n_107;
  wire board_aurora_64b66b_0_2_wrapper_i_n_108;
  wire board_aurora_64b66b_0_2_wrapper_i_n_109;
  wire board_aurora_64b66b_0_2_wrapper_i_n_128;
  wire board_aurora_64b66b_0_2_wrapper_i_n_129;
  wire board_aurora_64b66b_0_2_wrapper_i_n_130;
  wire board_aurora_64b66b_0_2_wrapper_i_n_131;
  wire board_aurora_64b66b_0_2_wrapper_i_n_132;
  wire board_aurora_64b66b_0_2_wrapper_i_n_133;
  wire board_aurora_64b66b_0_2_wrapper_i_n_134;
  wire board_aurora_64b66b_0_2_wrapper_i_n_135;
  wire board_aurora_64b66b_0_2_wrapper_i_n_136;
  wire board_aurora_64b66b_0_2_wrapper_i_n_137;
  wire board_aurora_64b66b_0_2_wrapper_i_n_138;
  wire board_aurora_64b66b_0_2_wrapper_i_n_139;
  wire board_aurora_64b66b_0_2_wrapper_i_n_140;
  wire board_aurora_64b66b_0_2_wrapper_i_n_141;
  wire board_aurora_64b66b_0_2_wrapper_i_n_142;
  wire board_aurora_64b66b_0_2_wrapper_i_n_143;
  wire board_aurora_64b66b_0_2_wrapper_i_n_144;
  wire board_aurora_64b66b_0_2_wrapper_i_n_145;
  wire board_aurora_64b66b_0_2_wrapper_i_n_146;
  wire board_aurora_64b66b_0_2_wrapper_i_n_147;
  wire board_aurora_64b66b_0_2_wrapper_i_n_148;
  wire board_aurora_64b66b_0_2_wrapper_i_n_149;
  wire board_aurora_64b66b_0_2_wrapper_i_n_150;
  wire board_aurora_64b66b_0_2_wrapper_i_n_151;
  wire board_aurora_64b66b_0_2_wrapper_i_n_152;
  wire board_aurora_64b66b_0_2_wrapper_i_n_153;
  wire board_aurora_64b66b_0_2_wrapper_i_n_154;
  wire board_aurora_64b66b_0_2_wrapper_i_n_155;
  wire board_aurora_64b66b_0_2_wrapper_i_n_156;
  wire board_aurora_64b66b_0_2_wrapper_i_n_157;
  wire board_aurora_64b66b_0_2_wrapper_i_n_158;
  wire board_aurora_64b66b_0_2_wrapper_i_n_159;
  wire board_aurora_64b66b_0_2_wrapper_i_n_160;
  wire board_aurora_64b66b_0_2_wrapper_i_n_161;
  wire board_aurora_64b66b_0_2_wrapper_i_n_162;
  wire board_aurora_64b66b_0_2_wrapper_i_n_163;
  wire board_aurora_64b66b_0_2_wrapper_i_n_164;
  wire board_aurora_64b66b_0_2_wrapper_i_n_165;
  wire board_aurora_64b66b_0_2_wrapper_i_n_166;
  wire board_aurora_64b66b_0_2_wrapper_i_n_167;
  wire board_aurora_64b66b_0_2_wrapper_i_n_168;
  wire board_aurora_64b66b_0_2_wrapper_i_n_169;
  wire board_aurora_64b66b_0_2_wrapper_i_n_170;
  wire board_aurora_64b66b_0_2_wrapper_i_n_171;
  wire board_aurora_64b66b_0_2_wrapper_i_n_172;
  wire board_aurora_64b66b_0_2_wrapper_i_n_173;
  wire board_aurora_64b66b_0_2_wrapper_i_n_174;
  wire board_aurora_64b66b_0_2_wrapper_i_n_175;
  wire board_aurora_64b66b_0_2_wrapper_i_n_194;
  wire board_aurora_64b66b_0_2_wrapper_i_n_195;
  wire board_aurora_64b66b_0_2_wrapper_i_n_196;
  wire board_aurora_64b66b_0_2_wrapper_i_n_197;
  wire board_aurora_64b66b_0_2_wrapper_i_n_198;
  wire board_aurora_64b66b_0_2_wrapper_i_n_199;
  wire board_aurora_64b66b_0_2_wrapper_i_n_200;
  wire board_aurora_64b66b_0_2_wrapper_i_n_201;
  wire board_aurora_64b66b_0_2_wrapper_i_n_202;
  wire board_aurora_64b66b_0_2_wrapper_i_n_203;
  wire board_aurora_64b66b_0_2_wrapper_i_n_204;
  wire board_aurora_64b66b_0_2_wrapper_i_n_205;
  wire board_aurora_64b66b_0_2_wrapper_i_n_206;
  wire board_aurora_64b66b_0_2_wrapper_i_n_207;
  wire board_aurora_64b66b_0_2_wrapper_i_n_208;
  wire board_aurora_64b66b_0_2_wrapper_i_n_209;
  wire board_aurora_64b66b_0_2_wrapper_i_n_210;
  wire board_aurora_64b66b_0_2_wrapper_i_n_211;
  wire board_aurora_64b66b_0_2_wrapper_i_n_212;
  wire board_aurora_64b66b_0_2_wrapper_i_n_213;
  wire board_aurora_64b66b_0_2_wrapper_i_n_214;
  wire board_aurora_64b66b_0_2_wrapper_i_n_215;
  wire board_aurora_64b66b_0_2_wrapper_i_n_216;
  wire board_aurora_64b66b_0_2_wrapper_i_n_217;
  wire board_aurora_64b66b_0_2_wrapper_i_n_218;
  wire board_aurora_64b66b_0_2_wrapper_i_n_219;
  wire board_aurora_64b66b_0_2_wrapper_i_n_220;
  wire board_aurora_64b66b_0_2_wrapper_i_n_221;
  wire board_aurora_64b66b_0_2_wrapper_i_n_222;
  wire board_aurora_64b66b_0_2_wrapper_i_n_223;
  wire board_aurora_64b66b_0_2_wrapper_i_n_224;
  wire board_aurora_64b66b_0_2_wrapper_i_n_225;
  wire board_aurora_64b66b_0_2_wrapper_i_n_226;
  wire board_aurora_64b66b_0_2_wrapper_i_n_227;
  wire board_aurora_64b66b_0_2_wrapper_i_n_228;
  wire board_aurora_64b66b_0_2_wrapper_i_n_229;
  wire board_aurora_64b66b_0_2_wrapper_i_n_230;
  wire board_aurora_64b66b_0_2_wrapper_i_n_231;
  wire board_aurora_64b66b_0_2_wrapper_i_n_232;
  wire board_aurora_64b66b_0_2_wrapper_i_n_233;
  wire board_aurora_64b66b_0_2_wrapper_i_n_234;
  wire board_aurora_64b66b_0_2_wrapper_i_n_235;
  wire board_aurora_64b66b_0_2_wrapper_i_n_236;
  wire board_aurora_64b66b_0_2_wrapper_i_n_237;
  wire board_aurora_64b66b_0_2_wrapper_i_n_238;
  wire board_aurora_64b66b_0_2_wrapper_i_n_239;
  wire board_aurora_64b66b_0_2_wrapper_i_n_240;
  wire board_aurora_64b66b_0_2_wrapper_i_n_241;
  wire board_aurora_64b66b_0_2_wrapper_i_n_260;
  wire board_aurora_64b66b_0_2_wrapper_i_n_261;
  wire board_aurora_64b66b_0_2_wrapper_i_n_262;
  wire board_aurora_64b66b_0_2_wrapper_i_n_263;
  wire board_aurora_64b66b_0_2_wrapper_i_n_264;
  wire board_aurora_64b66b_0_2_wrapper_i_n_265;
  wire board_aurora_64b66b_0_2_wrapper_i_n_266;
  wire board_aurora_64b66b_0_2_wrapper_i_n_267;
  wire board_aurora_64b66b_0_2_wrapper_i_n_268;
  wire board_aurora_64b66b_0_2_wrapper_i_n_269;
  wire board_aurora_64b66b_0_2_wrapper_i_n_270;
  wire board_aurora_64b66b_0_2_wrapper_i_n_271;
  wire board_aurora_64b66b_0_2_wrapper_i_n_272;
  wire board_aurora_64b66b_0_2_wrapper_i_n_273;
  wire board_aurora_64b66b_0_2_wrapper_i_n_274;
  wire board_aurora_64b66b_0_2_wrapper_i_n_275;
  wire board_aurora_64b66b_0_2_wrapper_i_n_276;
  wire board_aurora_64b66b_0_2_wrapper_i_n_277;
  wire board_aurora_64b66b_0_2_wrapper_i_n_278;
  wire board_aurora_64b66b_0_2_wrapper_i_n_279;
  wire board_aurora_64b66b_0_2_wrapper_i_n_280;
  wire board_aurora_64b66b_0_2_wrapper_i_n_281;
  wire board_aurora_64b66b_0_2_wrapper_i_n_282;
  wire board_aurora_64b66b_0_2_wrapper_i_n_283;
  wire board_aurora_64b66b_0_2_wrapper_i_n_284;
  wire board_aurora_64b66b_0_2_wrapper_i_n_285;
  wire board_aurora_64b66b_0_2_wrapper_i_n_286;
  wire board_aurora_64b66b_0_2_wrapper_i_n_287;
  wire board_aurora_64b66b_0_2_wrapper_i_n_288;
  wire board_aurora_64b66b_0_2_wrapper_i_n_289;
  wire board_aurora_64b66b_0_2_wrapper_i_n_290;
  wire board_aurora_64b66b_0_2_wrapper_i_n_291;
  wire board_aurora_64b66b_0_2_wrapper_i_n_292;
  wire board_aurora_64b66b_0_2_wrapper_i_n_293;
  wire board_aurora_64b66b_0_2_wrapper_i_n_294;
  wire board_aurora_64b66b_0_2_wrapper_i_n_295;
  wire board_aurora_64b66b_0_2_wrapper_i_n_296;
  wire board_aurora_64b66b_0_2_wrapper_i_n_297;
  wire board_aurora_64b66b_0_2_wrapper_i_n_298;
  wire board_aurora_64b66b_0_2_wrapper_i_n_299;
  wire board_aurora_64b66b_0_2_wrapper_i_n_300;
  wire board_aurora_64b66b_0_2_wrapper_i_n_301;
  wire board_aurora_64b66b_0_2_wrapper_i_n_302;
  wire board_aurora_64b66b_0_2_wrapper_i_n_303;
  wire board_aurora_64b66b_0_2_wrapper_i_n_304;
  wire board_aurora_64b66b_0_2_wrapper_i_n_305;
  wire board_aurora_64b66b_0_2_wrapper_i_n_306;
  wire board_aurora_64b66b_0_2_wrapper_i_n_307;
  wire board_aurora_64b66b_0_2_wrapper_i_n_308;
  wire board_aurora_64b66b_0_2_wrapper_i_n_311;
  wire board_aurora_64b66b_0_2_wrapper_i_n_312;
  wire board_aurora_64b66b_0_2_wrapper_i_n_313;
  wire board_aurora_64b66b_0_2_wrapper_i_n_314;
  wire board_aurora_64b66b_0_2_wrapper_i_n_34;
  wire board_aurora_64b66b_0_2_wrapper_i_n_36;
  wire board_aurora_64b66b_0_2_wrapper_i_n_38;
  wire board_aurora_64b66b_0_2_wrapper_i_n_40;
  wire board_aurora_64b66b_0_2_wrapper_i_n_43;
  wire board_aurora_64b66b_0_2_wrapper_i_n_62;
  wire board_aurora_64b66b_0_2_wrapper_i_n_63;
  wire board_aurora_64b66b_0_2_wrapper_i_n_64;
  wire board_aurora_64b66b_0_2_wrapper_i_n_65;
  wire board_aurora_64b66b_0_2_wrapper_i_n_66;
  wire board_aurora_64b66b_0_2_wrapper_i_n_67;
  wire board_aurora_64b66b_0_2_wrapper_i_n_68;
  wire board_aurora_64b66b_0_2_wrapper_i_n_69;
  wire board_aurora_64b66b_0_2_wrapper_i_n_70;
  wire board_aurora_64b66b_0_2_wrapper_i_n_71;
  wire board_aurora_64b66b_0_2_wrapper_i_n_72;
  wire board_aurora_64b66b_0_2_wrapper_i_n_73;
  wire board_aurora_64b66b_0_2_wrapper_i_n_74;
  wire board_aurora_64b66b_0_2_wrapper_i_n_75;
  wire board_aurora_64b66b_0_2_wrapper_i_n_76;
  wire board_aurora_64b66b_0_2_wrapper_i_n_77;
  wire board_aurora_64b66b_0_2_wrapper_i_n_78;
  wire board_aurora_64b66b_0_2_wrapper_i_n_79;
  wire board_aurora_64b66b_0_2_wrapper_i_n_80;
  wire board_aurora_64b66b_0_2_wrapper_i_n_81;
  wire board_aurora_64b66b_0_2_wrapper_i_n_82;
  wire board_aurora_64b66b_0_2_wrapper_i_n_83;
  wire board_aurora_64b66b_0_2_wrapper_i_n_84;
  wire board_aurora_64b66b_0_2_wrapper_i_n_85;
  wire board_aurora_64b66b_0_2_wrapper_i_n_86;
  wire board_aurora_64b66b_0_2_wrapper_i_n_87;
  wire board_aurora_64b66b_0_2_wrapper_i_n_88;
  wire board_aurora_64b66b_0_2_wrapper_i_n_89;
  wire board_aurora_64b66b_0_2_wrapper_i_n_90;
  wire board_aurora_64b66b_0_2_wrapper_i_n_91;
  wire board_aurora_64b66b_0_2_wrapper_i_n_92;
  wire board_aurora_64b66b_0_2_wrapper_i_n_93;
  wire board_aurora_64b66b_0_2_wrapper_i_n_94;
  wire board_aurora_64b66b_0_2_wrapper_i_n_95;
  wire board_aurora_64b66b_0_2_wrapper_i_n_96;
  wire board_aurora_64b66b_0_2_wrapper_i_n_97;
  wire board_aurora_64b66b_0_2_wrapper_i_n_98;
  wire board_aurora_64b66b_0_2_wrapper_i_n_99;
  wire [1:0]\cbcc_gtx0_i/p_0_in ;
  wire [15:0]\cbcc_gtx0_i/p_1_in ;
  wire [1:0]\cbcc_gtx0_lane1_i/p_0_in ;
  wire [15:0]\cbcc_gtx0_lane1_i/p_1_in ;
  wire [1:0]\cbcc_gtx0_lane2_i/p_0_in ;
  wire [15:0]\cbcc_gtx0_lane2_i/p_1_in ;
  wire [1:0]\cbcc_gtx0_lane3_i/p_0_in ;
  wire [15:0]\cbcc_gtx0_lane3_i/p_1_in ;
  wire [0:3]ch_bond_done_i;
  wire chan_bond_reset_i;
  wire channel_hard_err_c;
  wire \channel_init_sm_i/channel_bond_r ;
  wire \channel_init_sm_i/reset_lanes_c ;
  wire \channel_init_sm_i/wait_for_lane_up_r ;
  wire channel_up_tx_if;
  wire check_polarity_i_0;
  wire check_polarity_i_1;
  wire check_polarity_i_2;
  wire check_polarity_i_3;
  wire core_reset_logic_i_n_4;
  wire do_cc_i;
  wire en_chan_sync_i;
  wire fsm_resetdone;
  wire [0:3]gen_cc_i;
  wire [3:3]gen_ch_bond_i;
  wire global_logic_i_n_10;
  wire global_logic_i_n_11;
  wire global_logic_i_n_12;
  wire global_logic_i_n_13;
  wire global_logic_i_n_14;
  wire global_logic_i_n_15;
  wire global_logic_i_n_16;
  wire global_logic_i_n_17;
  wire global_logic_i_n_18;
  wire global_logic_i_n_19;
  wire global_logic_i_n_20;
  wire global_logic_i_n_23;
  wire global_logic_i_n_24;
  wire global_logic_i_n_25;
  wire global_logic_i_n_26;
  wire global_logic_i_n_28;
  wire global_logic_i_n_29;
  wire global_logic_i_n_30;
  wire global_logic_i_n_31;
  wire global_logic_i_n_32;
  wire global_logic_i_n_33;
  wire global_logic_i_n_9;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_refclk1_out;
  wire gt_rxcdrovrden_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire hard_err;
  wire [0:3]hard_err_i;
  wire init_clk;
  wire \lane_init_sm_i/ready_r_reg0 ;
  wire \lane_init_sm_i/ready_r_reg0_3 ;
  wire \lane_init_sm_i/ready_r_reg0_4 ;
  wire lane_up_flop_i;
  wire lane_up_flop_i_0;
  wire lane_up_flop_i_1;
  wire lane_up_flop_i_2;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out2;
  wire [54:52]p_1_in;
  wire power_down;
  wire reset_lanes_i;
  wire rst_in_out_reg;
  wire rx_header_err_i_0;
  wire rx_header_err_i_1;
  wire rx_header_err_i_2;
  wire rx_header_err_i_3;
  wire rx_lossofsync_i_0;
  wire rx_lossofsync_i_1;
  wire rx_lossofsync_i_2;
  wire rx_lossofsync_i_3;
  wire rx_neg_i_0;
  wire rx_neg_i_1;
  wire rx_neg_i_2;
  wire rx_neg_i_3;
  wire rx_polarity_i_0;
  wire rx_polarity_i_1;
  wire rx_polarity_i_2;
  wire rx_polarity_i_3;
  wire rxdatavalid_to_lanes_i;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire rxreset_for_lanes;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire [0:3]soft_err_i;
  wire \sym_dec_i/RXDATAVALID_IN_REG ;
  wire \sym_gen_i/rst_pma_init_usrclk ;
  wire \sym_gen_i/rst_pma_init_usrclk_0 ;
  wire \sym_gen_i/rst_pma_init_usrclk_1 ;
  wire \sym_gen_i/rst_pma_init_usrclk_2 ;
  wire sysreset_from_support;
  wire [63:0]tx_data_i_0;
  wire [63:0]tx_data_i_128;
  wire [63:0]tx_data_i_192;
  wire [63:0]tx_data_i_64;
  wire tx_header_0_i_0;
  wire tx_header_0_i_1;
  wire tx_header_0_i_2;
  wire tx_header_0_i_3;
  wire tx_header_1_i_0;
  wire tx_header_1_i_1;
  wire tx_header_1_i_2;
  wire tx_header_1_i_3;
  wire tx_out_clk;
  wire [0:0]tx_pe_data_v_i;
  wire tx_reset_i_1;
  wire tx_reset_i_2;
  wire tx_reset_i_3;
  wire \tx_stream_control_sm_i/R0 ;
  wire \tx_stream_control_sm_i/do_cc_r ;
  wire \tx_stream_control_sm_i/do_cc_r0 ;
  wire \tx_stream_control_sm_i/extend_cc_r ;
  wire \tx_stream_control_sm_i/pdu_ok_c ;
  wire tx_stream_i_n_100;
  wire tx_stream_i_n_101;
  wire tx_stream_i_n_102;
  wire tx_stream_i_n_103;
  wire tx_stream_i_n_104;
  wire tx_stream_i_n_105;
  wire tx_stream_i_n_106;
  wire tx_stream_i_n_107;
  wire tx_stream_i_n_108;
  wire tx_stream_i_n_109;
  wire tx_stream_i_n_110;
  wire tx_stream_i_n_111;
  wire tx_stream_i_n_112;
  wire tx_stream_i_n_113;
  wire tx_stream_i_n_114;
  wire tx_stream_i_n_115;
  wire tx_stream_i_n_116;
  wire tx_stream_i_n_117;
  wire tx_stream_i_n_118;
  wire tx_stream_i_n_119;
  wire tx_stream_i_n_120;
  wire tx_stream_i_n_121;
  wire tx_stream_i_n_122;
  wire tx_stream_i_n_123;
  wire tx_stream_i_n_124;
  wire tx_stream_i_n_125;
  wire tx_stream_i_n_126;
  wire tx_stream_i_n_127;
  wire tx_stream_i_n_128;
  wire tx_stream_i_n_129;
  wire tx_stream_i_n_130;
  wire tx_stream_i_n_131;
  wire tx_stream_i_n_132;
  wire tx_stream_i_n_133;
  wire tx_stream_i_n_134;
  wire tx_stream_i_n_135;
  wire tx_stream_i_n_136;
  wire tx_stream_i_n_137;
  wire tx_stream_i_n_138;
  wire tx_stream_i_n_139;
  wire tx_stream_i_n_14;
  wire tx_stream_i_n_140;
  wire tx_stream_i_n_141;
  wire tx_stream_i_n_142;
  wire tx_stream_i_n_143;
  wire tx_stream_i_n_144;
  wire tx_stream_i_n_145;
  wire tx_stream_i_n_146;
  wire tx_stream_i_n_147;
  wire tx_stream_i_n_148;
  wire tx_stream_i_n_149;
  wire tx_stream_i_n_15;
  wire tx_stream_i_n_150;
  wire tx_stream_i_n_151;
  wire tx_stream_i_n_152;
  wire tx_stream_i_n_153;
  wire tx_stream_i_n_154;
  wire tx_stream_i_n_155;
  wire tx_stream_i_n_156;
  wire tx_stream_i_n_157;
  wire tx_stream_i_n_158;
  wire tx_stream_i_n_159;
  wire tx_stream_i_n_16;
  wire tx_stream_i_n_160;
  wire tx_stream_i_n_161;
  wire tx_stream_i_n_162;
  wire tx_stream_i_n_163;
  wire tx_stream_i_n_164;
  wire tx_stream_i_n_165;
  wire tx_stream_i_n_166;
  wire tx_stream_i_n_167;
  wire tx_stream_i_n_168;
  wire tx_stream_i_n_169;
  wire tx_stream_i_n_17;
  wire tx_stream_i_n_170;
  wire tx_stream_i_n_171;
  wire tx_stream_i_n_172;
  wire tx_stream_i_n_173;
  wire tx_stream_i_n_174;
  wire tx_stream_i_n_175;
  wire tx_stream_i_n_176;
  wire tx_stream_i_n_177;
  wire tx_stream_i_n_178;
  wire tx_stream_i_n_179;
  wire tx_stream_i_n_18;
  wire tx_stream_i_n_180;
  wire tx_stream_i_n_181;
  wire tx_stream_i_n_182;
  wire tx_stream_i_n_183;
  wire tx_stream_i_n_184;
  wire tx_stream_i_n_185;
  wire tx_stream_i_n_186;
  wire tx_stream_i_n_187;
  wire tx_stream_i_n_188;
  wire tx_stream_i_n_189;
  wire tx_stream_i_n_19;
  wire tx_stream_i_n_190;
  wire tx_stream_i_n_191;
  wire tx_stream_i_n_192;
  wire tx_stream_i_n_193;
  wire tx_stream_i_n_194;
  wire tx_stream_i_n_195;
  wire tx_stream_i_n_196;
  wire tx_stream_i_n_197;
  wire tx_stream_i_n_198;
  wire tx_stream_i_n_199;
  wire tx_stream_i_n_20;
  wire tx_stream_i_n_200;
  wire tx_stream_i_n_201;
  wire tx_stream_i_n_202;
  wire tx_stream_i_n_203;
  wire tx_stream_i_n_204;
  wire tx_stream_i_n_205;
  wire tx_stream_i_n_206;
  wire tx_stream_i_n_207;
  wire tx_stream_i_n_208;
  wire tx_stream_i_n_209;
  wire tx_stream_i_n_21;
  wire tx_stream_i_n_210;
  wire tx_stream_i_n_211;
  wire tx_stream_i_n_212;
  wire tx_stream_i_n_213;
  wire tx_stream_i_n_214;
  wire tx_stream_i_n_215;
  wire tx_stream_i_n_216;
  wire tx_stream_i_n_217;
  wire tx_stream_i_n_218;
  wire tx_stream_i_n_219;
  wire tx_stream_i_n_22;
  wire tx_stream_i_n_220;
  wire tx_stream_i_n_221;
  wire tx_stream_i_n_222;
  wire tx_stream_i_n_223;
  wire tx_stream_i_n_224;
  wire tx_stream_i_n_225;
  wire tx_stream_i_n_226;
  wire tx_stream_i_n_227;
  wire tx_stream_i_n_228;
  wire tx_stream_i_n_229;
  wire tx_stream_i_n_23;
  wire tx_stream_i_n_230;
  wire tx_stream_i_n_231;
  wire tx_stream_i_n_232;
  wire tx_stream_i_n_233;
  wire tx_stream_i_n_234;
  wire tx_stream_i_n_235;
  wire tx_stream_i_n_236;
  wire tx_stream_i_n_237;
  wire tx_stream_i_n_238;
  wire tx_stream_i_n_239;
  wire tx_stream_i_n_24;
  wire tx_stream_i_n_240;
  wire tx_stream_i_n_241;
  wire tx_stream_i_n_242;
  wire tx_stream_i_n_243;
  wire tx_stream_i_n_244;
  wire tx_stream_i_n_245;
  wire tx_stream_i_n_246;
  wire tx_stream_i_n_247;
  wire tx_stream_i_n_248;
  wire tx_stream_i_n_249;
  wire tx_stream_i_n_25;
  wire tx_stream_i_n_250;
  wire tx_stream_i_n_251;
  wire tx_stream_i_n_252;
  wire tx_stream_i_n_253;
  wire tx_stream_i_n_254;
  wire tx_stream_i_n_255;
  wire tx_stream_i_n_256;
  wire tx_stream_i_n_257;
  wire tx_stream_i_n_258;
  wire tx_stream_i_n_259;
  wire tx_stream_i_n_26;
  wire tx_stream_i_n_260;
  wire tx_stream_i_n_261;
  wire tx_stream_i_n_262;
  wire tx_stream_i_n_263;
  wire tx_stream_i_n_264;
  wire tx_stream_i_n_265;
  wire tx_stream_i_n_27;
  wire tx_stream_i_n_28;
  wire tx_stream_i_n_29;
  wire tx_stream_i_n_30;
  wire tx_stream_i_n_31;
  wire tx_stream_i_n_32;
  wire tx_stream_i_n_33;
  wire tx_stream_i_n_34;
  wire tx_stream_i_n_35;
  wire tx_stream_i_n_36;
  wire tx_stream_i_n_37;
  wire tx_stream_i_n_38;
  wire tx_stream_i_n_39;
  wire tx_stream_i_n_40;
  wire tx_stream_i_n_41;
  wire tx_stream_i_n_42;
  wire tx_stream_i_n_43;
  wire tx_stream_i_n_44;
  wire tx_stream_i_n_45;
  wire tx_stream_i_n_46;
  wire tx_stream_i_n_47;
  wire tx_stream_i_n_48;
  wire tx_stream_i_n_49;
  wire tx_stream_i_n_50;
  wire tx_stream_i_n_51;
  wire tx_stream_i_n_52;
  wire tx_stream_i_n_53;
  wire tx_stream_i_n_54;
  wire tx_stream_i_n_55;
  wire tx_stream_i_n_56;
  wire tx_stream_i_n_57;
  wire tx_stream_i_n_58;
  wire tx_stream_i_n_59;
  wire tx_stream_i_n_60;
  wire tx_stream_i_n_61;
  wire tx_stream_i_n_62;
  wire tx_stream_i_n_63;
  wire tx_stream_i_n_64;
  wire tx_stream_i_n_65;
  wire tx_stream_i_n_66;
  wire tx_stream_i_n_67;
  wire tx_stream_i_n_68;
  wire tx_stream_i_n_69;
  wire tx_stream_i_n_70;
  wire tx_stream_i_n_71;
  wire tx_stream_i_n_72;
  wire tx_stream_i_n_73;
  wire tx_stream_i_n_74;
  wire tx_stream_i_n_75;
  wire tx_stream_i_n_76;
  wire tx_stream_i_n_77;
  wire tx_stream_i_n_78;
  wire tx_stream_i_n_79;
  wire tx_stream_i_n_8;
  wire tx_stream_i_n_80;
  wire tx_stream_i_n_81;
  wire tx_stream_i_n_82;
  wire tx_stream_i_n_83;
  wire tx_stream_i_n_84;
  wire tx_stream_i_n_85;
  wire tx_stream_i_n_86;
  wire tx_stream_i_n_87;
  wire tx_stream_i_n_88;
  wire tx_stream_i_n_89;
  wire tx_stream_i_n_9;
  wire tx_stream_i_n_90;
  wire tx_stream_i_n_91;
  wire tx_stream_i_n_92;
  wire tx_stream_i_n_93;
  wire tx_stream_i_n_94;
  wire tx_stream_i_n_95;
  wire tx_stream_i_n_96;
  wire tx_stream_i_n_97;
  wire tx_stream_i_n_98;
  wire tx_stream_i_n_99;
  wire txdatavalid_i;
  wire txdatavalid_symgen_i;
  wire txdatavalid_symgen_i_lane1;
  wire txdatavalid_symgen_i_lane2;
  wire txdatavalid_symgen_i_lane3;
  wire [0:3]txn;
  wire [0:3]txp;

  board_aurora_64b66b_0_2_AURORA_LANE aurora_lane_0_i
       (.D({tx_header_1_i_3,tx_header_0_i_3}),
        .HARD_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_308),
        .Q({\cbcc_gtx0_i/p_0_in ,\cbcc_gtx0_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_62,board_aurora_64b66b_0_2_wrapper_i_n_63,board_aurora_64b66b_0_2_wrapper_i_n_64,board_aurora_64b66b_0_2_wrapper_i_n_65,board_aurora_64b66b_0_2_wrapper_i_n_66,board_aurora_64b66b_0_2_wrapper_i_n_67,board_aurora_64b66b_0_2_wrapper_i_n_68,board_aurora_64b66b_0_2_wrapper_i_n_69,board_aurora_64b66b_0_2_wrapper_i_n_70,board_aurora_64b66b_0_2_wrapper_i_n_71,board_aurora_64b66b_0_2_wrapper_i_n_72,board_aurora_64b66b_0_2_wrapper_i_n_73,board_aurora_64b66b_0_2_wrapper_i_n_74,board_aurora_64b66b_0_2_wrapper_i_n_75,board_aurora_64b66b_0_2_wrapper_i_n_76,board_aurora_64b66b_0_2_wrapper_i_n_77,board_aurora_64b66b_0_2_wrapper_i_n_78,board_aurora_64b66b_0_2_wrapper_i_n_79,board_aurora_64b66b_0_2_wrapper_i_n_80,board_aurora_64b66b_0_2_wrapper_i_n_81,board_aurora_64b66b_0_2_wrapper_i_n_82,board_aurora_64b66b_0_2_wrapper_i_n_83,board_aurora_64b66b_0_2_wrapper_i_n_84,board_aurora_64b66b_0_2_wrapper_i_n_85,board_aurora_64b66b_0_2_wrapper_i_n_86,board_aurora_64b66b_0_2_wrapper_i_n_87,board_aurora_64b66b_0_2_wrapper_i_n_88,board_aurora_64b66b_0_2_wrapper_i_n_89,board_aurora_64b66b_0_2_wrapper_i_n_90,board_aurora_64b66b_0_2_wrapper_i_n_91,board_aurora_64b66b_0_2_wrapper_i_n_92,board_aurora_64b66b_0_2_wrapper_i_n_93,board_aurora_64b66b_0_2_wrapper_i_n_94,board_aurora_64b66b_0_2_wrapper_i_n_95,board_aurora_64b66b_0_2_wrapper_i_n_96,board_aurora_64b66b_0_2_wrapper_i_n_97,board_aurora_64b66b_0_2_wrapper_i_n_98,board_aurora_64b66b_0_2_wrapper_i_n_99,board_aurora_64b66b_0_2_wrapper_i_n_100,board_aurora_64b66b_0_2_wrapper_i_n_101,board_aurora_64b66b_0_2_wrapper_i_n_102,board_aurora_64b66b_0_2_wrapper_i_n_103,board_aurora_64b66b_0_2_wrapper_i_n_104,board_aurora_64b66b_0_2_wrapper_i_n_105,board_aurora_64b66b_0_2_wrapper_i_n_106,board_aurora_64b66b_0_2_wrapper_i_n_107,board_aurora_64b66b_0_2_wrapper_i_n_108,board_aurora_64b66b_0_2_wrapper_i_n_109}),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .\RX_DATA_REG_reg[0] (board_aurora_64b66b_0_2_wrapper_i_n_311),
        .RX_IDLES(RX_IDLES[0]),
        .RX_PE_DATA_V(RX_PE_DATA_V[0]),
        .\RX_PE_DATA_reg[0] ({RX_PE_DATA[0],RX_PE_DATA[1],RX_PE_DATA[2],RX_PE_DATA[3],RX_PE_DATA[4],RX_PE_DATA[5],RX_PE_DATA[6],RX_PE_DATA[7],RX_PE_DATA[8],RX_PE_DATA[9],RX_PE_DATA[10],RX_PE_DATA[11],RX_PE_DATA[12],RX_PE_DATA[13],RX_PE_DATA[14],RX_PE_DATA[15],RX_PE_DATA[16],RX_PE_DATA[17],RX_PE_DATA[18],RX_PE_DATA[19],RX_PE_DATA[20],RX_PE_DATA[21],RX_PE_DATA[22],RX_PE_DATA[23],RX_PE_DATA[24],RX_PE_DATA[25],RX_PE_DATA[26],RX_PE_DATA[27],RX_PE_DATA[28],RX_PE_DATA[29],RX_PE_DATA[30],RX_PE_DATA[31],RX_PE_DATA[32],RX_PE_DATA[33],RX_PE_DATA[34],RX_PE_DATA[35],RX_PE_DATA[36],RX_PE_DATA[37],RX_PE_DATA[38],RX_PE_DATA[39],RX_PE_DATA[40],RX_PE_DATA[41],RX_PE_DATA[42],RX_PE_DATA[43],RX_PE_DATA[44],RX_PE_DATA[45],RX_PE_DATA[46],RX_PE_DATA[47],RX_PE_DATA[48],RX_PE_DATA[49],RX_PE_DATA[50],RX_PE_DATA[51],RX_PE_DATA[52],RX_PE_DATA[53],RX_PE_DATA[54],RX_PE_DATA[55],RX_PE_DATA[56],RX_PE_DATA[57],RX_PE_DATA[58],RX_PE_DATA[59],RX_PE_DATA[60],RX_PE_DATA[61],RX_PE_DATA[62],RX_PE_DATA[63]}),
        .SOFT_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_43),
        .SR(SYSTEM_RESET_reg),
        .\TX_DATA_reg[0] (tx_stream_i_n_210),
        .\TX_DATA_reg[10] (tx_stream_i_n_220),
        .\TX_DATA_reg[11] (tx_stream_i_n_221),
        .\TX_DATA_reg[12] (tx_stream_i_n_222),
        .\TX_DATA_reg[13] (tx_stream_i_n_223),
        .\TX_DATA_reg[14] (tx_stream_i_n_224),
        .\TX_DATA_reg[15] (tx_stream_i_n_225),
        .\TX_DATA_reg[16] (tx_stream_i_n_226),
        .\TX_DATA_reg[17] (tx_stream_i_n_227),
        .\TX_DATA_reg[18] (tx_stream_i_n_228),
        .\TX_DATA_reg[19] (tx_stream_i_n_229),
        .\TX_DATA_reg[1] (tx_stream_i_n_211),
        .\TX_DATA_reg[20] (tx_stream_i_n_230),
        .\TX_DATA_reg[21] (tx_stream_i_n_231),
        .\TX_DATA_reg[22] (tx_stream_i_n_232),
        .\TX_DATA_reg[23] (tx_stream_i_n_233),
        .\TX_DATA_reg[24] (tx_stream_i_n_234),
        .\TX_DATA_reg[25] (tx_stream_i_n_235),
        .\TX_DATA_reg[26] (tx_stream_i_n_236),
        .\TX_DATA_reg[27] (tx_stream_i_n_237),
        .\TX_DATA_reg[28] (tx_stream_i_n_238),
        .\TX_DATA_reg[29] (tx_stream_i_n_239),
        .\TX_DATA_reg[2] (tx_stream_i_n_212),
        .\TX_DATA_reg[30] (tx_stream_i_n_240),
        .\TX_DATA_reg[31] (tx_stream_i_n_241),
        .\TX_DATA_reg[32] (tx_stream_i_n_242),
        .\TX_DATA_reg[33] (tx_stream_i_n_243),
        .\TX_DATA_reg[34] (tx_stream_i_n_244),
        .\TX_DATA_reg[35] (tx_stream_i_n_245),
        .\TX_DATA_reg[36] (tx_stream_i_n_246),
        .\TX_DATA_reg[37] (tx_stream_i_n_247),
        .\TX_DATA_reg[38] (tx_stream_i_n_248),
        .\TX_DATA_reg[39] (tx_stream_i_n_249),
        .\TX_DATA_reg[3] (tx_stream_i_n_213),
        .\TX_DATA_reg[40] (tx_stream_i_n_250),
        .\TX_DATA_reg[41] (tx_stream_i_n_251),
        .\TX_DATA_reg[42] (tx_stream_i_n_252),
        .\TX_DATA_reg[43] (tx_stream_i_n_253),
        .\TX_DATA_reg[44] (tx_stream_i_n_254),
        .\TX_DATA_reg[45] (tx_stream_i_n_255),
        .\TX_DATA_reg[46] (tx_stream_i_n_256),
        .\TX_DATA_reg[47] (tx_stream_i_n_257),
        .\TX_DATA_reg[48] (tx_stream_i_n_258),
        .\TX_DATA_reg[49] (tx_stream_i_n_259),
        .\TX_DATA_reg[4] (tx_stream_i_n_214),
        .\TX_DATA_reg[50] (tx_stream_i_n_260),
        .\TX_DATA_reg[51] (tx_stream_i_n_261),
        .\TX_DATA_reg[54] (p_1_in),
        .\TX_DATA_reg[55] (TX_PE_DATA[15]),
        .\TX_DATA_reg[55]_0 (tx_stream_i_n_9),
        .\TX_DATA_reg[55]_1 (global_logic_i_n_9),
        .\TX_DATA_reg[56] (tx_stream_i_n_262),
        .\TX_DATA_reg[57] (tx_stream_i_n_263),
        .\TX_DATA_reg[58] (tx_stream_i_n_264),
        .\TX_DATA_reg[59] (board_aurora_64b66b_0_2_wrapper_i_n_34),
        .\TX_DATA_reg[59]_0 (tx_stream_i_n_38),
        .\TX_DATA_reg[5] (tx_stream_i_n_215),
        .\TX_DATA_reg[60] (tx_stream_i_n_39),
        .\TX_DATA_reg[61] (tx_stream_i_n_40),
        .\TX_DATA_reg[62] (tx_stream_i_n_41),
        .\TX_DATA_reg[63] (tx_data_i_192),
        .\TX_DATA_reg[63]_0 (global_logic_i_n_33),
        .\TX_DATA_reg[63]_1 (tx_stream_i_n_265),
        .\TX_DATA_reg[6] (tx_stream_i_n_216),
        .\TX_DATA_reg[7] (tx_stream_i_n_217),
        .\TX_DATA_reg[8] (tx_stream_i_n_218),
        .\TX_DATA_reg[9] (tx_stream_i_n_219),
        .TX_HEADER_0_reg(global_logic_i_n_26),
        .TX_HEADER_1_reg(global_logic_i_n_20),
        .check_polarity_r_reg(check_polarity_i_3),
        .gen_cc_i(gen_cc_i[0]),
        .gen_ch_bond_i(gen_ch_bond_i),
        .hard_err_i(hard_err_i[0]),
        .in0(rx_neg_i_3),
        .lane_up_flop_i(lane_up_flop_i),
        .\remote_rdy_cntr_reg[0] (aurora_lane_0_i_n_12),
        .remote_ready_r_reg(aurora_lane_3_i_n_10),
        .remote_ready_r_reg_0(aurora_lane_2_i_n_11),
        .remote_ready_r_reg_1(aurora_lane_1_i_n_11),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rx_header_err_i_3(rx_header_err_i_3),
        .rx_lossofsync_i_3(rx_lossofsync_i_3),
        .rx_polarity_r_reg(rx_polarity_i_3),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .soft_err_i(soft_err_i[0]),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(rst_in_out_reg),
        .stg4_reg(\TX_PE_DATA_V_reg[0] ),
        .tx_reset_i_3(tx_reset_i_3),
        .txdatavalid_symgen_i(txdatavalid_symgen_i));
  board_aurora_64b66b_0_2_AURORA_LANE_2 aurora_lane_1_i
       (.D({tx_header_1_i_2,tx_header_0_i_2}),
        .HARD_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_308),
        .Q({\cbcc_gtx0_lane1_i/p_0_in ,\cbcc_gtx0_lane1_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_128,board_aurora_64b66b_0_2_wrapper_i_n_129,board_aurora_64b66b_0_2_wrapper_i_n_130,board_aurora_64b66b_0_2_wrapper_i_n_131,board_aurora_64b66b_0_2_wrapper_i_n_132,board_aurora_64b66b_0_2_wrapper_i_n_133,board_aurora_64b66b_0_2_wrapper_i_n_134,board_aurora_64b66b_0_2_wrapper_i_n_135,board_aurora_64b66b_0_2_wrapper_i_n_136,board_aurora_64b66b_0_2_wrapper_i_n_137,board_aurora_64b66b_0_2_wrapper_i_n_138,board_aurora_64b66b_0_2_wrapper_i_n_139,board_aurora_64b66b_0_2_wrapper_i_n_140,board_aurora_64b66b_0_2_wrapper_i_n_141,board_aurora_64b66b_0_2_wrapper_i_n_142,board_aurora_64b66b_0_2_wrapper_i_n_143,board_aurora_64b66b_0_2_wrapper_i_n_144,board_aurora_64b66b_0_2_wrapper_i_n_145,board_aurora_64b66b_0_2_wrapper_i_n_146,board_aurora_64b66b_0_2_wrapper_i_n_147,board_aurora_64b66b_0_2_wrapper_i_n_148,board_aurora_64b66b_0_2_wrapper_i_n_149,board_aurora_64b66b_0_2_wrapper_i_n_150,board_aurora_64b66b_0_2_wrapper_i_n_151,board_aurora_64b66b_0_2_wrapper_i_n_152,board_aurora_64b66b_0_2_wrapper_i_n_153,board_aurora_64b66b_0_2_wrapper_i_n_154,board_aurora_64b66b_0_2_wrapper_i_n_155,board_aurora_64b66b_0_2_wrapper_i_n_156,board_aurora_64b66b_0_2_wrapper_i_n_157,board_aurora_64b66b_0_2_wrapper_i_n_158,board_aurora_64b66b_0_2_wrapper_i_n_159,board_aurora_64b66b_0_2_wrapper_i_n_160,board_aurora_64b66b_0_2_wrapper_i_n_161,board_aurora_64b66b_0_2_wrapper_i_n_162,board_aurora_64b66b_0_2_wrapper_i_n_163,board_aurora_64b66b_0_2_wrapper_i_n_164,board_aurora_64b66b_0_2_wrapper_i_n_165,board_aurora_64b66b_0_2_wrapper_i_n_166,board_aurora_64b66b_0_2_wrapper_i_n_167,board_aurora_64b66b_0_2_wrapper_i_n_168,board_aurora_64b66b_0_2_wrapper_i_n_169,board_aurora_64b66b_0_2_wrapper_i_n_170,board_aurora_64b66b_0_2_wrapper_i_n_171,board_aurora_64b66b_0_2_wrapper_i_n_172,board_aurora_64b66b_0_2_wrapper_i_n_173,board_aurora_64b66b_0_2_wrapper_i_n_174,board_aurora_64b66b_0_2_wrapper_i_n_175}),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .\RX_DATA_REG_reg[0] (board_aurora_64b66b_0_2_wrapper_i_n_312),
        .RX_IDLES(RX_IDLES[1]),
        .RX_PE_DATA_V(RX_PE_DATA_V[1]),
        .\RX_PE_DATA_reg[0] ({RX_PE_DATA[64],RX_PE_DATA[65],RX_PE_DATA[66],RX_PE_DATA[67],RX_PE_DATA[68],RX_PE_DATA[69],RX_PE_DATA[70],RX_PE_DATA[71],RX_PE_DATA[72],RX_PE_DATA[73],RX_PE_DATA[74],RX_PE_DATA[75],RX_PE_DATA[76],RX_PE_DATA[77],RX_PE_DATA[78],RX_PE_DATA[79],RX_PE_DATA[80],RX_PE_DATA[81],RX_PE_DATA[82],RX_PE_DATA[83],RX_PE_DATA[84],RX_PE_DATA[85],RX_PE_DATA[86],RX_PE_DATA[87],RX_PE_DATA[88],RX_PE_DATA[89],RX_PE_DATA[90],RX_PE_DATA[91],RX_PE_DATA[92],RX_PE_DATA[93],RX_PE_DATA[94],RX_PE_DATA[95],RX_PE_DATA[96],RX_PE_DATA[97],RX_PE_DATA[98],RX_PE_DATA[99],RX_PE_DATA[100],RX_PE_DATA[101],RX_PE_DATA[102],RX_PE_DATA[103],RX_PE_DATA[104],RX_PE_DATA[105],RX_PE_DATA[106],RX_PE_DATA[107],RX_PE_DATA[108],RX_PE_DATA[109],RX_PE_DATA[110],RX_PE_DATA[111],RX_PE_DATA[112],RX_PE_DATA[113],RX_PE_DATA[114],RX_PE_DATA[115],RX_PE_DATA[116],RX_PE_DATA[117],RX_PE_DATA[118],RX_PE_DATA[119],RX_PE_DATA[120],RX_PE_DATA[121],RX_PE_DATA[122],RX_PE_DATA[123],RX_PE_DATA[124],RX_PE_DATA[125],RX_PE_DATA[126],RX_PE_DATA[127]}),
        .SOFT_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_43),
        .SR(SYSTEM_RESET_reg),
        .\TX_DATA_reg[0] (tx_stream_i_n_154),
        .\TX_DATA_reg[10] (tx_stream_i_n_164),
        .\TX_DATA_reg[11] (tx_stream_i_n_165),
        .\TX_DATA_reg[12] (tx_stream_i_n_166),
        .\TX_DATA_reg[13] (tx_stream_i_n_167),
        .\TX_DATA_reg[14] (tx_stream_i_n_168),
        .\TX_DATA_reg[15] (tx_stream_i_n_169),
        .\TX_DATA_reg[16] (tx_stream_i_n_170),
        .\TX_DATA_reg[17] (tx_stream_i_n_171),
        .\TX_DATA_reg[18] (tx_stream_i_n_172),
        .\TX_DATA_reg[19] (tx_stream_i_n_173),
        .\TX_DATA_reg[1] (tx_stream_i_n_155),
        .\TX_DATA_reg[20] (tx_stream_i_n_174),
        .\TX_DATA_reg[21] (tx_stream_i_n_175),
        .\TX_DATA_reg[22] (tx_stream_i_n_176),
        .\TX_DATA_reg[23] (tx_stream_i_n_177),
        .\TX_DATA_reg[24] (tx_stream_i_n_178),
        .\TX_DATA_reg[25] (tx_stream_i_n_179),
        .\TX_DATA_reg[26] (tx_stream_i_n_180),
        .\TX_DATA_reg[27] (tx_stream_i_n_181),
        .\TX_DATA_reg[28] (tx_stream_i_n_182),
        .\TX_DATA_reg[29] (tx_stream_i_n_183),
        .\TX_DATA_reg[2] (tx_stream_i_n_156),
        .\TX_DATA_reg[30] (tx_stream_i_n_184),
        .\TX_DATA_reg[31] (tx_stream_i_n_185),
        .\TX_DATA_reg[32] (tx_stream_i_n_186),
        .\TX_DATA_reg[33] (tx_stream_i_n_187),
        .\TX_DATA_reg[34] (tx_stream_i_n_188),
        .\TX_DATA_reg[35] (tx_stream_i_n_189),
        .\TX_DATA_reg[36] (tx_stream_i_n_190),
        .\TX_DATA_reg[37] (tx_stream_i_n_191),
        .\TX_DATA_reg[38] (tx_stream_i_n_192),
        .\TX_DATA_reg[39] (tx_stream_i_n_193),
        .\TX_DATA_reg[3] (tx_stream_i_n_157),
        .\TX_DATA_reg[40] (tx_stream_i_n_194),
        .\TX_DATA_reg[41] (tx_stream_i_n_195),
        .\TX_DATA_reg[42] (tx_stream_i_n_196),
        .\TX_DATA_reg[43] (tx_stream_i_n_197),
        .\TX_DATA_reg[44] (tx_stream_i_n_198),
        .\TX_DATA_reg[45] (tx_stream_i_n_199),
        .\TX_DATA_reg[46] (tx_stream_i_n_200),
        .\TX_DATA_reg[47] (tx_stream_i_n_201),
        .\TX_DATA_reg[48] (tx_stream_i_n_202),
        .\TX_DATA_reg[49] (tx_stream_i_n_203),
        .\TX_DATA_reg[4] (tx_stream_i_n_158),
        .\TX_DATA_reg[50] (tx_stream_i_n_204),
        .\TX_DATA_reg[51] (tx_stream_i_n_205),
        .\TX_DATA_reg[54] ({global_logic_i_n_17,global_logic_i_n_18,global_logic_i_n_19}),
        .\TX_DATA_reg[55] (tx_stream_i_n_14),
        .\TX_DATA_reg[55]_0 (tx_stream_i_n_9),
        .\TX_DATA_reg[55]_1 (global_logic_i_n_9),
        .\TX_DATA_reg[56] (tx_stream_i_n_206),
        .\TX_DATA_reg[57] (tx_stream_i_n_207),
        .\TX_DATA_reg[58] (tx_stream_i_n_208),
        .\TX_DATA_reg[59] (board_aurora_64b66b_0_2_wrapper_i_n_36),
        .\TX_DATA_reg[59]_0 (tx_stream_i_n_34),
        .\TX_DATA_reg[5] (tx_stream_i_n_159),
        .\TX_DATA_reg[60] (tx_stream_i_n_35),
        .\TX_DATA_reg[61] (tx_stream_i_n_36),
        .\TX_DATA_reg[62] (tx_stream_i_n_37),
        .\TX_DATA_reg[63] (tx_data_i_128),
        .\TX_DATA_reg[63]_0 (global_logic_i_n_32),
        .\TX_DATA_reg[63]_1 (tx_stream_i_n_209),
        .\TX_DATA_reg[6] (tx_stream_i_n_160),
        .\TX_DATA_reg[7] (tx_stream_i_n_161),
        .\TX_DATA_reg[8] (tx_stream_i_n_162),
        .\TX_DATA_reg[9] (tx_stream_i_n_163),
        .TX_HEADER_0_reg(global_logic_i_n_25),
        .TX_HEADER_1_reg(global_logic_i_n_20),
        .check_polarity_r_reg(check_polarity_i_2),
        .gen_cc_i(gen_cc_i[1]),
        .gen_ch_bond_i(gen_ch_bond_i),
        .hard_err_i(hard_err_i[1]),
        .in0(rx_neg_i_2),
        .lane_up_flop_i(lane_up_flop_i_0),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_4 ),
        .\remote_rdy_cntr_reg[0] (aurora_lane_1_i_n_11),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rx_header_err_i_2(rx_header_err_i_2),
        .rx_lossofsync_i_2(rx_lossofsync_i_2),
        .rx_polarity_r_reg(rx_polarity_i_2),
        .soft_err_i(soft_err_i[1]),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(rst_in_out_reg),
        .stg5_reg(aurora_lane_1_i_n_12),
        .stg5_reg_0(\TX_PE_DATA_V_reg[0] ),
        .tx_reset_i_2(tx_reset_i_2),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1));
  board_aurora_64b66b_0_2_AURORA_LANE_3 aurora_lane_2_i
       (.D({tx_header_1_i_1,tx_header_0_i_1}),
        .HARD_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_308),
        .Q({\cbcc_gtx0_lane2_i/p_0_in ,\cbcc_gtx0_lane2_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_194,board_aurora_64b66b_0_2_wrapper_i_n_195,board_aurora_64b66b_0_2_wrapper_i_n_196,board_aurora_64b66b_0_2_wrapper_i_n_197,board_aurora_64b66b_0_2_wrapper_i_n_198,board_aurora_64b66b_0_2_wrapper_i_n_199,board_aurora_64b66b_0_2_wrapper_i_n_200,board_aurora_64b66b_0_2_wrapper_i_n_201,board_aurora_64b66b_0_2_wrapper_i_n_202,board_aurora_64b66b_0_2_wrapper_i_n_203,board_aurora_64b66b_0_2_wrapper_i_n_204,board_aurora_64b66b_0_2_wrapper_i_n_205,board_aurora_64b66b_0_2_wrapper_i_n_206,board_aurora_64b66b_0_2_wrapper_i_n_207,board_aurora_64b66b_0_2_wrapper_i_n_208,board_aurora_64b66b_0_2_wrapper_i_n_209,board_aurora_64b66b_0_2_wrapper_i_n_210,board_aurora_64b66b_0_2_wrapper_i_n_211,board_aurora_64b66b_0_2_wrapper_i_n_212,board_aurora_64b66b_0_2_wrapper_i_n_213,board_aurora_64b66b_0_2_wrapper_i_n_214,board_aurora_64b66b_0_2_wrapper_i_n_215,board_aurora_64b66b_0_2_wrapper_i_n_216,board_aurora_64b66b_0_2_wrapper_i_n_217,board_aurora_64b66b_0_2_wrapper_i_n_218,board_aurora_64b66b_0_2_wrapper_i_n_219,board_aurora_64b66b_0_2_wrapper_i_n_220,board_aurora_64b66b_0_2_wrapper_i_n_221,board_aurora_64b66b_0_2_wrapper_i_n_222,board_aurora_64b66b_0_2_wrapper_i_n_223,board_aurora_64b66b_0_2_wrapper_i_n_224,board_aurora_64b66b_0_2_wrapper_i_n_225,board_aurora_64b66b_0_2_wrapper_i_n_226,board_aurora_64b66b_0_2_wrapper_i_n_227,board_aurora_64b66b_0_2_wrapper_i_n_228,board_aurora_64b66b_0_2_wrapper_i_n_229,board_aurora_64b66b_0_2_wrapper_i_n_230,board_aurora_64b66b_0_2_wrapper_i_n_231,board_aurora_64b66b_0_2_wrapper_i_n_232,board_aurora_64b66b_0_2_wrapper_i_n_233,board_aurora_64b66b_0_2_wrapper_i_n_234,board_aurora_64b66b_0_2_wrapper_i_n_235,board_aurora_64b66b_0_2_wrapper_i_n_236,board_aurora_64b66b_0_2_wrapper_i_n_237,board_aurora_64b66b_0_2_wrapper_i_n_238,board_aurora_64b66b_0_2_wrapper_i_n_239,board_aurora_64b66b_0_2_wrapper_i_n_240,board_aurora_64b66b_0_2_wrapper_i_n_241}),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .\RX_DATA_REG_reg[0] (board_aurora_64b66b_0_2_wrapper_i_n_313),
        .RX_IDLES(RX_IDLES[2]),
        .RX_PE_DATA_V(RX_PE_DATA_V[2]),
        .\RX_PE_DATA_reg[0] ({RX_PE_DATA[128],RX_PE_DATA[129],RX_PE_DATA[130],RX_PE_DATA[131],RX_PE_DATA[132],RX_PE_DATA[133],RX_PE_DATA[134],RX_PE_DATA[135],RX_PE_DATA[136],RX_PE_DATA[137],RX_PE_DATA[138],RX_PE_DATA[139],RX_PE_DATA[140],RX_PE_DATA[141],RX_PE_DATA[142],RX_PE_DATA[143],RX_PE_DATA[144],RX_PE_DATA[145],RX_PE_DATA[146],RX_PE_DATA[147],RX_PE_DATA[148],RX_PE_DATA[149],RX_PE_DATA[150],RX_PE_DATA[151],RX_PE_DATA[152],RX_PE_DATA[153],RX_PE_DATA[154],RX_PE_DATA[155],RX_PE_DATA[156],RX_PE_DATA[157],RX_PE_DATA[158],RX_PE_DATA[159],RX_PE_DATA[160],RX_PE_DATA[161],RX_PE_DATA[162],RX_PE_DATA[163],RX_PE_DATA[164],RX_PE_DATA[165],RX_PE_DATA[166],RX_PE_DATA[167],RX_PE_DATA[168],RX_PE_DATA[169],RX_PE_DATA[170],RX_PE_DATA[171],RX_PE_DATA[172],RX_PE_DATA[173],RX_PE_DATA[174],RX_PE_DATA[175],RX_PE_DATA[176],RX_PE_DATA[177],RX_PE_DATA[178],RX_PE_DATA[179],RX_PE_DATA[180],RX_PE_DATA[181],RX_PE_DATA[182],RX_PE_DATA[183],RX_PE_DATA[184],RX_PE_DATA[185],RX_PE_DATA[186],RX_PE_DATA[187],RX_PE_DATA[188],RX_PE_DATA[189],RX_PE_DATA[190],RX_PE_DATA[191]}),
        .SOFT_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_43),
        .SR(SYSTEM_RESET_reg),
        .\TX_DATA_reg[0] (tx_stream_i_n_98),
        .\TX_DATA_reg[10] (tx_stream_i_n_108),
        .\TX_DATA_reg[11] (tx_stream_i_n_109),
        .\TX_DATA_reg[12] (tx_stream_i_n_110),
        .\TX_DATA_reg[13] (tx_stream_i_n_111),
        .\TX_DATA_reg[14] (tx_stream_i_n_112),
        .\TX_DATA_reg[15] (tx_stream_i_n_113),
        .\TX_DATA_reg[16] (tx_stream_i_n_114),
        .\TX_DATA_reg[17] (tx_stream_i_n_115),
        .\TX_DATA_reg[18] (tx_stream_i_n_116),
        .\TX_DATA_reg[19] (tx_stream_i_n_117),
        .\TX_DATA_reg[1] (tx_stream_i_n_99),
        .\TX_DATA_reg[20] (tx_stream_i_n_118),
        .\TX_DATA_reg[21] (tx_stream_i_n_119),
        .\TX_DATA_reg[22] (tx_stream_i_n_120),
        .\TX_DATA_reg[23] (tx_stream_i_n_121),
        .\TX_DATA_reg[24] (tx_stream_i_n_122),
        .\TX_DATA_reg[25] (tx_stream_i_n_123),
        .\TX_DATA_reg[26] (tx_stream_i_n_124),
        .\TX_DATA_reg[27] (tx_stream_i_n_125),
        .\TX_DATA_reg[28] (tx_stream_i_n_126),
        .\TX_DATA_reg[29] (tx_stream_i_n_127),
        .\TX_DATA_reg[2] (tx_stream_i_n_100),
        .\TX_DATA_reg[30] (tx_stream_i_n_128),
        .\TX_DATA_reg[31] (tx_stream_i_n_129),
        .\TX_DATA_reg[32] (tx_stream_i_n_130),
        .\TX_DATA_reg[33] (tx_stream_i_n_131),
        .\TX_DATA_reg[34] (tx_stream_i_n_132),
        .\TX_DATA_reg[35] (tx_stream_i_n_133),
        .\TX_DATA_reg[36] (tx_stream_i_n_134),
        .\TX_DATA_reg[37] (tx_stream_i_n_135),
        .\TX_DATA_reg[38] (tx_stream_i_n_136),
        .\TX_DATA_reg[39] (tx_stream_i_n_137),
        .\TX_DATA_reg[3] (tx_stream_i_n_101),
        .\TX_DATA_reg[40] (tx_stream_i_n_138),
        .\TX_DATA_reg[41] (tx_stream_i_n_139),
        .\TX_DATA_reg[42] (tx_stream_i_n_140),
        .\TX_DATA_reg[43] (tx_stream_i_n_141),
        .\TX_DATA_reg[44] (tx_stream_i_n_142),
        .\TX_DATA_reg[45] (tx_stream_i_n_143),
        .\TX_DATA_reg[46] (tx_stream_i_n_144),
        .\TX_DATA_reg[47] (tx_stream_i_n_145),
        .\TX_DATA_reg[48] (tx_stream_i_n_146),
        .\TX_DATA_reg[49] (tx_stream_i_n_147),
        .\TX_DATA_reg[4] (tx_stream_i_n_102),
        .\TX_DATA_reg[50] (tx_stream_i_n_148),
        .\TX_DATA_reg[51] (tx_stream_i_n_149),
        .\TX_DATA_reg[54] ({global_logic_i_n_14,global_logic_i_n_15,global_logic_i_n_16}),
        .\TX_DATA_reg[55] (tx_stream_i_n_18),
        .\TX_DATA_reg[55]_0 (tx_stream_i_n_9),
        .\TX_DATA_reg[55]_1 (global_logic_i_n_9),
        .\TX_DATA_reg[56] (tx_stream_i_n_150),
        .\TX_DATA_reg[57] (tx_stream_i_n_151),
        .\TX_DATA_reg[58] (tx_stream_i_n_152),
        .\TX_DATA_reg[59] (board_aurora_64b66b_0_2_wrapper_i_n_38),
        .\TX_DATA_reg[59]_0 (tx_stream_i_n_30),
        .\TX_DATA_reg[5] (tx_stream_i_n_103),
        .\TX_DATA_reg[60] (tx_stream_i_n_31),
        .\TX_DATA_reg[61] (tx_stream_i_n_32),
        .\TX_DATA_reg[62] (tx_stream_i_n_33),
        .\TX_DATA_reg[63] (tx_data_i_64),
        .\TX_DATA_reg[63]_0 (global_logic_i_n_31),
        .\TX_DATA_reg[63]_1 (tx_stream_i_n_153),
        .\TX_DATA_reg[6] (tx_stream_i_n_104),
        .\TX_DATA_reg[7] (tx_stream_i_n_105),
        .\TX_DATA_reg[8] (tx_stream_i_n_106),
        .\TX_DATA_reg[9] (tx_stream_i_n_107),
        .TX_HEADER_0_reg(global_logic_i_n_24),
        .TX_HEADER_1_reg(global_logic_i_n_20),
        .check_polarity_r_reg(check_polarity_i_1),
        .gen_cc_i(gen_cc_i[2]),
        .gen_ch_bond_i(gen_ch_bond_i),
        .hard_err_i(hard_err_i[2]),
        .in0(rx_neg_i_1),
        .lane_up_flop_i(lane_up_flop_i_1),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_3 ),
        .\remote_rdy_cntr_reg[0] (aurora_lane_2_i_n_11),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rx_header_err_i_1(rx_header_err_i_1),
        .rx_lossofsync_i_1(rx_lossofsync_i_1),
        .rx_polarity_r_reg(rx_polarity_i_1),
        .soft_err_i(soft_err_i[2]),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(rst_in_out_reg),
        .stg4_reg(\TX_PE_DATA_V_reg[0] ),
        .stg5_reg(aurora_lane_2_i_n_12),
        .tx_reset_i_1(tx_reset_i_1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2));
  board_aurora_64b66b_0_2_AURORA_LANE_4 aurora_lane_3_i
       (.CHANNEL_HARD_ERR_reg({hard_err_i[0],hard_err_i[1],hard_err_i[2]}),
        .D({tx_header_1_i_0,tx_header_0_i_0}),
        .HARD_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_308),
        .Q({\cbcc_gtx0_lane3_i/p_0_in ,\cbcc_gtx0_lane3_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_260,board_aurora_64b66b_0_2_wrapper_i_n_261,board_aurora_64b66b_0_2_wrapper_i_n_262,board_aurora_64b66b_0_2_wrapper_i_n_263,board_aurora_64b66b_0_2_wrapper_i_n_264,board_aurora_64b66b_0_2_wrapper_i_n_265,board_aurora_64b66b_0_2_wrapper_i_n_266,board_aurora_64b66b_0_2_wrapper_i_n_267,board_aurora_64b66b_0_2_wrapper_i_n_268,board_aurora_64b66b_0_2_wrapper_i_n_269,board_aurora_64b66b_0_2_wrapper_i_n_270,board_aurora_64b66b_0_2_wrapper_i_n_271,board_aurora_64b66b_0_2_wrapper_i_n_272,board_aurora_64b66b_0_2_wrapper_i_n_273,board_aurora_64b66b_0_2_wrapper_i_n_274,board_aurora_64b66b_0_2_wrapper_i_n_275,board_aurora_64b66b_0_2_wrapper_i_n_276,board_aurora_64b66b_0_2_wrapper_i_n_277,board_aurora_64b66b_0_2_wrapper_i_n_278,board_aurora_64b66b_0_2_wrapper_i_n_279,board_aurora_64b66b_0_2_wrapper_i_n_280,board_aurora_64b66b_0_2_wrapper_i_n_281,board_aurora_64b66b_0_2_wrapper_i_n_282,board_aurora_64b66b_0_2_wrapper_i_n_283,board_aurora_64b66b_0_2_wrapper_i_n_284,board_aurora_64b66b_0_2_wrapper_i_n_285,board_aurora_64b66b_0_2_wrapper_i_n_286,board_aurora_64b66b_0_2_wrapper_i_n_287,board_aurora_64b66b_0_2_wrapper_i_n_288,board_aurora_64b66b_0_2_wrapper_i_n_289,board_aurora_64b66b_0_2_wrapper_i_n_290,board_aurora_64b66b_0_2_wrapper_i_n_291,board_aurora_64b66b_0_2_wrapper_i_n_292,board_aurora_64b66b_0_2_wrapper_i_n_293,board_aurora_64b66b_0_2_wrapper_i_n_294,board_aurora_64b66b_0_2_wrapper_i_n_295,board_aurora_64b66b_0_2_wrapper_i_n_296,board_aurora_64b66b_0_2_wrapper_i_n_297,board_aurora_64b66b_0_2_wrapper_i_n_298,board_aurora_64b66b_0_2_wrapper_i_n_299,board_aurora_64b66b_0_2_wrapper_i_n_300,board_aurora_64b66b_0_2_wrapper_i_n_301,board_aurora_64b66b_0_2_wrapper_i_n_302,board_aurora_64b66b_0_2_wrapper_i_n_303,board_aurora_64b66b_0_2_wrapper_i_n_304,board_aurora_64b66b_0_2_wrapper_i_n_305,board_aurora_64b66b_0_2_wrapper_i_n_306,board_aurora_64b66b_0_2_wrapper_i_n_307}),
        .RXDATAVALID_IN_REG(\sym_dec_i/RXDATAVALID_IN_REG ),
        .\RX_DATA_REG_reg[0] (board_aurora_64b66b_0_2_wrapper_i_n_314),
        .RX_IDLES(RX_IDLES[3]),
        .RX_PE_DATA_V(RX_PE_DATA_V[3]),
        .\RX_PE_DATA_reg[0] ({RX_PE_DATA[192],RX_PE_DATA[193],RX_PE_DATA[194],RX_PE_DATA[195],RX_PE_DATA[196],RX_PE_DATA[197],RX_PE_DATA[198],RX_PE_DATA[199],RX_PE_DATA[200],RX_PE_DATA[201],RX_PE_DATA[202],RX_PE_DATA[203],RX_PE_DATA[204],RX_PE_DATA[205],RX_PE_DATA[206],RX_PE_DATA[207],RX_PE_DATA[208],RX_PE_DATA[209],RX_PE_DATA[210],RX_PE_DATA[211],RX_PE_DATA[212],RX_PE_DATA[213],RX_PE_DATA[214],RX_PE_DATA[215],RX_PE_DATA[216],RX_PE_DATA[217],RX_PE_DATA[218],RX_PE_DATA[219],RX_PE_DATA[220],RX_PE_DATA[221],RX_PE_DATA[222],RX_PE_DATA[223],RX_PE_DATA[224],RX_PE_DATA[225],RX_PE_DATA[226],RX_PE_DATA[227],RX_PE_DATA[228],RX_PE_DATA[229],RX_PE_DATA[230],RX_PE_DATA[231],RX_PE_DATA[232],RX_PE_DATA[233],RX_PE_DATA[234],RX_PE_DATA[235],RX_PE_DATA[236],RX_PE_DATA[237],RX_PE_DATA[238],RX_PE_DATA[239],RX_PE_DATA[240],RX_PE_DATA[241],RX_PE_DATA[242],RX_PE_DATA[243],RX_PE_DATA[244],RX_PE_DATA[245],RX_PE_DATA[246],RX_PE_DATA[247],RX_PE_DATA[248],RX_PE_DATA[249],RX_PE_DATA[250],RX_PE_DATA[251],RX_PE_DATA[252],RX_PE_DATA[253],RX_PE_DATA[254],RX_PE_DATA[255]}),
        .SOFT_ERR_reg(board_aurora_64b66b_0_2_wrapper_i_n_43),
        .SR(SYSTEM_RESET_reg),
        .\TX_DATA_reg[0] (tx_stream_i_n_42),
        .\TX_DATA_reg[10] (tx_stream_i_n_52),
        .\TX_DATA_reg[11] (tx_stream_i_n_53),
        .\TX_DATA_reg[12] (tx_stream_i_n_54),
        .\TX_DATA_reg[13] (tx_stream_i_n_55),
        .\TX_DATA_reg[14] (tx_stream_i_n_56),
        .\TX_DATA_reg[15] (tx_stream_i_n_57),
        .\TX_DATA_reg[16] (tx_stream_i_n_58),
        .\TX_DATA_reg[17] (tx_stream_i_n_59),
        .\TX_DATA_reg[18] (tx_stream_i_n_60),
        .\TX_DATA_reg[19] (tx_stream_i_n_61),
        .\TX_DATA_reg[1] (tx_stream_i_n_43),
        .\TX_DATA_reg[20] (tx_stream_i_n_62),
        .\TX_DATA_reg[21] (tx_stream_i_n_63),
        .\TX_DATA_reg[22] (tx_stream_i_n_64),
        .\TX_DATA_reg[23] (tx_stream_i_n_65),
        .\TX_DATA_reg[24] (tx_stream_i_n_66),
        .\TX_DATA_reg[25] (tx_stream_i_n_67),
        .\TX_DATA_reg[26] (tx_stream_i_n_68),
        .\TX_DATA_reg[27] (tx_stream_i_n_69),
        .\TX_DATA_reg[28] (tx_stream_i_n_70),
        .\TX_DATA_reg[29] (tx_stream_i_n_71),
        .\TX_DATA_reg[2] (tx_stream_i_n_44),
        .\TX_DATA_reg[30] (tx_stream_i_n_72),
        .\TX_DATA_reg[31] (tx_stream_i_n_73),
        .\TX_DATA_reg[32] (tx_stream_i_n_74),
        .\TX_DATA_reg[33] (tx_stream_i_n_75),
        .\TX_DATA_reg[34] (tx_stream_i_n_76),
        .\TX_DATA_reg[35] (tx_stream_i_n_77),
        .\TX_DATA_reg[36] (tx_stream_i_n_78),
        .\TX_DATA_reg[37] (tx_stream_i_n_79),
        .\TX_DATA_reg[38] (tx_stream_i_n_80),
        .\TX_DATA_reg[39] (tx_stream_i_n_81),
        .\TX_DATA_reg[3] (tx_stream_i_n_45),
        .\TX_DATA_reg[40] (tx_stream_i_n_82),
        .\TX_DATA_reg[41] (tx_stream_i_n_83),
        .\TX_DATA_reg[42] (tx_stream_i_n_84),
        .\TX_DATA_reg[43] (tx_stream_i_n_85),
        .\TX_DATA_reg[44] (tx_stream_i_n_86),
        .\TX_DATA_reg[45] (tx_stream_i_n_87),
        .\TX_DATA_reg[46] (tx_stream_i_n_88),
        .\TX_DATA_reg[47] (tx_stream_i_n_89),
        .\TX_DATA_reg[48] (tx_stream_i_n_90),
        .\TX_DATA_reg[49] (tx_stream_i_n_91),
        .\TX_DATA_reg[4] (tx_stream_i_n_46),
        .\TX_DATA_reg[50] (tx_stream_i_n_92),
        .\TX_DATA_reg[51] (tx_stream_i_n_93),
        .\TX_DATA_reg[54] ({global_logic_i_n_11,global_logic_i_n_12,global_logic_i_n_13}),
        .\TX_DATA_reg[55] (tx_stream_i_n_22),
        .\TX_DATA_reg[55]_0 (tx_stream_i_n_9),
        .\TX_DATA_reg[55]_1 (global_logic_i_n_9),
        .\TX_DATA_reg[56] (tx_stream_i_n_94),
        .\TX_DATA_reg[57] (tx_stream_i_n_95),
        .\TX_DATA_reg[58] (tx_stream_i_n_96),
        .\TX_DATA_reg[59] (board_aurora_64b66b_0_2_wrapper_i_n_40),
        .\TX_DATA_reg[59]_0 (tx_stream_i_n_26),
        .\TX_DATA_reg[5] (tx_stream_i_n_47),
        .\TX_DATA_reg[60] (tx_stream_i_n_27),
        .\TX_DATA_reg[61] (tx_stream_i_n_28),
        .\TX_DATA_reg[62] (tx_stream_i_n_29),
        .\TX_DATA_reg[63] (tx_data_i_0),
        .\TX_DATA_reg[63]_0 (global_logic_i_n_30),
        .\TX_DATA_reg[63]_1 (tx_stream_i_n_97),
        .\TX_DATA_reg[6] (tx_stream_i_n_48),
        .\TX_DATA_reg[7] (tx_stream_i_n_49),
        .\TX_DATA_reg[8] (tx_stream_i_n_50),
        .\TX_DATA_reg[9] (tx_stream_i_n_51),
        .TX_HEADER_0_reg(global_logic_i_n_23),
        .TX_HEADER_1_reg(global_logic_i_n_20),
        .channel_hard_err_c(channel_hard_err_c),
        .check_polarity_r_reg(check_polarity_i_0),
        .gen_cc_i(gen_cc_i[3]),
        .gen_ch_bond_i(gen_ch_bond_i),
        .hard_err_i(hard_err_i[3]),
        .in0(rx_neg_i_0),
        .lane_up_flop_i(lane_up_flop_i_2),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0 ),
        .\remote_rdy_cntr_reg[0] (aurora_lane_3_i_n_10),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .reset_lanes_flop_0_i(lane_up_flop_i_1),
        .reset_lanes_flop_0_i_0(lane_up_flop_i_0),
        .reset_lanes_flop_0_i_1(lane_up_flop_i),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rx_header_err_i_0(rx_header_err_i_0),
        .rx_lossofsync_i_0(rx_lossofsync_i_0),
        .rx_polarity_r_reg(rx_polarity_i_0),
        .rxreset_for_lanes(rxreset_for_lanes),
        .soft_err_i(soft_err_i[3]),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(rst_in_out_reg),
        .stg5_reg(aurora_lane_3_i_n_14),
        .stg5_reg_0(\TX_PE_DATA_V_reg[0] ),
        .tx_reset_i_1(tx_reset_i_1),
        .tx_reset_i_2(tx_reset_i_2),
        .tx_reset_i_3(tx_reset_i_3),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .wait_for_lane_up_r(\channel_init_sm_i/wait_for_lane_up_r ));
  board_aurora_64b66b_0_2_WRAPPER board_aurora_64b66b_0_2_wrapper_i
       (.D({tx_header_1_i_3,tx_header_0_i_3}),
        .Q({\cbcc_gtx0_i/p_0_in ,\cbcc_gtx0_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_62,board_aurora_64b66b_0_2_wrapper_i_n_63,board_aurora_64b66b_0_2_wrapper_i_n_64,board_aurora_64b66b_0_2_wrapper_i_n_65,board_aurora_64b66b_0_2_wrapper_i_n_66,board_aurora_64b66b_0_2_wrapper_i_n_67,board_aurora_64b66b_0_2_wrapper_i_n_68,board_aurora_64b66b_0_2_wrapper_i_n_69,board_aurora_64b66b_0_2_wrapper_i_n_70,board_aurora_64b66b_0_2_wrapper_i_n_71,board_aurora_64b66b_0_2_wrapper_i_n_72,board_aurora_64b66b_0_2_wrapper_i_n_73,board_aurora_64b66b_0_2_wrapper_i_n_74,board_aurora_64b66b_0_2_wrapper_i_n_75,board_aurora_64b66b_0_2_wrapper_i_n_76,board_aurora_64b66b_0_2_wrapper_i_n_77,board_aurora_64b66b_0_2_wrapper_i_n_78,board_aurora_64b66b_0_2_wrapper_i_n_79,board_aurora_64b66b_0_2_wrapper_i_n_80,board_aurora_64b66b_0_2_wrapper_i_n_81,board_aurora_64b66b_0_2_wrapper_i_n_82,board_aurora_64b66b_0_2_wrapper_i_n_83,board_aurora_64b66b_0_2_wrapper_i_n_84,board_aurora_64b66b_0_2_wrapper_i_n_85,board_aurora_64b66b_0_2_wrapper_i_n_86,board_aurora_64b66b_0_2_wrapper_i_n_87,board_aurora_64b66b_0_2_wrapper_i_n_88,board_aurora_64b66b_0_2_wrapper_i_n_89,board_aurora_64b66b_0_2_wrapper_i_n_90,board_aurora_64b66b_0_2_wrapper_i_n_91,board_aurora_64b66b_0_2_wrapper_i_n_92,board_aurora_64b66b_0_2_wrapper_i_n_93,board_aurora_64b66b_0_2_wrapper_i_n_94,board_aurora_64b66b_0_2_wrapper_i_n_95,board_aurora_64b66b_0_2_wrapper_i_n_96,board_aurora_64b66b_0_2_wrapper_i_n_97,board_aurora_64b66b_0_2_wrapper_i_n_98,board_aurora_64b66b_0_2_wrapper_i_n_99,board_aurora_64b66b_0_2_wrapper_i_n_100,board_aurora_64b66b_0_2_wrapper_i_n_101,board_aurora_64b66b_0_2_wrapper_i_n_102,board_aurora_64b66b_0_2_wrapper_i_n_103,board_aurora_64b66b_0_2_wrapper_i_n_104,board_aurora_64b66b_0_2_wrapper_i_n_105,board_aurora_64b66b_0_2_wrapper_i_n_106,board_aurora_64b66b_0_2_wrapper_i_n_107,board_aurora_64b66b_0_2_wrapper_i_n_108,board_aurora_64b66b_0_2_wrapper_i_n_109}),
        .RX_NEG_OUT_LANE1_reg_0(rx_neg_i_2),
        .RX_NEG_OUT_LANE2_reg_0(rx_neg_i_1),
        .RX_NEG_OUT_LANE3_reg_0(rx_neg_i_0),
        .RX_NEG_OUT_reg_0(rx_neg_i_3),
        .SR(SYSTEM_RESET_reg),
        .\TXDATA_IN_REG_LANE1_reg[63]_0 (tx_data_i_128),
        .\TXDATA_IN_REG_LANE2_reg[63]_0 (tx_data_i_64),
        .\TXDATA_IN_REG_LANE3_reg[63]_0 (tx_data_i_0),
        .\TXDATA_IN_REG_reg[63]_0 (tx_data_i_192),
        .ch_bond_done_i(ch_bond_done_i),
        .channel_up_tx_if(channel_up_tx_if),
        .do_cc_r(\tx_stream_control_sm_i/do_cc_r ),
        .en_chan_sync_i(en_chan_sync_i),
        .\fifo_dout_reg[65] ({\cbcc_gtx0_lane1_i/p_0_in ,\cbcc_gtx0_lane1_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_128,board_aurora_64b66b_0_2_wrapper_i_n_129,board_aurora_64b66b_0_2_wrapper_i_n_130,board_aurora_64b66b_0_2_wrapper_i_n_131,board_aurora_64b66b_0_2_wrapper_i_n_132,board_aurora_64b66b_0_2_wrapper_i_n_133,board_aurora_64b66b_0_2_wrapper_i_n_134,board_aurora_64b66b_0_2_wrapper_i_n_135,board_aurora_64b66b_0_2_wrapper_i_n_136,board_aurora_64b66b_0_2_wrapper_i_n_137,board_aurora_64b66b_0_2_wrapper_i_n_138,board_aurora_64b66b_0_2_wrapper_i_n_139,board_aurora_64b66b_0_2_wrapper_i_n_140,board_aurora_64b66b_0_2_wrapper_i_n_141,board_aurora_64b66b_0_2_wrapper_i_n_142,board_aurora_64b66b_0_2_wrapper_i_n_143,board_aurora_64b66b_0_2_wrapper_i_n_144,board_aurora_64b66b_0_2_wrapper_i_n_145,board_aurora_64b66b_0_2_wrapper_i_n_146,board_aurora_64b66b_0_2_wrapper_i_n_147,board_aurora_64b66b_0_2_wrapper_i_n_148,board_aurora_64b66b_0_2_wrapper_i_n_149,board_aurora_64b66b_0_2_wrapper_i_n_150,board_aurora_64b66b_0_2_wrapper_i_n_151,board_aurora_64b66b_0_2_wrapper_i_n_152,board_aurora_64b66b_0_2_wrapper_i_n_153,board_aurora_64b66b_0_2_wrapper_i_n_154,board_aurora_64b66b_0_2_wrapper_i_n_155,board_aurora_64b66b_0_2_wrapper_i_n_156,board_aurora_64b66b_0_2_wrapper_i_n_157,board_aurora_64b66b_0_2_wrapper_i_n_158,board_aurora_64b66b_0_2_wrapper_i_n_159,board_aurora_64b66b_0_2_wrapper_i_n_160,board_aurora_64b66b_0_2_wrapper_i_n_161,board_aurora_64b66b_0_2_wrapper_i_n_162,board_aurora_64b66b_0_2_wrapper_i_n_163,board_aurora_64b66b_0_2_wrapper_i_n_164,board_aurora_64b66b_0_2_wrapper_i_n_165,board_aurora_64b66b_0_2_wrapper_i_n_166,board_aurora_64b66b_0_2_wrapper_i_n_167,board_aurora_64b66b_0_2_wrapper_i_n_168,board_aurora_64b66b_0_2_wrapper_i_n_169,board_aurora_64b66b_0_2_wrapper_i_n_170,board_aurora_64b66b_0_2_wrapper_i_n_171,board_aurora_64b66b_0_2_wrapper_i_n_172,board_aurora_64b66b_0_2_wrapper_i_n_173,board_aurora_64b66b_0_2_wrapper_i_n_174,board_aurora_64b66b_0_2_wrapper_i_n_175}),
        .\fifo_dout_reg[65]_0 ({\cbcc_gtx0_lane2_i/p_0_in ,\cbcc_gtx0_lane2_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_194,board_aurora_64b66b_0_2_wrapper_i_n_195,board_aurora_64b66b_0_2_wrapper_i_n_196,board_aurora_64b66b_0_2_wrapper_i_n_197,board_aurora_64b66b_0_2_wrapper_i_n_198,board_aurora_64b66b_0_2_wrapper_i_n_199,board_aurora_64b66b_0_2_wrapper_i_n_200,board_aurora_64b66b_0_2_wrapper_i_n_201,board_aurora_64b66b_0_2_wrapper_i_n_202,board_aurora_64b66b_0_2_wrapper_i_n_203,board_aurora_64b66b_0_2_wrapper_i_n_204,board_aurora_64b66b_0_2_wrapper_i_n_205,board_aurora_64b66b_0_2_wrapper_i_n_206,board_aurora_64b66b_0_2_wrapper_i_n_207,board_aurora_64b66b_0_2_wrapper_i_n_208,board_aurora_64b66b_0_2_wrapper_i_n_209,board_aurora_64b66b_0_2_wrapper_i_n_210,board_aurora_64b66b_0_2_wrapper_i_n_211,board_aurora_64b66b_0_2_wrapper_i_n_212,board_aurora_64b66b_0_2_wrapper_i_n_213,board_aurora_64b66b_0_2_wrapper_i_n_214,board_aurora_64b66b_0_2_wrapper_i_n_215,board_aurora_64b66b_0_2_wrapper_i_n_216,board_aurora_64b66b_0_2_wrapper_i_n_217,board_aurora_64b66b_0_2_wrapper_i_n_218,board_aurora_64b66b_0_2_wrapper_i_n_219,board_aurora_64b66b_0_2_wrapper_i_n_220,board_aurora_64b66b_0_2_wrapper_i_n_221,board_aurora_64b66b_0_2_wrapper_i_n_222,board_aurora_64b66b_0_2_wrapper_i_n_223,board_aurora_64b66b_0_2_wrapper_i_n_224,board_aurora_64b66b_0_2_wrapper_i_n_225,board_aurora_64b66b_0_2_wrapper_i_n_226,board_aurora_64b66b_0_2_wrapper_i_n_227,board_aurora_64b66b_0_2_wrapper_i_n_228,board_aurora_64b66b_0_2_wrapper_i_n_229,board_aurora_64b66b_0_2_wrapper_i_n_230,board_aurora_64b66b_0_2_wrapper_i_n_231,board_aurora_64b66b_0_2_wrapper_i_n_232,board_aurora_64b66b_0_2_wrapper_i_n_233,board_aurora_64b66b_0_2_wrapper_i_n_234,board_aurora_64b66b_0_2_wrapper_i_n_235,board_aurora_64b66b_0_2_wrapper_i_n_236,board_aurora_64b66b_0_2_wrapper_i_n_237,board_aurora_64b66b_0_2_wrapper_i_n_238,board_aurora_64b66b_0_2_wrapper_i_n_239,board_aurora_64b66b_0_2_wrapper_i_n_240,board_aurora_64b66b_0_2_wrapper_i_n_241}),
        .\fifo_dout_reg[65]_1 ({\cbcc_gtx0_lane3_i/p_0_in ,\cbcc_gtx0_lane3_i/p_1_in ,board_aurora_64b66b_0_2_wrapper_i_n_260,board_aurora_64b66b_0_2_wrapper_i_n_261,board_aurora_64b66b_0_2_wrapper_i_n_262,board_aurora_64b66b_0_2_wrapper_i_n_263,board_aurora_64b66b_0_2_wrapper_i_n_264,board_aurora_64b66b_0_2_wrapper_i_n_265,board_aurora_64b66b_0_2_wrapper_i_n_266,board_aurora_64b66b_0_2_wrapper_i_n_267,board_aurora_64b66b_0_2_wrapper_i_n_268,board_aurora_64b66b_0_2_wrapper_i_n_269,board_aurora_64b66b_0_2_wrapper_i_n_270,board_aurora_64b66b_0_2_wrapper_i_n_271,board_aurora_64b66b_0_2_wrapper_i_n_272,board_aurora_64b66b_0_2_wrapper_i_n_273,board_aurora_64b66b_0_2_wrapper_i_n_274,board_aurora_64b66b_0_2_wrapper_i_n_275,board_aurora_64b66b_0_2_wrapper_i_n_276,board_aurora_64b66b_0_2_wrapper_i_n_277,board_aurora_64b66b_0_2_wrapper_i_n_278,board_aurora_64b66b_0_2_wrapper_i_n_279,board_aurora_64b66b_0_2_wrapper_i_n_280,board_aurora_64b66b_0_2_wrapper_i_n_281,board_aurora_64b66b_0_2_wrapper_i_n_282,board_aurora_64b66b_0_2_wrapper_i_n_283,board_aurora_64b66b_0_2_wrapper_i_n_284,board_aurora_64b66b_0_2_wrapper_i_n_285,board_aurora_64b66b_0_2_wrapper_i_n_286,board_aurora_64b66b_0_2_wrapper_i_n_287,board_aurora_64b66b_0_2_wrapper_i_n_288,board_aurora_64b66b_0_2_wrapper_i_n_289,board_aurora_64b66b_0_2_wrapper_i_n_290,board_aurora_64b66b_0_2_wrapper_i_n_291,board_aurora_64b66b_0_2_wrapper_i_n_292,board_aurora_64b66b_0_2_wrapper_i_n_293,board_aurora_64b66b_0_2_wrapper_i_n_294,board_aurora_64b66b_0_2_wrapper_i_n_295,board_aurora_64b66b_0_2_wrapper_i_n_296,board_aurora_64b66b_0_2_wrapper_i_n_297,board_aurora_64b66b_0_2_wrapper_i_n_298,board_aurora_64b66b_0_2_wrapper_i_n_299,board_aurora_64b66b_0_2_wrapper_i_n_300,board_aurora_64b66b_0_2_wrapper_i_n_301,board_aurora_64b66b_0_2_wrapper_i_n_302,board_aurora_64b66b_0_2_wrapper_i_n_303,board_aurora_64b66b_0_2_wrapper_i_n_304,board_aurora_64b66b_0_2_wrapper_i_n_305,board_aurora_64b66b_0_2_wrapper_i_n_306,board_aurora_64b66b_0_2_wrapper_i_n_307}),
        .\fifo_dout_reg[68] (board_aurora_64b66b_0_2_wrapper_i_n_43),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST (board_aurora_64b66b_0_2_wrapper_i_n_308),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ),
        .hard_err_usr_reg_0(CHANNEL_UP_RX_IF_reg),
        .hold_reg_r_reg(board_aurora_64b66b_0_2_wrapper_i_n_311),
        .hold_reg_r_reg_0(board_aurora_64b66b_0_2_wrapper_i_n_312),
        .hold_reg_r_reg_1(board_aurora_64b66b_0_2_wrapper_i_n_313),
        .hold_reg_r_reg_2(board_aurora_64b66b_0_2_wrapper_i_n_314),
        .in0(chan_bond_reset_i),
        .init_clk(init_clk),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .pdu_ok_c(\tx_stream_control_sm_i/pdu_ok_c ),
        .rst_in_out_reg(rst_in_out_reg),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rst_pma_init_usrclk_0(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rst_pma_init_usrclk_1(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rst_pma_init_usrclk_2(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rx_header_err_i_0(rx_header_err_i_0),
        .rx_header_err_i_1(rx_header_err_i_1),
        .rx_header_err_i_2(rx_header_err_i_2),
        .rx_header_err_i_3(rx_header_err_i_3),
        .rx_lossofsync_i_0(rx_lossofsync_i_0),
        .rx_lossofsync_i_1(rx_lossofsync_i_1),
        .rx_lossofsync_i_2(rx_lossofsync_i_2),
        .rx_lossofsync_i_3(rx_lossofsync_i_3),
        .rxdatavalid_to_lanes_i(rxdatavalid_to_lanes_i),
        .rxn(rxn),
        .rxp(rxp),
        .rxreset_for_lanes(rxreset_for_lanes),
        .s_axi_tx_tready_reg(do_cc_i),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg(check_polarity_i_3),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_0(rx_polarity_i_3),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_1(check_polarity_i_2),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_2(rx_polarity_i_2),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_3(check_polarity_i_1),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_4(rx_polarity_i_1),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_5(check_polarity_i_0),
        .s_level_out_d1_board_aurora_64b66b_0_2_cdc_to_reg_6(rx_polarity_i_0),
        .stg3_reg(fsm_resetdone),
        .stg4_reg(\TX_PE_DATA_V_reg[0] ),
        .stg5_reg(board_aurora_64b66b_0_2_wrapper_i_n_34),
        .stg5_reg_0(board_aurora_64b66b_0_2_wrapper_i_n_36),
        .stg5_reg_1(board_aurora_64b66b_0_2_wrapper_i_n_38),
        .stg5_reg_2(board_aurora_64b66b_0_2_wrapper_i_n_40),
        .\tx_hdr_lane1_r_reg[1]_0 ({tx_header_1_i_2,tx_header_0_i_2}),
        .\tx_hdr_lane2_r_reg[1]_0 ({tx_header_1_i_1,tx_header_0_i_1}),
        .\tx_hdr_lane3_r_reg[1]_0 ({tx_header_1_i_0,tx_header_0_i_0}),
        .tx_out_clk(tx_out_clk),
        .txdatavalid_i(txdatavalid_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .txn(txn),
        .txp(txp));
  board_aurora_64b66b_0_2_RESET_LOGIC core_reset_logic_i
       (.SR(SYSTEM_RESET_reg),
        .SYSTEM_RESET_reg_0(core_reset_logic_i_n_4),
        .hard_err_i({hard_err_i[1],hard_err_i[2],hard_err_i[3]}),
        .link_reset_out(link_reset_out),
        .power_down(power_down),
        .ready_r_reg(lane_up_flop_i),
        .ready_r_reg0(\lane_init_sm_i/ready_r_reg0_4 ),
        .ready_r_reg0_0(\lane_init_sm_i/ready_r_reg0_3 ),
        .ready_r_reg0_1(\lane_init_sm_i/ready_r_reg0 ),
        .ready_r_reg_0(lane_up_flop_i_0),
        .ready_r_reg_1(lane_up_flop_i_1),
        .ready_r_reg_2(lane_up_flop_i_2),
        .stg1_board_aurora_64b66b_0_2_cdc_to_reg(fsm_resetdone),
        .stg5_reg(\TX_PE_DATA_V_reg[0] ),
        .sysreset_from_support(sysreset_from_support));
  board_aurora_64b66b_0_2_GLOBAL_LOGIC global_logic_i
       (.CHANNEL_UP_RX_IF_reg(CHANNEL_UP_RX_IF_reg),
        .CHANNEL_UP_RX_IF_reg_0(global_logic_i_n_28),
        .CHANNEL_UP_RX_IF_reg_1(\TX_PE_DATA_V_reg[0] ),
        .CHANNEL_UP_TX_IF_reg(global_logic_i_n_29),
        .CHANNEL_UP_TX_IF_reg_rep(global_logic_i_n_9),
        .CHANNEL_UP_TX_IF_reg_rep__0(global_logic_i_n_10),
        .D(tx_header_0_i_0),
        .Q({TX_PE_DATA[14],TX_PE_DATA[12],tx_stream_i_n_15,tx_stream_i_n_16,tx_stream_i_n_17,tx_stream_i_n_19,tx_stream_i_n_20,tx_stream_i_n_21,tx_stream_i_n_23,tx_stream_i_n_24,tx_stream_i_n_25}),
        .R0(\tx_stream_control_sm_i/R0 ),
        .RX_IDLES(RX_IDLES),
        .SR(SYSTEM_RESET_reg),
        .\TX_DATA_reg[53] (aurora_lane_3_i_n_14),
        .\TX_DATA_reg[53]_0 (aurora_lane_2_i_n_12),
        .\TX_DATA_reg[53]_1 (aurora_lane_1_i_n_12),
        .\TX_DATA_reg[63] (tx_stream_i_n_8),
        .\TX_DATA_reg[63]_0 (tx_stream_i_n_9),
        .\TX_DATA_reg[63]_1 (board_aurora_64b66b_0_2_wrapper_i_n_40),
        .\TX_DATA_reg[63]_2 (board_aurora_64b66b_0_2_wrapper_i_n_38),
        .\TX_DATA_reg[63]_3 (board_aurora_64b66b_0_2_wrapper_i_n_36),
        .\TX_DATA_reg[63]_4 (board_aurora_64b66b_0_2_wrapper_i_n_34),
        .TX_HEADER_0_reg(tx_header_0_i_1),
        .TX_HEADER_0_reg_0(tx_header_0_i_2),
        .TX_HEADER_0_reg_1(tx_header_0_i_3),
        .\TX_PE_DATA_V_reg[0]_rep__0 (global_logic_i_n_20),
        .\TX_PE_DATA_V_reg[0]_rep__0_0 (global_logic_i_n_33),
        .\TX_PE_DATA_reg[113] ({global_logic_i_n_17,global_logic_i_n_18,global_logic_i_n_19}),
        .\TX_PE_DATA_reg[177] ({global_logic_i_n_14,global_logic_i_n_15,global_logic_i_n_16}),
        .\TX_PE_DATA_reg[241] ({global_logic_i_n_11,global_logic_i_n_12,global_logic_i_n_13}),
        .\TX_PE_DATA_reg[49] ({p_1_in[54],p_1_in[52]}),
        .ch_bond_done_i(ch_bond_done_i),
        .channel_bond_r(\channel_init_sm_i/channel_bond_r ),
        .channel_hard_err_c(channel_hard_err_c),
        .channel_up_tx_if(channel_up_tx_if),
        .en_chan_sync_i(en_chan_sync_i),
        .\gen_cc_blk[0].gen_cc_flop (global_logic_i_n_26),
        .\gen_cc_blk[1].gen_cc_flop (global_logic_i_n_25),
        .\gen_cc_blk[2].gen_cc_flop (global_logic_i_n_24),
        .\gen_cc_blk[3].gen_cc_flop (global_logic_i_n_23),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .gen_ch_bond_int_reg(global_logic_i_n_30),
        .gen_ch_bond_int_reg_0(global_logic_i_n_31),
        .gen_ch_bond_int_reg_1(global_logic_i_n_32),
        .hard_err(hard_err),
        .in0(chan_bond_reset_i),
        .ready_r_reg(core_reset_logic_i_n_4),
        .remote_ready_r_reg(aurora_lane_0_i_n_12),
        .reset_lanes_c(\channel_init_sm_i/reset_lanes_c ),
        .reset_lanes_i(reset_lanes_i),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rst_pma_init_usrclk_0(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rst_pma_init_usrclk_1(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .rst_pma_init_usrclk_2(\sym_gen_i/rst_pma_init_usrclk ),
        .soft_err_i(soft_err_i),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .txdatavalid_i(txdatavalid_i),
        .txdatavalid_symgen_i(txdatavalid_symgen_i),
        .txdatavalid_symgen_i_lane1(txdatavalid_symgen_i_lane1),
        .txdatavalid_symgen_i_lane2(txdatavalid_symgen_i_lane2),
        .txdatavalid_symgen_i_lane3(txdatavalid_symgen_i_lane3),
        .wait_for_lane_up_r(\channel_init_sm_i/wait_for_lane_up_r ));
  board_aurora_64b66b_0_2_RX_STREAM rx_stream_i
       (.D({RX_PE_DATA[0],RX_PE_DATA[1],RX_PE_DATA[2],RX_PE_DATA[3],RX_PE_DATA[4],RX_PE_DATA[5],RX_PE_DATA[6],RX_PE_DATA[7],RX_PE_DATA[8],RX_PE_DATA[9],RX_PE_DATA[10],RX_PE_DATA[11],RX_PE_DATA[12],RX_PE_DATA[13],RX_PE_DATA[14],RX_PE_DATA[15],RX_PE_DATA[16],RX_PE_DATA[17],RX_PE_DATA[18],RX_PE_DATA[19],RX_PE_DATA[20],RX_PE_DATA[21],RX_PE_DATA[22],RX_PE_DATA[23],RX_PE_DATA[24],RX_PE_DATA[25],RX_PE_DATA[26],RX_PE_DATA[27],RX_PE_DATA[28],RX_PE_DATA[29],RX_PE_DATA[30],RX_PE_DATA[31],RX_PE_DATA[32],RX_PE_DATA[33],RX_PE_DATA[34],RX_PE_DATA[35],RX_PE_DATA[36],RX_PE_DATA[37],RX_PE_DATA[38],RX_PE_DATA[39],RX_PE_DATA[40],RX_PE_DATA[41],RX_PE_DATA[42],RX_PE_DATA[43],RX_PE_DATA[44],RX_PE_DATA[45],RX_PE_DATA[46],RX_PE_DATA[47],RX_PE_DATA[48],RX_PE_DATA[49],RX_PE_DATA[50],RX_PE_DATA[51],RX_PE_DATA[52],RX_PE_DATA[53],RX_PE_DATA[54],RX_PE_DATA[55],RX_PE_DATA[56],RX_PE_DATA[57],RX_PE_DATA[58],RX_PE_DATA[59],RX_PE_DATA[60],RX_PE_DATA[61],RX_PE_DATA[62],RX_PE_DATA[63],RX_PE_DATA[64],RX_PE_DATA[65],RX_PE_DATA[66],RX_PE_DATA[67],RX_PE_DATA[68],RX_PE_DATA[69],RX_PE_DATA[70],RX_PE_DATA[71],RX_PE_DATA[72],RX_PE_DATA[73],RX_PE_DATA[74],RX_PE_DATA[75],RX_PE_DATA[76],RX_PE_DATA[77],RX_PE_DATA[78],RX_PE_DATA[79],RX_PE_DATA[80],RX_PE_DATA[81],RX_PE_DATA[82],RX_PE_DATA[83],RX_PE_DATA[84],RX_PE_DATA[85],RX_PE_DATA[86],RX_PE_DATA[87],RX_PE_DATA[88],RX_PE_DATA[89],RX_PE_DATA[90],RX_PE_DATA[91],RX_PE_DATA[92],RX_PE_DATA[93],RX_PE_DATA[94],RX_PE_DATA[95],RX_PE_DATA[96],RX_PE_DATA[97],RX_PE_DATA[98],RX_PE_DATA[99],RX_PE_DATA[100],RX_PE_DATA[101],RX_PE_DATA[102],RX_PE_DATA[103],RX_PE_DATA[104],RX_PE_DATA[105],RX_PE_DATA[106],RX_PE_DATA[107],RX_PE_DATA[108],RX_PE_DATA[109],RX_PE_DATA[110],RX_PE_DATA[111],RX_PE_DATA[112],RX_PE_DATA[113],RX_PE_DATA[114],RX_PE_DATA[115],RX_PE_DATA[116],RX_PE_DATA[117],RX_PE_DATA[118],RX_PE_DATA[119],RX_PE_DATA[120],RX_PE_DATA[121],RX_PE_DATA[122],RX_PE_DATA[123],RX_PE_DATA[124],RX_PE_DATA[125],RX_PE_DATA[126],RX_PE_DATA[127],RX_PE_DATA[128],RX_PE_DATA[129],RX_PE_DATA[130],RX_PE_DATA[131],RX_PE_DATA[132],RX_PE_DATA[133],RX_PE_DATA[134],RX_PE_DATA[135],RX_PE_DATA[136],RX_PE_DATA[137],RX_PE_DATA[138],RX_PE_DATA[139],RX_PE_DATA[140],RX_PE_DATA[141],RX_PE_DATA[142],RX_PE_DATA[143],RX_PE_DATA[144],RX_PE_DATA[145],RX_PE_DATA[146],RX_PE_DATA[147],RX_PE_DATA[148],RX_PE_DATA[149],RX_PE_DATA[150],RX_PE_DATA[151],RX_PE_DATA[152],RX_PE_DATA[153],RX_PE_DATA[154],RX_PE_DATA[155],RX_PE_DATA[156],RX_PE_DATA[157],RX_PE_DATA[158],RX_PE_DATA[159],RX_PE_DATA[160],RX_PE_DATA[161],RX_PE_DATA[162],RX_PE_DATA[163],RX_PE_DATA[164],RX_PE_DATA[165],RX_PE_DATA[166],RX_PE_DATA[167],RX_PE_DATA[168],RX_PE_DATA[169],RX_PE_DATA[170],RX_PE_DATA[171],RX_PE_DATA[172],RX_PE_DATA[173],RX_PE_DATA[174],RX_PE_DATA[175],RX_PE_DATA[176],RX_PE_DATA[177],RX_PE_DATA[178],RX_PE_DATA[179],RX_PE_DATA[180],RX_PE_DATA[181],RX_PE_DATA[182],RX_PE_DATA[183],RX_PE_DATA[184],RX_PE_DATA[185],RX_PE_DATA[186],RX_PE_DATA[187],RX_PE_DATA[188],RX_PE_DATA[189],RX_PE_DATA[190],RX_PE_DATA[191],RX_PE_DATA[192],RX_PE_DATA[193],RX_PE_DATA[194],RX_PE_DATA[195],RX_PE_DATA[196],RX_PE_DATA[197],RX_PE_DATA[198],RX_PE_DATA[199],RX_PE_DATA[200],RX_PE_DATA[201],RX_PE_DATA[202],RX_PE_DATA[203],RX_PE_DATA[204],RX_PE_DATA[205],RX_PE_DATA[206],RX_PE_DATA[207],RX_PE_DATA[208],RX_PE_DATA[209],RX_PE_DATA[210],RX_PE_DATA[211],RX_PE_DATA[212],RX_PE_DATA[213],RX_PE_DATA[214],RX_PE_DATA[215],RX_PE_DATA[216],RX_PE_DATA[217],RX_PE_DATA[218],RX_PE_DATA[219],RX_PE_DATA[220],RX_PE_DATA[221],RX_PE_DATA[222],RX_PE_DATA[223],RX_PE_DATA[224],RX_PE_DATA[225],RX_PE_DATA[226],RX_PE_DATA[227],RX_PE_DATA[228],RX_PE_DATA[229],RX_PE_DATA[230],RX_PE_DATA[231],RX_PE_DATA[232],RX_PE_DATA[233],RX_PE_DATA[234],RX_PE_DATA[235],RX_PE_DATA[236],RX_PE_DATA[237],RX_PE_DATA[238],RX_PE_DATA[239],RX_PE_DATA[240],RX_PE_DATA[241],RX_PE_DATA[242],RX_PE_DATA[243],RX_PE_DATA[244],RX_PE_DATA[245],RX_PE_DATA[246],RX_PE_DATA[247],RX_PE_DATA[248],RX_PE_DATA[249],RX_PE_DATA[250],RX_PE_DATA[251],RX_PE_DATA[252],RX_PE_DATA[253],RX_PE_DATA[254],RX_PE_DATA[255]}),
        .RX_PE_DATA_V(RX_PE_DATA_V),
        .SR(global_logic_i_n_28),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .\m_axi_rx_tdata_reg[0] (\TX_PE_DATA_V_reg[0] ),
        .m_axi_rx_tvalid(m_axi_rx_tvalid));
  FDRE soft_err_reg
       (.C(\TX_PE_DATA_V_reg[0] ),
        .CE(1'b1),
        .D(global_logic_i_n_29),
        .Q(soft_err),
        .R(SYSTEM_RESET_reg));
  board_aurora_64b66b_0_2_STANDARD_CC_MODULE standard_cc_module_i
       (.Q(do_cc_i),
        .SR(global_logic_i_n_28),
        .\cc_count_r_reg[0]_0 (CHANNEL_UP_RX_IF_reg),
        .\count_24d_srl_r_reg[0]_0 (\TX_PE_DATA_V_reg[0] ),
        .do_cc_r0(\tx_stream_control_sm_i/do_cc_r0 ),
        .extend_cc_r(\tx_stream_control_sm_i/extend_cc_r ));
  board_aurora_64b66b_0_2_TX_STREAM tx_stream_i
       (.Q({TX_PE_DATA[15:14],TX_PE_DATA[12],tx_stream_i_n_14,tx_stream_i_n_15,tx_stream_i_n_16,tx_stream_i_n_17,tx_stream_i_n_18,tx_stream_i_n_19,tx_stream_i_n_20,tx_stream_i_n_21,tx_stream_i_n_22,tx_stream_i_n_23,tx_stream_i_n_24,tx_stream_i_n_25}),
        .R0(\tx_stream_control_sm_i/R0 ),
        .\TX_DATA_reg[43] (global_logic_i_n_10),
        .\TX_DATA_reg[61] (global_logic_i_n_9),
        .\TX_PE_DATA_V_reg[0] (\TX_PE_DATA_V_reg[0] ),
        .\TX_PE_DATA_V_reg[0]_rep (tx_stream_i_n_8),
        .\TX_PE_DATA_V_reg[0]_rep__0 (tx_stream_i_n_9),
        .\TX_PE_DATA_reg[0] (tx_stream_i_n_217),
        .\TX_PE_DATA_reg[100] (tx_stream_i_n_189),
        .\TX_PE_DATA_reg[101] (tx_stream_i_n_188),
        .\TX_PE_DATA_reg[102] (tx_stream_i_n_187),
        .\TX_PE_DATA_reg[103] (tx_stream_i_n_186),
        .\TX_PE_DATA_reg[104] (tx_stream_i_n_201),
        .\TX_PE_DATA_reg[105] (tx_stream_i_n_200),
        .\TX_PE_DATA_reg[106] (tx_stream_i_n_199),
        .\TX_PE_DATA_reg[107] (tx_stream_i_n_198),
        .\TX_PE_DATA_reg[108] (tx_stream_i_n_197),
        .\TX_PE_DATA_reg[109] (tx_stream_i_n_196),
        .\TX_PE_DATA_reg[10] (tx_stream_i_n_223),
        .\TX_PE_DATA_reg[110] (tx_stream_i_n_195),
        .\TX_PE_DATA_reg[111] (tx_stream_i_n_194),
        .\TX_PE_DATA_reg[116] (tx_stream_i_n_205),
        .\TX_PE_DATA_reg[117] (tx_stream_i_n_204),
        .\TX_PE_DATA_reg[118] (tx_stream_i_n_203),
        .\TX_PE_DATA_reg[119] (tx_stream_i_n_202),
        .\TX_PE_DATA_reg[11] (tx_stream_i_n_222),
        .\TX_PE_DATA_reg[120] (tx_stream_i_n_209),
        .\TX_PE_DATA_reg[121] (tx_stream_i_n_37),
        .\TX_PE_DATA_reg[122] (tx_stream_i_n_36),
        .\TX_PE_DATA_reg[123] (tx_stream_i_n_35),
        .\TX_PE_DATA_reg[124] (tx_stream_i_n_34),
        .\TX_PE_DATA_reg[125] (tx_stream_i_n_208),
        .\TX_PE_DATA_reg[126] (tx_stream_i_n_207),
        .\TX_PE_DATA_reg[127] (tx_stream_i_n_206),
        .\TX_PE_DATA_reg[128] (tx_stream_i_n_105),
        .\TX_PE_DATA_reg[129] (tx_stream_i_n_104),
        .\TX_PE_DATA_reg[12] (tx_stream_i_n_221),
        .\TX_PE_DATA_reg[130] (tx_stream_i_n_103),
        .\TX_PE_DATA_reg[131] (tx_stream_i_n_102),
        .\TX_PE_DATA_reg[132] (tx_stream_i_n_101),
        .\TX_PE_DATA_reg[133] (tx_stream_i_n_100),
        .\TX_PE_DATA_reg[134] (tx_stream_i_n_99),
        .\TX_PE_DATA_reg[135] (tx_stream_i_n_98),
        .\TX_PE_DATA_reg[136] (tx_stream_i_n_113),
        .\TX_PE_DATA_reg[137] (tx_stream_i_n_112),
        .\TX_PE_DATA_reg[138] (tx_stream_i_n_111),
        .\TX_PE_DATA_reg[139] (tx_stream_i_n_110),
        .\TX_PE_DATA_reg[13] (tx_stream_i_n_220),
        .\TX_PE_DATA_reg[140] (tx_stream_i_n_109),
        .\TX_PE_DATA_reg[141] (tx_stream_i_n_108),
        .\TX_PE_DATA_reg[142] (tx_stream_i_n_107),
        .\TX_PE_DATA_reg[143] (tx_stream_i_n_106),
        .\TX_PE_DATA_reg[144] (tx_stream_i_n_121),
        .\TX_PE_DATA_reg[145] (tx_stream_i_n_120),
        .\TX_PE_DATA_reg[146] (tx_stream_i_n_119),
        .\TX_PE_DATA_reg[147] (tx_stream_i_n_118),
        .\TX_PE_DATA_reg[148] (tx_stream_i_n_117),
        .\TX_PE_DATA_reg[149] (tx_stream_i_n_116),
        .\TX_PE_DATA_reg[14] (tx_stream_i_n_219),
        .\TX_PE_DATA_reg[150] (tx_stream_i_n_115),
        .\TX_PE_DATA_reg[151] (tx_stream_i_n_114),
        .\TX_PE_DATA_reg[152] (tx_stream_i_n_129),
        .\TX_PE_DATA_reg[153] (tx_stream_i_n_128),
        .\TX_PE_DATA_reg[154] (tx_stream_i_n_127),
        .\TX_PE_DATA_reg[155] (tx_stream_i_n_126),
        .\TX_PE_DATA_reg[156] (tx_stream_i_n_125),
        .\TX_PE_DATA_reg[157] (tx_stream_i_n_124),
        .\TX_PE_DATA_reg[158] (tx_stream_i_n_123),
        .\TX_PE_DATA_reg[159] (tx_stream_i_n_122),
        .\TX_PE_DATA_reg[15] (tx_stream_i_n_218),
        .\TX_PE_DATA_reg[160] (tx_stream_i_n_137),
        .\TX_PE_DATA_reg[161] (tx_stream_i_n_136),
        .\TX_PE_DATA_reg[162] (tx_stream_i_n_135),
        .\TX_PE_DATA_reg[163] (tx_stream_i_n_134),
        .\TX_PE_DATA_reg[164] (tx_stream_i_n_133),
        .\TX_PE_DATA_reg[165] (tx_stream_i_n_132),
        .\TX_PE_DATA_reg[166] (tx_stream_i_n_131),
        .\TX_PE_DATA_reg[167] (tx_stream_i_n_130),
        .\TX_PE_DATA_reg[168] (tx_stream_i_n_145),
        .\TX_PE_DATA_reg[169] (tx_stream_i_n_144),
        .\TX_PE_DATA_reg[16] (tx_stream_i_n_233),
        .\TX_PE_DATA_reg[170] (tx_stream_i_n_143),
        .\TX_PE_DATA_reg[171] (tx_stream_i_n_142),
        .\TX_PE_DATA_reg[172] (tx_stream_i_n_141),
        .\TX_PE_DATA_reg[173] (tx_stream_i_n_140),
        .\TX_PE_DATA_reg[174] (tx_stream_i_n_139),
        .\TX_PE_DATA_reg[175] (tx_stream_i_n_138),
        .\TX_PE_DATA_reg[17] (tx_stream_i_n_232),
        .\TX_PE_DATA_reg[180] (tx_stream_i_n_149),
        .\TX_PE_DATA_reg[181] (tx_stream_i_n_148),
        .\TX_PE_DATA_reg[182] (tx_stream_i_n_147),
        .\TX_PE_DATA_reg[183] (tx_stream_i_n_146),
        .\TX_PE_DATA_reg[184] (tx_stream_i_n_153),
        .\TX_PE_DATA_reg[185] (tx_stream_i_n_33),
        .\TX_PE_DATA_reg[186] (tx_stream_i_n_32),
        .\TX_PE_DATA_reg[187] (tx_stream_i_n_31),
        .\TX_PE_DATA_reg[188] (tx_stream_i_n_30),
        .\TX_PE_DATA_reg[189] (tx_stream_i_n_152),
        .\TX_PE_DATA_reg[18] (tx_stream_i_n_231),
        .\TX_PE_DATA_reg[190] (tx_stream_i_n_151),
        .\TX_PE_DATA_reg[191] (tx_stream_i_n_150),
        .\TX_PE_DATA_reg[192] (tx_stream_i_n_49),
        .\TX_PE_DATA_reg[193] (tx_stream_i_n_48),
        .\TX_PE_DATA_reg[194] (tx_stream_i_n_47),
        .\TX_PE_DATA_reg[195] (tx_stream_i_n_46),
        .\TX_PE_DATA_reg[196] (tx_stream_i_n_45),
        .\TX_PE_DATA_reg[197] (tx_stream_i_n_44),
        .\TX_PE_DATA_reg[198] (tx_stream_i_n_43),
        .\TX_PE_DATA_reg[199] (tx_stream_i_n_42),
        .\TX_PE_DATA_reg[19] (tx_stream_i_n_230),
        .\TX_PE_DATA_reg[1] (tx_stream_i_n_216),
        .\TX_PE_DATA_reg[200] (tx_stream_i_n_57),
        .\TX_PE_DATA_reg[201] (tx_stream_i_n_56),
        .\TX_PE_DATA_reg[202] (tx_stream_i_n_55),
        .\TX_PE_DATA_reg[203] (tx_stream_i_n_54),
        .\TX_PE_DATA_reg[204] (tx_stream_i_n_53),
        .\TX_PE_DATA_reg[205] (tx_stream_i_n_52),
        .\TX_PE_DATA_reg[206] (tx_stream_i_n_51),
        .\TX_PE_DATA_reg[207] (tx_stream_i_n_50),
        .\TX_PE_DATA_reg[208] (tx_stream_i_n_65),
        .\TX_PE_DATA_reg[209] (tx_stream_i_n_64),
        .\TX_PE_DATA_reg[20] (tx_stream_i_n_229),
        .\TX_PE_DATA_reg[210] (tx_stream_i_n_63),
        .\TX_PE_DATA_reg[211] (tx_stream_i_n_62),
        .\TX_PE_DATA_reg[212] (tx_stream_i_n_61),
        .\TX_PE_DATA_reg[213] (tx_stream_i_n_60),
        .\TX_PE_DATA_reg[214] (tx_stream_i_n_59),
        .\TX_PE_DATA_reg[215] (tx_stream_i_n_58),
        .\TX_PE_DATA_reg[216] (tx_stream_i_n_73),
        .\TX_PE_DATA_reg[217] (tx_stream_i_n_72),
        .\TX_PE_DATA_reg[218] (tx_stream_i_n_71),
        .\TX_PE_DATA_reg[219] (tx_stream_i_n_70),
        .\TX_PE_DATA_reg[21] (tx_stream_i_n_228),
        .\TX_PE_DATA_reg[220] (tx_stream_i_n_69),
        .\TX_PE_DATA_reg[221] (tx_stream_i_n_68),
        .\TX_PE_DATA_reg[222] (tx_stream_i_n_67),
        .\TX_PE_DATA_reg[223] (tx_stream_i_n_66),
        .\TX_PE_DATA_reg[224] (tx_stream_i_n_81),
        .\TX_PE_DATA_reg[225] (tx_stream_i_n_80),
        .\TX_PE_DATA_reg[226] (tx_stream_i_n_79),
        .\TX_PE_DATA_reg[227] (tx_stream_i_n_78),
        .\TX_PE_DATA_reg[228] (tx_stream_i_n_77),
        .\TX_PE_DATA_reg[229] (tx_stream_i_n_76),
        .\TX_PE_DATA_reg[22] (tx_stream_i_n_227),
        .\TX_PE_DATA_reg[230] (tx_stream_i_n_75),
        .\TX_PE_DATA_reg[231] (tx_stream_i_n_74),
        .\TX_PE_DATA_reg[232] (tx_stream_i_n_89),
        .\TX_PE_DATA_reg[233] (tx_stream_i_n_88),
        .\TX_PE_DATA_reg[234] (tx_stream_i_n_87),
        .\TX_PE_DATA_reg[235] (tx_stream_i_n_86),
        .\TX_PE_DATA_reg[236] (tx_stream_i_n_85),
        .\TX_PE_DATA_reg[237] (tx_stream_i_n_84),
        .\TX_PE_DATA_reg[238] (tx_stream_i_n_83),
        .\TX_PE_DATA_reg[239] (tx_stream_i_n_82),
        .\TX_PE_DATA_reg[23] (tx_stream_i_n_226),
        .\TX_PE_DATA_reg[244] (tx_stream_i_n_93),
        .\TX_PE_DATA_reg[245] (tx_stream_i_n_92),
        .\TX_PE_DATA_reg[246] (tx_stream_i_n_91),
        .\TX_PE_DATA_reg[247] (tx_stream_i_n_90),
        .\TX_PE_DATA_reg[248] (tx_stream_i_n_97),
        .\TX_PE_DATA_reg[249] (tx_stream_i_n_29),
        .\TX_PE_DATA_reg[24] (tx_stream_i_n_241),
        .\TX_PE_DATA_reg[250] (tx_stream_i_n_28),
        .\TX_PE_DATA_reg[251] (tx_stream_i_n_27),
        .\TX_PE_DATA_reg[252] (tx_stream_i_n_26),
        .\TX_PE_DATA_reg[253] (tx_stream_i_n_96),
        .\TX_PE_DATA_reg[254] (tx_stream_i_n_95),
        .\TX_PE_DATA_reg[255] (tx_stream_i_n_94),
        .\TX_PE_DATA_reg[25] (tx_stream_i_n_240),
        .\TX_PE_DATA_reg[26] (tx_stream_i_n_239),
        .\TX_PE_DATA_reg[27] (tx_stream_i_n_238),
        .\TX_PE_DATA_reg[28] (tx_stream_i_n_237),
        .\TX_PE_DATA_reg[29] (tx_stream_i_n_236),
        .\TX_PE_DATA_reg[2] (tx_stream_i_n_215),
        .\TX_PE_DATA_reg[30] (tx_stream_i_n_235),
        .\TX_PE_DATA_reg[31] (tx_stream_i_n_234),
        .\TX_PE_DATA_reg[32] (tx_stream_i_n_249),
        .\TX_PE_DATA_reg[33] (tx_stream_i_n_248),
        .\TX_PE_DATA_reg[34] (tx_stream_i_n_247),
        .\TX_PE_DATA_reg[35] (tx_stream_i_n_246),
        .\TX_PE_DATA_reg[36] (tx_stream_i_n_245),
        .\TX_PE_DATA_reg[37] (tx_stream_i_n_244),
        .\TX_PE_DATA_reg[38] (tx_stream_i_n_243),
        .\TX_PE_DATA_reg[39] (tx_stream_i_n_242),
        .\TX_PE_DATA_reg[3] (tx_stream_i_n_214),
        .\TX_PE_DATA_reg[40] (tx_stream_i_n_257),
        .\TX_PE_DATA_reg[41] (tx_stream_i_n_256),
        .\TX_PE_DATA_reg[42] (tx_stream_i_n_255),
        .\TX_PE_DATA_reg[43] (tx_stream_i_n_254),
        .\TX_PE_DATA_reg[44] (tx_stream_i_n_253),
        .\TX_PE_DATA_reg[45] (tx_stream_i_n_252),
        .\TX_PE_DATA_reg[46] (tx_stream_i_n_251),
        .\TX_PE_DATA_reg[47] (tx_stream_i_n_250),
        .\TX_PE_DATA_reg[4] (tx_stream_i_n_213),
        .\TX_PE_DATA_reg[52] (tx_stream_i_n_261),
        .\TX_PE_DATA_reg[53] (tx_stream_i_n_260),
        .\TX_PE_DATA_reg[54] (tx_stream_i_n_259),
        .\TX_PE_DATA_reg[55] (tx_stream_i_n_258),
        .\TX_PE_DATA_reg[56] (tx_stream_i_n_265),
        .\TX_PE_DATA_reg[57] (tx_stream_i_n_41),
        .\TX_PE_DATA_reg[58] (tx_stream_i_n_40),
        .\TX_PE_DATA_reg[59] (tx_stream_i_n_39),
        .\TX_PE_DATA_reg[5] (tx_stream_i_n_212),
        .\TX_PE_DATA_reg[60] (tx_stream_i_n_38),
        .\TX_PE_DATA_reg[61] (tx_stream_i_n_264),
        .\TX_PE_DATA_reg[62] (tx_stream_i_n_263),
        .\TX_PE_DATA_reg[63] (tx_stream_i_n_262),
        .\TX_PE_DATA_reg[64] (tx_stream_i_n_161),
        .\TX_PE_DATA_reg[65] (tx_stream_i_n_160),
        .\TX_PE_DATA_reg[66] (tx_stream_i_n_159),
        .\TX_PE_DATA_reg[67] (tx_stream_i_n_158),
        .\TX_PE_DATA_reg[68] (tx_stream_i_n_157),
        .\TX_PE_DATA_reg[69] (tx_stream_i_n_156),
        .\TX_PE_DATA_reg[6] (tx_stream_i_n_211),
        .\TX_PE_DATA_reg[70] (tx_stream_i_n_155),
        .\TX_PE_DATA_reg[71] (tx_stream_i_n_154),
        .\TX_PE_DATA_reg[72] (tx_stream_i_n_169),
        .\TX_PE_DATA_reg[73] (tx_stream_i_n_168),
        .\TX_PE_DATA_reg[74] (tx_stream_i_n_167),
        .\TX_PE_DATA_reg[75] (tx_stream_i_n_166),
        .\TX_PE_DATA_reg[76] (tx_stream_i_n_165),
        .\TX_PE_DATA_reg[77] (tx_stream_i_n_164),
        .\TX_PE_DATA_reg[78] (tx_stream_i_n_163),
        .\TX_PE_DATA_reg[79] (tx_stream_i_n_162),
        .\TX_PE_DATA_reg[7] (tx_stream_i_n_210),
        .\TX_PE_DATA_reg[80] (tx_stream_i_n_177),
        .\TX_PE_DATA_reg[81] (tx_stream_i_n_176),
        .\TX_PE_DATA_reg[82] (tx_stream_i_n_175),
        .\TX_PE_DATA_reg[83] (tx_stream_i_n_174),
        .\TX_PE_DATA_reg[84] (tx_stream_i_n_173),
        .\TX_PE_DATA_reg[85] (tx_stream_i_n_172),
        .\TX_PE_DATA_reg[86] (tx_stream_i_n_171),
        .\TX_PE_DATA_reg[87] (tx_stream_i_n_170),
        .\TX_PE_DATA_reg[88] (tx_stream_i_n_185),
        .\TX_PE_DATA_reg[89] (tx_stream_i_n_184),
        .\TX_PE_DATA_reg[8] (tx_stream_i_n_225),
        .\TX_PE_DATA_reg[90] (tx_stream_i_n_183),
        .\TX_PE_DATA_reg[91] (tx_stream_i_n_182),
        .\TX_PE_DATA_reg[92] (tx_stream_i_n_181),
        .\TX_PE_DATA_reg[93] (tx_stream_i_n_180),
        .\TX_PE_DATA_reg[94] (tx_stream_i_n_179),
        .\TX_PE_DATA_reg[95] (tx_stream_i_n_178),
        .\TX_PE_DATA_reg[96] (tx_stream_i_n_193),
        .\TX_PE_DATA_reg[97] (tx_stream_i_n_192),
        .\TX_PE_DATA_reg[98] (tx_stream_i_n_191),
        .\TX_PE_DATA_reg[99] (tx_stream_i_n_190),
        .\TX_PE_DATA_reg[9] (tx_stream_i_n_224),
        .channel_bond_r(\channel_init_sm_i/channel_bond_r ),
        .channel_up_tx_if(channel_up_tx_if),
        .do_cc_r(\tx_stream_control_sm_i/do_cc_r ),
        .do_cc_r0(\tx_stream_control_sm_i/do_cc_r0 ),
        .extend_cc_r(\tx_stream_control_sm_i/extend_cc_r ),
        .extend_cc_r_reg(do_cc_i),
        .gen_cc_i(gen_cc_i),
        .gen_ch_bond_i(gen_ch_bond_i),
        .pdu_ok_c(\tx_stream_control_sm_i/pdu_ok_c ),
        .rst_pma_init_usrclk(\sym_gen_i/rst_pma_init_usrclk ),
        .rst_pma_init_usrclk_0(\sym_gen_i/rst_pma_init_usrclk_2 ),
        .rst_pma_init_usrclk_1(\sym_gen_i/rst_pma_init_usrclk_1 ),
        .rst_pma_init_usrclk_2(\sym_gen_i/rst_pma_init_usrclk_0 ),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .tx_pe_data_v_i(tx_pe_data_v_i),
        .txdatavalid_i(txdatavalid_i),
        .wait_for_lane_up_r(\channel_init_sm_i/wait_for_lane_up_r ),
        .wait_for_lane_up_r_reg(p_1_in[53]));
endmodule

(* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_master,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
module board_aurora_64b66b_0_2_fifo_gen_master
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "12" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "13" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  board_aurora_64b66b_0_2_fifo_generator_v13_2_5__parameterized1 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
module board_aurora_64b66b_0_2_fifo_gen_slave
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  board_aurora_64b66b_0_2_fifo_generator_v13_2_5 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "board_aurora_64b66b_0_2_fifo_gen_slave" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
module board_aurora_64b66b_0_2_fifo_gen_slave__xdcDup__1
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  board_aurora_64b66b_0_2_fifo_generator_v13_2_5__3 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_fifo_gen_slave,fifo_generator_v13_2_5,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "board_aurora_64b66b_0_2_fifo_gen_slave" *) 
(* X_CORE_INFO = "fifo_generator_v13_2_5,Vivado 2021.1" *) 
module board_aurora_64b66b_0_2_fifo_gen_slave__xdcDup__2
   (srst,
    wr_clk,
    rd_clk,
    din,
    wr_en,
    rd_en,
    dout,
    full,
    overflow,
    empty,
    underflow,
    prog_full,
    prog_empty,
    wr_rst_busy,
    rd_rst_busy);
  input srst;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 write_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME write_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input wr_clk;
  (* x_interface_info = "xilinx.com:signal:clock:1.0 read_clk CLK" *) (* x_interface_parameter = "XIL_INTERFACENAME read_clk, FREQ_HZ 1000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input rd_clk;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_DATA" *) input [71:0]din;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE WR_EN" *) input wr_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_EN" *) input rd_en;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ RD_DATA" *) output [71:0]dout;
  (* x_interface_info = "xilinx.com:interface:fifo_write:1.0 FIFO_WRITE FULL" *) output full;
  output overflow;
  (* x_interface_info = "xilinx.com:interface:fifo_read:1.0 FIFO_READ EMPTY" *) output empty;
  output underflow;
  output prog_full;
  output prog_empty;
  output wr_rst_busy;
  output rd_rst_busy;

  wire \<const0> ;
  wire [71:0]din;
  wire [70:0]\^dout ;
  wire empty;
  wire full;
  wire overflow;
  wire prog_empty;
  wire rd_clk;
  wire rd_en;
  wire srst;
  wire underflow;
  wire wr_clk;
  wire wr_en;
  wire NLW_U0_almost_empty_UNCONNECTED;
  wire NLW_U0_almost_full_UNCONNECTED;
  wire NLW_U0_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_overflow_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_ar_prog_full_UNCONNECTED;
  wire NLW_U0_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_ar_underflow_UNCONNECTED;
  wire NLW_U0_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_overflow_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_aw_prog_full_UNCONNECTED;
  wire NLW_U0_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_aw_underflow_UNCONNECTED;
  wire NLW_U0_axi_b_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_overflow_UNCONNECTED;
  wire NLW_U0_axi_b_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_b_prog_full_UNCONNECTED;
  wire NLW_U0_axi_b_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_b_underflow_UNCONNECTED;
  wire NLW_U0_axi_r_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_overflow_UNCONNECTED;
  wire NLW_U0_axi_r_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_r_prog_full_UNCONNECTED;
  wire NLW_U0_axi_r_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_r_underflow_UNCONNECTED;
  wire NLW_U0_axi_w_dbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_overflow_UNCONNECTED;
  wire NLW_U0_axi_w_prog_empty_UNCONNECTED;
  wire NLW_U0_axi_w_prog_full_UNCONNECTED;
  wire NLW_U0_axi_w_sbiterr_UNCONNECTED;
  wire NLW_U0_axi_w_underflow_UNCONNECTED;
  wire NLW_U0_axis_dbiterr_UNCONNECTED;
  wire NLW_U0_axis_overflow_UNCONNECTED;
  wire NLW_U0_axis_prog_empty_UNCONNECTED;
  wire NLW_U0_axis_prog_full_UNCONNECTED;
  wire NLW_U0_axis_sbiterr_UNCONNECTED;
  wire NLW_U0_axis_underflow_UNCONNECTED;
  wire NLW_U0_dbiterr_UNCONNECTED;
  wire NLW_U0_m_axi_arvalid_UNCONNECTED;
  wire NLW_U0_m_axi_awvalid_UNCONNECTED;
  wire NLW_U0_m_axi_bready_UNCONNECTED;
  wire NLW_U0_m_axi_rready_UNCONNECTED;
  wire NLW_U0_m_axi_wlast_UNCONNECTED;
  wire NLW_U0_m_axi_wvalid_UNCONNECTED;
  wire NLW_U0_m_axis_tlast_UNCONNECTED;
  wire NLW_U0_m_axis_tvalid_UNCONNECTED;
  wire NLW_U0_prog_full_UNCONNECTED;
  wire NLW_U0_rd_rst_busy_UNCONNECTED;
  wire NLW_U0_s_axi_arready_UNCONNECTED;
  wire NLW_U0_s_axi_awready_UNCONNECTED;
  wire NLW_U0_s_axi_bvalid_UNCONNECTED;
  wire NLW_U0_s_axi_rlast_UNCONNECTED;
  wire NLW_U0_s_axi_rvalid_UNCONNECTED;
  wire NLW_U0_s_axi_wready_UNCONNECTED;
  wire NLW_U0_s_axis_tready_UNCONNECTED;
  wire NLW_U0_sbiterr_UNCONNECTED;
  wire NLW_U0_valid_UNCONNECTED;
  wire NLW_U0_wr_ack_UNCONNECTED;
  wire NLW_U0_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_U0_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_U0_axis_wr_data_count_UNCONNECTED;
  wire [8:0]NLW_U0_data_count_UNCONNECTED;
  wire [71:67]NLW_U0_dout_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_U0_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_U0_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awcache_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_U0_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_U0_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_U0_m_axi_wdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_U0_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_U0_m_axi_wuser_UNCONNECTED;
  wire [7:0]NLW_U0_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tdest_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tid_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tkeep_UNCONNECTED;
  wire [0:0]NLW_U0_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_U0_m_axis_tuser_UNCONNECTED;
  wire [8:0]NLW_U0_rd_data_count_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_U0_s_axi_rdata_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_U0_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_U0_s_axi_ruser_UNCONNECTED;
  wire [8:0]NLW_U0_wr_data_count_UNCONNECTED;

  assign dout[71] = \<const0> ;
  assign dout[70:68] = \^dout [70:68];
  assign dout[67] = \<const0> ;
  assign dout[66:0] = \^dout [66:0];
  assign prog_full = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "8" *) 
  (* C_AXIS_TDEST_WIDTH = "1" *) 
  (* C_AXIS_TID_WIDTH = "1" *) 
  (* C_AXIS_TKEEP_WIDTH = "1" *) 
  (* C_AXIS_TSTRB_WIDTH = "1" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "1" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "9" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "72" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "1" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "72" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynquplus" *) 
  (* C_FULL_FLAGS_RST_VAL = "0" *) 
  (* C_HAS_ALMOST_EMPTY = "0" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "1" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "1" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "1" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "1" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "0" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "0" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "1" *) 
  (* C_HAS_UNDERFLOW = "1" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "0" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "6" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "4" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "2" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "1kx18" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "6" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "7" *) 
  (* C_PROG_EMPTY_TYPE = "1" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "450" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "449" *) 
  (* C_PROG_FULL_TYPE = "1" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "9" *) 
  (* C_RD_DEPTH = "512" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "9" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "2" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "1" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "9" *) 
  (* C_WR_DEPTH = "512" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "9" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  (* is_du_within_envelope = "true" *) 
  board_aurora_64b66b_0_2_fifo_generator_v13_2_5__4 U0
       (.almost_empty(NLW_U0_almost_empty_UNCONNECTED),
        .almost_full(NLW_U0_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_U0_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_U0_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_U0_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_U0_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_U0_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_U0_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_U0_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_U0_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_U0_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_U0_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_U0_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_U0_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_U0_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_U0_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_U0_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_U0_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_U0_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_U0_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_U0_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_U0_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_U0_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_U0_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_U0_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_U0_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_U0_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_U0_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_U0_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_U0_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_U0_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_U0_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_U0_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_U0_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_U0_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_U0_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_U0_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_U0_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_U0_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_U0_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_U0_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_U0_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_U0_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_U0_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_U0_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_U0_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_U0_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_U0_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_U0_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_U0_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_U0_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_U0_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_U0_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_U0_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_U0_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_U0_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_U0_data_count_UNCONNECTED[8:0]),
        .dbiterr(NLW_U0_dbiterr_UNCONNECTED),
        .din(din),
        .dout({NLW_U0_dout_UNCONNECTED[71],\^dout }),
        .empty(empty),
        .full(full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_U0_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_U0_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_U0_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_U0_m_axi_arid_UNCONNECTED[0]),
        .m_axi_arlen(NLW_U0_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_U0_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_U0_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_U0_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_U0_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_U0_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_U0_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_U0_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_U0_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_U0_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_U0_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_U0_m_axi_awid_UNCONNECTED[0]),
        .m_axi_awlen(NLW_U0_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_U0_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_U0_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_U0_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_U0_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_U0_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_U0_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_U0_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid(1'b0),
        .m_axi_bready(NLW_U0_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid(1'b0),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_U0_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_U0_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_U0_m_axi_wid_UNCONNECTED[0]),
        .m_axi_wlast(NLW_U0_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_U0_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_U0_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_U0_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_U0_m_axis_tdata_UNCONNECTED[7:0]),
        .m_axis_tdest(NLW_U0_m_axis_tdest_UNCONNECTED[0]),
        .m_axis_tid(NLW_U0_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tkeep(NLW_U0_m_axis_tkeep_UNCONNECTED[0]),
        .m_axis_tlast(NLW_U0_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_U0_m_axis_tstrb_UNCONNECTED[0]),
        .m_axis_tuser(NLW_U0_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_U0_m_axis_tvalid_UNCONNECTED),
        .overflow(overflow),
        .prog_empty(prog_empty),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_U0_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(rd_clk),
        .rd_data_count(NLW_U0_rd_data_count_UNCONNECTED[8:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_U0_rd_rst_busy_UNCONNECTED),
        .rst(1'b0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b0),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid(1'b0),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_U0_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid(1'b0),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_U0_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_U0_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_U0_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_U0_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_U0_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_U0_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_U0_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rlast(NLW_U0_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_U0_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_U0_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_U0_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid(1'b0),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_U0_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest(1'b0),
        .s_axis_tid(1'b0),
        .s_axis_tkeep(1'b0),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_U0_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb(1'b0),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_U0_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(srst),
        .underflow(underflow),
        .valid(NLW_U0_valid_UNCONNECTED),
        .wr_ack(NLW_U0_wr_ack_UNCONNECTED),
        .wr_clk(wr_clk),
        .wr_data_count(NLW_U0_wr_data_count_UNCONNECTED[8:0]),
        .wr_en(wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_U0_wr_rst_busy_UNCONNECTED));
endmodule

(* CHECK_LICENSE_TYPE = "board_aurora_64b66b_0_2_gt,board_aurora_64b66b_0_2_gt_gtwizard_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "board_aurora_64b66b_0_2_gt_gtwizard_top,Vivado 2021.1" *) 
module board_aurora_64b66b_0_2_gt
   (gtwiz_userclk_tx_active_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drpwe_in,
    eyescanreset_in,
    eyescantrigger_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    pcsrsvdin_in,
    qpll0clk_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1refclk_in,
    rxbufreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxdfelpmreset_in,
    rxgearboxslip_in,
    rxlpmen_in,
    rxpcsreset_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxusrclk_in,
    rxusrclk2_in,
    txdiffctrl_in,
    txheader_in,
    txinhibit_in,
    txpcsreset_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txsequence_in,
    txusrclk_in,
    txusrclk2_in,
    dmonitorout_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gtpowergood_out,
    gtytxn_out,
    gtytxp_out,
    rxbufstatus_out,
    rxdatavalid_out,
    rxheader_out,
    rxheadervalid_out,
    rxoutclk_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxresetdone_out,
    rxstartofseq_out,
    txbufstatus_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txpmaresetdone_out,
    txresetdone_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [255:0]gtwiz_userdata_tx_in;
  output [255:0]gtwiz_userdata_rx_out;
  input [39:0]drpaddr_in;
  input [3:0]drpclk_in;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drpwe_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [11:0]loopback_in;
  input [63:0]pcsrsvdin_in;
  input [3:0]qpll0clk_in;
  input [3:0]qpll0refclk_in;
  input [3:0]qpll1clk_in;
  input [3:0]qpll1refclk_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxpcsreset_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [15:0]rxprbssel_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [19:0]txdiffctrl_in;
  input [23:0]txheader_in;
  input [3:0]txinhibit_in;
  input [3:0]txpcsreset_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [19:0]txpostcursor_in;
  input [3:0]txprbsforceerr_in;
  input [15:0]txprbssel_in;
  input [19:0]txprecursor_in;
  input [27:0]txsequence_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  output [63:0]dmonitorout_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [11:0]rxbufstatus_out;
  output [7:0]rxdatavalid_out;
  output [23:0]rxheader_out;
  output [7:0]rxheadervalid_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxresetdone_out;
  output [7:0]rxstartofseq_out;
  output [7:0]txbufstatus_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txresetdone_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire \<const0> ;
  wire [3:0]drpclk_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [3:0]qpll0clk_in;
  wire [3:0]qpll0refclk_in;
  wire [11:2]\^rxbufstatus_out ;
  wire [3:0]rxcdrovrden_in;
  wire [6:0]\^rxdatavalid_out ;
  wire [3:0]rxgearboxslip_in;
  wire [19:0]\^rxheader_out ;
  wire [6:0]\^rxheadervalid_out ;
  wire [2:2]\^rxoutclk_out ;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [7:1]\^txbufstatus_out ;
  wire [23:0]txheader_in;
  wire [2:2]\^txoutclk_out ;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txusrclk_in;
  wire [3:0]NLW_inst_bufgtce_out_UNCONNECTED;
  wire [11:0]NLW_inst_bufgtcemask_out_UNCONNECTED;
  wire [35:0]NLW_inst_bufgtdiv_out_UNCONNECTED;
  wire [3:0]NLW_inst_bufgtreset_out_UNCONNECTED;
  wire [11:0]NLW_inst_bufgtrstmask_out_UNCONNECTED;
  wire [3:0]NLW_inst_cpllfbclklost_out_UNCONNECTED;
  wire [3:0]NLW_inst_cplllock_out_UNCONNECTED;
  wire [3:0]NLW_inst_cpllrefclklost_out_UNCONNECTED;
  wire [63:0]NLW_inst_dmonitorout_out_UNCONNECTED;
  wire [3:0]NLW_inst_dmonitoroutclk_out_UNCONNECTED;
  wire [15:0]NLW_inst_drpdo_common_out_UNCONNECTED;
  wire [63:0]NLW_inst_drpdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_drprdy_common_out_UNCONNECTED;
  wire [3:0]NLW_inst_drprdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_eyescandataerror_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxn_out_UNCONNECTED;
  wire [0:0]NLW_inst_gthtxp_out_UNCONNECTED;
  wire [3:0]NLW_inst_gtrefclkmonitor_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED;
  wire [0:0]NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcierategen3_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcierateidle_out_UNCONNECTED;
  wire [7:0]NLW_inst_pcierateqpllpd_out_UNCONNECTED;
  wire [7:0]NLW_inst_pcierateqpllreset_out_UNCONNECTED;
  wire [3:0]NLW_inst_pciesynctxsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieusergen3rdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieuserphystatusrst_out_UNCONNECTED;
  wire [3:0]NLW_inst_pcieuserratestart_out_UNCONNECTED;
  wire [63:0]NLW_inst_pcsrsvdout_out_UNCONNECTED;
  wire [3:0]NLW_inst_phystatus_out_UNCONNECTED;
  wire [63:0]NLW_inst_pinrsrvdas_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout0_out_UNCONNECTED;
  wire [7:0]NLW_inst_pmarsvdout1_out_UNCONNECTED;
  wire [3:0]NLW_inst_powerpresent_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll0refclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1fbclklost_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1lock_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1outrefclk_out_UNCONNECTED;
  wire [0:0]NLW_inst_qpll1refclklost_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor0_out_UNCONNECTED;
  wire [7:0]NLW_inst_qplldmonitor1_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor0_out_UNCONNECTED;
  wire [0:0]NLW_inst_refclkoutmonitor1_out_UNCONNECTED;
  wire [3:0]NLW_inst_resetexception_out_UNCONNECTED;
  wire [10:0]NLW_inst_rxbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxbyteisaligned_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxbyterealign_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcdrlock_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcdrphdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanbondseq_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanisaligned_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxchanrealign_out_UNCONNECTED;
  wire [19:0]NLW_inst_rxchbondo_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxckcaldone_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxclkcorcnt_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcominitdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcommadet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcomsasdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxcomwakedet_out_UNCONNECTED;
  wire [63:0]NLW_inst_rxctrl0_out_UNCONNECTED;
  wire [63:0]NLW_inst_rxctrl1_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxctrl2_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxctrl3_out_UNCONNECTED;
  wire [511:0]NLW_inst_rxdata_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxdataextendrsvd_out_UNCONNECTED;
  wire [7:1]NLW_inst_rxdatavalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxdlysresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxelecidle_out_UNCONNECTED;
  wire [23:2]NLW_inst_rxheader_out_UNCONNECTED;
  wire [7:1]NLW_inst_rxheadervalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpstresetdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED;
  wire [31:0]NLW_inst_rxmonitorout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstarted_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstrobedone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxosintstrobestarted_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxphaligndone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxphalignerr_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprbserr_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprbslocked_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxqpisenp_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxratedone_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk0_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk0sel_out_UNCONNECTED;
  wire [0:0]NLW_inst_rxrecclk1_sel_out_UNCONNECTED;
  wire [1:0]NLW_inst_rxrecclk1sel_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxrecclkout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsliderdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslipdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslipoutclkrdy_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxslippmardy_out_UNCONNECTED;
  wire [7:0]NLW_inst_rxstartofseq_out_UNCONNECTED;
  wire [11:0]NLW_inst_rxstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxsyncout_out_UNCONNECTED;
  wire [3:0]NLW_inst_rxvalid_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm0finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm0testdata_out_UNCONNECTED;
  wire [3:0]NLW_inst_sdm1finalout_out_UNCONNECTED;
  wire [14:0]NLW_inst_sdm1testdata_out_UNCONNECTED;
  wire [0:0]NLW_inst_tcongpo_out_UNCONNECTED;
  wire [0:0]NLW_inst_tconrsvdout0_out_UNCONNECTED;
  wire [6:0]NLW_inst_txbufstatus_out_UNCONNECTED;
  wire [3:0]NLW_inst_txcomfinish_out_UNCONNECTED;
  wire [3:0]NLW_inst_txdccdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txdlysresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclk_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclkfabric_out_UNCONNECTED;
  wire [3:0]NLW_inst_txoutclkpcs_out_UNCONNECTED;
  wire [3:0]NLW_inst_txphaligndone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txphinitdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txprgdivresetdone_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenn_out_UNCONNECTED;
  wire [0:0]NLW_inst_txqpisenp_out_UNCONNECTED;
  wire [3:0]NLW_inst_txratedone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txresetdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txsyncdone_out_UNCONNECTED;
  wire [3:0]NLW_inst_txsyncout_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdaddr_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubden_out_UNCONNECTED;
  wire [15:0]NLW_inst_ubdi_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubdwe_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubmdmtdo_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubrsvdout_out_UNCONNECTED;
  wire [0:0]NLW_inst_ubtxuart_out_UNCONNECTED;

  assign dmonitorout_out[63] = \<const0> ;
  assign dmonitorout_out[62] = \<const0> ;
  assign dmonitorout_out[61] = \<const0> ;
  assign dmonitorout_out[60] = \<const0> ;
  assign dmonitorout_out[59] = \<const0> ;
  assign dmonitorout_out[58] = \<const0> ;
  assign dmonitorout_out[57] = \<const0> ;
  assign dmonitorout_out[56] = \<const0> ;
  assign dmonitorout_out[55] = \<const0> ;
  assign dmonitorout_out[54] = \<const0> ;
  assign dmonitorout_out[53] = \<const0> ;
  assign dmonitorout_out[52] = \<const0> ;
  assign dmonitorout_out[51] = \<const0> ;
  assign dmonitorout_out[50] = \<const0> ;
  assign dmonitorout_out[49] = \<const0> ;
  assign dmonitorout_out[48] = \<const0> ;
  assign dmonitorout_out[47] = \<const0> ;
  assign dmonitorout_out[46] = \<const0> ;
  assign dmonitorout_out[45] = \<const0> ;
  assign dmonitorout_out[44] = \<const0> ;
  assign dmonitorout_out[43] = \<const0> ;
  assign dmonitorout_out[42] = \<const0> ;
  assign dmonitorout_out[41] = \<const0> ;
  assign dmonitorout_out[40] = \<const0> ;
  assign dmonitorout_out[39] = \<const0> ;
  assign dmonitorout_out[38] = \<const0> ;
  assign dmonitorout_out[37] = \<const0> ;
  assign dmonitorout_out[36] = \<const0> ;
  assign dmonitorout_out[35] = \<const0> ;
  assign dmonitorout_out[34] = \<const0> ;
  assign dmonitorout_out[33] = \<const0> ;
  assign dmonitorout_out[32] = \<const0> ;
  assign dmonitorout_out[31] = \<const0> ;
  assign dmonitorout_out[30] = \<const0> ;
  assign dmonitorout_out[29] = \<const0> ;
  assign dmonitorout_out[28] = \<const0> ;
  assign dmonitorout_out[27] = \<const0> ;
  assign dmonitorout_out[26] = \<const0> ;
  assign dmonitorout_out[25] = \<const0> ;
  assign dmonitorout_out[24] = \<const0> ;
  assign dmonitorout_out[23] = \<const0> ;
  assign dmonitorout_out[22] = \<const0> ;
  assign dmonitorout_out[21] = \<const0> ;
  assign dmonitorout_out[20] = \<const0> ;
  assign dmonitorout_out[19] = \<const0> ;
  assign dmonitorout_out[18] = \<const0> ;
  assign dmonitorout_out[17] = \<const0> ;
  assign dmonitorout_out[16] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign drpdo_out[63] = \<const0> ;
  assign drpdo_out[62] = \<const0> ;
  assign drpdo_out[61] = \<const0> ;
  assign drpdo_out[60] = \<const0> ;
  assign drpdo_out[59] = \<const0> ;
  assign drpdo_out[58] = \<const0> ;
  assign drpdo_out[57] = \<const0> ;
  assign drpdo_out[56] = \<const0> ;
  assign drpdo_out[55] = \<const0> ;
  assign drpdo_out[54] = \<const0> ;
  assign drpdo_out[53] = \<const0> ;
  assign drpdo_out[52] = \<const0> ;
  assign drpdo_out[51] = \<const0> ;
  assign drpdo_out[50] = \<const0> ;
  assign drpdo_out[49] = \<const0> ;
  assign drpdo_out[48] = \<const0> ;
  assign drpdo_out[47] = \<const0> ;
  assign drpdo_out[46] = \<const0> ;
  assign drpdo_out[45] = \<const0> ;
  assign drpdo_out[44] = \<const0> ;
  assign drpdo_out[43] = \<const0> ;
  assign drpdo_out[42] = \<const0> ;
  assign drpdo_out[41] = \<const0> ;
  assign drpdo_out[40] = \<const0> ;
  assign drpdo_out[39] = \<const0> ;
  assign drpdo_out[38] = \<const0> ;
  assign drpdo_out[37] = \<const0> ;
  assign drpdo_out[36] = \<const0> ;
  assign drpdo_out[35] = \<const0> ;
  assign drpdo_out[34] = \<const0> ;
  assign drpdo_out[33] = \<const0> ;
  assign drpdo_out[32] = \<const0> ;
  assign drpdo_out[31] = \<const0> ;
  assign drpdo_out[30] = \<const0> ;
  assign drpdo_out[29] = \<const0> ;
  assign drpdo_out[28] = \<const0> ;
  assign drpdo_out[27] = \<const0> ;
  assign drpdo_out[26] = \<const0> ;
  assign drpdo_out[25] = \<const0> ;
  assign drpdo_out[24] = \<const0> ;
  assign drpdo_out[23] = \<const0> ;
  assign drpdo_out[22] = \<const0> ;
  assign drpdo_out[21] = \<const0> ;
  assign drpdo_out[20] = \<const0> ;
  assign drpdo_out[19] = \<const0> ;
  assign drpdo_out[18] = \<const0> ;
  assign drpdo_out[17] = \<const0> ;
  assign drpdo_out[16] = \<const0> ;
  assign drpdo_out[15] = \<const0> ;
  assign drpdo_out[14] = \<const0> ;
  assign drpdo_out[13] = \<const0> ;
  assign drpdo_out[12] = \<const0> ;
  assign drpdo_out[11] = \<const0> ;
  assign drpdo_out[10] = \<const0> ;
  assign drpdo_out[9] = \<const0> ;
  assign drpdo_out[8] = \<const0> ;
  assign drpdo_out[7] = \<const0> ;
  assign drpdo_out[6] = \<const0> ;
  assign drpdo_out[5] = \<const0> ;
  assign drpdo_out[4] = \<const0> ;
  assign drpdo_out[3] = \<const0> ;
  assign drpdo_out[2] = \<const0> ;
  assign drpdo_out[1] = \<const0> ;
  assign drpdo_out[0] = \<const0> ;
  assign drprdy_out[3] = \<const0> ;
  assign drprdy_out[2] = \<const0> ;
  assign drprdy_out[1] = \<const0> ;
  assign drprdy_out[0] = \<const0> ;
  assign eyescandataerror_out[3] = \<const0> ;
  assign eyescandataerror_out[2] = \<const0> ;
  assign eyescandataerror_out[1] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign rxbufstatus_out[11] = \^rxbufstatus_out [11];
  assign rxbufstatus_out[10] = \<const0> ;
  assign rxbufstatus_out[9] = \<const0> ;
  assign rxbufstatus_out[8] = \^rxbufstatus_out [8];
  assign rxbufstatus_out[7] = \<const0> ;
  assign rxbufstatus_out[6] = \<const0> ;
  assign rxbufstatus_out[5] = \^rxbufstatus_out [5];
  assign rxbufstatus_out[4] = \<const0> ;
  assign rxbufstatus_out[3] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxdatavalid_out[7] = \<const0> ;
  assign rxdatavalid_out[6] = \^rxdatavalid_out [6];
  assign rxdatavalid_out[5] = \<const0> ;
  assign rxdatavalid_out[4] = \^rxdatavalid_out [4];
  assign rxdatavalid_out[3] = \<const0> ;
  assign rxdatavalid_out[2] = \^rxdatavalid_out [2];
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxheader_out[23] = \<const0> ;
  assign rxheader_out[22] = \<const0> ;
  assign rxheader_out[21] = \<const0> ;
  assign rxheader_out[20] = \<const0> ;
  assign rxheader_out[19:18] = \^rxheader_out [19:18];
  assign rxheader_out[17] = \<const0> ;
  assign rxheader_out[16] = \<const0> ;
  assign rxheader_out[15] = \<const0> ;
  assign rxheader_out[14] = \<const0> ;
  assign rxheader_out[13:12] = \^rxheader_out [13:12];
  assign rxheader_out[11] = \<const0> ;
  assign rxheader_out[10] = \<const0> ;
  assign rxheader_out[9] = \<const0> ;
  assign rxheader_out[8] = \<const0> ;
  assign rxheader_out[7:6] = \^rxheader_out [7:6];
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[7] = \<const0> ;
  assign rxheadervalid_out[6] = \^rxheadervalid_out [6];
  assign rxheadervalid_out[5] = \<const0> ;
  assign rxheadervalid_out[4] = \^rxheadervalid_out [4];
  assign rxheadervalid_out[3] = \<const0> ;
  assign rxheadervalid_out[2] = \^rxheadervalid_out [2];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxoutclk_out[3] = \<const0> ;
  assign rxoutclk_out[2] = \^rxoutclk_out [2];
  assign rxoutclk_out[1] = \<const0> ;
  assign rxoutclk_out[0] = \<const0> ;
  assign rxprbserr_out[3] = \<const0> ;
  assign rxprbserr_out[2] = \<const0> ;
  assign rxprbserr_out[1] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxresetdone_out[3] = \<const0> ;
  assign rxresetdone_out[2] = \<const0> ;
  assign rxresetdone_out[1] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxstartofseq_out[7] = \<const0> ;
  assign rxstartofseq_out[6] = \<const0> ;
  assign rxstartofseq_out[5] = \<const0> ;
  assign rxstartofseq_out[4] = \<const0> ;
  assign rxstartofseq_out[3] = \<const0> ;
  assign rxstartofseq_out[2] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign txbufstatus_out[7] = \^txbufstatus_out [7];
  assign txbufstatus_out[6] = \<const0> ;
  assign txbufstatus_out[5] = \^txbufstatus_out [5];
  assign txbufstatus_out[4] = \<const0> ;
  assign txbufstatus_out[3] = \^txbufstatus_out [3];
  assign txbufstatus_out[2] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txoutclk_out[3] = \<const0> ;
  assign txoutclk_out[2] = \^txoutclk_out [2];
  assign txoutclk_out[1] = \<const0> ;
  assign txoutclk_out[0] = \<const0> ;
  assign txoutclkfabric_out[3] = \<const0> ;
  assign txoutclkfabric_out[2] = \<const0> ;
  assign txoutclkfabric_out[1] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[3] = \<const0> ;
  assign txoutclkpcs_out[2] = \<const0> ;
  assign txoutclkpcs_out[1] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txresetdone_out[3] = \<const0> ;
  assign txresetdone_out[2] = \<const0> ;
  assign txresetdone_out[1] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000" *) 
  (* C_COMMON_SCALING_FACTOR = "1" *) 
  (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
  (* C_ENABLE_COMMON_USRCLK = "0" *) 
  (* C_FORCE_COMMONS = "0" *) 
  (* C_FREERUN_FREQUENCY = "100.000000" *) 
  (* C_GT_REV = "67" *) 
  (* C_GT_TYPE = "3" *) 
  (* C_INCLUDE_CPLL_CAL = "2" *) 
  (* C_LOCATE_COMMON = "1" *) 
  (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) 
  (* C_LOCATE_RESET_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_RX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
  (* C_LOCATE_TX_USER_CLOCKING = "1" *) 
  (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) 
  (* C_PCIE_CORECLK_FREQ = "250" *) 
  (* C_PCIE_ENABLE = "0" *) 
  (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) 
  (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
  (* C_RX_BUFFBYPASS_MODE = "0" *) 
  (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_RX_BUFFER_MODE = "1" *) 
  (* C_RX_CB_DISP = "8'b00000000" *) 
  (* C_RX_CB_K = "8'b00000000" *) 
  (* C_RX_CB_LEN_SEQ = "1" *) 
  (* C_RX_CB_MAX_LEVEL = "2" *) 
  (* C_RX_CB_NUM_SEQ = "0" *) 
  (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_CC_DISP = "8'b00000000" *) 
  (* C_RX_CC_ENABLE = "0" *) 
  (* C_RX_CC_K = "8'b00000000" *) 
  (* C_RX_CC_LEN_SEQ = "1" *) 
  (* C_RX_CC_NUM_SEQ = "0" *) 
  (* C_RX_CC_PERIODICITY = "5000" *) 
  (* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_COMMA_M_ENABLE = "0" *) 
  (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
  (* C_RX_COMMA_P_ENABLE = "0" *) 
  (* C_RX_COMMA_P_VAL = "10'b0101111100" *) 
  (* C_RX_DATA_DECODING = "2" *) 
  (* C_RX_ENABLE = "1" *) 
  (* C_RX_INT_DATA_WIDTH = "64" *) 
  (* C_RX_LINE_RATE = "25.781250" *) 
  (* C_RX_MASTER_CHANNEL_IDX = "13" *) 
  (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_RX_OUTCLK_FREQUENCY = "402.832031" *) 
  (* C_RX_OUTCLK_SOURCE = "1" *) 
  (* C_RX_PLL_TYPE = "0" *) 
  (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
  (* C_RX_REFCLK_FREQUENCY = "322.265625" *) 
  (* C_RX_SLIDE_MODE = "0" *) 
  (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_RX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_RX_USER_DATA_WIDTH = "64" *) 
  (* C_RX_USRCLK2_FREQUENCY = "402.832031" *) 
  (* C_RX_USRCLK_FREQUENCY = "402.832031" *) 
  (* C_SECONDARY_QPLL_ENABLE = "0" *) 
  (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
  (* C_SIM_CPLL_CAL_BYPASS = "1" *) 
  (* C_TOTAL_NUM_CHANNELS = "4" *) 
  (* C_TOTAL_NUM_COMMONS = "0" *) 
  (* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) 
  (* C_TXPROGDIV_FREQ_ENABLE = "0" *) 
  (* C_TXPROGDIV_FREQ_SOURCE = "0" *) 
  (* C_TXPROGDIV_FREQ_VAL = "402.832031" *) 
  (* C_TX_BUFFBYPASS_MODE = "0" *) 
  (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
  (* C_TX_BUFFER_MODE = "1" *) 
  (* C_TX_DATA_ENCODING = "2" *) 
  (* C_TX_ENABLE = "1" *) 
  (* C_TX_INT_DATA_WIDTH = "64" *) 
  (* C_TX_LINE_RATE = "25.781250" *) 
  (* C_TX_MASTER_CHANNEL_IDX = "13" *) 
  (* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) 
  (* C_TX_OUTCLK_FREQUENCY = "402.832031" *) 
  (* C_TX_OUTCLK_SOURCE = "1" *) 
  (* C_TX_PLL_TYPE = "0" *) 
  (* C_TX_REFCLK_FREQUENCY = "322.265625" *) 
  (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
  (* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) 
  (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) 
  (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
  (* C_TX_USER_CLOCKING_SOURCE = "0" *) 
  (* C_TX_USER_DATA_WIDTH = "64" *) 
  (* C_TX_USRCLK2_FREQUENCY = "402.832031" *) 
  (* C_TX_USRCLK_FREQUENCY = "402.832031" *) 
  (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
  board_aurora_64b66b_0_2_gt_gtwizard_top inst
       (.bgbypassb_in(1'b1),
        .bgmonitorenb_in(1'b1),
        .bgpdb_in(1'b1),
        .bgrcalovrd_in({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .bgrcalovrdenb_in(1'b1),
        .bufgtce_out(NLW_inst_bufgtce_out_UNCONNECTED[3:0]),
        .bufgtcemask_out(NLW_inst_bufgtcemask_out_UNCONNECTED[11:0]),
        .bufgtdiv_out(NLW_inst_bufgtdiv_out_UNCONNECTED[35:0]),
        .bufgtreset_out(NLW_inst_bufgtreset_out_UNCONNECTED[3:0]),
        .bufgtrstmask_out(NLW_inst_bufgtrstmask_out_UNCONNECTED[11:0]),
        .cdrstepdir_in({1'b0,1'b0,1'b0,1'b0}),
        .cdrstepsq_in({1'b0,1'b0,1'b0,1'b0}),
        .cdrstepsx_in({1'b0,1'b0,1'b0,1'b0}),
        .cfgreset_in({1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd0_in({1'b0,1'b0,1'b0,1'b0}),
        .clkrsvd1_in({1'b0,1'b0,1'b0,1'b0}),
        .cpllfbclklost_out(NLW_inst_cpllfbclklost_out_UNCONNECTED[3:0]),
        .cpllfreqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .cplllock_out(NLW_inst_cplllock_out_UNCONNECTED[3:0]),
        .cplllockdetclk_in({1'b0,1'b0,1'b0,1'b0}),
        .cplllocken_in({1'b0,1'b0,1'b0,1'b0}),
        .cpllpd_in({1'b1,1'b1,1'b1,1'b1}),
        .cpllrefclklost_out(NLW_inst_cpllrefclklost_out_UNCONNECTED[3:0]),
        .cpllrefclksel_in({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1}),
        .cpllreset_in({1'b1,1'b1,1'b1,1'b1}),
        .dmonfiforeset_in({1'b0,1'b0,1'b0,1'b0}),
        .dmonitorclk_in({1'b0,1'b0,1'b0,1'b0}),
        .dmonitorout_out(NLW_inst_dmonitorout_out_UNCONNECTED[63:0]),
        .dmonitoroutclk_out(NLW_inst_dmonitoroutclk_out_UNCONNECTED[3:0]),
        .drpaddr_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpaddr_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpclk_common_in(1'b0),
        .drpclk_in({1'b0,1'b0,1'b0,drpclk_in[0]}),
        .drpdi_common_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .drpdo_common_out(NLW_inst_drpdo_common_out_UNCONNECTED[15:0]),
        .drpdo_out(NLW_inst_drpdo_out_UNCONNECTED[63:0]),
        .drpen_common_in(1'b0),
        .drpen_in({1'b0,1'b0,1'b0,1'b0}),
        .drprdy_common_out(NLW_inst_drprdy_common_out_UNCONNECTED[0]),
        .drprdy_out(NLW_inst_drprdy_out_UNCONNECTED[3:0]),
        .drprst_in({1'b0,1'b0,1'b0,1'b0}),
        .drpwe_common_in(1'b0),
        .drpwe_in({1'b0,1'b0,1'b0,1'b0}),
        .elpcaldvorwren_in(1'b0),
        .elpcalpaorwren_in(1'b0),
        .evoddphicaldone_in(1'b0),
        .evoddphicalstart_in(1'b0),
        .evoddphidrden_in(1'b0),
        .evoddphidwren_in(1'b0),
        .evoddphixrden_in(1'b0),
        .evoddphixwren_in(1'b0),
        .eyescandataerror_out(NLW_inst_eyescandataerror_out_UNCONNECTED[3:0]),
        .eyescanmode_in(1'b0),
        .eyescanreset_in({1'b0,1'b0,1'b0,1'b0}),
        .eyescantrigger_in({1'b0,1'b0,1'b0,1'b0}),
        .freqos_in({1'b0,1'b0,1'b0,1'b0}),
        .gtgrefclk0_in(1'b0),
        .gtgrefclk1_in(1'b0),
        .gtgrefclk_in({1'b0,1'b0,1'b0,1'b0}),
        .gthrxn_in(1'b0),
        .gthrxp_in(1'b0),
        .gthtxn_out(NLW_inst_gthtxn_out_UNCONNECTED[0]),
        .gthtxp_out(NLW_inst_gthtxp_out_UNCONNECTED[0]),
        .gtnorthrefclk00_in(1'b0),
        .gtnorthrefclk01_in(1'b0),
        .gtnorthrefclk0_in({1'b0,1'b0,1'b0,1'b0}),
        .gtnorthrefclk10_in(1'b0),
        .gtnorthrefclk11_in(1'b0),
        .gtnorthrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk00_in(1'b0),
        .gtrefclk01_in(1'b0),
        .gtrefclk0_in({1'b0,1'b0,1'b0,gtrefclk0_in[0]}),
        .gtrefclk10_in(1'b0),
        .gtrefclk11_in(1'b0),
        .gtrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gtrefclkmonitor_out(NLW_inst_gtrefclkmonitor_out_UNCONNECTED[3:0]),
        .gtresetsel_in(1'b0),
        .gtrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtrxreset_in({1'b0,1'b0,1'b0,1'b0}),
        .gtrxresetsel_in({1'b0,1'b0,1'b0,1'b0}),
        .gtsouthrefclk00_in(1'b0),
        .gtsouthrefclk01_in(1'b0),
        .gtsouthrefclk0_in({1'b0,1'b0,1'b0,1'b0}),
        .gtsouthrefclk10_in(1'b0),
        .gtsouthrefclk11_in(1'b0),
        .gtsouthrefclk1_in({1'b0,1'b0,1'b0,1'b0}),
        .gttxreset_in({1'b0,1'b0,1'b0,1'b0}),
        .gttxresetsel_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_buffbypass_rx_done_out(NLW_inst_gtwiz_buffbypass_rx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_error_out(NLW_inst_gtwiz_buffbypass_rx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_rx_reset_in(1'b0),
        .gtwiz_buffbypass_rx_start_user_in(1'b0),
        .gtwiz_buffbypass_tx_done_out(NLW_inst_gtwiz_buffbypass_tx_done_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_error_out(NLW_inst_gtwiz_buffbypass_tx_error_out_UNCONNECTED[0]),
        .gtwiz_buffbypass_tx_reset_in(1'b0),
        .gtwiz_buffbypass_tx_start_user_in(1'b0),
        .gtwiz_gthe3_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe3_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gthe4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_bufg_ce_in({1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_cnt_tol_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_gtye4_cpll_cal_txoutclk_period_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .gtwiz_reset_all_in(1'b0),
        .gtwiz_reset_clk_freerun_in(1'b0),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_qpll1lock_in(1'b0),
        .gtwiz_reset_qpll1reset_out(NLW_inst_gtwiz_reset_qpll1reset_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_cdr_stable_out(NLW_inst_gtwiz_reset_rx_cdr_stable_out_UNCONNECTED[0]),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_in(1'b0),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_datapath_in(1'b0),
        .gtwiz_reset_tx_done_in(1'b0),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_reset_tx_pll_and_datapath_in(1'b0),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_rx_active_out(NLW_inst_gtwiz_userclk_rx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_reset_in(1'b0),
        .gtwiz_userclk_rx_srcclk_out(NLW_inst_gtwiz_userclk_rx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk2_out(NLW_inst_gtwiz_userclk_rx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_rx_usrclk_out(NLW_inst_gtwiz_userclk_rx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userclk_tx_active_out(NLW_inst_gtwiz_userclk_tx_active_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_reset_in(1'b0),
        .gtwiz_userclk_tx_srcclk_out(NLW_inst_gtwiz_userclk_tx_srcclk_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk2_out(NLW_inst_gtwiz_userclk_tx_usrclk2_out_UNCONNECTED[0]),
        .gtwiz_userclk_tx_usrclk_out(NLW_inst_gtwiz_userclk_tx_usrclk_out_UNCONNECTED[0]),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .incpctrl_in({1'b0,1'b0,1'b0,1'b0}),
        .loopback_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,loopback_in[2:0]}),
        .looprsvd_in(1'b0),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .lpbkrxtxseren_in(1'b0),
        .lpbktxrxseren_in(1'b0),
        .pcieeqrxeqadaptdone_in({1'b0,1'b0,1'b0,1'b0}),
        .pcierategen3_out(NLW_inst_pcierategen3_out_UNCONNECTED[3:0]),
        .pcierateidle_out(NLW_inst_pcierateidle_out_UNCONNECTED[3:0]),
        .pcierateqpll0_in({1'b0,1'b0,1'b0}),
        .pcierateqpll1_in({1'b0,1'b0,1'b0}),
        .pcierateqpllpd_out(NLW_inst_pcierateqpllpd_out_UNCONNECTED[7:0]),
        .pcierateqpllreset_out(NLW_inst_pcierateqpllreset_out_UNCONNECTED[7:0]),
        .pcierstidle_in({1'b0,1'b0,1'b0,1'b0}),
        .pciersttxsyncstart_in({1'b0,1'b0,1'b0,1'b0}),
        .pciesynctxsyncdone_out(NLW_inst_pciesynctxsyncdone_out_UNCONNECTED[3:0]),
        .pcieusergen3rdy_out(NLW_inst_pcieusergen3rdy_out_UNCONNECTED[3:0]),
        .pcieuserphystatusrst_out(NLW_inst_pcieuserphystatusrst_out_UNCONNECTED[3:0]),
        .pcieuserratedone_in({1'b0,1'b0,1'b0,1'b0}),
        .pcieuserratestart_out(NLW_inst_pcieuserratestart_out_UNCONNECTED[3:0]),
        .pcsrsvdin2_in(1'b0),
        .pcsrsvdin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pcsrsvdout_out(NLW_inst_pcsrsvdout_out_UNCONNECTED[63:0]),
        .phystatus_out(NLW_inst_phystatus_out_UNCONNECTED[3:0]),
        .pinrsrvdas_out(NLW_inst_pinrsrvdas_out_UNCONNECTED[63:0]),
        .pmarsvd0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .pmarsvdin_in(1'b0),
        .pmarsvdout0_out(NLW_inst_pmarsvdout0_out_UNCONNECTED[7:0]),
        .pmarsvdout1_out(NLW_inst_pmarsvdout1_out_UNCONNECTED[7:0]),
        .powerpresent_out(NLW_inst_powerpresent_out_UNCONNECTED[3:0]),
        .qpll0clk_in({1'b0,1'b0,1'b0,qpll0clk_in[0]}),
        .qpll0clkrsvd0_in(1'b0),
        .qpll0clkrsvd1_in(1'b0),
        .qpll0fbclklost_out(NLW_inst_qpll0fbclklost_out_UNCONNECTED[0]),
        .qpll0fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll0freqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll0lock_out(NLW_inst_qpll0lock_out_UNCONNECTED[0]),
        .qpll0lockdetclk_in(1'b0),
        .qpll0locken_in(1'b1),
        .qpll0outclk_out(NLW_inst_qpll0outclk_out_UNCONNECTED[0]),
        .qpll0outrefclk_out(NLW_inst_qpll0outrefclk_out_UNCONNECTED[0]),
        .qpll0pd_in(1'b0),
        .qpll0refclk_in({1'b0,1'b0,1'b0,qpll0refclk_in[0]}),
        .qpll0refclklost_out(NLW_inst_qpll0refclklost_out_UNCONNECTED[0]),
        .qpll0refclksel_in({1'b0,1'b0,1'b1}),
        .qpll0reset_in(1'b0),
        .qpll1clk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1clkrsvd0_in(1'b0),
        .qpll1clkrsvd1_in(1'b0),
        .qpll1fbclklost_out(NLW_inst_qpll1fbclklost_out_UNCONNECTED[0]),
        .qpll1fbdiv_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpll1freqlock_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1lock_out(NLW_inst_qpll1lock_out_UNCONNECTED[0]),
        .qpll1lockdetclk_in(1'b0),
        .qpll1locken_in(1'b0),
        .qpll1outclk_out(NLW_inst_qpll1outclk_out_UNCONNECTED[0]),
        .qpll1outrefclk_out(NLW_inst_qpll1outrefclk_out_UNCONNECTED[0]),
        .qpll1pd_in(1'b1),
        .qpll1refclk_in({1'b0,1'b0,1'b0,1'b0}),
        .qpll1refclklost_out(NLW_inst_qpll1refclklost_out_UNCONNECTED[0]),
        .qpll1refclksel_in({1'b0,1'b0,1'b1}),
        .qpll1reset_in(1'b1),
        .qplldmonitor0_out(NLW_inst_qplldmonitor0_out_UNCONNECTED[7:0]),
        .qplldmonitor1_out(NLW_inst_qplldmonitor1_out_UNCONNECTED[7:0]),
        .qpllrsvd1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd2_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd3_in({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .qpllrsvd4_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rcalenb_in(1'b1),
        .refclkoutmonitor0_out(NLW_inst_refclkoutmonitor0_out_UNCONNECTED[0]),
        .refclkoutmonitor1_out(NLW_inst_refclkoutmonitor1_out_UNCONNECTED[0]),
        .resetexception_out(NLW_inst_resetexception_out_UNCONNECTED[3:0]),
        .resetovrd_in({1'b0,1'b0,1'b0,1'b0}),
        .rstclkentx_in(1'b0),
        .rx8b10ben_in({1'b0,1'b0,1'b0,1'b0}),
        .rxafecfoken_in({1'b1,1'b1,1'b1,1'b1}),
        .rxbufreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxbufstatus_out({\^rxbufstatus_out ,NLW_inst_rxbufstatus_out_UNCONNECTED[1:0]}),
        .rxbyteisaligned_out(NLW_inst_rxbyteisaligned_out_UNCONNECTED[3:0]),
        .rxbyterealign_out(NLW_inst_rxbyterealign_out_UNCONNECTED[3:0]),
        .rxcdrfreqreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrlock_out(NLW_inst_rxcdrlock_out_UNCONNECTED[3:0]),
        .rxcdrovrden_in({1'b0,1'b0,1'b0,rxcdrovrden_in[0]}),
        .rxcdrphdone_out(NLW_inst_rxcdrphdone_out_UNCONNECTED[3:0]),
        .rxcdrreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcdrresetrsv_in(1'b0),
        .rxchanbondseq_out(NLW_inst_rxchanbondseq_out_UNCONNECTED[3:0]),
        .rxchanisaligned_out(NLW_inst_rxchanisaligned_out_UNCONNECTED[3:0]),
        .rxchanrealign_out(NLW_inst_rxchanrealign_out_UNCONNECTED[3:0]),
        .rxchbonden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxchbondi_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondlevel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxchbondmaster_in({1'b0,1'b0,1'b0,1'b0}),
        .rxchbondo_out(NLW_inst_rxchbondo_out_UNCONNECTED[19:0]),
        .rxchbondslave_in({1'b0,1'b0,1'b0,1'b0}),
        .rxckcaldone_out(NLW_inst_rxckcaldone_out_UNCONNECTED[3:0]),
        .rxckcalreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxckcalstart_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxclkcorcnt_out(NLW_inst_rxclkcorcnt_out_UNCONNECTED[7:0]),
        .rxcominitdet_out(NLW_inst_rxcominitdet_out_UNCONNECTED[3:0]),
        .rxcommadet_out(NLW_inst_rxcommadet_out_UNCONNECTED[3:0]),
        .rxcommadeten_in({1'b0,1'b0,1'b0,1'b0}),
        .rxcomsasdet_out(NLW_inst_rxcomsasdet_out_UNCONNECTED[3:0]),
        .rxcomwakedet_out(NLW_inst_rxcomwakedet_out_UNCONNECTED[3:0]),
        .rxctrl0_out(NLW_inst_rxctrl0_out_UNCONNECTED[63:0]),
        .rxctrl1_out(NLW_inst_rxctrl1_out_UNCONNECTED[63:0]),
        .rxctrl2_out(NLW_inst_rxctrl2_out_UNCONNECTED[31:0]),
        .rxctrl3_out(NLW_inst_rxctrl3_out_UNCONNECTED[31:0]),
        .rxdata_out(NLW_inst_rxdata_out_UNCONNECTED[511:0]),
        .rxdataextendrsvd_out(NLW_inst_rxdataextendrsvd_out_UNCONNECTED[31:0]),
        .rxdatavalid_out({NLW_inst_rxdatavalid_out_UNCONNECTED[7],\^rxdatavalid_out }),
        .rxdccforcestart_in(1'b0),
        .rxdfeagcctrl_in(1'b0),
        .rxdfeagchold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeagcovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokfcnum_in({1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1}),
        .rxdfecfokfen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokfpulse_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfecfokovren_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfekhhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfekhovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelfovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfelpmreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap10ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap11ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap12ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap13ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap14ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap15ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap2ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap3ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap4ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap5ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap6ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap7ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap8ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9hold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfetap9ovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeuthold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfeutovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevphold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevpovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdfevsen_in(1'b0),
        .rxdfexyden_in({1'b1,1'b1,1'b1,1'b1}),
        .rxdlybypass_in({1'b1,1'b1,1'b1,1'b1}),
        .rxdlyen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlyovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlysreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxdlysresetdone_out(NLW_inst_rxdlysresetdone_out_UNCONNECTED[3:0]),
        .rxelecidle_out(NLW_inst_rxelecidle_out_UNCONNECTED[3:0]),
        .rxelecidlemode_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxeqtraining_in({1'b0,1'b0,1'b0,1'b0}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({NLW_inst_rxheader_out_UNCONNECTED[23:20],\^rxheader_out }),
        .rxheadervalid_out({NLW_inst_rxheadervalid_out_UNCONNECTED[7],\^rxheadervalid_out }),
        .rxlatclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlfpstresetdet_out(NLW_inst_rxlfpstresetdet_out_UNCONNECTED[3:0]),
        .rxlfpsu2lpexitdet_out(NLW_inst_rxlfpsu2lpexitdet_out_UNCONNECTED[3:0]),
        .rxlfpsu3wakedet_out(NLW_inst_rxlfpsu3wakedet_out_UNCONNECTED[3:0]),
        .rxlpmen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmgchold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmgcovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmhfovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfhold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmlfklovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmoshold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxlpmosovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxmcommaalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxmonitorout_out(NLW_inst_rxmonitorout_out_UNCONNECTED[31:0]),
        .rxmonitorsel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxoobreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoscalreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoshold_in({1'b0,1'b0,1'b0,1'b0}),
        .rxosintcfg_in(1'b0),
        .rxosintdone_out(NLW_inst_rxosintdone_out_UNCONNECTED[3:0]),
        .rxosinten_in(1'b0),
        .rxosinthold_in(1'b0),
        .rxosintovrden_in(1'b0),
        .rxosintstarted_out(NLW_inst_rxosintstarted_out_UNCONNECTED[3:0]),
        .rxosintstrobe_in(1'b0),
        .rxosintstrobedone_out(NLW_inst_rxosintstrobedone_out_UNCONNECTED[3:0]),
        .rxosintstrobestarted_out(NLW_inst_rxosintstrobestarted_out_UNCONNECTED[3:0]),
        .rxosinttestovrden_in(1'b0),
        .rxosovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .rxoutclk_out({NLW_inst_rxoutclk_out_UNCONNECTED[3],\^rxoutclk_out ,NLW_inst_rxoutclk_out_UNCONNECTED[1:0]}),
        .rxoutclkfabric_out(NLW_inst_rxoutclkfabric_out_UNCONNECTED[3:0]),
        .rxoutclkpcs_out(NLW_inst_rxoutclkpcs_out_UNCONNECTED[3:0]),
        .rxoutclksel_in({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .rxpcommaalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxphalign_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphaligndone_out(NLW_inst_rxphaligndone_out_UNCONNECTED[3:0]),
        .rxphalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphalignerr_out(NLW_inst_rxphalignerr_out_UNCONNECTED[3:0]),
        .rxphdlypd_in({1'b1,1'b1,1'b1,1'b1}),
        .rxphdlyreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxphovrden_in(1'b0),
        .rxpllclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .rxpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxprbscntreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxprbserr_out(NLW_inst_rxprbserr_out_UNCONNECTED[3:0]),
        .rxprbslocked_out(NLW_inst_rxprbslocked_out_UNCONNECTED[3:0]),
        .rxprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxprgdivresetdone_out(NLW_inst_rxprgdivresetdone_out_UNCONNECTED[3:0]),
        .rxprogdivreset_in({1'b0,1'b0,1'b0,1'b0}),
        .rxqpien_in(1'b0),
        .rxqpisenn_out(NLW_inst_rxqpisenn_out_UNCONNECTED[0]),
        .rxqpisenp_out(NLW_inst_rxqpisenp_out_UNCONNECTED[0]),
        .rxrate_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rxratedone_out(NLW_inst_rxratedone_out_UNCONNECTED[3:0]),
        .rxratemode_in({1'b0,1'b0,1'b0,1'b0}),
        .rxrecclk0_sel_out(NLW_inst_rxrecclk0_sel_out_UNCONNECTED[0]),
        .rxrecclk0sel_out(NLW_inst_rxrecclk0sel_out_UNCONNECTED[1:0]),
        .rxrecclk1_sel_out(NLW_inst_rxrecclk1_sel_out_UNCONNECTED[0]),
        .rxrecclk1sel_out(NLW_inst_rxrecclk1sel_out_UNCONNECTED[1:0]),
        .rxrecclkout_out(NLW_inst_rxrecclkout_out_UNCONNECTED[3:0]),
        .rxresetdone_out(NLW_inst_rxresetdone_out_UNCONNECTED[3:0]),
        .rxslide_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsliderdy_out(NLW_inst_rxsliderdy_out_UNCONNECTED[3:0]),
        .rxslipdone_out(NLW_inst_rxslipdone_out_UNCONNECTED[3:0]),
        .rxslipoutclk_in({1'b0,1'b0,1'b0,1'b0}),
        .rxslipoutclkrdy_out(NLW_inst_rxslipoutclkrdy_out_UNCONNECTED[3:0]),
        .rxslippma_in({1'b0,1'b0,1'b0,1'b0}),
        .rxslippmardy_out(NLW_inst_rxslippmardy_out_UNCONNECTED[3:0]),
        .rxstartofseq_out(NLW_inst_rxstartofseq_out_UNCONNECTED[7:0]),
        .rxstatus_out(NLW_inst_rxstatus_out_UNCONNECTED[11:0]),
        .rxsyncallin_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncdone_out(NLW_inst_rxsyncdone_out_UNCONNECTED[3:0]),
        .rxsyncin_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncmode_in({1'b0,1'b0,1'b0,1'b0}),
        .rxsyncout_out(NLW_inst_rxsyncout_out_UNCONNECTED[3:0]),
        .rxsysclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .rxtermination_in({1'b0,1'b0,1'b0,1'b0}),
        .rxuserrdy_in({1'b1,1'b1,1'b1,1'b1}),
        .rxusrclk2_in({1'b0,1'b0,1'b0,rxusrclk2_in[0]}),
        .rxusrclk_in({1'b0,1'b0,1'b0,rxusrclk_in[0]}),
        .rxvalid_out(NLW_inst_rxvalid_out_UNCONNECTED[3:0]),
        .sdm0data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm0finalout_out(NLW_inst_sdm0finalout_out_UNCONNECTED[3:0]),
        .sdm0reset_in(1'b0),
        .sdm0testdata_out(NLW_inst_sdm0testdata_out_UNCONNECTED[14:0]),
        .sdm0toggle_in(1'b0),
        .sdm0width_in({1'b0,1'b0}),
        .sdm1data_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .sdm1finalout_out(NLW_inst_sdm1finalout_out_UNCONNECTED[3:0]),
        .sdm1reset_in(1'b0),
        .sdm1testdata_out(NLW_inst_sdm1testdata_out_UNCONNECTED[14:0]),
        .sdm1toggle_in(1'b0),
        .sdm1width_in({1'b0,1'b0}),
        .sigvalidclk_in({1'b0,1'b0,1'b0,1'b0}),
        .tcongpi_in(1'b0),
        .tcongpo_out(NLW_inst_tcongpo_out_UNCONNECTED[0]),
        .tconpowerup_in(1'b0),
        .tconreset_in(1'b0),
        .tconrsvdin1_in(1'b0),
        .tconrsvdout0_out(NLW_inst_tconrsvdout0_out_UNCONNECTED[0]),
        .tstin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10bbypass_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .tx8b10ben_in({1'b0,1'b0,1'b0,1'b0}),
        .txbufdiffctrl_in(1'b0),
        .txbufstatus_out({\^txbufstatus_out ,NLW_inst_txbufstatus_out_UNCONNECTED[0]}),
        .txcomfinish_out(NLW_inst_txcomfinish_out_UNCONNECTED[3:0]),
        .txcominit_in({1'b0,1'b0,1'b0,1'b0}),
        .txcomsas_in({1'b0,1'b0,1'b0,1'b0}),
        .txcomwake_in({1'b0,1'b0,1'b0,1'b0}),
        .txctrl0_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl1_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txctrl2_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdata_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdataextendrsvd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdccdone_out(NLW_inst_txdccdone_out_UNCONNECTED[3:0]),
        .txdccforcestart_in({1'b0,1'b0,1'b0,1'b0}),
        .txdccreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txdeemph_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txdetectrx_in({1'b0,1'b0,1'b0,1'b0}),
        .txdiffctrl_in({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0}),
        .txdiffpd_in(1'b0),
        .txdlybypass_in({1'b1,1'b1,1'b1,1'b1}),
        .txdlyen_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlyhold_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlyovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlysreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txdlysresetdone_out(NLW_inst_txdlysresetdone_out_UNCONNECTED[3:0]),
        .txdlyupdown_in({1'b0,1'b0,1'b0,1'b0}),
        .txelecidle_in({1'b0,1'b0,1'b0,1'b0}),
        .txelforcestart_in(1'b0),
        .txheader_in({1'b0,1'b0,1'b0,1'b0,txheader_in[19:18],1'b0,1'b0,1'b0,1'b0,txheader_in[13:12],1'b0,1'b0,1'b0,1'b0,txheader_in[7:6],1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .txinhibit_in({1'b0,1'b0,1'b0,1'b0}),
        .txlatclk_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpstreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpsu2lpexit_in({1'b0,1'b0,1'b0,1'b0}),
        .txlfpsu3wake_in({1'b0,1'b0,1'b0,1'b0}),
        .txmaincursor_in({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .txmargin_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txmuxdcdexhold_in({1'b0,1'b0,1'b0,1'b0}),
        .txmuxdcdorwren_in({1'b0,1'b0,1'b0,1'b0}),
        .txoneszeros_in({1'b0,1'b0,1'b0,1'b0}),
        .txoutclk_out({NLW_inst_txoutclk_out_UNCONNECTED[3],\^txoutclk_out ,NLW_inst_txoutclk_out_UNCONNECTED[1:0]}),
        .txoutclkfabric_out(NLW_inst_txoutclkfabric_out_UNCONNECTED[3:0]),
        .txoutclkpcs_out(NLW_inst_txoutclkpcs_out_UNCONNECTED[3:0]),
        .txoutclksel_in({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0}),
        .txpcsreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpd_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpdelecidlemode_in({1'b0,1'b0,1'b0,1'b0}),
        .txphalign_in({1'b0,1'b0,1'b0,1'b0}),
        .txphaligndone_out(NLW_inst_txphaligndone_out_UNCONNECTED[3:0]),
        .txphalignen_in({1'b0,1'b0,1'b0,1'b0}),
        .txphdlypd_in({1'b1,1'b1,1'b1,1'b1}),
        .txphdlyreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txphdlytstclk_in({1'b0,1'b0,1'b0,1'b0}),
        .txphinit_in({1'b0,1'b0,1'b0,1'b0}),
        .txphinitdone_out(NLW_inst_txphinitdone_out_UNCONNECTED[3:0]),
        .txphovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmen_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmovrden_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmpd_in({1'b0,1'b0,1'b0,1'b0}),
        .txpippmsel_in({1'b1,1'b1,1'b1,1'b1}),
        .txpippmstepsize_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpisopd_in({1'b0,1'b0,1'b0,1'b0}),
        .txpllclksel_in({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .txpmareset_in({1'b0,1'b0,1'b0,1'b0}),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txpolarity_in({1'b0,1'b0,1'b0,1'b0}),
        .txpostcursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txpostcursorinv_in(1'b0),
        .txprbsforceerr_in({1'b0,1'b0,1'b0,1'b0}),
        .txprbssel_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursor_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txprecursorinv_in(1'b0),
        .txprgdivresetdone_out(NLW_inst_txprgdivresetdone_out_UNCONNECTED[3:0]),
        .txprogdivreset_in({1'b0,1'b0,1'b0,1'b0}),
        .txqpibiasen_in(1'b0),
        .txqpisenn_out(NLW_inst_txqpisenn_out_UNCONNECTED[0]),
        .txqpisenp_out(NLW_inst_txqpisenp_out_UNCONNECTED[0]),
        .txqpistrongpdown_in(1'b0),
        .txqpiweakpup_in(1'b0),
        .txrate_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .txratedone_out(NLW_inst_txratedone_out_UNCONNECTED[3:0]),
        .txratemode_in({1'b0,1'b0,1'b0,1'b0}),
        .txresetdone_out(NLW_inst_txresetdone_out_UNCONNECTED[3:0]),
        .txsequence_in(txsequence_in),
        .txswing_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncallin_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncdone_out(NLW_inst_txsyncdone_out_UNCONNECTED[3:0]),
        .txsyncin_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncmode_in({1'b0,1'b0,1'b0,1'b0}),
        .txsyncout_out(NLW_inst_txsyncout_out_UNCONNECTED[3:0]),
        .txsysclksel_in({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0}),
        .txuserrdy_in({1'b1,1'b1,1'b1,1'b1}),
        .txusrclk2_in({1'b0,1'b0,1'b0,1'b0}),
        .txusrclk_in({1'b0,1'b0,1'b0,txusrclk_in[0]}),
        .ubcfgstreamen_in(1'b0),
        .ubdaddr_out(NLW_inst_ubdaddr_out_UNCONNECTED[15:0]),
        .ubden_out(NLW_inst_ubden_out_UNCONNECTED[0]),
        .ubdi_out(NLW_inst_ubdi_out_UNCONNECTED[15:0]),
        .ubdo_in({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ubdrdy_in(1'b0),
        .ubdwe_out(NLW_inst_ubdwe_out_UNCONNECTED[0]),
        .ubenable_in(1'b0),
        .ubgpi_in({1'b0,1'b0}),
        .ubintr_in({1'b0,1'b0}),
        .ubiolmbrst_in(1'b0),
        .ubmbrst_in(1'b0),
        .ubmdmcapture_in(1'b0),
        .ubmdmdbgrst_in(1'b0),
        .ubmdmdbgupdate_in(1'b0),
        .ubmdmregen_in({1'b0,1'b0,1'b0,1'b0}),
        .ubmdmshift_in(1'b0),
        .ubmdmsysrst_in(1'b0),
        .ubmdmtck_in(1'b0),
        .ubmdmtdi_in(1'b0),
        .ubmdmtdo_out(NLW_inst_ubmdmtdo_out_UNCONNECTED[0]),
        .ubrsvdout_out(NLW_inst_ubrsvdout_out_UNCONNECTED[0]),
        .ubtxuart_out(NLW_inst_ubtxuart_out_UNCONNECTED[0]));
endmodule

module board_aurora_64b66b_0_2_gt_common_wrapper
   (gt_qplllock_quad1_out,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_qpllrefclklost_quad1_out,
    gt_refclk1_out,
    init_clk,
    gtwiz_reset_qpll0reset_out);
  output gt_qplllock_quad1_out;
  output gt_qpllclk_quad1_out;
  output gt_qpllrefclk_quad1_out;
  output gt_qpllrefclklost_quad1_out;
  input gt_refclk1_out;
  input init_clk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_qpllrefclklost_quad1_out;
  wire gt_refclk1_out;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire init_clk;

  board_aurora_64b66b_0_2_gt_gtye4_common_wrapper board_aurora_64b66b_0_2_gt_gtye4_common_wrapper_i
       (.gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_qpllrefclklost_quad1_out(gt_qpllrefclklost_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .init_clk(init_clk));
endmodule

module board_aurora_64b66b_0_2_gt_gtwizard_gtye4
   (gtytxn_out,
    gtytxp_out,
    rxpmaresetdone_out,
    txpmaresetdone_out,
    gtwiz_userdata_rx_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    gtpowergood_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    drpclk_in,
    gtrefclk0_in,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    rxusrclk_in,
    rxusrclk2_in,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]txpmaresetdone_out;
  output [255:0]gtwiz_userdata_rx_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  output [3:0]gtpowergood_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input [0:0]drpclk_in;
  input [0:0]gtrefclk0_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [0:0]txusrclk_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_16 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_17 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_18 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_19 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_24 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_25 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_26 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_27 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_36 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_37 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_38 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_39 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ;
  wire \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gtpowergood_int ;
  wire [3:0]\gen_gtwizard_gtye4.gttxreset_ch_int ;
  wire [3:0]\gen_gtwizard_gtye4.txpisopd_ch_int ;
  wire [3:0]gtpowergood_out;
  wire [0:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk_in;

  board_aurora_64b66b_0_2_gt_gtye4_channel_wrapper \gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst 
       (.GTYE4_CHANNEL_GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTYE4_CHANNEL_GTRXRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ),
        .GTYE4_CHANNEL_GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTYE4_CHANNEL_RXCDRLOCK({\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_16 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_17 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_18 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_19 }),
        .GTYE4_CHANNEL_RXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ),
        .GTYE4_CHANNEL_RXRESETDONE({\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_24 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_25 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_26 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_27 }),
        .GTYE4_CHANNEL_RXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ),
        .GTYE4_CHANNEL_TXOUTCLKPCS({\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 }),
        .GTYE4_CHANNEL_TXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int ),
        .GTYE4_CHANNEL_TXRESETDONE({\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_36 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_37 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_38 ,\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_39 }),
        .GTYE4_CHANNEL_TXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ),
        .drpclk_in(drpclk_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[0].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_31 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [0]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_0 ),
        .out(gtpowergood_out[0]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_72 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[1].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_30 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [1]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_5 ),
        .out(gtpowergood_out[1]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_73 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[2].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_29 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [2]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_6 ),
        .out(gtpowergood_out[2]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_74 \gen_gtwizard_gtye4.gen_pwrgood_delay_inst[3].delay_powergood_inst 
       (.GTYE4_CHANNEL_TXOUTCLKPCS(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_28 ),
        .GTYE4_CHANNEL_TXRATE(\gen_gtwizard_gtye4.txpisopd_ch_int [3]),
        .\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 (\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_7 ),
        .out(gtpowergood_out[3]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_27 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [0]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_75 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[0].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_39 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [0]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_76 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[1].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_26 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [1]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_77 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[1].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_38 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [1]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_78 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[2].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_25 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [2]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_79 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[2].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_37 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [2]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_80 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[3].bit_synchronizer_rxresetdone_inst 
       (.GTYE4_CHANNEL_RXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_24 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [3]));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_81 \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gen_ch_xrd[3].bit_synchronizer_txresetdone_inst 
       (.GTYE4_CHANNEL_TXRESETDONE(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_36 ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [3]));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int 
       (.I0(gtpowergood_out[1]),
        .I1(gtpowergood_out[0]),
        .I2(gtpowergood_out[3]),
        .I3(gtpowergood_out[2]),
        .O(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtwiz_reset \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_inst 
       (.GTYE4_CHANNEL_GTPOWERGOOD(\gen_gtwizard_gtye4.gtpowergood_int ),
        .GTYE4_CHANNEL_GTRXRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtrxreset_int ),
        .GTYE4_CHANNEL_GTTXRESET(\gen_gtwizard_gtye4.gttxreset_ch_int ),
        .GTYE4_CHANNEL_RXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxprogdivreset_int ),
        .GTYE4_CHANNEL_RXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxuserrdy_int ),
        .GTYE4_CHANNEL_TXPROGDIVRESET(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txprogdivreset_int ),
        .GTYE4_CHANNEL_TXUSERRDY(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_txuserrdy_int ),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .gtpowergood_out(gtpowergood_out),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .i_in_meta_reg(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ),
        .in0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gtpowergood_int__0 ),
        .rxusrclk2_in(rxusrclk2_in),
        .txusrclk_in(txusrclk_in));
  LUT4 #(
    .INIT(16'h8000)) 
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int 
       (.I0(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_18 ),
        .I1(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_19 ),
        .I2(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_16 ),
        .I3(\gen_gtwizard_gtye4.gen_channel_container[3].gen_enabled_channel.gtye4_channel_wrapper_inst_n_17 ),
        .O(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_rxcdrlock_int__0 ));
endmodule

(* C_CHANNEL_ENABLE = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111000000000000" *) (* C_COMMON_SCALING_FACTOR = "1" *) (* C_CPLL_VCO_FREQUENCY = "2578.125000" *) 
(* C_ENABLE_COMMON_USRCLK = "0" *) (* C_FORCE_COMMONS = "0" *) (* C_FREERUN_FREQUENCY = "100.000000" *) 
(* C_GT_REV = "67" *) (* C_GT_TYPE = "3" *) (* C_INCLUDE_CPLL_CAL = "2" *) 
(* C_LOCATE_COMMON = "1" *) (* C_LOCATE_IN_SYSTEM_IBERT_CORE = "2" *) (* C_LOCATE_RESET_CONTROLLER = "0" *) 
(* C_LOCATE_RX_BUFFER_BYPASS_CONTROLLER = "0" *) (* C_LOCATE_RX_USER_CLOCKING = "1" *) (* C_LOCATE_TX_BUFFER_BYPASS_CONTROLLER = "0" *) 
(* C_LOCATE_TX_USER_CLOCKING = "1" *) (* C_LOCATE_USER_DATA_WIDTH_SIZING = "0" *) (* C_PCIE_CORECLK_FREQ = "250" *) 
(* C_PCIE_ENABLE = "0" *) (* C_RESET_CONTROLLER_INSTANCE_CTRL = "0" *) (* C_RESET_SEQUENCE_INTERVAL = "0" *) 
(* C_RX_BUFFBYPASS_MODE = "0" *) (* C_RX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) (* C_RX_BUFFER_MODE = "1" *) 
(* C_RX_CB_DISP = "8'b00000000" *) (* C_RX_CB_K = "8'b00000000" *) (* C_RX_CB_LEN_SEQ = "1" *) 
(* C_RX_CB_MAX_LEVEL = "2" *) (* C_RX_CB_NUM_SEQ = "0" *) (* C_RX_CB_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_CC_DISP = "8'b00000000" *) (* C_RX_CC_ENABLE = "0" *) (* C_RX_CC_K = "8'b00000000" *) 
(* C_RX_CC_LEN_SEQ = "1" *) (* C_RX_CC_NUM_SEQ = "0" *) (* C_RX_CC_PERIODICITY = "5000" *) 
(* C_RX_CC_VAL = "80'b00000000000000000000000000000000000000000000000000000000000000000000000000000000" *) (* C_RX_COMMA_M_ENABLE = "0" *) (* C_RX_COMMA_M_VAL = "10'b1010000011" *) 
(* C_RX_COMMA_P_ENABLE = "0" *) (* C_RX_COMMA_P_VAL = "10'b0101111100" *) (* C_RX_DATA_DECODING = "2" *) 
(* C_RX_ENABLE = "1" *) (* C_RX_INT_DATA_WIDTH = "64" *) (* C_RX_LINE_RATE = "25.781250" *) 
(* C_RX_MASTER_CHANNEL_IDX = "13" *) (* C_RX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_RX_OUTCLK_FREQUENCY = "402.832031" *) 
(* C_RX_OUTCLK_SOURCE = "1" *) (* C_RX_PLL_TYPE = "0" *) (* C_RX_RECCLK_OUTPUT = "192'b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" *) 
(* C_RX_REFCLK_FREQUENCY = "322.265625" *) (* C_RX_SLIDE_MODE = "0" *) (* C_RX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_RX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_RX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_RX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_RX_USER_CLOCKING_SOURCE = "0" *) (* C_RX_USER_DATA_WIDTH = "64" *) (* C_RX_USRCLK2_FREQUENCY = "402.832031" *) 
(* C_RX_USRCLK_FREQUENCY = "402.832031" *) (* C_SECONDARY_QPLL_ENABLE = "0" *) (* C_SECONDARY_QPLL_REFCLK_FREQUENCY = "257.812500" *) 
(* C_SIM_CPLL_CAL_BYPASS = "1" *) (* C_TOTAL_NUM_CHANNELS = "4" *) (* C_TOTAL_NUM_COMMONS = "0" *) 
(* C_TOTAL_NUM_COMMONS_EXAMPLE = "1" *) (* C_TXPROGDIV_FREQ_ENABLE = "0" *) (* C_TXPROGDIV_FREQ_SOURCE = "0" *) 
(* C_TXPROGDIV_FREQ_VAL = "402.832031" *) (* C_TX_BUFFBYPASS_MODE = "0" *) (* C_TX_BUFFER_BYPASS_INSTANCE_CTRL = "0" *) 
(* C_TX_BUFFER_MODE = "1" *) (* C_TX_DATA_ENCODING = "2" *) (* C_TX_ENABLE = "1" *) 
(* C_TX_INT_DATA_WIDTH = "64" *) (* C_TX_LINE_RATE = "25.781250" *) (* C_TX_MASTER_CHANNEL_IDX = "13" *) 
(* C_TX_OUTCLK_BUFG_GT_DIV = "1" *) (* C_TX_OUTCLK_FREQUENCY = "402.832031" *) (* C_TX_OUTCLK_SOURCE = "1" *) 
(* C_TX_PLL_TYPE = "0" *) (* C_TX_REFCLK_FREQUENCY = "322.265625" *) (* C_TX_USER_CLOCKING_CONTENTS = "0" *) 
(* C_TX_USER_CLOCKING_INSTANCE_CTRL = "0" *) (* C_TX_USER_CLOCKING_RATIO_FSRC_FUSRCLK = "1" *) (* C_TX_USER_CLOCKING_RATIO_FUSRCLK_FUSRCLK2 = "1" *) 
(* C_TX_USER_CLOCKING_SOURCE = "0" *) (* C_TX_USER_DATA_WIDTH = "64" *) (* C_TX_USRCLK2_FREQUENCY = "402.832031" *) 
(* C_TX_USRCLK_FREQUENCY = "402.832031" *) (* C_USER_GTPOWERGOOD_DELAY_EN = "1" *) 
module board_aurora_64b66b_0_2_gt_gtwizard_top
   (gtwiz_userclk_tx_reset_in,
    gtwiz_userclk_tx_active_in,
    gtwiz_userclk_tx_srcclk_out,
    gtwiz_userclk_tx_usrclk_out,
    gtwiz_userclk_tx_usrclk2_out,
    gtwiz_userclk_tx_active_out,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_active_in,
    gtwiz_userclk_rx_srcclk_out,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    gtwiz_buffbypass_tx_reset_in,
    gtwiz_buffbypass_tx_start_user_in,
    gtwiz_buffbypass_tx_done_out,
    gtwiz_buffbypass_tx_error_out,
    gtwiz_buffbypass_rx_reset_in,
    gtwiz_buffbypass_rx_start_user_in,
    gtwiz_buffbypass_rx_done_out,
    gtwiz_buffbypass_rx_error_out,
    gtwiz_reset_clk_freerun_in,
    gtwiz_reset_all_in,
    gtwiz_reset_tx_pll_and_datapath_in,
    gtwiz_reset_tx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_tx_done_in,
    gtwiz_reset_rx_done_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_reset_qpll1lock_in,
    gtwiz_reset_rx_cdr_stable_out,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    gtwiz_reset_qpll0reset_out,
    gtwiz_reset_qpll1reset_out,
    gtwiz_gthe3_cpll_cal_txoutclk_period_in,
    gtwiz_gthe3_cpll_cal_cnt_tol_in,
    gtwiz_gthe3_cpll_cal_bufg_ce_in,
    gtwiz_gthe4_cpll_cal_txoutclk_period_in,
    gtwiz_gthe4_cpll_cal_cnt_tol_in,
    gtwiz_gthe4_cpll_cal_bufg_ce_in,
    gtwiz_gtye4_cpll_cal_txoutclk_period_in,
    gtwiz_gtye4_cpll_cal_cnt_tol_in,
    gtwiz_gtye4_cpll_cal_bufg_ce_in,
    gtwiz_userdata_tx_in,
    gtwiz_userdata_rx_out,
    bgbypassb_in,
    bgmonitorenb_in,
    bgpdb_in,
    bgrcalovrd_in,
    bgrcalovrdenb_in,
    drpaddr_common_in,
    drpclk_common_in,
    drpdi_common_in,
    drpen_common_in,
    drpwe_common_in,
    gtgrefclk0_in,
    gtgrefclk1_in,
    gtnorthrefclk00_in,
    gtnorthrefclk01_in,
    gtnorthrefclk10_in,
    gtnorthrefclk11_in,
    gtrefclk00_in,
    gtrefclk01_in,
    gtrefclk10_in,
    gtrefclk11_in,
    gtsouthrefclk00_in,
    gtsouthrefclk01_in,
    gtsouthrefclk10_in,
    gtsouthrefclk11_in,
    pcierateqpll0_in,
    pcierateqpll1_in,
    pmarsvd0_in,
    pmarsvd1_in,
    qpll0clkrsvd0_in,
    qpll0clkrsvd1_in,
    qpll0fbdiv_in,
    qpll0lockdetclk_in,
    qpll0locken_in,
    qpll0pd_in,
    qpll0refclksel_in,
    qpll0reset_in,
    qpll1clkrsvd0_in,
    qpll1clkrsvd1_in,
    qpll1fbdiv_in,
    qpll1lockdetclk_in,
    qpll1locken_in,
    qpll1pd_in,
    qpll1refclksel_in,
    qpll1reset_in,
    qpllrsvd1_in,
    qpllrsvd2_in,
    qpllrsvd3_in,
    qpllrsvd4_in,
    rcalenb_in,
    sdm0data_in,
    sdm0reset_in,
    sdm0toggle_in,
    sdm0width_in,
    sdm1data_in,
    sdm1reset_in,
    sdm1toggle_in,
    sdm1width_in,
    tcongpi_in,
    tconpowerup_in,
    tconreset_in,
    tconrsvdin1_in,
    ubcfgstreamen_in,
    ubdo_in,
    ubdrdy_in,
    ubenable_in,
    ubgpi_in,
    ubintr_in,
    ubiolmbrst_in,
    ubmbrst_in,
    ubmdmcapture_in,
    ubmdmdbgrst_in,
    ubmdmdbgupdate_in,
    ubmdmregen_in,
    ubmdmshift_in,
    ubmdmsysrst_in,
    ubmdmtck_in,
    ubmdmtdi_in,
    drpdo_common_out,
    drprdy_common_out,
    pmarsvdout0_out,
    pmarsvdout1_out,
    qpll0fbclklost_out,
    qpll0lock_out,
    qpll0outclk_out,
    qpll0outrefclk_out,
    qpll0refclklost_out,
    qpll1fbclklost_out,
    qpll1lock_out,
    qpll1outclk_out,
    qpll1outrefclk_out,
    qpll1refclklost_out,
    qplldmonitor0_out,
    qplldmonitor1_out,
    refclkoutmonitor0_out,
    refclkoutmonitor1_out,
    rxrecclk0_sel_out,
    rxrecclk1_sel_out,
    rxrecclk0sel_out,
    rxrecclk1sel_out,
    sdm0finalout_out,
    sdm0testdata_out,
    sdm1finalout_out,
    sdm1testdata_out,
    tcongpo_out,
    tconrsvdout0_out,
    ubdaddr_out,
    ubden_out,
    ubdi_out,
    ubdwe_out,
    ubmdmtdo_out,
    ubrsvdout_out,
    ubtxuart_out,
    cdrstepdir_in,
    cdrstepsq_in,
    cdrstepsx_in,
    cfgreset_in,
    clkrsvd0_in,
    clkrsvd1_in,
    cpllfreqlock_in,
    cplllockdetclk_in,
    cplllocken_in,
    cpllpd_in,
    cpllrefclksel_in,
    cpllreset_in,
    dmonfiforeset_in,
    dmonitorclk_in,
    drpaddr_in,
    drpclk_in,
    drpdi_in,
    drpen_in,
    drprst_in,
    drpwe_in,
    elpcaldvorwren_in,
    elpcalpaorwren_in,
    evoddphicaldone_in,
    evoddphicalstart_in,
    evoddphidrden_in,
    evoddphidwren_in,
    evoddphixrden_in,
    evoddphixwren_in,
    eyescanmode_in,
    eyescanreset_in,
    eyescantrigger_in,
    freqos_in,
    gtgrefclk_in,
    gthrxn_in,
    gthrxp_in,
    gtnorthrefclk0_in,
    gtnorthrefclk1_in,
    gtrefclk0_in,
    gtrefclk1_in,
    gtresetsel_in,
    gtrsvd_in,
    gtrxreset_in,
    gtrxresetsel_in,
    gtsouthrefclk0_in,
    gtsouthrefclk1_in,
    gttxreset_in,
    gttxresetsel_in,
    incpctrl_in,
    gtyrxn_in,
    gtyrxp_in,
    loopback_in,
    looprsvd_in,
    lpbkrxtxseren_in,
    lpbktxrxseren_in,
    pcieeqrxeqadaptdone_in,
    pcierstidle_in,
    pciersttxsyncstart_in,
    pcieuserratedone_in,
    pcsrsvdin_in,
    pcsrsvdin2_in,
    pmarsvdin_in,
    qpll0clk_in,
    qpll0freqlock_in,
    qpll0refclk_in,
    qpll1clk_in,
    qpll1freqlock_in,
    qpll1refclk_in,
    resetovrd_in,
    rstclkentx_in,
    rx8b10ben_in,
    rxafecfoken_in,
    rxbufreset_in,
    rxcdrfreqreset_in,
    rxcdrhold_in,
    rxcdrovrden_in,
    rxcdrreset_in,
    rxcdrresetrsv_in,
    rxchbonden_in,
    rxchbondi_in,
    rxchbondlevel_in,
    rxchbondmaster_in,
    rxchbondslave_in,
    rxckcalreset_in,
    rxckcalstart_in,
    rxcommadeten_in,
    rxdfeagcctrl_in,
    rxdccforcestart_in,
    rxdfeagchold_in,
    rxdfeagcovrden_in,
    rxdfecfokfcnum_in,
    rxdfecfokfen_in,
    rxdfecfokfpulse_in,
    rxdfecfokhold_in,
    rxdfecfokovren_in,
    rxdfekhhold_in,
    rxdfekhovrden_in,
    rxdfelfhold_in,
    rxdfelfovrden_in,
    rxdfelpmreset_in,
    rxdfetap10hold_in,
    rxdfetap10ovrden_in,
    rxdfetap11hold_in,
    rxdfetap11ovrden_in,
    rxdfetap12hold_in,
    rxdfetap12ovrden_in,
    rxdfetap13hold_in,
    rxdfetap13ovrden_in,
    rxdfetap14hold_in,
    rxdfetap14ovrden_in,
    rxdfetap15hold_in,
    rxdfetap15ovrden_in,
    rxdfetap2hold_in,
    rxdfetap2ovrden_in,
    rxdfetap3hold_in,
    rxdfetap3ovrden_in,
    rxdfetap4hold_in,
    rxdfetap4ovrden_in,
    rxdfetap5hold_in,
    rxdfetap5ovrden_in,
    rxdfetap6hold_in,
    rxdfetap6ovrden_in,
    rxdfetap7hold_in,
    rxdfetap7ovrden_in,
    rxdfetap8hold_in,
    rxdfetap8ovrden_in,
    rxdfetap9hold_in,
    rxdfetap9ovrden_in,
    rxdfeuthold_in,
    rxdfeutovrden_in,
    rxdfevphold_in,
    rxdfevpovrden_in,
    rxdfevsen_in,
    rxdfexyden_in,
    rxdlybypass_in,
    rxdlyen_in,
    rxdlyovrden_in,
    rxdlysreset_in,
    rxelecidlemode_in,
    rxeqtraining_in,
    rxgearboxslip_in,
    rxlatclk_in,
    rxlpmen_in,
    rxlpmgchold_in,
    rxlpmgcovrden_in,
    rxlpmhfhold_in,
    rxlpmhfovrden_in,
    rxlpmlfhold_in,
    rxlpmlfklovrden_in,
    rxlpmoshold_in,
    rxlpmosovrden_in,
    rxmcommaalignen_in,
    rxmonitorsel_in,
    rxoobreset_in,
    rxoscalreset_in,
    rxoshold_in,
    rxosintcfg_in,
    rxosinten_in,
    rxosinthold_in,
    rxosintovrden_in,
    rxosintstrobe_in,
    rxosinttestovrden_in,
    rxosovrden_in,
    rxoutclksel_in,
    rxpcommaalignen_in,
    rxpcsreset_in,
    rxpd_in,
    rxphalign_in,
    rxphalignen_in,
    rxphdlypd_in,
    rxphdlyreset_in,
    rxphovrden_in,
    rxpllclksel_in,
    rxpmareset_in,
    rxpolarity_in,
    rxprbscntreset_in,
    rxprbssel_in,
    rxprogdivreset_in,
    rxqpien_in,
    rxrate_in,
    rxratemode_in,
    rxslide_in,
    rxslipoutclk_in,
    rxslippma_in,
    rxsyncallin_in,
    rxsyncin_in,
    rxsyncmode_in,
    rxsysclksel_in,
    rxtermination_in,
    rxuserrdy_in,
    rxusrclk_in,
    rxusrclk2_in,
    sigvalidclk_in,
    tstin_in,
    tx8b10bbypass_in,
    tx8b10ben_in,
    txbufdiffctrl_in,
    txcominit_in,
    txcomsas_in,
    txcomwake_in,
    txctrl0_in,
    txctrl1_in,
    txctrl2_in,
    txdata_in,
    txdataextendrsvd_in,
    txdccforcestart_in,
    txdccreset_in,
    txdeemph_in,
    txdetectrx_in,
    txdiffctrl_in,
    txdiffpd_in,
    txdlybypass_in,
    txdlyen_in,
    txdlyhold_in,
    txdlyovrden_in,
    txdlysreset_in,
    txdlyupdown_in,
    txelecidle_in,
    txelforcestart_in,
    txheader_in,
    txinhibit_in,
    txlatclk_in,
    txlfpstreset_in,
    txlfpsu2lpexit_in,
    txlfpsu3wake_in,
    txmaincursor_in,
    txmargin_in,
    txmuxdcdexhold_in,
    txmuxdcdorwren_in,
    txoneszeros_in,
    txoutclksel_in,
    txpcsreset_in,
    txpd_in,
    txpdelecidlemode_in,
    txphalign_in,
    txphalignen_in,
    txphdlypd_in,
    txphdlyreset_in,
    txphdlytstclk_in,
    txphinit_in,
    txphovrden_in,
    txpippmen_in,
    txpippmovrden_in,
    txpippmpd_in,
    txpippmsel_in,
    txpippmstepsize_in,
    txpisopd_in,
    txpllclksel_in,
    txpmareset_in,
    txpolarity_in,
    txpostcursor_in,
    txpostcursorinv_in,
    txprbsforceerr_in,
    txprbssel_in,
    txprecursor_in,
    txprecursorinv_in,
    txprogdivreset_in,
    txqpibiasen_in,
    txqpistrongpdown_in,
    txqpiweakpup_in,
    txrate_in,
    txratemode_in,
    txsequence_in,
    txswing_in,
    txsyncallin_in,
    txsyncin_in,
    txsyncmode_in,
    txsysclksel_in,
    txuserrdy_in,
    txusrclk_in,
    txusrclk2_in,
    bufgtce_out,
    bufgtcemask_out,
    bufgtdiv_out,
    bufgtreset_out,
    bufgtrstmask_out,
    cpllfbclklost_out,
    cplllock_out,
    cpllrefclklost_out,
    dmonitorout_out,
    dmonitoroutclk_out,
    drpdo_out,
    drprdy_out,
    eyescandataerror_out,
    gthtxn_out,
    gthtxp_out,
    gtpowergood_out,
    gtrefclkmonitor_out,
    gtytxn_out,
    gtytxp_out,
    pcierategen3_out,
    pcierateidle_out,
    pcierateqpllpd_out,
    pcierateqpllreset_out,
    pciesynctxsyncdone_out,
    pcieusergen3rdy_out,
    pcieuserphystatusrst_out,
    pcieuserratestart_out,
    pcsrsvdout_out,
    phystatus_out,
    pinrsrvdas_out,
    powerpresent_out,
    resetexception_out,
    rxbufstatus_out,
    rxbyteisaligned_out,
    rxbyterealign_out,
    rxcdrlock_out,
    rxcdrphdone_out,
    rxchanbondseq_out,
    rxchanisaligned_out,
    rxchanrealign_out,
    rxchbondo_out,
    rxckcaldone_out,
    rxclkcorcnt_out,
    rxcominitdet_out,
    rxcommadet_out,
    rxcomsasdet_out,
    rxcomwakedet_out,
    rxctrl0_out,
    rxctrl1_out,
    rxctrl2_out,
    rxctrl3_out,
    rxdata_out,
    rxdataextendrsvd_out,
    rxdatavalid_out,
    rxdlysresetdone_out,
    rxelecidle_out,
    rxheader_out,
    rxheadervalid_out,
    rxlfpstresetdet_out,
    rxlfpsu2lpexitdet_out,
    rxlfpsu3wakedet_out,
    rxmonitorout_out,
    rxosintdone_out,
    rxosintstarted_out,
    rxosintstrobedone_out,
    rxosintstrobestarted_out,
    rxoutclk_out,
    rxoutclkfabric_out,
    rxoutclkpcs_out,
    rxphaligndone_out,
    rxphalignerr_out,
    rxpmaresetdone_out,
    rxprbserr_out,
    rxprbslocked_out,
    rxprgdivresetdone_out,
    rxqpisenn_out,
    rxqpisenp_out,
    rxratedone_out,
    rxrecclkout_out,
    rxresetdone_out,
    rxsliderdy_out,
    rxslipdone_out,
    rxslipoutclkrdy_out,
    rxslippmardy_out,
    rxstartofseq_out,
    rxstatus_out,
    rxsyncdone_out,
    rxsyncout_out,
    rxvalid_out,
    txbufstatus_out,
    txcomfinish_out,
    txdccdone_out,
    txdlysresetdone_out,
    txoutclk_out,
    txoutclkfabric_out,
    txoutclkpcs_out,
    txphaligndone_out,
    txphinitdone_out,
    txpmaresetdone_out,
    txprgdivresetdone_out,
    txqpisenn_out,
    txqpisenp_out,
    txratedone_out,
    txresetdone_out,
    txsyncdone_out,
    txsyncout_out,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  input [0:0]gtwiz_userclk_tx_reset_in;
  input [0:0]gtwiz_userclk_tx_active_in;
  output [0:0]gtwiz_userclk_tx_srcclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk_out;
  output [0:0]gtwiz_userclk_tx_usrclk2_out;
  output [0:0]gtwiz_userclk_tx_active_out;
  input [0:0]gtwiz_userclk_rx_reset_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  output [0:0]gtwiz_userclk_rx_srcclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk_out;
  output [0:0]gtwiz_userclk_rx_usrclk2_out;
  output [0:0]gtwiz_userclk_rx_active_out;
  input [0:0]gtwiz_buffbypass_tx_reset_in;
  input [0:0]gtwiz_buffbypass_tx_start_user_in;
  output [0:0]gtwiz_buffbypass_tx_done_out;
  output [0:0]gtwiz_buffbypass_tx_error_out;
  input [0:0]gtwiz_buffbypass_rx_reset_in;
  input [0:0]gtwiz_buffbypass_rx_start_user_in;
  output [0:0]gtwiz_buffbypass_rx_done_out;
  output [0:0]gtwiz_buffbypass_rx_error_out;
  input [0:0]gtwiz_reset_clk_freerun_in;
  input [0:0]gtwiz_reset_all_in;
  input [0:0]gtwiz_reset_tx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_tx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_tx_done_in;
  input [0:0]gtwiz_reset_rx_done_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_reset_qpll1lock_in;
  output [0:0]gtwiz_reset_rx_cdr_stable_out;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]gtwiz_reset_qpll0reset_out;
  output [0:0]gtwiz_reset_qpll1reset_out;
  input [71:0]gtwiz_gthe3_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gthe3_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gthe3_cpll_cal_bufg_ce_in;
  input [71:0]gtwiz_gthe4_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gthe4_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gthe4_cpll_cal_bufg_ce_in;
  input [71:0]gtwiz_gtye4_cpll_cal_txoutclk_period_in;
  input [71:0]gtwiz_gtye4_cpll_cal_cnt_tol_in;
  input [3:0]gtwiz_gtye4_cpll_cal_bufg_ce_in;
  input [255:0]gtwiz_userdata_tx_in;
  output [255:0]gtwiz_userdata_rx_out;
  input [0:0]bgbypassb_in;
  input [0:0]bgmonitorenb_in;
  input [0:0]bgpdb_in;
  input [4:0]bgrcalovrd_in;
  input [0:0]bgrcalovrdenb_in;
  input [15:0]drpaddr_common_in;
  input [0:0]drpclk_common_in;
  input [15:0]drpdi_common_in;
  input [0:0]drpen_common_in;
  input [0:0]drpwe_common_in;
  input [0:0]gtgrefclk0_in;
  input [0:0]gtgrefclk1_in;
  input [0:0]gtnorthrefclk00_in;
  input [0:0]gtnorthrefclk01_in;
  input [0:0]gtnorthrefclk10_in;
  input [0:0]gtnorthrefclk11_in;
  input [0:0]gtrefclk00_in;
  input [0:0]gtrefclk01_in;
  input [0:0]gtrefclk10_in;
  input [0:0]gtrefclk11_in;
  input [0:0]gtsouthrefclk00_in;
  input [0:0]gtsouthrefclk01_in;
  input [0:0]gtsouthrefclk10_in;
  input [0:0]gtsouthrefclk11_in;
  input [2:0]pcierateqpll0_in;
  input [2:0]pcierateqpll1_in;
  input [7:0]pmarsvd0_in;
  input [7:0]pmarsvd1_in;
  input [0:0]qpll0clkrsvd0_in;
  input [0:0]qpll0clkrsvd1_in;
  input [7:0]qpll0fbdiv_in;
  input [0:0]qpll0lockdetclk_in;
  input [0:0]qpll0locken_in;
  input [0:0]qpll0pd_in;
  input [2:0]qpll0refclksel_in;
  input [0:0]qpll0reset_in;
  input [0:0]qpll1clkrsvd0_in;
  input [0:0]qpll1clkrsvd1_in;
  input [7:0]qpll1fbdiv_in;
  input [0:0]qpll1lockdetclk_in;
  input [0:0]qpll1locken_in;
  input [0:0]qpll1pd_in;
  input [2:0]qpll1refclksel_in;
  input [0:0]qpll1reset_in;
  input [7:0]qpllrsvd1_in;
  input [4:0]qpllrsvd2_in;
  input [4:0]qpllrsvd3_in;
  input [7:0]qpllrsvd4_in;
  input [0:0]rcalenb_in;
  input [24:0]sdm0data_in;
  input [0:0]sdm0reset_in;
  input [0:0]sdm0toggle_in;
  input [1:0]sdm0width_in;
  input [24:0]sdm1data_in;
  input [0:0]sdm1reset_in;
  input [0:0]sdm1toggle_in;
  input [1:0]sdm1width_in;
  input [0:0]tcongpi_in;
  input [0:0]tconpowerup_in;
  input [0:0]tconreset_in;
  input [0:0]tconrsvdin1_in;
  input [0:0]ubcfgstreamen_in;
  input [15:0]ubdo_in;
  input [0:0]ubdrdy_in;
  input [0:0]ubenable_in;
  input [1:0]ubgpi_in;
  input [1:0]ubintr_in;
  input [0:0]ubiolmbrst_in;
  input [0:0]ubmbrst_in;
  input [0:0]ubmdmcapture_in;
  input [0:0]ubmdmdbgrst_in;
  input [0:0]ubmdmdbgupdate_in;
  input [3:0]ubmdmregen_in;
  input [0:0]ubmdmshift_in;
  input [0:0]ubmdmsysrst_in;
  input [0:0]ubmdmtck_in;
  input [0:0]ubmdmtdi_in;
  output [15:0]drpdo_common_out;
  output [0:0]drprdy_common_out;
  output [7:0]pmarsvdout0_out;
  output [7:0]pmarsvdout1_out;
  output [0:0]qpll0fbclklost_out;
  output [0:0]qpll0lock_out;
  output [0:0]qpll0outclk_out;
  output [0:0]qpll0outrefclk_out;
  output [0:0]qpll0refclklost_out;
  output [0:0]qpll1fbclklost_out;
  output [0:0]qpll1lock_out;
  output [0:0]qpll1outclk_out;
  output [0:0]qpll1outrefclk_out;
  output [0:0]qpll1refclklost_out;
  output [7:0]qplldmonitor0_out;
  output [7:0]qplldmonitor1_out;
  output [0:0]refclkoutmonitor0_out;
  output [0:0]refclkoutmonitor1_out;
  output [0:0]rxrecclk0_sel_out;
  output [0:0]rxrecclk1_sel_out;
  output [1:0]rxrecclk0sel_out;
  output [1:0]rxrecclk1sel_out;
  output [3:0]sdm0finalout_out;
  output [14:0]sdm0testdata_out;
  output [3:0]sdm1finalout_out;
  output [14:0]sdm1testdata_out;
  output [0:0]tcongpo_out;
  output [0:0]tconrsvdout0_out;
  output [15:0]ubdaddr_out;
  output [0:0]ubden_out;
  output [15:0]ubdi_out;
  output [0:0]ubdwe_out;
  output [0:0]ubmdmtdo_out;
  output [0:0]ubrsvdout_out;
  output [0:0]ubtxuart_out;
  input [3:0]cdrstepdir_in;
  input [3:0]cdrstepsq_in;
  input [3:0]cdrstepsx_in;
  input [3:0]cfgreset_in;
  input [3:0]clkrsvd0_in;
  input [3:0]clkrsvd1_in;
  input [3:0]cpllfreqlock_in;
  input [3:0]cplllockdetclk_in;
  input [3:0]cplllocken_in;
  input [3:0]cpllpd_in;
  input [11:0]cpllrefclksel_in;
  input [3:0]cpllreset_in;
  input [3:0]dmonfiforeset_in;
  input [3:0]dmonitorclk_in;
  input [39:0]drpaddr_in;
  input [3:0]drpclk_in;
  input [63:0]drpdi_in;
  input [3:0]drpen_in;
  input [3:0]drprst_in;
  input [3:0]drpwe_in;
  input [0:0]elpcaldvorwren_in;
  input [0:0]elpcalpaorwren_in;
  input [0:0]evoddphicaldone_in;
  input [0:0]evoddphicalstart_in;
  input [0:0]evoddphidrden_in;
  input [0:0]evoddphidwren_in;
  input [0:0]evoddphixrden_in;
  input [0:0]evoddphixwren_in;
  input [0:0]eyescanmode_in;
  input [3:0]eyescanreset_in;
  input [3:0]eyescantrigger_in;
  input [3:0]freqos_in;
  input [3:0]gtgrefclk_in;
  input [0:0]gthrxn_in;
  input [0:0]gthrxp_in;
  input [3:0]gtnorthrefclk0_in;
  input [3:0]gtnorthrefclk1_in;
  input [3:0]gtrefclk0_in;
  input [3:0]gtrefclk1_in;
  input [0:0]gtresetsel_in;
  input [63:0]gtrsvd_in;
  input [3:0]gtrxreset_in;
  input [3:0]gtrxresetsel_in;
  input [3:0]gtsouthrefclk0_in;
  input [3:0]gtsouthrefclk1_in;
  input [3:0]gttxreset_in;
  input [3:0]gttxresetsel_in;
  input [3:0]incpctrl_in;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [11:0]loopback_in;
  input [0:0]looprsvd_in;
  input [0:0]lpbkrxtxseren_in;
  input [0:0]lpbktxrxseren_in;
  input [3:0]pcieeqrxeqadaptdone_in;
  input [3:0]pcierstidle_in;
  input [3:0]pciersttxsyncstart_in;
  input [3:0]pcieuserratedone_in;
  input [63:0]pcsrsvdin_in;
  input [0:0]pcsrsvdin2_in;
  input [0:0]pmarsvdin_in;
  input [3:0]qpll0clk_in;
  input [3:0]qpll0freqlock_in;
  input [3:0]qpll0refclk_in;
  input [3:0]qpll1clk_in;
  input [3:0]qpll1freqlock_in;
  input [3:0]qpll1refclk_in;
  input [3:0]resetovrd_in;
  input [0:0]rstclkentx_in;
  input [3:0]rx8b10ben_in;
  input [3:0]rxafecfoken_in;
  input [3:0]rxbufreset_in;
  input [3:0]rxcdrfreqreset_in;
  input [3:0]rxcdrhold_in;
  input [3:0]rxcdrovrden_in;
  input [3:0]rxcdrreset_in;
  input [0:0]rxcdrresetrsv_in;
  input [3:0]rxchbonden_in;
  input [19:0]rxchbondi_in;
  input [11:0]rxchbondlevel_in;
  input [3:0]rxchbondmaster_in;
  input [3:0]rxchbondslave_in;
  input [3:0]rxckcalreset_in;
  input [27:0]rxckcalstart_in;
  input [3:0]rxcommadeten_in;
  input [0:0]rxdfeagcctrl_in;
  input [0:0]rxdccforcestart_in;
  input [3:0]rxdfeagchold_in;
  input [3:0]rxdfeagcovrden_in;
  input [15:0]rxdfecfokfcnum_in;
  input [3:0]rxdfecfokfen_in;
  input [3:0]rxdfecfokfpulse_in;
  input [3:0]rxdfecfokhold_in;
  input [3:0]rxdfecfokovren_in;
  input [3:0]rxdfekhhold_in;
  input [3:0]rxdfekhovrden_in;
  input [3:0]rxdfelfhold_in;
  input [3:0]rxdfelfovrden_in;
  input [3:0]rxdfelpmreset_in;
  input [3:0]rxdfetap10hold_in;
  input [3:0]rxdfetap10ovrden_in;
  input [3:0]rxdfetap11hold_in;
  input [3:0]rxdfetap11ovrden_in;
  input [3:0]rxdfetap12hold_in;
  input [3:0]rxdfetap12ovrden_in;
  input [3:0]rxdfetap13hold_in;
  input [3:0]rxdfetap13ovrden_in;
  input [3:0]rxdfetap14hold_in;
  input [3:0]rxdfetap14ovrden_in;
  input [3:0]rxdfetap15hold_in;
  input [3:0]rxdfetap15ovrden_in;
  input [3:0]rxdfetap2hold_in;
  input [3:0]rxdfetap2ovrden_in;
  input [3:0]rxdfetap3hold_in;
  input [3:0]rxdfetap3ovrden_in;
  input [3:0]rxdfetap4hold_in;
  input [3:0]rxdfetap4ovrden_in;
  input [3:0]rxdfetap5hold_in;
  input [3:0]rxdfetap5ovrden_in;
  input [3:0]rxdfetap6hold_in;
  input [3:0]rxdfetap6ovrden_in;
  input [3:0]rxdfetap7hold_in;
  input [3:0]rxdfetap7ovrden_in;
  input [3:0]rxdfetap8hold_in;
  input [3:0]rxdfetap8ovrden_in;
  input [3:0]rxdfetap9hold_in;
  input [3:0]rxdfetap9ovrden_in;
  input [3:0]rxdfeuthold_in;
  input [3:0]rxdfeutovrden_in;
  input [3:0]rxdfevphold_in;
  input [3:0]rxdfevpovrden_in;
  input [0:0]rxdfevsen_in;
  input [3:0]rxdfexyden_in;
  input [3:0]rxdlybypass_in;
  input [3:0]rxdlyen_in;
  input [3:0]rxdlyovrden_in;
  input [3:0]rxdlysreset_in;
  input [7:0]rxelecidlemode_in;
  input [3:0]rxeqtraining_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxlatclk_in;
  input [3:0]rxlpmen_in;
  input [3:0]rxlpmgchold_in;
  input [3:0]rxlpmgcovrden_in;
  input [3:0]rxlpmhfhold_in;
  input [3:0]rxlpmhfovrden_in;
  input [3:0]rxlpmlfhold_in;
  input [3:0]rxlpmlfklovrden_in;
  input [3:0]rxlpmoshold_in;
  input [3:0]rxlpmosovrden_in;
  input [3:0]rxmcommaalignen_in;
  input [7:0]rxmonitorsel_in;
  input [3:0]rxoobreset_in;
  input [3:0]rxoscalreset_in;
  input [3:0]rxoshold_in;
  input [0:0]rxosintcfg_in;
  input [0:0]rxosinten_in;
  input [0:0]rxosinthold_in;
  input [0:0]rxosintovrden_in;
  input [0:0]rxosintstrobe_in;
  input [0:0]rxosinttestovrden_in;
  input [3:0]rxosovrden_in;
  input [11:0]rxoutclksel_in;
  input [3:0]rxpcommaalignen_in;
  input [3:0]rxpcsreset_in;
  input [7:0]rxpd_in;
  input [3:0]rxphalign_in;
  input [3:0]rxphalignen_in;
  input [3:0]rxphdlypd_in;
  input [3:0]rxphdlyreset_in;
  input [0:0]rxphovrden_in;
  input [7:0]rxpllclksel_in;
  input [3:0]rxpmareset_in;
  input [3:0]rxpolarity_in;
  input [3:0]rxprbscntreset_in;
  input [15:0]rxprbssel_in;
  input [3:0]rxprogdivreset_in;
  input [0:0]rxqpien_in;
  input [11:0]rxrate_in;
  input [3:0]rxratemode_in;
  input [3:0]rxslide_in;
  input [3:0]rxslipoutclk_in;
  input [3:0]rxslippma_in;
  input [3:0]rxsyncallin_in;
  input [3:0]rxsyncin_in;
  input [3:0]rxsyncmode_in;
  input [7:0]rxsysclksel_in;
  input [3:0]rxtermination_in;
  input [3:0]rxuserrdy_in;
  input [3:0]rxusrclk_in;
  input [3:0]rxusrclk2_in;
  input [3:0]sigvalidclk_in;
  input [79:0]tstin_in;
  input [31:0]tx8b10bbypass_in;
  input [3:0]tx8b10ben_in;
  input [0:0]txbufdiffctrl_in;
  input [3:0]txcominit_in;
  input [3:0]txcomsas_in;
  input [3:0]txcomwake_in;
  input [63:0]txctrl0_in;
  input [63:0]txctrl1_in;
  input [31:0]txctrl2_in;
  input [511:0]txdata_in;
  input [31:0]txdataextendrsvd_in;
  input [3:0]txdccforcestart_in;
  input [3:0]txdccreset_in;
  input [7:0]txdeemph_in;
  input [3:0]txdetectrx_in;
  input [19:0]txdiffctrl_in;
  input [0:0]txdiffpd_in;
  input [3:0]txdlybypass_in;
  input [3:0]txdlyen_in;
  input [3:0]txdlyhold_in;
  input [3:0]txdlyovrden_in;
  input [3:0]txdlysreset_in;
  input [3:0]txdlyupdown_in;
  input [3:0]txelecidle_in;
  input [0:0]txelforcestart_in;
  input [23:0]txheader_in;
  input [3:0]txinhibit_in;
  input [3:0]txlatclk_in;
  input [3:0]txlfpstreset_in;
  input [3:0]txlfpsu2lpexit_in;
  input [3:0]txlfpsu3wake_in;
  input [27:0]txmaincursor_in;
  input [11:0]txmargin_in;
  input [3:0]txmuxdcdexhold_in;
  input [3:0]txmuxdcdorwren_in;
  input [3:0]txoneszeros_in;
  input [11:0]txoutclksel_in;
  input [3:0]txpcsreset_in;
  input [7:0]txpd_in;
  input [3:0]txpdelecidlemode_in;
  input [3:0]txphalign_in;
  input [3:0]txphalignen_in;
  input [3:0]txphdlypd_in;
  input [3:0]txphdlyreset_in;
  input [3:0]txphdlytstclk_in;
  input [3:0]txphinit_in;
  input [3:0]txphovrden_in;
  input [3:0]txpippmen_in;
  input [3:0]txpippmovrden_in;
  input [3:0]txpippmpd_in;
  input [3:0]txpippmsel_in;
  input [19:0]txpippmstepsize_in;
  input [3:0]txpisopd_in;
  input [7:0]txpllclksel_in;
  input [3:0]txpmareset_in;
  input [3:0]txpolarity_in;
  input [19:0]txpostcursor_in;
  input [0:0]txpostcursorinv_in;
  input [3:0]txprbsforceerr_in;
  input [15:0]txprbssel_in;
  input [19:0]txprecursor_in;
  input [0:0]txprecursorinv_in;
  input [3:0]txprogdivreset_in;
  input [0:0]txqpibiasen_in;
  input [0:0]txqpistrongpdown_in;
  input [0:0]txqpiweakpup_in;
  input [11:0]txrate_in;
  input [3:0]txratemode_in;
  input [27:0]txsequence_in;
  input [3:0]txswing_in;
  input [3:0]txsyncallin_in;
  input [3:0]txsyncin_in;
  input [3:0]txsyncmode_in;
  input [7:0]txsysclksel_in;
  input [3:0]txuserrdy_in;
  input [3:0]txusrclk_in;
  input [3:0]txusrclk2_in;
  output [3:0]bufgtce_out;
  output [11:0]bufgtcemask_out;
  output [35:0]bufgtdiv_out;
  output [3:0]bufgtreset_out;
  output [11:0]bufgtrstmask_out;
  output [3:0]cpllfbclklost_out;
  output [3:0]cplllock_out;
  output [3:0]cpllrefclklost_out;
  output [63:0]dmonitorout_out;
  output [3:0]dmonitoroutclk_out;
  output [63:0]drpdo_out;
  output [3:0]drprdy_out;
  output [3:0]eyescandataerror_out;
  output [0:0]gthtxn_out;
  output [0:0]gthtxp_out;
  output [3:0]gtpowergood_out;
  output [3:0]gtrefclkmonitor_out;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]pcierategen3_out;
  output [3:0]pcierateidle_out;
  output [7:0]pcierateqpllpd_out;
  output [7:0]pcierateqpllreset_out;
  output [3:0]pciesynctxsyncdone_out;
  output [3:0]pcieusergen3rdy_out;
  output [3:0]pcieuserphystatusrst_out;
  output [3:0]pcieuserratestart_out;
  output [63:0]pcsrsvdout_out;
  output [3:0]phystatus_out;
  output [63:0]pinrsrvdas_out;
  output [3:0]powerpresent_out;
  output [3:0]resetexception_out;
  output [11:0]rxbufstatus_out;
  output [3:0]rxbyteisaligned_out;
  output [3:0]rxbyterealign_out;
  output [3:0]rxcdrlock_out;
  output [3:0]rxcdrphdone_out;
  output [3:0]rxchanbondseq_out;
  output [3:0]rxchanisaligned_out;
  output [3:0]rxchanrealign_out;
  output [19:0]rxchbondo_out;
  output [3:0]rxckcaldone_out;
  output [7:0]rxclkcorcnt_out;
  output [3:0]rxcominitdet_out;
  output [3:0]rxcommadet_out;
  output [3:0]rxcomsasdet_out;
  output [3:0]rxcomwakedet_out;
  output [63:0]rxctrl0_out;
  output [63:0]rxctrl1_out;
  output [31:0]rxctrl2_out;
  output [31:0]rxctrl3_out;
  output [511:0]rxdata_out;
  output [31:0]rxdataextendrsvd_out;
  output [7:0]rxdatavalid_out;
  output [3:0]rxdlysresetdone_out;
  output [3:0]rxelecidle_out;
  output [23:0]rxheader_out;
  output [7:0]rxheadervalid_out;
  output [3:0]rxlfpstresetdet_out;
  output [3:0]rxlfpsu2lpexitdet_out;
  output [3:0]rxlfpsu3wakedet_out;
  output [31:0]rxmonitorout_out;
  output [3:0]rxosintdone_out;
  output [3:0]rxosintstarted_out;
  output [3:0]rxosintstrobedone_out;
  output [3:0]rxosintstrobestarted_out;
  output [3:0]rxoutclk_out;
  output [3:0]rxoutclkfabric_out;
  output [3:0]rxoutclkpcs_out;
  output [3:0]rxphaligndone_out;
  output [3:0]rxphalignerr_out;
  output [3:0]rxpmaresetdone_out;
  output [3:0]rxprbserr_out;
  output [3:0]rxprbslocked_out;
  output [3:0]rxprgdivresetdone_out;
  output [0:0]rxqpisenn_out;
  output [0:0]rxqpisenp_out;
  output [3:0]rxratedone_out;
  output [3:0]rxrecclkout_out;
  output [3:0]rxresetdone_out;
  output [3:0]rxsliderdy_out;
  output [3:0]rxslipdone_out;
  output [3:0]rxslipoutclkrdy_out;
  output [3:0]rxslippmardy_out;
  output [7:0]rxstartofseq_out;
  output [11:0]rxstatus_out;
  output [3:0]rxsyncdone_out;
  output [3:0]rxsyncout_out;
  output [3:0]rxvalid_out;
  output [7:0]txbufstatus_out;
  output [3:0]txcomfinish_out;
  output [3:0]txdccdone_out;
  output [3:0]txdlysresetdone_out;
  output [3:0]txoutclk_out;
  output [3:0]txoutclkfabric_out;
  output [3:0]txoutclkpcs_out;
  output [3:0]txphaligndone_out;
  output [3:0]txphinitdone_out;
  output [3:0]txpmaresetdone_out;
  output [3:0]txprgdivresetdone_out;
  output [0:0]txqpisenn_out;
  output [0:0]txqpisenp_out;
  output [3:0]txratedone_out;
  output [3:0]txresetdone_out;
  output [3:0]txsyncdone_out;
  output [3:0]txsyncout_out;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire \<const0> ;
  wire [3:0]drpclk_in;
  wire [3:0]gtpowergood_out;
  wire [3:0]gtrefclk0_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [11:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [3:0]qpll0clk_in;
  wire [3:0]qpll0refclk_in;
  wire [11:2]\^rxbufstatus_out ;
  wire [3:0]rxcdrovrden_in;
  wire [6:0]\^rxdatavalid_out ;
  wire [3:0]rxgearboxslip_in;
  wire [19:0]\^rxheader_out ;
  wire [6:0]\^rxheadervalid_out ;
  wire [2:2]\^rxoutclk_out ;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [3:0]rxusrclk2_in;
  wire [3:0]rxusrclk_in;
  wire [7:1]\^txbufstatus_out ;
  wire [23:0]txheader_in;
  wire [2:2]\^txoutclk_out ;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [3:0]txusrclk_in;

  assign bufgtce_out[3] = \<const0> ;
  assign bufgtce_out[2] = \<const0> ;
  assign bufgtce_out[1] = \<const0> ;
  assign bufgtce_out[0] = \<const0> ;
  assign bufgtcemask_out[11] = \<const0> ;
  assign bufgtcemask_out[10] = \<const0> ;
  assign bufgtcemask_out[9] = \<const0> ;
  assign bufgtcemask_out[8] = \<const0> ;
  assign bufgtcemask_out[7] = \<const0> ;
  assign bufgtcemask_out[6] = \<const0> ;
  assign bufgtcemask_out[5] = \<const0> ;
  assign bufgtcemask_out[4] = \<const0> ;
  assign bufgtcemask_out[3] = \<const0> ;
  assign bufgtcemask_out[2] = \<const0> ;
  assign bufgtcemask_out[1] = \<const0> ;
  assign bufgtcemask_out[0] = \<const0> ;
  assign bufgtdiv_out[35] = \<const0> ;
  assign bufgtdiv_out[34] = \<const0> ;
  assign bufgtdiv_out[33] = \<const0> ;
  assign bufgtdiv_out[32] = \<const0> ;
  assign bufgtdiv_out[31] = \<const0> ;
  assign bufgtdiv_out[30] = \<const0> ;
  assign bufgtdiv_out[29] = \<const0> ;
  assign bufgtdiv_out[28] = \<const0> ;
  assign bufgtdiv_out[27] = \<const0> ;
  assign bufgtdiv_out[26] = \<const0> ;
  assign bufgtdiv_out[25] = \<const0> ;
  assign bufgtdiv_out[24] = \<const0> ;
  assign bufgtdiv_out[23] = \<const0> ;
  assign bufgtdiv_out[22] = \<const0> ;
  assign bufgtdiv_out[21] = \<const0> ;
  assign bufgtdiv_out[20] = \<const0> ;
  assign bufgtdiv_out[19] = \<const0> ;
  assign bufgtdiv_out[18] = \<const0> ;
  assign bufgtdiv_out[17] = \<const0> ;
  assign bufgtdiv_out[16] = \<const0> ;
  assign bufgtdiv_out[15] = \<const0> ;
  assign bufgtdiv_out[14] = \<const0> ;
  assign bufgtdiv_out[13] = \<const0> ;
  assign bufgtdiv_out[12] = \<const0> ;
  assign bufgtdiv_out[11] = \<const0> ;
  assign bufgtdiv_out[10] = \<const0> ;
  assign bufgtdiv_out[9] = \<const0> ;
  assign bufgtdiv_out[8] = \<const0> ;
  assign bufgtdiv_out[7] = \<const0> ;
  assign bufgtdiv_out[6] = \<const0> ;
  assign bufgtdiv_out[5] = \<const0> ;
  assign bufgtdiv_out[4] = \<const0> ;
  assign bufgtdiv_out[3] = \<const0> ;
  assign bufgtdiv_out[2] = \<const0> ;
  assign bufgtdiv_out[1] = \<const0> ;
  assign bufgtdiv_out[0] = \<const0> ;
  assign bufgtreset_out[3] = \<const0> ;
  assign bufgtreset_out[2] = \<const0> ;
  assign bufgtreset_out[1] = \<const0> ;
  assign bufgtreset_out[0] = \<const0> ;
  assign bufgtrstmask_out[11] = \<const0> ;
  assign bufgtrstmask_out[10] = \<const0> ;
  assign bufgtrstmask_out[9] = \<const0> ;
  assign bufgtrstmask_out[8] = \<const0> ;
  assign bufgtrstmask_out[7] = \<const0> ;
  assign bufgtrstmask_out[6] = \<const0> ;
  assign bufgtrstmask_out[5] = \<const0> ;
  assign bufgtrstmask_out[4] = \<const0> ;
  assign bufgtrstmask_out[3] = \<const0> ;
  assign bufgtrstmask_out[2] = \<const0> ;
  assign bufgtrstmask_out[1] = \<const0> ;
  assign bufgtrstmask_out[0] = \<const0> ;
  assign cpllfbclklost_out[3] = \<const0> ;
  assign cpllfbclklost_out[2] = \<const0> ;
  assign cpllfbclklost_out[1] = \<const0> ;
  assign cpllfbclklost_out[0] = \<const0> ;
  assign cplllock_out[3] = \<const0> ;
  assign cplllock_out[2] = \<const0> ;
  assign cplllock_out[1] = \<const0> ;
  assign cplllock_out[0] = \<const0> ;
  assign cpllrefclklost_out[3] = \<const0> ;
  assign cpllrefclklost_out[2] = \<const0> ;
  assign cpllrefclklost_out[1] = \<const0> ;
  assign cpllrefclklost_out[0] = \<const0> ;
  assign dmonitorout_out[63] = \<const0> ;
  assign dmonitorout_out[62] = \<const0> ;
  assign dmonitorout_out[61] = \<const0> ;
  assign dmonitorout_out[60] = \<const0> ;
  assign dmonitorout_out[59] = \<const0> ;
  assign dmonitorout_out[58] = \<const0> ;
  assign dmonitorout_out[57] = \<const0> ;
  assign dmonitorout_out[56] = \<const0> ;
  assign dmonitorout_out[55] = \<const0> ;
  assign dmonitorout_out[54] = \<const0> ;
  assign dmonitorout_out[53] = \<const0> ;
  assign dmonitorout_out[52] = \<const0> ;
  assign dmonitorout_out[51] = \<const0> ;
  assign dmonitorout_out[50] = \<const0> ;
  assign dmonitorout_out[49] = \<const0> ;
  assign dmonitorout_out[48] = \<const0> ;
  assign dmonitorout_out[47] = \<const0> ;
  assign dmonitorout_out[46] = \<const0> ;
  assign dmonitorout_out[45] = \<const0> ;
  assign dmonitorout_out[44] = \<const0> ;
  assign dmonitorout_out[43] = \<const0> ;
  assign dmonitorout_out[42] = \<const0> ;
  assign dmonitorout_out[41] = \<const0> ;
  assign dmonitorout_out[40] = \<const0> ;
  assign dmonitorout_out[39] = \<const0> ;
  assign dmonitorout_out[38] = \<const0> ;
  assign dmonitorout_out[37] = \<const0> ;
  assign dmonitorout_out[36] = \<const0> ;
  assign dmonitorout_out[35] = \<const0> ;
  assign dmonitorout_out[34] = \<const0> ;
  assign dmonitorout_out[33] = \<const0> ;
  assign dmonitorout_out[32] = \<const0> ;
  assign dmonitorout_out[31] = \<const0> ;
  assign dmonitorout_out[30] = \<const0> ;
  assign dmonitorout_out[29] = \<const0> ;
  assign dmonitorout_out[28] = \<const0> ;
  assign dmonitorout_out[27] = \<const0> ;
  assign dmonitorout_out[26] = \<const0> ;
  assign dmonitorout_out[25] = \<const0> ;
  assign dmonitorout_out[24] = \<const0> ;
  assign dmonitorout_out[23] = \<const0> ;
  assign dmonitorout_out[22] = \<const0> ;
  assign dmonitorout_out[21] = \<const0> ;
  assign dmonitorout_out[20] = \<const0> ;
  assign dmonitorout_out[19] = \<const0> ;
  assign dmonitorout_out[18] = \<const0> ;
  assign dmonitorout_out[17] = \<const0> ;
  assign dmonitorout_out[16] = \<const0> ;
  assign dmonitorout_out[15] = \<const0> ;
  assign dmonitorout_out[14] = \<const0> ;
  assign dmonitorout_out[13] = \<const0> ;
  assign dmonitorout_out[12] = \<const0> ;
  assign dmonitorout_out[11] = \<const0> ;
  assign dmonitorout_out[10] = \<const0> ;
  assign dmonitorout_out[9] = \<const0> ;
  assign dmonitorout_out[8] = \<const0> ;
  assign dmonitorout_out[7] = \<const0> ;
  assign dmonitorout_out[6] = \<const0> ;
  assign dmonitorout_out[5] = \<const0> ;
  assign dmonitorout_out[4] = \<const0> ;
  assign dmonitorout_out[3] = \<const0> ;
  assign dmonitorout_out[2] = \<const0> ;
  assign dmonitorout_out[1] = \<const0> ;
  assign dmonitorout_out[0] = \<const0> ;
  assign dmonitoroutclk_out[3] = \<const0> ;
  assign dmonitoroutclk_out[2] = \<const0> ;
  assign dmonitoroutclk_out[1] = \<const0> ;
  assign dmonitoroutclk_out[0] = \<const0> ;
  assign drpdo_common_out[15] = \<const0> ;
  assign drpdo_common_out[14] = \<const0> ;
  assign drpdo_common_out[13] = \<const0> ;
  assign drpdo_common_out[12] = \<const0> ;
  assign drpdo_common_out[11] = \<const0> ;
  assign drpdo_common_out[10] = \<const0> ;
  assign drpdo_common_out[9] = \<const0> ;
  assign drpdo_common_out[8] = \<const0> ;
  assign drpdo_common_out[7] = \<const0> ;
  assign drpdo_common_out[6] = \<const0> ;
  assign drpdo_common_out[5] = \<const0> ;
  assign drpdo_common_out[4] = \<const0> ;
  assign drpdo_common_out[3] = \<const0> ;
  assign drpdo_common_out[2] = \<const0> ;
  assign drpdo_common_out[1] = \<const0> ;
  assign drpdo_common_out[0] = \<const0> ;
  assign drpdo_out[63] = \<const0> ;
  assign drpdo_out[62] = \<const0> ;
  assign drpdo_out[61] = \<const0> ;
  assign drpdo_out[60] = \<const0> ;
  assign drpdo_out[59] = \<const0> ;
  assign drpdo_out[58] = \<const0> ;
  assign drpdo_out[57] = \<const0> ;
  assign drpdo_out[56] = \<const0> ;
  assign drpdo_out[55] = \<const0> ;
  assign drpdo_out[54] = \<const0> ;
  assign drpdo_out[53] = \<const0> ;
  assign drpdo_out[52] = \<const0> ;
  assign drpdo_out[51] = \<const0> ;
  assign drpdo_out[50] = \<const0> ;
  assign drpdo_out[49] = \<const0> ;
  assign drpdo_out[48] = \<const0> ;
  assign drpdo_out[47] = \<const0> ;
  assign drpdo_out[46] = \<const0> ;
  assign drpdo_out[45] = \<const0> ;
  assign drpdo_out[44] = \<const0> ;
  assign drpdo_out[43] = \<const0> ;
  assign drpdo_out[42] = \<const0> ;
  assign drpdo_out[41] = \<const0> ;
  assign drpdo_out[40] = \<const0> ;
  assign drpdo_out[39] = \<const0> ;
  assign drpdo_out[38] = \<const0> ;
  assign drpdo_out[37] = \<const0> ;
  assign drpdo_out[36] = \<const0> ;
  assign drpdo_out[35] = \<const0> ;
  assign drpdo_out[34] = \<const0> ;
  assign drpdo_out[33] = \<const0> ;
  assign drpdo_out[32] = \<const0> ;
  assign drpdo_out[31] = \<const0> ;
  assign drpdo_out[30] = \<const0> ;
  assign drpdo_out[29] = \<const0> ;
  assign drpdo_out[28] = \<const0> ;
  assign drpdo_out[27] = \<const0> ;
  assign drpdo_out[26] = \<const0> ;
  assign drpdo_out[25] = \<const0> ;
  assign drpdo_out[24] = \<const0> ;
  assign drpdo_out[23] = \<const0> ;
  assign drpdo_out[22] = \<const0> ;
  assign drpdo_out[21] = \<const0> ;
  assign drpdo_out[20] = \<const0> ;
  assign drpdo_out[19] = \<const0> ;
  assign drpdo_out[18] = \<const0> ;
  assign drpdo_out[17] = \<const0> ;
  assign drpdo_out[16] = \<const0> ;
  assign drpdo_out[15] = \<const0> ;
  assign drpdo_out[14] = \<const0> ;
  assign drpdo_out[13] = \<const0> ;
  assign drpdo_out[12] = \<const0> ;
  assign drpdo_out[11] = \<const0> ;
  assign drpdo_out[10] = \<const0> ;
  assign drpdo_out[9] = \<const0> ;
  assign drpdo_out[8] = \<const0> ;
  assign drpdo_out[7] = \<const0> ;
  assign drpdo_out[6] = \<const0> ;
  assign drpdo_out[5] = \<const0> ;
  assign drpdo_out[4] = \<const0> ;
  assign drpdo_out[3] = \<const0> ;
  assign drpdo_out[2] = \<const0> ;
  assign drpdo_out[1] = \<const0> ;
  assign drpdo_out[0] = \<const0> ;
  assign drprdy_common_out[0] = \<const0> ;
  assign drprdy_out[3] = \<const0> ;
  assign drprdy_out[2] = \<const0> ;
  assign drprdy_out[1] = \<const0> ;
  assign drprdy_out[0] = \<const0> ;
  assign eyescandataerror_out[3] = \<const0> ;
  assign eyescandataerror_out[2] = \<const0> ;
  assign eyescandataerror_out[1] = \<const0> ;
  assign eyescandataerror_out[0] = \<const0> ;
  assign gthtxn_out[0] = \<const0> ;
  assign gthtxp_out[0] = \<const0> ;
  assign gtrefclkmonitor_out[3] = \<const0> ;
  assign gtrefclkmonitor_out[2] = \<const0> ;
  assign gtrefclkmonitor_out[1] = \<const0> ;
  assign gtrefclkmonitor_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_rx_error_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_done_out[0] = \<const0> ;
  assign gtwiz_buffbypass_tx_error_out[0] = \<const0> ;
  assign gtwiz_reset_qpll1reset_out[0] = \<const0> ;
  assign gtwiz_reset_rx_cdr_stable_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_rx_usrclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_active_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_srcclk_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk2_out[0] = \<const0> ;
  assign gtwiz_userclk_tx_usrclk_out[0] = \<const0> ;
  assign pcierategen3_out[3] = \<const0> ;
  assign pcierategen3_out[2] = \<const0> ;
  assign pcierategen3_out[1] = \<const0> ;
  assign pcierategen3_out[0] = \<const0> ;
  assign pcierateidle_out[3] = \<const0> ;
  assign pcierateidle_out[2] = \<const0> ;
  assign pcierateidle_out[1] = \<const0> ;
  assign pcierateidle_out[0] = \<const0> ;
  assign pcierateqpllpd_out[7] = \<const0> ;
  assign pcierateqpllpd_out[6] = \<const0> ;
  assign pcierateqpllpd_out[5] = \<const0> ;
  assign pcierateqpllpd_out[4] = \<const0> ;
  assign pcierateqpllpd_out[3] = \<const0> ;
  assign pcierateqpllpd_out[2] = \<const0> ;
  assign pcierateqpllpd_out[1] = \<const0> ;
  assign pcierateqpllpd_out[0] = \<const0> ;
  assign pcierateqpllreset_out[7] = \<const0> ;
  assign pcierateqpllreset_out[6] = \<const0> ;
  assign pcierateqpllreset_out[5] = \<const0> ;
  assign pcierateqpllreset_out[4] = \<const0> ;
  assign pcierateqpllreset_out[3] = \<const0> ;
  assign pcierateqpllreset_out[2] = \<const0> ;
  assign pcierateqpllreset_out[1] = \<const0> ;
  assign pcierateqpllreset_out[0] = \<const0> ;
  assign pciesynctxsyncdone_out[3] = \<const0> ;
  assign pciesynctxsyncdone_out[2] = \<const0> ;
  assign pciesynctxsyncdone_out[1] = \<const0> ;
  assign pciesynctxsyncdone_out[0] = \<const0> ;
  assign pcieusergen3rdy_out[3] = \<const0> ;
  assign pcieusergen3rdy_out[2] = \<const0> ;
  assign pcieusergen3rdy_out[1] = \<const0> ;
  assign pcieusergen3rdy_out[0] = \<const0> ;
  assign pcieuserphystatusrst_out[3] = \<const0> ;
  assign pcieuserphystatusrst_out[2] = \<const0> ;
  assign pcieuserphystatusrst_out[1] = \<const0> ;
  assign pcieuserphystatusrst_out[0] = \<const0> ;
  assign pcieuserratestart_out[3] = \<const0> ;
  assign pcieuserratestart_out[2] = \<const0> ;
  assign pcieuserratestart_out[1] = \<const0> ;
  assign pcieuserratestart_out[0] = \<const0> ;
  assign pcsrsvdout_out[63] = \<const0> ;
  assign pcsrsvdout_out[62] = \<const0> ;
  assign pcsrsvdout_out[61] = \<const0> ;
  assign pcsrsvdout_out[60] = \<const0> ;
  assign pcsrsvdout_out[59] = \<const0> ;
  assign pcsrsvdout_out[58] = \<const0> ;
  assign pcsrsvdout_out[57] = \<const0> ;
  assign pcsrsvdout_out[56] = \<const0> ;
  assign pcsrsvdout_out[55] = \<const0> ;
  assign pcsrsvdout_out[54] = \<const0> ;
  assign pcsrsvdout_out[53] = \<const0> ;
  assign pcsrsvdout_out[52] = \<const0> ;
  assign pcsrsvdout_out[51] = \<const0> ;
  assign pcsrsvdout_out[50] = \<const0> ;
  assign pcsrsvdout_out[49] = \<const0> ;
  assign pcsrsvdout_out[48] = \<const0> ;
  assign pcsrsvdout_out[47] = \<const0> ;
  assign pcsrsvdout_out[46] = \<const0> ;
  assign pcsrsvdout_out[45] = \<const0> ;
  assign pcsrsvdout_out[44] = \<const0> ;
  assign pcsrsvdout_out[43] = \<const0> ;
  assign pcsrsvdout_out[42] = \<const0> ;
  assign pcsrsvdout_out[41] = \<const0> ;
  assign pcsrsvdout_out[40] = \<const0> ;
  assign pcsrsvdout_out[39] = \<const0> ;
  assign pcsrsvdout_out[38] = \<const0> ;
  assign pcsrsvdout_out[37] = \<const0> ;
  assign pcsrsvdout_out[36] = \<const0> ;
  assign pcsrsvdout_out[35] = \<const0> ;
  assign pcsrsvdout_out[34] = \<const0> ;
  assign pcsrsvdout_out[33] = \<const0> ;
  assign pcsrsvdout_out[32] = \<const0> ;
  assign pcsrsvdout_out[31] = \<const0> ;
  assign pcsrsvdout_out[30] = \<const0> ;
  assign pcsrsvdout_out[29] = \<const0> ;
  assign pcsrsvdout_out[28] = \<const0> ;
  assign pcsrsvdout_out[27] = \<const0> ;
  assign pcsrsvdout_out[26] = \<const0> ;
  assign pcsrsvdout_out[25] = \<const0> ;
  assign pcsrsvdout_out[24] = \<const0> ;
  assign pcsrsvdout_out[23] = \<const0> ;
  assign pcsrsvdout_out[22] = \<const0> ;
  assign pcsrsvdout_out[21] = \<const0> ;
  assign pcsrsvdout_out[20] = \<const0> ;
  assign pcsrsvdout_out[19] = \<const0> ;
  assign pcsrsvdout_out[18] = \<const0> ;
  assign pcsrsvdout_out[17] = \<const0> ;
  assign pcsrsvdout_out[16] = \<const0> ;
  assign pcsrsvdout_out[15] = \<const0> ;
  assign pcsrsvdout_out[14] = \<const0> ;
  assign pcsrsvdout_out[13] = \<const0> ;
  assign pcsrsvdout_out[12] = \<const0> ;
  assign pcsrsvdout_out[11] = \<const0> ;
  assign pcsrsvdout_out[10] = \<const0> ;
  assign pcsrsvdout_out[9] = \<const0> ;
  assign pcsrsvdout_out[8] = \<const0> ;
  assign pcsrsvdout_out[7] = \<const0> ;
  assign pcsrsvdout_out[6] = \<const0> ;
  assign pcsrsvdout_out[5] = \<const0> ;
  assign pcsrsvdout_out[4] = \<const0> ;
  assign pcsrsvdout_out[3] = \<const0> ;
  assign pcsrsvdout_out[2] = \<const0> ;
  assign pcsrsvdout_out[1] = \<const0> ;
  assign pcsrsvdout_out[0] = \<const0> ;
  assign phystatus_out[3] = \<const0> ;
  assign phystatus_out[2] = \<const0> ;
  assign phystatus_out[1] = \<const0> ;
  assign phystatus_out[0] = \<const0> ;
  assign pinrsrvdas_out[63] = \<const0> ;
  assign pinrsrvdas_out[62] = \<const0> ;
  assign pinrsrvdas_out[61] = \<const0> ;
  assign pinrsrvdas_out[60] = \<const0> ;
  assign pinrsrvdas_out[59] = \<const0> ;
  assign pinrsrvdas_out[58] = \<const0> ;
  assign pinrsrvdas_out[57] = \<const0> ;
  assign pinrsrvdas_out[56] = \<const0> ;
  assign pinrsrvdas_out[55] = \<const0> ;
  assign pinrsrvdas_out[54] = \<const0> ;
  assign pinrsrvdas_out[53] = \<const0> ;
  assign pinrsrvdas_out[52] = \<const0> ;
  assign pinrsrvdas_out[51] = \<const0> ;
  assign pinrsrvdas_out[50] = \<const0> ;
  assign pinrsrvdas_out[49] = \<const0> ;
  assign pinrsrvdas_out[48] = \<const0> ;
  assign pinrsrvdas_out[47] = \<const0> ;
  assign pinrsrvdas_out[46] = \<const0> ;
  assign pinrsrvdas_out[45] = \<const0> ;
  assign pinrsrvdas_out[44] = \<const0> ;
  assign pinrsrvdas_out[43] = \<const0> ;
  assign pinrsrvdas_out[42] = \<const0> ;
  assign pinrsrvdas_out[41] = \<const0> ;
  assign pinrsrvdas_out[40] = \<const0> ;
  assign pinrsrvdas_out[39] = \<const0> ;
  assign pinrsrvdas_out[38] = \<const0> ;
  assign pinrsrvdas_out[37] = \<const0> ;
  assign pinrsrvdas_out[36] = \<const0> ;
  assign pinrsrvdas_out[35] = \<const0> ;
  assign pinrsrvdas_out[34] = \<const0> ;
  assign pinrsrvdas_out[33] = \<const0> ;
  assign pinrsrvdas_out[32] = \<const0> ;
  assign pinrsrvdas_out[31] = \<const0> ;
  assign pinrsrvdas_out[30] = \<const0> ;
  assign pinrsrvdas_out[29] = \<const0> ;
  assign pinrsrvdas_out[28] = \<const0> ;
  assign pinrsrvdas_out[27] = \<const0> ;
  assign pinrsrvdas_out[26] = \<const0> ;
  assign pinrsrvdas_out[25] = \<const0> ;
  assign pinrsrvdas_out[24] = \<const0> ;
  assign pinrsrvdas_out[23] = \<const0> ;
  assign pinrsrvdas_out[22] = \<const0> ;
  assign pinrsrvdas_out[21] = \<const0> ;
  assign pinrsrvdas_out[20] = \<const0> ;
  assign pinrsrvdas_out[19] = \<const0> ;
  assign pinrsrvdas_out[18] = \<const0> ;
  assign pinrsrvdas_out[17] = \<const0> ;
  assign pinrsrvdas_out[16] = \<const0> ;
  assign pinrsrvdas_out[15] = \<const0> ;
  assign pinrsrvdas_out[14] = \<const0> ;
  assign pinrsrvdas_out[13] = \<const0> ;
  assign pinrsrvdas_out[12] = \<const0> ;
  assign pinrsrvdas_out[11] = \<const0> ;
  assign pinrsrvdas_out[10] = \<const0> ;
  assign pinrsrvdas_out[9] = \<const0> ;
  assign pinrsrvdas_out[8] = \<const0> ;
  assign pinrsrvdas_out[7] = \<const0> ;
  assign pinrsrvdas_out[6] = \<const0> ;
  assign pinrsrvdas_out[5] = \<const0> ;
  assign pinrsrvdas_out[4] = \<const0> ;
  assign pinrsrvdas_out[3] = \<const0> ;
  assign pinrsrvdas_out[2] = \<const0> ;
  assign pinrsrvdas_out[1] = \<const0> ;
  assign pinrsrvdas_out[0] = \<const0> ;
  assign pmarsvdout0_out[7] = \<const0> ;
  assign pmarsvdout0_out[6] = \<const0> ;
  assign pmarsvdout0_out[5] = \<const0> ;
  assign pmarsvdout0_out[4] = \<const0> ;
  assign pmarsvdout0_out[3] = \<const0> ;
  assign pmarsvdout0_out[2] = \<const0> ;
  assign pmarsvdout0_out[1] = \<const0> ;
  assign pmarsvdout0_out[0] = \<const0> ;
  assign pmarsvdout1_out[7] = \<const0> ;
  assign pmarsvdout1_out[6] = \<const0> ;
  assign pmarsvdout1_out[5] = \<const0> ;
  assign pmarsvdout1_out[4] = \<const0> ;
  assign pmarsvdout1_out[3] = \<const0> ;
  assign pmarsvdout1_out[2] = \<const0> ;
  assign pmarsvdout1_out[1] = \<const0> ;
  assign pmarsvdout1_out[0] = \<const0> ;
  assign powerpresent_out[3] = \<const0> ;
  assign powerpresent_out[2] = \<const0> ;
  assign powerpresent_out[1] = \<const0> ;
  assign powerpresent_out[0] = \<const0> ;
  assign qpll0fbclklost_out[0] = \<const0> ;
  assign qpll0lock_out[0] = \<const0> ;
  assign qpll0outclk_out[0] = \<const0> ;
  assign qpll0outrefclk_out[0] = \<const0> ;
  assign qpll0refclklost_out[0] = \<const0> ;
  assign qpll1fbclklost_out[0] = \<const0> ;
  assign qpll1lock_out[0] = \<const0> ;
  assign qpll1outclk_out[0] = \<const0> ;
  assign qpll1outrefclk_out[0] = \<const0> ;
  assign qpll1refclklost_out[0] = \<const0> ;
  assign qplldmonitor0_out[7] = \<const0> ;
  assign qplldmonitor0_out[6] = \<const0> ;
  assign qplldmonitor0_out[5] = \<const0> ;
  assign qplldmonitor0_out[4] = \<const0> ;
  assign qplldmonitor0_out[3] = \<const0> ;
  assign qplldmonitor0_out[2] = \<const0> ;
  assign qplldmonitor0_out[1] = \<const0> ;
  assign qplldmonitor0_out[0] = \<const0> ;
  assign qplldmonitor1_out[7] = \<const0> ;
  assign qplldmonitor1_out[6] = \<const0> ;
  assign qplldmonitor1_out[5] = \<const0> ;
  assign qplldmonitor1_out[4] = \<const0> ;
  assign qplldmonitor1_out[3] = \<const0> ;
  assign qplldmonitor1_out[2] = \<const0> ;
  assign qplldmonitor1_out[1] = \<const0> ;
  assign qplldmonitor1_out[0] = \<const0> ;
  assign refclkoutmonitor0_out[0] = \<const0> ;
  assign refclkoutmonitor1_out[0] = \<const0> ;
  assign resetexception_out[3] = \<const0> ;
  assign resetexception_out[2] = \<const0> ;
  assign resetexception_out[1] = \<const0> ;
  assign resetexception_out[0] = \<const0> ;
  assign rxbufstatus_out[11] = \^rxbufstatus_out [11];
  assign rxbufstatus_out[10] = \<const0> ;
  assign rxbufstatus_out[9] = \<const0> ;
  assign rxbufstatus_out[8] = \^rxbufstatus_out [8];
  assign rxbufstatus_out[7] = \<const0> ;
  assign rxbufstatus_out[6] = \<const0> ;
  assign rxbufstatus_out[5] = \^rxbufstatus_out [5];
  assign rxbufstatus_out[4] = \<const0> ;
  assign rxbufstatus_out[3] = \<const0> ;
  assign rxbufstatus_out[2] = \^rxbufstatus_out [2];
  assign rxbufstatus_out[1] = \<const0> ;
  assign rxbufstatus_out[0] = \<const0> ;
  assign rxbyteisaligned_out[3] = \<const0> ;
  assign rxbyteisaligned_out[2] = \<const0> ;
  assign rxbyteisaligned_out[1] = \<const0> ;
  assign rxbyteisaligned_out[0] = \<const0> ;
  assign rxbyterealign_out[3] = \<const0> ;
  assign rxbyterealign_out[2] = \<const0> ;
  assign rxbyterealign_out[1] = \<const0> ;
  assign rxbyterealign_out[0] = \<const0> ;
  assign rxcdrlock_out[3] = \<const0> ;
  assign rxcdrlock_out[2] = \<const0> ;
  assign rxcdrlock_out[1] = \<const0> ;
  assign rxcdrlock_out[0] = \<const0> ;
  assign rxcdrphdone_out[3] = \<const0> ;
  assign rxcdrphdone_out[2] = \<const0> ;
  assign rxcdrphdone_out[1] = \<const0> ;
  assign rxcdrphdone_out[0] = \<const0> ;
  assign rxchanbondseq_out[3] = \<const0> ;
  assign rxchanbondseq_out[2] = \<const0> ;
  assign rxchanbondseq_out[1] = \<const0> ;
  assign rxchanbondseq_out[0] = \<const0> ;
  assign rxchanisaligned_out[3] = \<const0> ;
  assign rxchanisaligned_out[2] = \<const0> ;
  assign rxchanisaligned_out[1] = \<const0> ;
  assign rxchanisaligned_out[0] = \<const0> ;
  assign rxchanrealign_out[3] = \<const0> ;
  assign rxchanrealign_out[2] = \<const0> ;
  assign rxchanrealign_out[1] = \<const0> ;
  assign rxchanrealign_out[0] = \<const0> ;
  assign rxchbondo_out[19] = \<const0> ;
  assign rxchbondo_out[18] = \<const0> ;
  assign rxchbondo_out[17] = \<const0> ;
  assign rxchbondo_out[16] = \<const0> ;
  assign rxchbondo_out[15] = \<const0> ;
  assign rxchbondo_out[14] = \<const0> ;
  assign rxchbondo_out[13] = \<const0> ;
  assign rxchbondo_out[12] = \<const0> ;
  assign rxchbondo_out[11] = \<const0> ;
  assign rxchbondo_out[10] = \<const0> ;
  assign rxchbondo_out[9] = \<const0> ;
  assign rxchbondo_out[8] = \<const0> ;
  assign rxchbondo_out[7] = \<const0> ;
  assign rxchbondo_out[6] = \<const0> ;
  assign rxchbondo_out[5] = \<const0> ;
  assign rxchbondo_out[4] = \<const0> ;
  assign rxchbondo_out[3] = \<const0> ;
  assign rxchbondo_out[2] = \<const0> ;
  assign rxchbondo_out[1] = \<const0> ;
  assign rxchbondo_out[0] = \<const0> ;
  assign rxckcaldone_out[3] = \<const0> ;
  assign rxckcaldone_out[2] = \<const0> ;
  assign rxckcaldone_out[1] = \<const0> ;
  assign rxckcaldone_out[0] = \<const0> ;
  assign rxclkcorcnt_out[7] = \<const0> ;
  assign rxclkcorcnt_out[6] = \<const0> ;
  assign rxclkcorcnt_out[5] = \<const0> ;
  assign rxclkcorcnt_out[4] = \<const0> ;
  assign rxclkcorcnt_out[3] = \<const0> ;
  assign rxclkcorcnt_out[2] = \<const0> ;
  assign rxclkcorcnt_out[1] = \<const0> ;
  assign rxclkcorcnt_out[0] = \<const0> ;
  assign rxcominitdet_out[3] = \<const0> ;
  assign rxcominitdet_out[2] = \<const0> ;
  assign rxcominitdet_out[1] = \<const0> ;
  assign rxcominitdet_out[0] = \<const0> ;
  assign rxcommadet_out[3] = \<const0> ;
  assign rxcommadet_out[2] = \<const0> ;
  assign rxcommadet_out[1] = \<const0> ;
  assign rxcommadet_out[0] = \<const0> ;
  assign rxcomsasdet_out[3] = \<const0> ;
  assign rxcomsasdet_out[2] = \<const0> ;
  assign rxcomsasdet_out[1] = \<const0> ;
  assign rxcomsasdet_out[0] = \<const0> ;
  assign rxcomwakedet_out[3] = \<const0> ;
  assign rxcomwakedet_out[2] = \<const0> ;
  assign rxcomwakedet_out[1] = \<const0> ;
  assign rxcomwakedet_out[0] = \<const0> ;
  assign rxctrl0_out[63] = \<const0> ;
  assign rxctrl0_out[62] = \<const0> ;
  assign rxctrl0_out[61] = \<const0> ;
  assign rxctrl0_out[60] = \<const0> ;
  assign rxctrl0_out[59] = \<const0> ;
  assign rxctrl0_out[58] = \<const0> ;
  assign rxctrl0_out[57] = \<const0> ;
  assign rxctrl0_out[56] = \<const0> ;
  assign rxctrl0_out[55] = \<const0> ;
  assign rxctrl0_out[54] = \<const0> ;
  assign rxctrl0_out[53] = \<const0> ;
  assign rxctrl0_out[52] = \<const0> ;
  assign rxctrl0_out[51] = \<const0> ;
  assign rxctrl0_out[50] = \<const0> ;
  assign rxctrl0_out[49] = \<const0> ;
  assign rxctrl0_out[48] = \<const0> ;
  assign rxctrl0_out[47] = \<const0> ;
  assign rxctrl0_out[46] = \<const0> ;
  assign rxctrl0_out[45] = \<const0> ;
  assign rxctrl0_out[44] = \<const0> ;
  assign rxctrl0_out[43] = \<const0> ;
  assign rxctrl0_out[42] = \<const0> ;
  assign rxctrl0_out[41] = \<const0> ;
  assign rxctrl0_out[40] = \<const0> ;
  assign rxctrl0_out[39] = \<const0> ;
  assign rxctrl0_out[38] = \<const0> ;
  assign rxctrl0_out[37] = \<const0> ;
  assign rxctrl0_out[36] = \<const0> ;
  assign rxctrl0_out[35] = \<const0> ;
  assign rxctrl0_out[34] = \<const0> ;
  assign rxctrl0_out[33] = \<const0> ;
  assign rxctrl0_out[32] = \<const0> ;
  assign rxctrl0_out[31] = \<const0> ;
  assign rxctrl0_out[30] = \<const0> ;
  assign rxctrl0_out[29] = \<const0> ;
  assign rxctrl0_out[28] = \<const0> ;
  assign rxctrl0_out[27] = \<const0> ;
  assign rxctrl0_out[26] = \<const0> ;
  assign rxctrl0_out[25] = \<const0> ;
  assign rxctrl0_out[24] = \<const0> ;
  assign rxctrl0_out[23] = \<const0> ;
  assign rxctrl0_out[22] = \<const0> ;
  assign rxctrl0_out[21] = \<const0> ;
  assign rxctrl0_out[20] = \<const0> ;
  assign rxctrl0_out[19] = \<const0> ;
  assign rxctrl0_out[18] = \<const0> ;
  assign rxctrl0_out[17] = \<const0> ;
  assign rxctrl0_out[16] = \<const0> ;
  assign rxctrl0_out[15] = \<const0> ;
  assign rxctrl0_out[14] = \<const0> ;
  assign rxctrl0_out[13] = \<const0> ;
  assign rxctrl0_out[12] = \<const0> ;
  assign rxctrl0_out[11] = \<const0> ;
  assign rxctrl0_out[10] = \<const0> ;
  assign rxctrl0_out[9] = \<const0> ;
  assign rxctrl0_out[8] = \<const0> ;
  assign rxctrl0_out[7] = \<const0> ;
  assign rxctrl0_out[6] = \<const0> ;
  assign rxctrl0_out[5] = \<const0> ;
  assign rxctrl0_out[4] = \<const0> ;
  assign rxctrl0_out[3] = \<const0> ;
  assign rxctrl0_out[2] = \<const0> ;
  assign rxctrl0_out[1] = \<const0> ;
  assign rxctrl0_out[0] = \<const0> ;
  assign rxctrl1_out[63] = \<const0> ;
  assign rxctrl1_out[62] = \<const0> ;
  assign rxctrl1_out[61] = \<const0> ;
  assign rxctrl1_out[60] = \<const0> ;
  assign rxctrl1_out[59] = \<const0> ;
  assign rxctrl1_out[58] = \<const0> ;
  assign rxctrl1_out[57] = \<const0> ;
  assign rxctrl1_out[56] = \<const0> ;
  assign rxctrl1_out[55] = \<const0> ;
  assign rxctrl1_out[54] = \<const0> ;
  assign rxctrl1_out[53] = \<const0> ;
  assign rxctrl1_out[52] = \<const0> ;
  assign rxctrl1_out[51] = \<const0> ;
  assign rxctrl1_out[50] = \<const0> ;
  assign rxctrl1_out[49] = \<const0> ;
  assign rxctrl1_out[48] = \<const0> ;
  assign rxctrl1_out[47] = \<const0> ;
  assign rxctrl1_out[46] = \<const0> ;
  assign rxctrl1_out[45] = \<const0> ;
  assign rxctrl1_out[44] = \<const0> ;
  assign rxctrl1_out[43] = \<const0> ;
  assign rxctrl1_out[42] = \<const0> ;
  assign rxctrl1_out[41] = \<const0> ;
  assign rxctrl1_out[40] = \<const0> ;
  assign rxctrl1_out[39] = \<const0> ;
  assign rxctrl1_out[38] = \<const0> ;
  assign rxctrl1_out[37] = \<const0> ;
  assign rxctrl1_out[36] = \<const0> ;
  assign rxctrl1_out[35] = \<const0> ;
  assign rxctrl1_out[34] = \<const0> ;
  assign rxctrl1_out[33] = \<const0> ;
  assign rxctrl1_out[32] = \<const0> ;
  assign rxctrl1_out[31] = \<const0> ;
  assign rxctrl1_out[30] = \<const0> ;
  assign rxctrl1_out[29] = \<const0> ;
  assign rxctrl1_out[28] = \<const0> ;
  assign rxctrl1_out[27] = \<const0> ;
  assign rxctrl1_out[26] = \<const0> ;
  assign rxctrl1_out[25] = \<const0> ;
  assign rxctrl1_out[24] = \<const0> ;
  assign rxctrl1_out[23] = \<const0> ;
  assign rxctrl1_out[22] = \<const0> ;
  assign rxctrl1_out[21] = \<const0> ;
  assign rxctrl1_out[20] = \<const0> ;
  assign rxctrl1_out[19] = \<const0> ;
  assign rxctrl1_out[18] = \<const0> ;
  assign rxctrl1_out[17] = \<const0> ;
  assign rxctrl1_out[16] = \<const0> ;
  assign rxctrl1_out[15] = \<const0> ;
  assign rxctrl1_out[14] = \<const0> ;
  assign rxctrl1_out[13] = \<const0> ;
  assign rxctrl1_out[12] = \<const0> ;
  assign rxctrl1_out[11] = \<const0> ;
  assign rxctrl1_out[10] = \<const0> ;
  assign rxctrl1_out[9] = \<const0> ;
  assign rxctrl1_out[8] = \<const0> ;
  assign rxctrl1_out[7] = \<const0> ;
  assign rxctrl1_out[6] = \<const0> ;
  assign rxctrl1_out[5] = \<const0> ;
  assign rxctrl1_out[4] = \<const0> ;
  assign rxctrl1_out[3] = \<const0> ;
  assign rxctrl1_out[2] = \<const0> ;
  assign rxctrl1_out[1] = \<const0> ;
  assign rxctrl1_out[0] = \<const0> ;
  assign rxctrl2_out[31] = \<const0> ;
  assign rxctrl2_out[30] = \<const0> ;
  assign rxctrl2_out[29] = \<const0> ;
  assign rxctrl2_out[28] = \<const0> ;
  assign rxctrl2_out[27] = \<const0> ;
  assign rxctrl2_out[26] = \<const0> ;
  assign rxctrl2_out[25] = \<const0> ;
  assign rxctrl2_out[24] = \<const0> ;
  assign rxctrl2_out[23] = \<const0> ;
  assign rxctrl2_out[22] = \<const0> ;
  assign rxctrl2_out[21] = \<const0> ;
  assign rxctrl2_out[20] = \<const0> ;
  assign rxctrl2_out[19] = \<const0> ;
  assign rxctrl2_out[18] = \<const0> ;
  assign rxctrl2_out[17] = \<const0> ;
  assign rxctrl2_out[16] = \<const0> ;
  assign rxctrl2_out[15] = \<const0> ;
  assign rxctrl2_out[14] = \<const0> ;
  assign rxctrl2_out[13] = \<const0> ;
  assign rxctrl2_out[12] = \<const0> ;
  assign rxctrl2_out[11] = \<const0> ;
  assign rxctrl2_out[10] = \<const0> ;
  assign rxctrl2_out[9] = \<const0> ;
  assign rxctrl2_out[8] = \<const0> ;
  assign rxctrl2_out[7] = \<const0> ;
  assign rxctrl2_out[6] = \<const0> ;
  assign rxctrl2_out[5] = \<const0> ;
  assign rxctrl2_out[4] = \<const0> ;
  assign rxctrl2_out[3] = \<const0> ;
  assign rxctrl2_out[2] = \<const0> ;
  assign rxctrl2_out[1] = \<const0> ;
  assign rxctrl2_out[0] = \<const0> ;
  assign rxctrl3_out[31] = \<const0> ;
  assign rxctrl3_out[30] = \<const0> ;
  assign rxctrl3_out[29] = \<const0> ;
  assign rxctrl3_out[28] = \<const0> ;
  assign rxctrl3_out[27] = \<const0> ;
  assign rxctrl3_out[26] = \<const0> ;
  assign rxctrl3_out[25] = \<const0> ;
  assign rxctrl3_out[24] = \<const0> ;
  assign rxctrl3_out[23] = \<const0> ;
  assign rxctrl3_out[22] = \<const0> ;
  assign rxctrl3_out[21] = \<const0> ;
  assign rxctrl3_out[20] = \<const0> ;
  assign rxctrl3_out[19] = \<const0> ;
  assign rxctrl3_out[18] = \<const0> ;
  assign rxctrl3_out[17] = \<const0> ;
  assign rxctrl3_out[16] = \<const0> ;
  assign rxctrl3_out[15] = \<const0> ;
  assign rxctrl3_out[14] = \<const0> ;
  assign rxctrl3_out[13] = \<const0> ;
  assign rxctrl3_out[12] = \<const0> ;
  assign rxctrl3_out[11] = \<const0> ;
  assign rxctrl3_out[10] = \<const0> ;
  assign rxctrl3_out[9] = \<const0> ;
  assign rxctrl3_out[8] = \<const0> ;
  assign rxctrl3_out[7] = \<const0> ;
  assign rxctrl3_out[6] = \<const0> ;
  assign rxctrl3_out[5] = \<const0> ;
  assign rxctrl3_out[4] = \<const0> ;
  assign rxctrl3_out[3] = \<const0> ;
  assign rxctrl3_out[2] = \<const0> ;
  assign rxctrl3_out[1] = \<const0> ;
  assign rxctrl3_out[0] = \<const0> ;
  assign rxdata_out[511] = \<const0> ;
  assign rxdata_out[510] = \<const0> ;
  assign rxdata_out[509] = \<const0> ;
  assign rxdata_out[508] = \<const0> ;
  assign rxdata_out[507] = \<const0> ;
  assign rxdata_out[506] = \<const0> ;
  assign rxdata_out[505] = \<const0> ;
  assign rxdata_out[504] = \<const0> ;
  assign rxdata_out[503] = \<const0> ;
  assign rxdata_out[502] = \<const0> ;
  assign rxdata_out[501] = \<const0> ;
  assign rxdata_out[500] = \<const0> ;
  assign rxdata_out[499] = \<const0> ;
  assign rxdata_out[498] = \<const0> ;
  assign rxdata_out[497] = \<const0> ;
  assign rxdata_out[496] = \<const0> ;
  assign rxdata_out[495] = \<const0> ;
  assign rxdata_out[494] = \<const0> ;
  assign rxdata_out[493] = \<const0> ;
  assign rxdata_out[492] = \<const0> ;
  assign rxdata_out[491] = \<const0> ;
  assign rxdata_out[490] = \<const0> ;
  assign rxdata_out[489] = \<const0> ;
  assign rxdata_out[488] = \<const0> ;
  assign rxdata_out[487] = \<const0> ;
  assign rxdata_out[486] = \<const0> ;
  assign rxdata_out[485] = \<const0> ;
  assign rxdata_out[484] = \<const0> ;
  assign rxdata_out[483] = \<const0> ;
  assign rxdata_out[482] = \<const0> ;
  assign rxdata_out[481] = \<const0> ;
  assign rxdata_out[480] = \<const0> ;
  assign rxdata_out[479] = \<const0> ;
  assign rxdata_out[478] = \<const0> ;
  assign rxdata_out[477] = \<const0> ;
  assign rxdata_out[476] = \<const0> ;
  assign rxdata_out[475] = \<const0> ;
  assign rxdata_out[474] = \<const0> ;
  assign rxdata_out[473] = \<const0> ;
  assign rxdata_out[472] = \<const0> ;
  assign rxdata_out[471] = \<const0> ;
  assign rxdata_out[470] = \<const0> ;
  assign rxdata_out[469] = \<const0> ;
  assign rxdata_out[468] = \<const0> ;
  assign rxdata_out[467] = \<const0> ;
  assign rxdata_out[466] = \<const0> ;
  assign rxdata_out[465] = \<const0> ;
  assign rxdata_out[464] = \<const0> ;
  assign rxdata_out[463] = \<const0> ;
  assign rxdata_out[462] = \<const0> ;
  assign rxdata_out[461] = \<const0> ;
  assign rxdata_out[460] = \<const0> ;
  assign rxdata_out[459] = \<const0> ;
  assign rxdata_out[458] = \<const0> ;
  assign rxdata_out[457] = \<const0> ;
  assign rxdata_out[456] = \<const0> ;
  assign rxdata_out[455] = \<const0> ;
  assign rxdata_out[454] = \<const0> ;
  assign rxdata_out[453] = \<const0> ;
  assign rxdata_out[452] = \<const0> ;
  assign rxdata_out[451] = \<const0> ;
  assign rxdata_out[450] = \<const0> ;
  assign rxdata_out[449] = \<const0> ;
  assign rxdata_out[448] = \<const0> ;
  assign rxdata_out[447] = \<const0> ;
  assign rxdata_out[446] = \<const0> ;
  assign rxdata_out[445] = \<const0> ;
  assign rxdata_out[444] = \<const0> ;
  assign rxdata_out[443] = \<const0> ;
  assign rxdata_out[442] = \<const0> ;
  assign rxdata_out[441] = \<const0> ;
  assign rxdata_out[440] = \<const0> ;
  assign rxdata_out[439] = \<const0> ;
  assign rxdata_out[438] = \<const0> ;
  assign rxdata_out[437] = \<const0> ;
  assign rxdata_out[436] = \<const0> ;
  assign rxdata_out[435] = \<const0> ;
  assign rxdata_out[434] = \<const0> ;
  assign rxdata_out[433] = \<const0> ;
  assign rxdata_out[432] = \<const0> ;
  assign rxdata_out[431] = \<const0> ;
  assign rxdata_out[430] = \<const0> ;
  assign rxdata_out[429] = \<const0> ;
  assign rxdata_out[428] = \<const0> ;
  assign rxdata_out[427] = \<const0> ;
  assign rxdata_out[426] = \<const0> ;
  assign rxdata_out[425] = \<const0> ;
  assign rxdata_out[424] = \<const0> ;
  assign rxdata_out[423] = \<const0> ;
  assign rxdata_out[422] = \<const0> ;
  assign rxdata_out[421] = \<const0> ;
  assign rxdata_out[420] = \<const0> ;
  assign rxdata_out[419] = \<const0> ;
  assign rxdata_out[418] = \<const0> ;
  assign rxdata_out[417] = \<const0> ;
  assign rxdata_out[416] = \<const0> ;
  assign rxdata_out[415] = \<const0> ;
  assign rxdata_out[414] = \<const0> ;
  assign rxdata_out[413] = \<const0> ;
  assign rxdata_out[412] = \<const0> ;
  assign rxdata_out[411] = \<const0> ;
  assign rxdata_out[410] = \<const0> ;
  assign rxdata_out[409] = \<const0> ;
  assign rxdata_out[408] = \<const0> ;
  assign rxdata_out[407] = \<const0> ;
  assign rxdata_out[406] = \<const0> ;
  assign rxdata_out[405] = \<const0> ;
  assign rxdata_out[404] = \<const0> ;
  assign rxdata_out[403] = \<const0> ;
  assign rxdata_out[402] = \<const0> ;
  assign rxdata_out[401] = \<const0> ;
  assign rxdata_out[400] = \<const0> ;
  assign rxdata_out[399] = \<const0> ;
  assign rxdata_out[398] = \<const0> ;
  assign rxdata_out[397] = \<const0> ;
  assign rxdata_out[396] = \<const0> ;
  assign rxdata_out[395] = \<const0> ;
  assign rxdata_out[394] = \<const0> ;
  assign rxdata_out[393] = \<const0> ;
  assign rxdata_out[392] = \<const0> ;
  assign rxdata_out[391] = \<const0> ;
  assign rxdata_out[390] = \<const0> ;
  assign rxdata_out[389] = \<const0> ;
  assign rxdata_out[388] = \<const0> ;
  assign rxdata_out[387] = \<const0> ;
  assign rxdata_out[386] = \<const0> ;
  assign rxdata_out[385] = \<const0> ;
  assign rxdata_out[384] = \<const0> ;
  assign rxdata_out[383] = \<const0> ;
  assign rxdata_out[382] = \<const0> ;
  assign rxdata_out[381] = \<const0> ;
  assign rxdata_out[380] = \<const0> ;
  assign rxdata_out[379] = \<const0> ;
  assign rxdata_out[378] = \<const0> ;
  assign rxdata_out[377] = \<const0> ;
  assign rxdata_out[376] = \<const0> ;
  assign rxdata_out[375] = \<const0> ;
  assign rxdata_out[374] = \<const0> ;
  assign rxdata_out[373] = \<const0> ;
  assign rxdata_out[372] = \<const0> ;
  assign rxdata_out[371] = \<const0> ;
  assign rxdata_out[370] = \<const0> ;
  assign rxdata_out[369] = \<const0> ;
  assign rxdata_out[368] = \<const0> ;
  assign rxdata_out[367] = \<const0> ;
  assign rxdata_out[366] = \<const0> ;
  assign rxdata_out[365] = \<const0> ;
  assign rxdata_out[364] = \<const0> ;
  assign rxdata_out[363] = \<const0> ;
  assign rxdata_out[362] = \<const0> ;
  assign rxdata_out[361] = \<const0> ;
  assign rxdata_out[360] = \<const0> ;
  assign rxdata_out[359] = \<const0> ;
  assign rxdata_out[358] = \<const0> ;
  assign rxdata_out[357] = \<const0> ;
  assign rxdata_out[356] = \<const0> ;
  assign rxdata_out[355] = \<const0> ;
  assign rxdata_out[354] = \<const0> ;
  assign rxdata_out[353] = \<const0> ;
  assign rxdata_out[352] = \<const0> ;
  assign rxdata_out[351] = \<const0> ;
  assign rxdata_out[350] = \<const0> ;
  assign rxdata_out[349] = \<const0> ;
  assign rxdata_out[348] = \<const0> ;
  assign rxdata_out[347] = \<const0> ;
  assign rxdata_out[346] = \<const0> ;
  assign rxdata_out[345] = \<const0> ;
  assign rxdata_out[344] = \<const0> ;
  assign rxdata_out[343] = \<const0> ;
  assign rxdata_out[342] = \<const0> ;
  assign rxdata_out[341] = \<const0> ;
  assign rxdata_out[340] = \<const0> ;
  assign rxdata_out[339] = \<const0> ;
  assign rxdata_out[338] = \<const0> ;
  assign rxdata_out[337] = \<const0> ;
  assign rxdata_out[336] = \<const0> ;
  assign rxdata_out[335] = \<const0> ;
  assign rxdata_out[334] = \<const0> ;
  assign rxdata_out[333] = \<const0> ;
  assign rxdata_out[332] = \<const0> ;
  assign rxdata_out[331] = \<const0> ;
  assign rxdata_out[330] = \<const0> ;
  assign rxdata_out[329] = \<const0> ;
  assign rxdata_out[328] = \<const0> ;
  assign rxdata_out[327] = \<const0> ;
  assign rxdata_out[326] = \<const0> ;
  assign rxdata_out[325] = \<const0> ;
  assign rxdata_out[324] = \<const0> ;
  assign rxdata_out[323] = \<const0> ;
  assign rxdata_out[322] = \<const0> ;
  assign rxdata_out[321] = \<const0> ;
  assign rxdata_out[320] = \<const0> ;
  assign rxdata_out[319] = \<const0> ;
  assign rxdata_out[318] = \<const0> ;
  assign rxdata_out[317] = \<const0> ;
  assign rxdata_out[316] = \<const0> ;
  assign rxdata_out[315] = \<const0> ;
  assign rxdata_out[314] = \<const0> ;
  assign rxdata_out[313] = \<const0> ;
  assign rxdata_out[312] = \<const0> ;
  assign rxdata_out[311] = \<const0> ;
  assign rxdata_out[310] = \<const0> ;
  assign rxdata_out[309] = \<const0> ;
  assign rxdata_out[308] = \<const0> ;
  assign rxdata_out[307] = \<const0> ;
  assign rxdata_out[306] = \<const0> ;
  assign rxdata_out[305] = \<const0> ;
  assign rxdata_out[304] = \<const0> ;
  assign rxdata_out[303] = \<const0> ;
  assign rxdata_out[302] = \<const0> ;
  assign rxdata_out[301] = \<const0> ;
  assign rxdata_out[300] = \<const0> ;
  assign rxdata_out[299] = \<const0> ;
  assign rxdata_out[298] = \<const0> ;
  assign rxdata_out[297] = \<const0> ;
  assign rxdata_out[296] = \<const0> ;
  assign rxdata_out[295] = \<const0> ;
  assign rxdata_out[294] = \<const0> ;
  assign rxdata_out[293] = \<const0> ;
  assign rxdata_out[292] = \<const0> ;
  assign rxdata_out[291] = \<const0> ;
  assign rxdata_out[290] = \<const0> ;
  assign rxdata_out[289] = \<const0> ;
  assign rxdata_out[288] = \<const0> ;
  assign rxdata_out[287] = \<const0> ;
  assign rxdata_out[286] = \<const0> ;
  assign rxdata_out[285] = \<const0> ;
  assign rxdata_out[284] = \<const0> ;
  assign rxdata_out[283] = \<const0> ;
  assign rxdata_out[282] = \<const0> ;
  assign rxdata_out[281] = \<const0> ;
  assign rxdata_out[280] = \<const0> ;
  assign rxdata_out[279] = \<const0> ;
  assign rxdata_out[278] = \<const0> ;
  assign rxdata_out[277] = \<const0> ;
  assign rxdata_out[276] = \<const0> ;
  assign rxdata_out[275] = \<const0> ;
  assign rxdata_out[274] = \<const0> ;
  assign rxdata_out[273] = \<const0> ;
  assign rxdata_out[272] = \<const0> ;
  assign rxdata_out[271] = \<const0> ;
  assign rxdata_out[270] = \<const0> ;
  assign rxdata_out[269] = \<const0> ;
  assign rxdata_out[268] = \<const0> ;
  assign rxdata_out[267] = \<const0> ;
  assign rxdata_out[266] = \<const0> ;
  assign rxdata_out[265] = \<const0> ;
  assign rxdata_out[264] = \<const0> ;
  assign rxdata_out[263] = \<const0> ;
  assign rxdata_out[262] = \<const0> ;
  assign rxdata_out[261] = \<const0> ;
  assign rxdata_out[260] = \<const0> ;
  assign rxdata_out[259] = \<const0> ;
  assign rxdata_out[258] = \<const0> ;
  assign rxdata_out[257] = \<const0> ;
  assign rxdata_out[256] = \<const0> ;
  assign rxdata_out[255] = \<const0> ;
  assign rxdata_out[254] = \<const0> ;
  assign rxdata_out[253] = \<const0> ;
  assign rxdata_out[252] = \<const0> ;
  assign rxdata_out[251] = \<const0> ;
  assign rxdata_out[250] = \<const0> ;
  assign rxdata_out[249] = \<const0> ;
  assign rxdata_out[248] = \<const0> ;
  assign rxdata_out[247] = \<const0> ;
  assign rxdata_out[246] = \<const0> ;
  assign rxdata_out[245] = \<const0> ;
  assign rxdata_out[244] = \<const0> ;
  assign rxdata_out[243] = \<const0> ;
  assign rxdata_out[242] = \<const0> ;
  assign rxdata_out[241] = \<const0> ;
  assign rxdata_out[240] = \<const0> ;
  assign rxdata_out[239] = \<const0> ;
  assign rxdata_out[238] = \<const0> ;
  assign rxdata_out[237] = \<const0> ;
  assign rxdata_out[236] = \<const0> ;
  assign rxdata_out[235] = \<const0> ;
  assign rxdata_out[234] = \<const0> ;
  assign rxdata_out[233] = \<const0> ;
  assign rxdata_out[232] = \<const0> ;
  assign rxdata_out[231] = \<const0> ;
  assign rxdata_out[230] = \<const0> ;
  assign rxdata_out[229] = \<const0> ;
  assign rxdata_out[228] = \<const0> ;
  assign rxdata_out[227] = \<const0> ;
  assign rxdata_out[226] = \<const0> ;
  assign rxdata_out[225] = \<const0> ;
  assign rxdata_out[224] = \<const0> ;
  assign rxdata_out[223] = \<const0> ;
  assign rxdata_out[222] = \<const0> ;
  assign rxdata_out[221] = \<const0> ;
  assign rxdata_out[220] = \<const0> ;
  assign rxdata_out[219] = \<const0> ;
  assign rxdata_out[218] = \<const0> ;
  assign rxdata_out[217] = \<const0> ;
  assign rxdata_out[216] = \<const0> ;
  assign rxdata_out[215] = \<const0> ;
  assign rxdata_out[214] = \<const0> ;
  assign rxdata_out[213] = \<const0> ;
  assign rxdata_out[212] = \<const0> ;
  assign rxdata_out[211] = \<const0> ;
  assign rxdata_out[210] = \<const0> ;
  assign rxdata_out[209] = \<const0> ;
  assign rxdata_out[208] = \<const0> ;
  assign rxdata_out[207] = \<const0> ;
  assign rxdata_out[206] = \<const0> ;
  assign rxdata_out[205] = \<const0> ;
  assign rxdata_out[204] = \<const0> ;
  assign rxdata_out[203] = \<const0> ;
  assign rxdata_out[202] = \<const0> ;
  assign rxdata_out[201] = \<const0> ;
  assign rxdata_out[200] = \<const0> ;
  assign rxdata_out[199] = \<const0> ;
  assign rxdata_out[198] = \<const0> ;
  assign rxdata_out[197] = \<const0> ;
  assign rxdata_out[196] = \<const0> ;
  assign rxdata_out[195] = \<const0> ;
  assign rxdata_out[194] = \<const0> ;
  assign rxdata_out[193] = \<const0> ;
  assign rxdata_out[192] = \<const0> ;
  assign rxdata_out[191] = \<const0> ;
  assign rxdata_out[190] = \<const0> ;
  assign rxdata_out[189] = \<const0> ;
  assign rxdata_out[188] = \<const0> ;
  assign rxdata_out[187] = \<const0> ;
  assign rxdata_out[186] = \<const0> ;
  assign rxdata_out[185] = \<const0> ;
  assign rxdata_out[184] = \<const0> ;
  assign rxdata_out[183] = \<const0> ;
  assign rxdata_out[182] = \<const0> ;
  assign rxdata_out[181] = \<const0> ;
  assign rxdata_out[180] = \<const0> ;
  assign rxdata_out[179] = \<const0> ;
  assign rxdata_out[178] = \<const0> ;
  assign rxdata_out[177] = \<const0> ;
  assign rxdata_out[176] = \<const0> ;
  assign rxdata_out[175] = \<const0> ;
  assign rxdata_out[174] = \<const0> ;
  assign rxdata_out[173] = \<const0> ;
  assign rxdata_out[172] = \<const0> ;
  assign rxdata_out[171] = \<const0> ;
  assign rxdata_out[170] = \<const0> ;
  assign rxdata_out[169] = \<const0> ;
  assign rxdata_out[168] = \<const0> ;
  assign rxdata_out[167] = \<const0> ;
  assign rxdata_out[166] = \<const0> ;
  assign rxdata_out[165] = \<const0> ;
  assign rxdata_out[164] = \<const0> ;
  assign rxdata_out[163] = \<const0> ;
  assign rxdata_out[162] = \<const0> ;
  assign rxdata_out[161] = \<const0> ;
  assign rxdata_out[160] = \<const0> ;
  assign rxdata_out[159] = \<const0> ;
  assign rxdata_out[158] = \<const0> ;
  assign rxdata_out[157] = \<const0> ;
  assign rxdata_out[156] = \<const0> ;
  assign rxdata_out[155] = \<const0> ;
  assign rxdata_out[154] = \<const0> ;
  assign rxdata_out[153] = \<const0> ;
  assign rxdata_out[152] = \<const0> ;
  assign rxdata_out[151] = \<const0> ;
  assign rxdata_out[150] = \<const0> ;
  assign rxdata_out[149] = \<const0> ;
  assign rxdata_out[148] = \<const0> ;
  assign rxdata_out[147] = \<const0> ;
  assign rxdata_out[146] = \<const0> ;
  assign rxdata_out[145] = \<const0> ;
  assign rxdata_out[144] = \<const0> ;
  assign rxdata_out[143] = \<const0> ;
  assign rxdata_out[142] = \<const0> ;
  assign rxdata_out[141] = \<const0> ;
  assign rxdata_out[140] = \<const0> ;
  assign rxdata_out[139] = \<const0> ;
  assign rxdata_out[138] = \<const0> ;
  assign rxdata_out[137] = \<const0> ;
  assign rxdata_out[136] = \<const0> ;
  assign rxdata_out[135] = \<const0> ;
  assign rxdata_out[134] = \<const0> ;
  assign rxdata_out[133] = \<const0> ;
  assign rxdata_out[132] = \<const0> ;
  assign rxdata_out[131] = \<const0> ;
  assign rxdata_out[130] = \<const0> ;
  assign rxdata_out[129] = \<const0> ;
  assign rxdata_out[128] = \<const0> ;
  assign rxdata_out[127] = \<const0> ;
  assign rxdata_out[126] = \<const0> ;
  assign rxdata_out[125] = \<const0> ;
  assign rxdata_out[124] = \<const0> ;
  assign rxdata_out[123] = \<const0> ;
  assign rxdata_out[122] = \<const0> ;
  assign rxdata_out[121] = \<const0> ;
  assign rxdata_out[120] = \<const0> ;
  assign rxdata_out[119] = \<const0> ;
  assign rxdata_out[118] = \<const0> ;
  assign rxdata_out[117] = \<const0> ;
  assign rxdata_out[116] = \<const0> ;
  assign rxdata_out[115] = \<const0> ;
  assign rxdata_out[114] = \<const0> ;
  assign rxdata_out[113] = \<const0> ;
  assign rxdata_out[112] = \<const0> ;
  assign rxdata_out[111] = \<const0> ;
  assign rxdata_out[110] = \<const0> ;
  assign rxdata_out[109] = \<const0> ;
  assign rxdata_out[108] = \<const0> ;
  assign rxdata_out[107] = \<const0> ;
  assign rxdata_out[106] = \<const0> ;
  assign rxdata_out[105] = \<const0> ;
  assign rxdata_out[104] = \<const0> ;
  assign rxdata_out[103] = \<const0> ;
  assign rxdata_out[102] = \<const0> ;
  assign rxdata_out[101] = \<const0> ;
  assign rxdata_out[100] = \<const0> ;
  assign rxdata_out[99] = \<const0> ;
  assign rxdata_out[98] = \<const0> ;
  assign rxdata_out[97] = \<const0> ;
  assign rxdata_out[96] = \<const0> ;
  assign rxdata_out[95] = \<const0> ;
  assign rxdata_out[94] = \<const0> ;
  assign rxdata_out[93] = \<const0> ;
  assign rxdata_out[92] = \<const0> ;
  assign rxdata_out[91] = \<const0> ;
  assign rxdata_out[90] = \<const0> ;
  assign rxdata_out[89] = \<const0> ;
  assign rxdata_out[88] = \<const0> ;
  assign rxdata_out[87] = \<const0> ;
  assign rxdata_out[86] = \<const0> ;
  assign rxdata_out[85] = \<const0> ;
  assign rxdata_out[84] = \<const0> ;
  assign rxdata_out[83] = \<const0> ;
  assign rxdata_out[82] = \<const0> ;
  assign rxdata_out[81] = \<const0> ;
  assign rxdata_out[80] = \<const0> ;
  assign rxdata_out[79] = \<const0> ;
  assign rxdata_out[78] = \<const0> ;
  assign rxdata_out[77] = \<const0> ;
  assign rxdata_out[76] = \<const0> ;
  assign rxdata_out[75] = \<const0> ;
  assign rxdata_out[74] = \<const0> ;
  assign rxdata_out[73] = \<const0> ;
  assign rxdata_out[72] = \<const0> ;
  assign rxdata_out[71] = \<const0> ;
  assign rxdata_out[70] = \<const0> ;
  assign rxdata_out[69] = \<const0> ;
  assign rxdata_out[68] = \<const0> ;
  assign rxdata_out[67] = \<const0> ;
  assign rxdata_out[66] = \<const0> ;
  assign rxdata_out[65] = \<const0> ;
  assign rxdata_out[64] = \<const0> ;
  assign rxdata_out[63] = \<const0> ;
  assign rxdata_out[62] = \<const0> ;
  assign rxdata_out[61] = \<const0> ;
  assign rxdata_out[60] = \<const0> ;
  assign rxdata_out[59] = \<const0> ;
  assign rxdata_out[58] = \<const0> ;
  assign rxdata_out[57] = \<const0> ;
  assign rxdata_out[56] = \<const0> ;
  assign rxdata_out[55] = \<const0> ;
  assign rxdata_out[54] = \<const0> ;
  assign rxdata_out[53] = \<const0> ;
  assign rxdata_out[52] = \<const0> ;
  assign rxdata_out[51] = \<const0> ;
  assign rxdata_out[50] = \<const0> ;
  assign rxdata_out[49] = \<const0> ;
  assign rxdata_out[48] = \<const0> ;
  assign rxdata_out[47] = \<const0> ;
  assign rxdata_out[46] = \<const0> ;
  assign rxdata_out[45] = \<const0> ;
  assign rxdata_out[44] = \<const0> ;
  assign rxdata_out[43] = \<const0> ;
  assign rxdata_out[42] = \<const0> ;
  assign rxdata_out[41] = \<const0> ;
  assign rxdata_out[40] = \<const0> ;
  assign rxdata_out[39] = \<const0> ;
  assign rxdata_out[38] = \<const0> ;
  assign rxdata_out[37] = \<const0> ;
  assign rxdata_out[36] = \<const0> ;
  assign rxdata_out[35] = \<const0> ;
  assign rxdata_out[34] = \<const0> ;
  assign rxdata_out[33] = \<const0> ;
  assign rxdata_out[32] = \<const0> ;
  assign rxdata_out[31] = \<const0> ;
  assign rxdata_out[30] = \<const0> ;
  assign rxdata_out[29] = \<const0> ;
  assign rxdata_out[28] = \<const0> ;
  assign rxdata_out[27] = \<const0> ;
  assign rxdata_out[26] = \<const0> ;
  assign rxdata_out[25] = \<const0> ;
  assign rxdata_out[24] = \<const0> ;
  assign rxdata_out[23] = \<const0> ;
  assign rxdata_out[22] = \<const0> ;
  assign rxdata_out[21] = \<const0> ;
  assign rxdata_out[20] = \<const0> ;
  assign rxdata_out[19] = \<const0> ;
  assign rxdata_out[18] = \<const0> ;
  assign rxdata_out[17] = \<const0> ;
  assign rxdata_out[16] = \<const0> ;
  assign rxdata_out[15] = \<const0> ;
  assign rxdata_out[14] = \<const0> ;
  assign rxdata_out[13] = \<const0> ;
  assign rxdata_out[12] = \<const0> ;
  assign rxdata_out[11] = \<const0> ;
  assign rxdata_out[10] = \<const0> ;
  assign rxdata_out[9] = \<const0> ;
  assign rxdata_out[8] = \<const0> ;
  assign rxdata_out[7] = \<const0> ;
  assign rxdata_out[6] = \<const0> ;
  assign rxdata_out[5] = \<const0> ;
  assign rxdata_out[4] = \<const0> ;
  assign rxdata_out[3] = \<const0> ;
  assign rxdata_out[2] = \<const0> ;
  assign rxdata_out[1] = \<const0> ;
  assign rxdata_out[0] = \<const0> ;
  assign rxdataextendrsvd_out[31] = \<const0> ;
  assign rxdataextendrsvd_out[30] = \<const0> ;
  assign rxdataextendrsvd_out[29] = \<const0> ;
  assign rxdataextendrsvd_out[28] = \<const0> ;
  assign rxdataextendrsvd_out[27] = \<const0> ;
  assign rxdataextendrsvd_out[26] = \<const0> ;
  assign rxdataextendrsvd_out[25] = \<const0> ;
  assign rxdataextendrsvd_out[24] = \<const0> ;
  assign rxdataextendrsvd_out[23] = \<const0> ;
  assign rxdataextendrsvd_out[22] = \<const0> ;
  assign rxdataextendrsvd_out[21] = \<const0> ;
  assign rxdataextendrsvd_out[20] = \<const0> ;
  assign rxdataextendrsvd_out[19] = \<const0> ;
  assign rxdataextendrsvd_out[18] = \<const0> ;
  assign rxdataextendrsvd_out[17] = \<const0> ;
  assign rxdataextendrsvd_out[16] = \<const0> ;
  assign rxdataextendrsvd_out[15] = \<const0> ;
  assign rxdataextendrsvd_out[14] = \<const0> ;
  assign rxdataextendrsvd_out[13] = \<const0> ;
  assign rxdataextendrsvd_out[12] = \<const0> ;
  assign rxdataextendrsvd_out[11] = \<const0> ;
  assign rxdataextendrsvd_out[10] = \<const0> ;
  assign rxdataextendrsvd_out[9] = \<const0> ;
  assign rxdataextendrsvd_out[8] = \<const0> ;
  assign rxdataextendrsvd_out[7] = \<const0> ;
  assign rxdataextendrsvd_out[6] = \<const0> ;
  assign rxdataextendrsvd_out[5] = \<const0> ;
  assign rxdataextendrsvd_out[4] = \<const0> ;
  assign rxdataextendrsvd_out[3] = \<const0> ;
  assign rxdataextendrsvd_out[2] = \<const0> ;
  assign rxdataextendrsvd_out[1] = \<const0> ;
  assign rxdataextendrsvd_out[0] = \<const0> ;
  assign rxdatavalid_out[7] = \<const0> ;
  assign rxdatavalid_out[6] = \^rxdatavalid_out [6];
  assign rxdatavalid_out[5] = \<const0> ;
  assign rxdatavalid_out[4] = \^rxdatavalid_out [4];
  assign rxdatavalid_out[3] = \<const0> ;
  assign rxdatavalid_out[2] = \^rxdatavalid_out [2];
  assign rxdatavalid_out[1] = \<const0> ;
  assign rxdatavalid_out[0] = \^rxdatavalid_out [0];
  assign rxdlysresetdone_out[3] = \<const0> ;
  assign rxdlysresetdone_out[2] = \<const0> ;
  assign rxdlysresetdone_out[1] = \<const0> ;
  assign rxdlysresetdone_out[0] = \<const0> ;
  assign rxelecidle_out[3] = \<const0> ;
  assign rxelecidle_out[2] = \<const0> ;
  assign rxelecidle_out[1] = \<const0> ;
  assign rxelecidle_out[0] = \<const0> ;
  assign rxheader_out[23] = \<const0> ;
  assign rxheader_out[22] = \<const0> ;
  assign rxheader_out[21] = \<const0> ;
  assign rxheader_out[20] = \<const0> ;
  assign rxheader_out[19:18] = \^rxheader_out [19:18];
  assign rxheader_out[17] = \<const0> ;
  assign rxheader_out[16] = \<const0> ;
  assign rxheader_out[15] = \<const0> ;
  assign rxheader_out[14] = \<const0> ;
  assign rxheader_out[13:12] = \^rxheader_out [13:12];
  assign rxheader_out[11] = \<const0> ;
  assign rxheader_out[10] = \<const0> ;
  assign rxheader_out[9] = \<const0> ;
  assign rxheader_out[8] = \<const0> ;
  assign rxheader_out[7:6] = \^rxheader_out [7:6];
  assign rxheader_out[5] = \<const0> ;
  assign rxheader_out[4] = \<const0> ;
  assign rxheader_out[3] = \<const0> ;
  assign rxheader_out[2] = \<const0> ;
  assign rxheader_out[1:0] = \^rxheader_out [1:0];
  assign rxheadervalid_out[7] = \<const0> ;
  assign rxheadervalid_out[6] = \^rxheadervalid_out [6];
  assign rxheadervalid_out[5] = \<const0> ;
  assign rxheadervalid_out[4] = \^rxheadervalid_out [4];
  assign rxheadervalid_out[3] = \<const0> ;
  assign rxheadervalid_out[2] = \^rxheadervalid_out [2];
  assign rxheadervalid_out[1] = \<const0> ;
  assign rxheadervalid_out[0] = \^rxheadervalid_out [0];
  assign rxlfpstresetdet_out[3] = \<const0> ;
  assign rxlfpstresetdet_out[2] = \<const0> ;
  assign rxlfpstresetdet_out[1] = \<const0> ;
  assign rxlfpstresetdet_out[0] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[3] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[2] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[1] = \<const0> ;
  assign rxlfpsu2lpexitdet_out[0] = \<const0> ;
  assign rxlfpsu3wakedet_out[3] = \<const0> ;
  assign rxlfpsu3wakedet_out[2] = \<const0> ;
  assign rxlfpsu3wakedet_out[1] = \<const0> ;
  assign rxlfpsu3wakedet_out[0] = \<const0> ;
  assign rxmonitorout_out[31] = \<const0> ;
  assign rxmonitorout_out[30] = \<const0> ;
  assign rxmonitorout_out[29] = \<const0> ;
  assign rxmonitorout_out[28] = \<const0> ;
  assign rxmonitorout_out[27] = \<const0> ;
  assign rxmonitorout_out[26] = \<const0> ;
  assign rxmonitorout_out[25] = \<const0> ;
  assign rxmonitorout_out[24] = \<const0> ;
  assign rxmonitorout_out[23] = \<const0> ;
  assign rxmonitorout_out[22] = \<const0> ;
  assign rxmonitorout_out[21] = \<const0> ;
  assign rxmonitorout_out[20] = \<const0> ;
  assign rxmonitorout_out[19] = \<const0> ;
  assign rxmonitorout_out[18] = \<const0> ;
  assign rxmonitorout_out[17] = \<const0> ;
  assign rxmonitorout_out[16] = \<const0> ;
  assign rxmonitorout_out[15] = \<const0> ;
  assign rxmonitorout_out[14] = \<const0> ;
  assign rxmonitorout_out[13] = \<const0> ;
  assign rxmonitorout_out[12] = \<const0> ;
  assign rxmonitorout_out[11] = \<const0> ;
  assign rxmonitorout_out[10] = \<const0> ;
  assign rxmonitorout_out[9] = \<const0> ;
  assign rxmonitorout_out[8] = \<const0> ;
  assign rxmonitorout_out[7] = \<const0> ;
  assign rxmonitorout_out[6] = \<const0> ;
  assign rxmonitorout_out[5] = \<const0> ;
  assign rxmonitorout_out[4] = \<const0> ;
  assign rxmonitorout_out[3] = \<const0> ;
  assign rxmonitorout_out[2] = \<const0> ;
  assign rxmonitorout_out[1] = \<const0> ;
  assign rxmonitorout_out[0] = \<const0> ;
  assign rxosintdone_out[3] = \<const0> ;
  assign rxosintdone_out[2] = \<const0> ;
  assign rxosintdone_out[1] = \<const0> ;
  assign rxosintdone_out[0] = \<const0> ;
  assign rxosintstarted_out[3] = \<const0> ;
  assign rxosintstarted_out[2] = \<const0> ;
  assign rxosintstarted_out[1] = \<const0> ;
  assign rxosintstarted_out[0] = \<const0> ;
  assign rxosintstrobedone_out[3] = \<const0> ;
  assign rxosintstrobedone_out[2] = \<const0> ;
  assign rxosintstrobedone_out[1] = \<const0> ;
  assign rxosintstrobedone_out[0] = \<const0> ;
  assign rxosintstrobestarted_out[3] = \<const0> ;
  assign rxosintstrobestarted_out[2] = \<const0> ;
  assign rxosintstrobestarted_out[1] = \<const0> ;
  assign rxosintstrobestarted_out[0] = \<const0> ;
  assign rxoutclk_out[3] = \<const0> ;
  assign rxoutclk_out[2] = \^rxoutclk_out [2];
  assign rxoutclk_out[1] = \<const0> ;
  assign rxoutclk_out[0] = \<const0> ;
  assign rxoutclkfabric_out[3] = \<const0> ;
  assign rxoutclkfabric_out[2] = \<const0> ;
  assign rxoutclkfabric_out[1] = \<const0> ;
  assign rxoutclkfabric_out[0] = \<const0> ;
  assign rxoutclkpcs_out[3] = \<const0> ;
  assign rxoutclkpcs_out[2] = \<const0> ;
  assign rxoutclkpcs_out[1] = \<const0> ;
  assign rxoutclkpcs_out[0] = \<const0> ;
  assign rxphaligndone_out[3] = \<const0> ;
  assign rxphaligndone_out[2] = \<const0> ;
  assign rxphaligndone_out[1] = \<const0> ;
  assign rxphaligndone_out[0] = \<const0> ;
  assign rxphalignerr_out[3] = \<const0> ;
  assign rxphalignerr_out[2] = \<const0> ;
  assign rxphalignerr_out[1] = \<const0> ;
  assign rxphalignerr_out[0] = \<const0> ;
  assign rxprbserr_out[3] = \<const0> ;
  assign rxprbserr_out[2] = \<const0> ;
  assign rxprbserr_out[1] = \<const0> ;
  assign rxprbserr_out[0] = \<const0> ;
  assign rxprbslocked_out[3] = \<const0> ;
  assign rxprbslocked_out[2] = \<const0> ;
  assign rxprbslocked_out[1] = \<const0> ;
  assign rxprbslocked_out[0] = \<const0> ;
  assign rxprgdivresetdone_out[3] = \<const0> ;
  assign rxprgdivresetdone_out[2] = \<const0> ;
  assign rxprgdivresetdone_out[1] = \<const0> ;
  assign rxprgdivresetdone_out[0] = \<const0> ;
  assign rxqpisenn_out[0] = \<const0> ;
  assign rxqpisenp_out[0] = \<const0> ;
  assign rxratedone_out[3] = \<const0> ;
  assign rxratedone_out[2] = \<const0> ;
  assign rxratedone_out[1] = \<const0> ;
  assign rxratedone_out[0] = \<const0> ;
  assign rxrecclk0_sel_out[0] = \<const0> ;
  assign rxrecclk0sel_out[1] = \<const0> ;
  assign rxrecclk0sel_out[0] = \<const0> ;
  assign rxrecclk1_sel_out[0] = \<const0> ;
  assign rxrecclk1sel_out[1] = \<const0> ;
  assign rxrecclk1sel_out[0] = \<const0> ;
  assign rxrecclkout_out[3] = \<const0> ;
  assign rxrecclkout_out[2] = \<const0> ;
  assign rxrecclkout_out[1] = \<const0> ;
  assign rxrecclkout_out[0] = \<const0> ;
  assign rxresetdone_out[3] = \<const0> ;
  assign rxresetdone_out[2] = \<const0> ;
  assign rxresetdone_out[1] = \<const0> ;
  assign rxresetdone_out[0] = \<const0> ;
  assign rxsliderdy_out[3] = \<const0> ;
  assign rxsliderdy_out[2] = \<const0> ;
  assign rxsliderdy_out[1] = \<const0> ;
  assign rxsliderdy_out[0] = \<const0> ;
  assign rxslipdone_out[3] = \<const0> ;
  assign rxslipdone_out[2] = \<const0> ;
  assign rxslipdone_out[1] = \<const0> ;
  assign rxslipdone_out[0] = \<const0> ;
  assign rxslipoutclkrdy_out[3] = \<const0> ;
  assign rxslipoutclkrdy_out[2] = \<const0> ;
  assign rxslipoutclkrdy_out[1] = \<const0> ;
  assign rxslipoutclkrdy_out[0] = \<const0> ;
  assign rxslippmardy_out[3] = \<const0> ;
  assign rxslippmardy_out[2] = \<const0> ;
  assign rxslippmardy_out[1] = \<const0> ;
  assign rxslippmardy_out[0] = \<const0> ;
  assign rxstartofseq_out[7] = \<const0> ;
  assign rxstartofseq_out[6] = \<const0> ;
  assign rxstartofseq_out[5] = \<const0> ;
  assign rxstartofseq_out[4] = \<const0> ;
  assign rxstartofseq_out[3] = \<const0> ;
  assign rxstartofseq_out[2] = \<const0> ;
  assign rxstartofseq_out[1] = \<const0> ;
  assign rxstartofseq_out[0] = \<const0> ;
  assign rxstatus_out[11] = \<const0> ;
  assign rxstatus_out[10] = \<const0> ;
  assign rxstatus_out[9] = \<const0> ;
  assign rxstatus_out[8] = \<const0> ;
  assign rxstatus_out[7] = \<const0> ;
  assign rxstatus_out[6] = \<const0> ;
  assign rxstatus_out[5] = \<const0> ;
  assign rxstatus_out[4] = \<const0> ;
  assign rxstatus_out[3] = \<const0> ;
  assign rxstatus_out[2] = \<const0> ;
  assign rxstatus_out[1] = \<const0> ;
  assign rxstatus_out[0] = \<const0> ;
  assign rxsyncdone_out[3] = \<const0> ;
  assign rxsyncdone_out[2] = \<const0> ;
  assign rxsyncdone_out[1] = \<const0> ;
  assign rxsyncdone_out[0] = \<const0> ;
  assign rxsyncout_out[3] = \<const0> ;
  assign rxsyncout_out[2] = \<const0> ;
  assign rxsyncout_out[1] = \<const0> ;
  assign rxsyncout_out[0] = \<const0> ;
  assign rxvalid_out[3] = \<const0> ;
  assign rxvalid_out[2] = \<const0> ;
  assign rxvalid_out[1] = \<const0> ;
  assign rxvalid_out[0] = \<const0> ;
  assign sdm0finalout_out[3] = \<const0> ;
  assign sdm0finalout_out[2] = \<const0> ;
  assign sdm0finalout_out[1] = \<const0> ;
  assign sdm0finalout_out[0] = \<const0> ;
  assign sdm0testdata_out[14] = \<const0> ;
  assign sdm0testdata_out[13] = \<const0> ;
  assign sdm0testdata_out[12] = \<const0> ;
  assign sdm0testdata_out[11] = \<const0> ;
  assign sdm0testdata_out[10] = \<const0> ;
  assign sdm0testdata_out[9] = \<const0> ;
  assign sdm0testdata_out[8] = \<const0> ;
  assign sdm0testdata_out[7] = \<const0> ;
  assign sdm0testdata_out[6] = \<const0> ;
  assign sdm0testdata_out[5] = \<const0> ;
  assign sdm0testdata_out[4] = \<const0> ;
  assign sdm0testdata_out[3] = \<const0> ;
  assign sdm0testdata_out[2] = \<const0> ;
  assign sdm0testdata_out[1] = \<const0> ;
  assign sdm0testdata_out[0] = \<const0> ;
  assign sdm1finalout_out[3] = \<const0> ;
  assign sdm1finalout_out[2] = \<const0> ;
  assign sdm1finalout_out[1] = \<const0> ;
  assign sdm1finalout_out[0] = \<const0> ;
  assign sdm1testdata_out[14] = \<const0> ;
  assign sdm1testdata_out[13] = \<const0> ;
  assign sdm1testdata_out[12] = \<const0> ;
  assign sdm1testdata_out[11] = \<const0> ;
  assign sdm1testdata_out[10] = \<const0> ;
  assign sdm1testdata_out[9] = \<const0> ;
  assign sdm1testdata_out[8] = \<const0> ;
  assign sdm1testdata_out[7] = \<const0> ;
  assign sdm1testdata_out[6] = \<const0> ;
  assign sdm1testdata_out[5] = \<const0> ;
  assign sdm1testdata_out[4] = \<const0> ;
  assign sdm1testdata_out[3] = \<const0> ;
  assign sdm1testdata_out[2] = \<const0> ;
  assign sdm1testdata_out[1] = \<const0> ;
  assign sdm1testdata_out[0] = \<const0> ;
  assign tcongpo_out[0] = \<const0> ;
  assign tconrsvdout0_out[0] = \<const0> ;
  assign txbufstatus_out[7] = \^txbufstatus_out [7];
  assign txbufstatus_out[6] = \<const0> ;
  assign txbufstatus_out[5] = \^txbufstatus_out [5];
  assign txbufstatus_out[4] = \<const0> ;
  assign txbufstatus_out[3] = \^txbufstatus_out [3];
  assign txbufstatus_out[2] = \<const0> ;
  assign txbufstatus_out[1] = \^txbufstatus_out [1];
  assign txbufstatus_out[0] = \<const0> ;
  assign txcomfinish_out[3] = \<const0> ;
  assign txcomfinish_out[2] = \<const0> ;
  assign txcomfinish_out[1] = \<const0> ;
  assign txcomfinish_out[0] = \<const0> ;
  assign txdccdone_out[3] = \<const0> ;
  assign txdccdone_out[2] = \<const0> ;
  assign txdccdone_out[1] = \<const0> ;
  assign txdccdone_out[0] = \<const0> ;
  assign txdlysresetdone_out[3] = \<const0> ;
  assign txdlysresetdone_out[2] = \<const0> ;
  assign txdlysresetdone_out[1] = \<const0> ;
  assign txdlysresetdone_out[0] = \<const0> ;
  assign txoutclk_out[3] = \<const0> ;
  assign txoutclk_out[2] = \^txoutclk_out [2];
  assign txoutclk_out[1] = \<const0> ;
  assign txoutclk_out[0] = \<const0> ;
  assign txoutclkfabric_out[3] = \<const0> ;
  assign txoutclkfabric_out[2] = \<const0> ;
  assign txoutclkfabric_out[1] = \<const0> ;
  assign txoutclkfabric_out[0] = \<const0> ;
  assign txoutclkpcs_out[3] = \<const0> ;
  assign txoutclkpcs_out[2] = \<const0> ;
  assign txoutclkpcs_out[1] = \<const0> ;
  assign txoutclkpcs_out[0] = \<const0> ;
  assign txphaligndone_out[3] = \<const0> ;
  assign txphaligndone_out[2] = \<const0> ;
  assign txphaligndone_out[1] = \<const0> ;
  assign txphaligndone_out[0] = \<const0> ;
  assign txphinitdone_out[3] = \<const0> ;
  assign txphinitdone_out[2] = \<const0> ;
  assign txphinitdone_out[1] = \<const0> ;
  assign txphinitdone_out[0] = \<const0> ;
  assign txprgdivresetdone_out[3] = \<const0> ;
  assign txprgdivresetdone_out[2] = \<const0> ;
  assign txprgdivresetdone_out[1] = \<const0> ;
  assign txprgdivresetdone_out[0] = \<const0> ;
  assign txqpisenn_out[0] = \<const0> ;
  assign txqpisenp_out[0] = \<const0> ;
  assign txratedone_out[3] = \<const0> ;
  assign txratedone_out[2] = \<const0> ;
  assign txratedone_out[1] = \<const0> ;
  assign txratedone_out[0] = \<const0> ;
  assign txresetdone_out[3] = \<const0> ;
  assign txresetdone_out[2] = \<const0> ;
  assign txresetdone_out[1] = \<const0> ;
  assign txresetdone_out[0] = \<const0> ;
  assign txsyncdone_out[3] = \<const0> ;
  assign txsyncdone_out[2] = \<const0> ;
  assign txsyncdone_out[1] = \<const0> ;
  assign txsyncdone_out[0] = \<const0> ;
  assign txsyncout_out[3] = \<const0> ;
  assign txsyncout_out[2] = \<const0> ;
  assign txsyncout_out[1] = \<const0> ;
  assign txsyncout_out[0] = \<const0> ;
  assign ubdaddr_out[15] = \<const0> ;
  assign ubdaddr_out[14] = \<const0> ;
  assign ubdaddr_out[13] = \<const0> ;
  assign ubdaddr_out[12] = \<const0> ;
  assign ubdaddr_out[11] = \<const0> ;
  assign ubdaddr_out[10] = \<const0> ;
  assign ubdaddr_out[9] = \<const0> ;
  assign ubdaddr_out[8] = \<const0> ;
  assign ubdaddr_out[7] = \<const0> ;
  assign ubdaddr_out[6] = \<const0> ;
  assign ubdaddr_out[5] = \<const0> ;
  assign ubdaddr_out[4] = \<const0> ;
  assign ubdaddr_out[3] = \<const0> ;
  assign ubdaddr_out[2] = \<const0> ;
  assign ubdaddr_out[1] = \<const0> ;
  assign ubdaddr_out[0] = \<const0> ;
  assign ubden_out[0] = \<const0> ;
  assign ubdi_out[15] = \<const0> ;
  assign ubdi_out[14] = \<const0> ;
  assign ubdi_out[13] = \<const0> ;
  assign ubdi_out[12] = \<const0> ;
  assign ubdi_out[11] = \<const0> ;
  assign ubdi_out[10] = \<const0> ;
  assign ubdi_out[9] = \<const0> ;
  assign ubdi_out[8] = \<const0> ;
  assign ubdi_out[7] = \<const0> ;
  assign ubdi_out[6] = \<const0> ;
  assign ubdi_out[5] = \<const0> ;
  assign ubdi_out[4] = \<const0> ;
  assign ubdi_out[3] = \<const0> ;
  assign ubdi_out[2] = \<const0> ;
  assign ubdi_out[1] = \<const0> ;
  assign ubdi_out[0] = \<const0> ;
  assign ubdwe_out[0] = \<const0> ;
  assign ubmdmtdo_out[0] = \<const0> ;
  assign ubrsvdout_out[0] = \<const0> ;
  assign ubtxuart_out[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  board_aurora_64b66b_0_2_gt_gtwizard_gtye4 \gen_gtwizard_gtye4_top.board_aurora_64b66b_0_2_gt_gtwizard_gtye4_inst 
       (.drpclk_in(drpclk_in[0]),
        .gtpowergood_out(gtpowergood_out),
        .gtrefclk0_in(gtrefclk0_in[0]),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in[2:0]),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .qpll0clk_in(qpll0clk_in[0]),
        .qpll0refclk_in(qpll0refclk_in[0]),
        .rxbufstatus_out({\^rxbufstatus_out [11],\^rxbufstatus_out [8],\^rxbufstatus_out [5],\^rxbufstatus_out [2]}),
        .rxcdrovrden_in(rxcdrovrden_in[0]),
        .rxdatavalid_out({\^rxdatavalid_out [6],\^rxdatavalid_out [4],\^rxdatavalid_out [2],\^rxdatavalid_out [0]}),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out({\^rxheader_out [19:18],\^rxheader_out [13:12],\^rxheader_out [7:6],\^rxheader_out [1:0]}),
        .rxheadervalid_out({\^rxheadervalid_out [6],\^rxheadervalid_out [4],\^rxheadervalid_out [2],\^rxheadervalid_out [0]}),
        .rxoutclk_out(\^rxoutclk_out ),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in[0]),
        .rxusrclk_in(rxusrclk_in[0]),
        .txbufstatus_out({\^txbufstatus_out [7],\^txbufstatus_out [5],\^txbufstatus_out [3],\^txbufstatus_out [1]}),
        .txheader_in({txheader_in[19:18],txheader_in[13:12],txheader_in[7:6],txheader_in[1:0]}),
        .txoutclk_out(\^txoutclk_out ),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in[0]));
endmodule

module board_aurora_64b66b_0_2_gt_gtye4_channel_wrapper
   (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ,
    GTYE4_CHANNEL_GTPOWERGOOD,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ,
    gtytxn_out,
    gtytxp_out,
    GTYE4_CHANNEL_RXCDRLOCK,
    rxpmaresetdone_out,
    GTYE4_CHANNEL_RXRESETDONE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    txpmaresetdone_out,
    GTYE4_CHANNEL_TXRESETDONE,
    gtwiz_userdata_rx_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    drpclk_in,
    gtrefclk0_in,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_GTTXRESET,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    rxusrclk_in,
    rxusrclk2_in,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXPROGDIVRESET,
    GTYE4_CHANNEL_TXUSERRDY,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  output [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  output [3:0]rxpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_RXRESETDONE;
  output [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  output [3:0]txpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_TXRESETDONE;
  output [255:0]gtwiz_userdata_rx_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input [0:0]gtrefclk0_in;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input [3:0]GTYE4_CHANNEL_GTTXRESET;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [3:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input [0:0]txusrclk_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_TXRATE;
  wire [3:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [0:0]drpclk_in;
  wire [0:0]gtrefclk0_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire lopt_3;
  wire lopt_4;
  wire lopt_5;
  wire lopt_6;
  wire lopt_7;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk_in;

  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_channel channel_inst
       (.GTYE4_CHANNEL_GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD),
        .GTYE4_CHANNEL_GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTYE4_CHANNEL_GTTXRESET(GTYE4_CHANNEL_GTTXRESET),
        .GTYE4_CHANNEL_RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK),
        .GTYE4_CHANNEL_RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .GTYE4_CHANNEL_RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE),
        .GTYE4_CHANNEL_RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .GTYE4_CHANNEL_TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS),
        .GTYE4_CHANNEL_TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .GTYE4_CHANNEL_TXRATE(GTYE4_CHANNEL_TXRATE),
        .GTYE4_CHANNEL_TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE),
        .GTYE4_CHANNEL_TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .drpclk_in(drpclk_in),
        .gtrefclk0_in(gtrefclk0_in),
        .gtwiz_userdata_rx_out(gtwiz_userdata_rx_out),
        .gtwiz_userdata_tx_in(gtwiz_userdata_tx_in),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST ),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 (\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST ),
        .gtyrxn_in(gtyrxn_in),
        .gtyrxp_in(gtyrxp_in),
        .gtytxn_out(gtytxn_out),
        .gtytxp_out(gtytxp_out),
        .loopback_in(loopback_in),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .lopt_3(lopt_3),
        .lopt_4(lopt_4),
        .lopt_5(lopt_5),
        .lopt_6(lopt_6),
        .lopt_7(lopt_7),
        .qpll0clk_in(qpll0clk_in),
        .qpll0refclk_in(qpll0refclk_in),
        .rxbufstatus_out(rxbufstatus_out),
        .rxcdrovrden_in(rxcdrovrden_in),
        .rxdatavalid_out(rxdatavalid_out),
        .rxgearboxslip_in(rxgearboxslip_in),
        .rxheader_out(rxheader_out),
        .rxheadervalid_out(rxheadervalid_out),
        .rxoutclk_out(rxoutclk_out),
        .rxpmaresetdone_out(rxpmaresetdone_out),
        .rxpolarity_in(rxpolarity_in),
        .rxusrclk2_in(rxusrclk2_in),
        .rxusrclk_in(rxusrclk_in),
        .txbufstatus_out(txbufstatus_out),
        .txheader_in(txheader_in),
        .txoutclk_out(txoutclk_out),
        .txpmaresetdone_out(txpmaresetdone_out),
        .txsequence_in(txsequence_in),
        .txusrclk_in(txusrclk_in));
endmodule

module board_aurora_64b66b_0_2_gt_gtye4_common_wrapper
   (gt_qplllock_quad1_out,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_qpllrefclklost_quad1_out,
    gt_refclk1_out,
    init_clk,
    gtwiz_reset_qpll0reset_out);
  output gt_qplllock_quad1_out;
  output gt_qpllclk_quad1_out;
  output gt_qpllrefclk_quad1_out;
  output gt_qpllrefclklost_quad1_out;
  input gt_refclk1_out;
  input init_clk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_qpllrefclklost_quad1_out;
  wire gt_refclk1_out;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire init_clk;

  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_common common_inst
       (.gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_qpllrefclklost_quad1_out(gt_qpllrefclklost_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gtwiz_reset_qpll0reset_out(gtwiz_reset_qpll0reset_out),
        .init_clk(init_clk));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_75
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_76
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_77
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_78
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_79
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_80
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ,
    GTYE4_CHANNEL_RXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_RXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_RXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_81
   (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    GTYE4_CHANNEL_TXRESETDONE,
    drpclk_in);
  output [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [0:0]GTYE4_CHANNEL_TXRESETDONE;
  input [0:0]drpclk_in;

  wire [0:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]drpclk_in;
  wire [0:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(GTYE4_CHANNEL_TXRESETDONE),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_82
   (E,
    in0,
    drpclk_in,
    \FSM_sequential_sm_reset_all_reg[0] ,
    Q,
    \FSM_sequential_sm_reset_all_reg[0]_0 );
  output [0:0]E;
  input in0;
  input [0:0]drpclk_in;
  input \FSM_sequential_sm_reset_all_reg[0] ;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_all_reg[0]_0 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_all_reg[0] ;
  wire \FSM_sequential_sm_reset_all_reg[0]_0 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtpowergood_sync;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  LUT6 #(
    .INIT(64'hAF0FAF00CFFFCFFF)) 
    \FSM_sequential_sm_reset_all[2]_i_1 
       (.I0(gtpowergood_sync),
        .I1(\FSM_sequential_sm_reset_all_reg[0] ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_sm_reset_all_reg[0]_0 ),
        .I5(Q[1]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtpowergood_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_83
   (E,
    in0,
    drpclk_in,
    Q,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[0]_0 ,
    gtwiz_reset_rx_pll_and_datapath_dly,
    sm_reset_rx_pll_timer_sat,
    \FSM_sequential_sm_reset_rx_reg[0]_1 );
  output [0:0]E;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \FSM_sequential_sm_reset_rx_reg[0] ;
  input \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  input gtwiz_reset_rx_pll_and_datapath_dly;
  input sm_reset_rx_pll_timer_sat;
  input \FSM_sequential_sm_reset_rx_reg[0]_1 ;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_rx[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_rx_reg[0]_1 ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_datapath_dly;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_rx_pll_timer_sat;

  LUT5 #(
    .INIT(32'hFFE400E4)) 
    \FSM_sequential_sm_reset_rx[2]_i_1 
       (.I0(Q[1]),
        .I1(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ),
        .I2(\FSM_sequential_sm_reset_rx_reg[0] ),
        .I3(Q[2]),
        .I4(\FSM_sequential_sm_reset_rx_reg[0]_0 ),
        .O(E));
  LUT5 #(
    .INIT(32'h0E0EFE0E)) 
    \FSM_sequential_sm_reset_rx[2]_i_3 
       (.I0(gtwiz_reset_rx_datapath_dly),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(Q[0]),
        .I3(sm_reset_rx_pll_timer_sat),
        .I4(\FSM_sequential_sm_reset_rx_reg[0]_1 ),
        .O(\FSM_sequential_sm_reset_rx[2]_i_3_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_84
   (gtwiz_reset_rx_pll_and_datapath_dly,
    D,
    in0,
    drpclk_in,
    Q,
    p_0_in11_out__0);
  output gtwiz_reset_rx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;

  wire [1:0]D;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire p_0_in11_out__0;

  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'hF5A55E5E)) 
    \FSM_sequential_sm_reset_rx[0]_i_1 
       (.I0(Q[0]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(Q[1]),
        .I3(p_0_in11_out__0),
        .I4(Q[2]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT5 #(
    .INIT(32'h00FFF511)) 
    \FSM_sequential_sm_reset_rx[1]_i_1 
       (.I0(Q[2]),
        .I1(gtwiz_reset_rx_pll_and_datapath_dly),
        .I2(p_0_in11_out__0),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_rx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_85
   (i_in_out_reg_0,
    in0,
    drpclk_in,
    gtwiz_reset_tx_pll_and_datapath_dly,
    Q,
    sm_reset_tx_pll_timer_sat,
    \FSM_sequential_sm_reset_tx[2]_i_5 );
  output i_in_out_reg_0;
  input in0;
  input [0:0]drpclk_in;
  input gtwiz_reset_tx_pll_and_datapath_dly;
  input [0:0]Q;
  input sm_reset_tx_pll_timer_sat;
  input \FSM_sequential_sm_reset_tx[2]_i_5 ;

  wire \FSM_sequential_sm_reset_tx[2]_i_5 ;
  wire [0:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;
  wire sm_reset_tx_pll_timer_sat;

  LUT5 #(
    .INIT(32'h0E0EFE0E)) 
    \FSM_sequential_sm_reset_tx[2]_i_6 
       (.I0(gtwiz_reset_tx_datapath_dly),
        .I1(gtwiz_reset_tx_pll_and_datapath_dly),
        .I2(Q),
        .I3(sm_reset_tx_pll_timer_sat),
        .I4(\FSM_sequential_sm_reset_tx[2]_i_5 ),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_86
   (gtwiz_reset_tx_pll_and_datapath_dly,
    D,
    in0,
    drpclk_in,
    Q);
  output gtwiz_reset_tx_pll_and_datapath_dly;
  output [1:0]D;
  input in0;
  input [0:0]drpclk_in;
  input [2:0]Q;

  wire [1:0]D;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire in0;

  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h0F3E)) 
    \FSM_sequential_sm_reset_tx[0]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .O(D[0]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT4 #(
    .INIT(16'h0FF1)) 
    \FSM_sequential_sm_reset_tx[1]_i_1 
       (.I0(gtwiz_reset_tx_pll_and_datapath_dly),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(D[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(in0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_tx_pll_and_datapath_dly),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_87
   (sm_reset_rx_timer_clr0__0,
    gtwiz_userclk_rx_active_in,
    drpclk_in,
    rxuserrdy_out_reg,
    sm_reset_rx_timer_sat);
  output sm_reset_rx_timer_clr0__0;
  input [0:0]gtwiz_userclk_rx_active_in;
  input [0:0]drpclk_in;
  input rxuserrdy_out_reg;
  input sm_reset_rx_timer_sat;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_userclk_rx_active_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire rxuserrdy_out_reg;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_sat;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_rx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_rx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT3 #(
    .INIT(8'h40)) 
    sm_reset_rx_timer_clr_i_3
       (.I0(rxuserrdy_out_reg),
        .I1(sm_reset_rx_timer_sat),
        .I2(gtwiz_reset_userclk_rx_active_sync),
        .O(sm_reset_rx_timer_clr0__0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_88
   (\FSM_sequential_sm_reset_tx_reg[1] ,
    sm_reset_tx_timer_clr0__0,
    E,
    gtwiz_userclk_tx_active_in,
    drpclk_in,
    Q,
    gtwiz_reset_tx_any_sync,
    GTYE4_CHANNEL_TXUSERRDY,
    gtwiz_reset_tx_done_int0__0,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    txuserrdy_out_reg,
    sm_reset_tx_timer_sat);
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  output sm_reset_tx_timer_clr0__0;
  output [0:0]E;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_tx_any_sync;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input gtwiz_reset_tx_done_int0__0;
  input \FSM_sequential_sm_reset_tx_reg[0] ;
  input txuserrdy_out_reg;
  input sm_reset_tx_timer_sat;

  wire [0:0]E;
  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_userclk_tx_active_sync;
  wire [0:0]gtwiz_userclk_tx_active_in;
  (* async_reg = "true" *) wire i_in_meta;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_sat;
  wire txuserrdy_out_reg;

  LUT6 #(
    .INIT(64'h00F000F0CCF0AAF0)) 
    \FSM_sequential_sm_reset_tx[2]_i_1 
       (.I0(sm_reset_tx_timer_clr0__0),
        .I1(gtwiz_reset_tx_done_int0__0),
        .I2(\FSM_sequential_sm_reset_tx_reg[0] ),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(Q[1]),
        .O(E));
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_tx[2]_i_3 
       (.I0(txuserrdy_out_reg),
        .I1(sm_reset_tx_timer_sat),
        .I2(gtwiz_reset_userclk_tx_active_sync),
        .O(sm_reset_tx_timer_clr0__0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_userclk_tx_active_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(gtwiz_reset_userclk_tx_active_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFF9F900001000)) 
    txuserrdy_out_i_1
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(sm_reset_tx_timer_clr0__0),
        .I4(gtwiz_reset_tx_any_sync),
        .I5(GTYE4_CHANNEL_TXUSERRDY),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_89
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[0] ,
    \FSM_sequential_sm_reset_rx_reg[2] ,
    \FSM_sequential_sm_reset_rx_reg[2]_0 ,
    i_in_out_reg_1,
    gtwiz_reset_qpll0lock_in,
    drpclk_in,
    Q,
    p_0_in11_out__0,
    gtwiz_reset_rx_done_int_reg,
    sm_reset_rx_timer_clr0__0,
    sm_reset_rx_timer_clr_reg,
    sm_reset_rx_cdr_to_clr_reg,
    sm_reset_rx_cdr_to_clr,
    gtwiz_reset_rx_any_sync,
    GTYE4_CHANNEL_GTRXRESET,
    sm_reset_rx_timer_clr010_out__0,
    sm_reset_rx_timer_sat);
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[0] ;
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  output i_in_out_reg_1;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input p_0_in11_out__0;
  input gtwiz_reset_rx_done_int_reg;
  input sm_reset_rx_timer_clr0__0;
  input sm_reset_rx_timer_clr_reg;
  input sm_reset_rx_cdr_to_clr_reg;
  input sm_reset_rx_cdr_to_clr;
  input gtwiz_reset_rx_any_sync;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input sm_reset_rx_timer_clr010_out__0;
  input sm_reset_rx_timer_sat;

  wire \FSM_sequential_sm_reset_rx_reg[0] ;
  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_rx_any_sync;
  wire gtwiz_reset_rx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  wire i_in_out_reg_1;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire plllock_rx_sync;
  wire sm_reset_rx_cdr_to_clr;
  wire sm_reset_rx_cdr_to_clr_i_2_n_0;
  wire sm_reset_rx_cdr_to_clr_reg;
  wire sm_reset_rx_timer_clr010_out__0;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_i_2_n_0;
  wire sm_reset_rx_timer_clr_reg;
  wire sm_reset_rx_timer_sat;

  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h00B0)) 
    \FSM_sequential_sm_reset_rx[2]_i_4 
       (.I0(plllock_rx_sync),
        .I1(Q[0]),
        .I2(sm_reset_rx_timer_sat),
        .I3(sm_reset_rx_timer_clr_reg),
        .O(i_in_out_reg_1));
  LUT6 #(
    .INIT(64'hFFFFBFFF00001514)) 
    gtrxreset_out_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr_i_2_n_0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(GTYE4_CHANNEL_GTRXRESET),
        .O(\FSM_sequential_sm_reset_rx_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hBFBFFFFF0C000000)) 
    gtwiz_reset_rx_done_int_i_1
       (.I0(plllock_rx_sync),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(p_0_in11_out__0),
        .I4(Q[2]),
        .I5(gtwiz_reset_rx_done_int_reg),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_rx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFBFFFFFF0000040F)) 
    sm_reset_rx_cdr_to_clr_i_1
       (.I0(Q[2]),
        .I1(sm_reset_rx_cdr_to_clr_i_2_n_0),
        .I2(sm_reset_rx_cdr_to_clr_reg),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(sm_reset_rx_cdr_to_clr),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h0800)) 
    sm_reset_rx_cdr_to_clr_i_2
       (.I0(plllock_rx_sync),
        .I1(Q[1]),
        .I2(sm_reset_rx_timer_clr_reg),
        .I3(sm_reset_rx_timer_sat),
        .O(sm_reset_rx_cdr_to_clr_i_2_n_0));
  LUT6 #(
    .INIT(64'hFAEFAAFF0AE0AA0F)) 
    sm_reset_rx_timer_clr_i_1
       (.I0(sm_reset_rx_timer_clr_i_2_n_0),
        .I1(sm_reset_rx_timer_clr0__0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(sm_reset_rx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_rx_reg[0] ));
  LUT6 #(
    .INIT(64'h8F808F8F80808080)) 
    sm_reset_rx_timer_clr_i_2
       (.I0(Q[1]),
        .I1(p_0_in11_out__0),
        .I2(Q[2]),
        .I3(plllock_rx_sync),
        .I4(Q[0]),
        .I5(sm_reset_rx_timer_clr010_out__0),
        .O(sm_reset_rx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_90
   (i_in_out_reg_0,
    \FSM_sequential_sm_reset_tx_reg[2] ,
    \FSM_sequential_sm_reset_tx_reg[0] ,
    i_in_out_reg_1,
    gtwiz_reset_qpll0lock_in,
    drpclk_in,
    sm_reset_tx_timer_sat,
    sm_reset_tx_timer_clr_reg,
    gtwiz_reset_tx_done_int0__0,
    Q,
    gtwiz_reset_tx_done_int_reg,
    sm_reset_tx_timer_clr0__0,
    gtwiz_reset_tx_any_sync,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ,
    \FSM_sequential_sm_reset_tx_reg[0]_0 );
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_tx_reg[2] ;
  output \FSM_sequential_sm_reset_tx_reg[0] ;
  output i_in_out_reg_1;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]drpclk_in;
  input sm_reset_tx_timer_sat;
  input sm_reset_tx_timer_clr_reg;
  input gtwiz_reset_tx_done_int0__0;
  input [2:0]Q;
  input gtwiz_reset_tx_done_int_reg;
  input sm_reset_tx_timer_clr0__0;
  input gtwiz_reset_tx_any_sync;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  input \FSM_sequential_sm_reset_tx_reg[0]_0 ;

  wire \FSM_sequential_sm_reset_tx_reg[0] ;
  wire \FSM_sequential_sm_reset_tx_reg[0]_0 ;
  wire \FSM_sequential_sm_reset_tx_reg[2] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  wire gttxreset_out_i_2_n_0;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_out_reg_0;
  wire i_in_out_reg_1;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire plllock_tx_sync;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_i_2_n_0;
  wire sm_reset_tx_timer_clr_reg;
  wire sm_reset_tx_timer_sat;

  LUT6 #(
    .INIT(64'h00B0FFFF00B00000)) 
    \FSM_sequential_sm_reset_tx[2]_i_5 
       (.I0(plllock_tx_sync),
        .I1(Q[0]),
        .I2(sm_reset_tx_timer_sat),
        .I3(sm_reset_tx_timer_clr_reg),
        .I4(Q[1]),
        .I5(\FSM_sequential_sm_reset_tx_reg[0]_0 ),
        .O(i_in_out_reg_1));
  LUT6 #(
    .INIT(64'h7F7F7F7F2A2A2A3E)) 
    gttxreset_out_i_1
       (.I0(gttxreset_out_i_2_n_0),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(Q[2]),
        .I5(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[0] ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    gttxreset_out_i_2
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg),
        .I2(plllock_tx_sync),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(Q[2]),
        .I5(Q[1]),
        .O(gttxreset_out_i_2_n_0));
  LUT6 #(
    .INIT(64'hFAFFFFFF0000C000)) 
    gtwiz_reset_tx_done_int_i_1
       (.I0(plllock_tx_sync),
        .I1(gtwiz_reset_tx_done_int0__0),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .I5(gtwiz_reset_tx_done_int_reg),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_qpll0lock_in),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(plllock_tx_sync),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFAAFFAEF0AA00AEF)) 
    sm_reset_tx_timer_clr_i_1
       (.I0(sm_reset_tx_timer_clr_i_2_n_0),
        .I1(sm_reset_tx_timer_clr0__0),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .I5(sm_reset_tx_timer_clr_reg),
        .O(\FSM_sequential_sm_reset_tx_reg[2] ));
  LUT6 #(
    .INIT(64'hF022F00000220022)) 
    sm_reset_tx_timer_clr_i_2
       (.I0(sm_reset_tx_timer_sat),
        .I1(sm_reset_tx_timer_clr_reg),
        .I2(gtwiz_reset_tx_done_int0__0),
        .I3(Q[2]),
        .I4(plllock_tx_sync),
        .I5(Q[0]),
        .O(sm_reset_tx_timer_clr_i_2_n_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_bit_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_91
   (\FSM_sequential_sm_reset_rx_reg[2] ,
    i_in_out_reg_0,
    \FSM_sequential_sm_reset_rx_reg[2]_0 ,
    i_in_meta_reg_0,
    drpclk_in,
    Q,
    gtwiz_reset_rx_any_sync,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    sm_reset_rx_cdr_to_sat,
    sm_reset_rx_timer_clr0__0,
    p_0_in11_out__0);
  output \FSM_sequential_sm_reset_rx_reg[2] ;
  output i_in_out_reg_0;
  output \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  input i_in_meta_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input gtwiz_reset_rx_any_sync;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input sm_reset_rx_cdr_to_sat;
  input sm_reset_rx_timer_clr0__0;
  input p_0_in11_out__0;

  wire \FSM_sequential_sm_reset_rx_reg[2] ;
  wire \FSM_sequential_sm_reset_rx_reg[2]_0 ;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire gtwiz_reset_rx_any_sync;
  (* async_reg = "true" *) wire i_in_meta;
  wire i_in_meta_reg_0;
  wire i_in_out_reg_0;
  wire i_in_out_reg_n_0;
  (* async_reg = "true" *) wire i_in_sync1;
  (* async_reg = "true" *) wire i_in_sync2;
  (* async_reg = "true" *) wire i_in_sync3;
  wire p_0_in11_out__0;
  wire sm_reset_rx_cdr_to_clr0__0;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_timer_clr0__0;

  LUT6 #(
    .INIT(64'h0000F0F0FF00EEEE)) 
    \FSM_sequential_sm_reset_rx[2]_i_5 
       (.I0(i_in_out_reg_n_0),
        .I1(sm_reset_rx_cdr_to_sat),
        .I2(sm_reset_rx_timer_clr0__0),
        .I3(p_0_in11_out__0),
        .I4(Q[1]),
        .I5(Q[0]),
        .O(i_in_out_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta_reg_0),
        .Q(i_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    i_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync3),
        .Q(i_in_out_reg_n_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_meta),
        .Q(i_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync1),
        .Q(i_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    i_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(i_in_sync2),
        .Q(i_in_sync3),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hFFFFFDFF00001414)) 
    rxprogdivreset_out_i_1
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(sm_reset_rx_cdr_to_clr0__0),
        .I4(gtwiz_reset_rx_any_sync),
        .I5(GTYE4_CHANNEL_RXPROGDIVRESET),
        .O(\FSM_sequential_sm_reset_rx_reg[2] ));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'hE)) 
    rxprogdivreset_out_i_2
       (.I0(sm_reset_rx_cdr_to_sat),
        .I1(i_in_out_reg_n_0),
        .O(sm_reset_rx_cdr_to_clr0__0));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'h02)) 
    sm_reset_rx_cdr_to_clr_i_3
       (.I0(Q[2]),
        .I1(i_in_out_reg_n_0),
        .I2(sm_reset_rx_cdr_to_sat),
        .O(\FSM_sequential_sm_reset_rx_reg[2]_0 ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtwiz_reset" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtwiz_reset
   (GTYE4_CHANNEL_TXPROGDIVRESET,
    gtwiz_reset_tx_done_out,
    gtwiz_reset_rx_done_out,
    GTYE4_CHANNEL_TXUSERRDY,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    GTYE4_CHANNEL_GTTXRESET,
    gtwiz_reset_qpll0reset_out,
    in0,
    gtwiz_userclk_tx_active_in,
    gtwiz_reset_qpll0lock_in,
    gtwiz_userclk_rx_active_in,
    i_in_meta_reg,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    txusrclk_in,
    rxusrclk2_in,
    gtpowergood_out,
    GTYE4_CHANNEL_GTPOWERGOOD,
    gtwiz_reset_rx_datapath_in,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync );
  output [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  output [0:0]gtwiz_reset_tx_done_out;
  output [0:0]gtwiz_reset_rx_done_out;
  output [0:0]GTYE4_CHANNEL_TXUSERRDY;
  output [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  output [0:0]GTYE4_CHANNEL_GTRXRESET;
  output [0:0]GTYE4_CHANNEL_RXUSERRDY;
  output [3:0]GTYE4_CHANNEL_GTTXRESET;
  output [0:0]gtwiz_reset_qpll0reset_out;
  input in0;
  input [0:0]gtwiz_userclk_tx_active_in;
  input [0:0]gtwiz_reset_qpll0lock_in;
  input [0:0]gtwiz_userclk_rx_active_in;
  input i_in_meta_reg;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input [0:0]txusrclk_in;
  input [0:0]rxusrclk2_in;
  input [3:0]gtpowergood_out;
  input [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  input [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;

  wire \FSM_sequential_sm_reset_all[2]_i_3_n_0 ;
  wire \FSM_sequential_sm_reset_all[2]_i_4_n_0 ;
  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire bit_synchronizer_gtpowergood_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0;
  wire bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_0;
  wire bit_synchronizer_plllock_rx_inst_n_1;
  wire bit_synchronizer_plllock_rx_inst_n_2;
  wire bit_synchronizer_plllock_rx_inst_n_3;
  wire bit_synchronizer_plllock_rx_inst_n_4;
  wire bit_synchronizer_plllock_tx_inst_n_0;
  wire bit_synchronizer_plllock_tx_inst_n_1;
  wire bit_synchronizer_plllock_tx_inst_n_2;
  wire bit_synchronizer_plllock_tx_inst_n_3;
  wire bit_synchronizer_rxcdrlock_inst_n_0;
  wire bit_synchronizer_rxcdrlock_inst_n_1;
  wire bit_synchronizer_rxcdrlock_inst_n_2;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync ;
  wire [3:0]\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync ;
  wire [3:0]gtpowergood_out;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire gtwiz_reset_rx_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_datapath_sync;
  wire gtwiz_reset_rx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_rx_done_out;
  wire gtwiz_reset_rx_pll_and_datapath_dly;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_rx_pll_and_datapath_sync;
  wire gtwiz_reset_tx_any_sync;
  wire gtwiz_reset_tx_datapath_sync;
  wire gtwiz_reset_tx_done_int0__0;
  wire gtwiz_reset_tx_done_int_reg_n_0;
  wire [0:0]gtwiz_reset_tx_done_out;
  wire gtwiz_reset_tx_pll_and_datapath_dly;
  wire gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_int_reg_n_0;
  wire gtwiz_reset_tx_pll_and_datapath_sync;
  wire [0:0]gtwiz_userclk_rx_active_in;
  wire [0:0]gtwiz_userclk_tx_active_in;
  wire i_in_meta_reg;
  wire in0;
  wire p_0_in;
  wire p_0_in11_out__0;
  wire [9:0]p_0_in__0;
  wire [9:0]p_0_in__1;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_1;
  wire reset_synchronizer_gtwiz_reset_rx_any_inst_n_2;
  wire reset_synchronizer_gtwiz_reset_tx_any_inst_n_1;
  wire [0:0]rxusrclk2_in;
  wire sel;
  wire [2:0]sm_reset_all;
  wire [2:0]sm_reset_all__0;
  wire sm_reset_all_timer_clr_i_1_n_0;
  wire sm_reset_all_timer_clr_i_2_n_0;
  wire sm_reset_all_timer_clr_reg_n_0;
  wire [2:0]sm_reset_all_timer_ctr;
  wire \sm_reset_all_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_all_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_all_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_all_timer_sat;
  wire sm_reset_all_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_rx;
  wire [2:0]sm_reset_rx__0;
  wire sm_reset_rx_cdr_to_clr;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ;
  wire [25:0]sm_reset_rx_cdr_to_ctr_reg;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ;
  wire \sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ;
  wire sm_reset_rx_cdr_to_sat;
  wire sm_reset_rx_cdr_to_sat_i_1_n_0;
  wire sm_reset_rx_cdr_to_sat_i_2_n_0;
  wire sm_reset_rx_cdr_to_sat_i_3_n_0;
  wire sm_reset_rx_cdr_to_sat_i_4_n_0;
  wire sm_reset_rx_cdr_to_sat_i_5_n_0;
  wire sm_reset_rx_cdr_to_sat_i_6_n_0;
  wire sm_reset_rx_cdr_to_sat_i_7_n_0;
  wire sm_reset_rx_pll_timer_clr_i_1_n_0;
  wire sm_reset_rx_pll_timer_clr_reg_n_0;
  wire \sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_rx_pll_timer_ctr_reg;
  wire sm_reset_rx_pll_timer_sat;
  wire sm_reset_rx_pll_timer_sat_i_1_n_0;
  wire sm_reset_rx_timer_clr010_out__0;
  wire sm_reset_rx_timer_clr0__0;
  wire sm_reset_rx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_rx_timer_ctr;
  wire \sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ;
  wire \sm_reset_rx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_rx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_rx_timer_sat;
  wire sm_reset_rx_timer_sat_i_1_n_0;
  wire [2:0]sm_reset_tx;
  wire [2:0]sm_reset_tx__0;
  wire sm_reset_tx_pll_timer_clr_i_1_n_0;
  wire sm_reset_tx_pll_timer_clr_reg_n_0;
  wire \sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ;
  wire \sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ;
  wire [9:0]sm_reset_tx_pll_timer_ctr_reg;
  wire sm_reset_tx_pll_timer_sat;
  wire sm_reset_tx_pll_timer_sat_i_1_n_0;
  wire sm_reset_tx_timer_clr0__0;
  wire sm_reset_tx_timer_clr_reg_n_0;
  wire [2:0]sm_reset_tx_timer_ctr;
  wire \sm_reset_tx_timer_ctr[0]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[1]_i_1_n_0 ;
  wire \sm_reset_tx_timer_ctr[2]_i_1_n_0 ;
  wire sm_reset_tx_timer_sat;
  wire sm_reset_tx_timer_sat_i_1_n_0;
  wire [0:0]txusrclk_in;
  wire [7:1]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED ;
  wire [7:2]\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED ;

  LUT6 #(
    .INIT(64'h00FFF70000FFFFFF)) 
    \FSM_sequential_sm_reset_all[0]_i_1 
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .I3(sm_reset_all[2]),
        .I4(sm_reset_all[1]),
        .I5(sm_reset_all[0]),
        .O(sm_reset_all__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h34)) 
    \FSM_sequential_sm_reset_all[1]_i_1 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[0]),
        .O(sm_reset_all__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT3 #(
    .INIT(8'h4A)) 
    \FSM_sequential_sm_reset_all[2]_i_2 
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .O(sm_reset_all__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \FSM_sequential_sm_reset_all[2]_i_3 
       (.I0(sm_reset_all_timer_sat),
        .I1(gtwiz_reset_rx_done_int_reg_n_0),
        .I2(sm_reset_all_timer_clr_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'h40)) 
    \FSM_sequential_sm_reset_all[2]_i_4 
       (.I0(sm_reset_all_timer_clr_reg_n_0),
        .I1(sm_reset_all_timer_sat),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .O(\FSM_sequential_sm_reset_all[2]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[0]),
        .Q(sm_reset_all[0]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[1]),
        .Q(sm_reset_all[1]),
        .R(gtwiz_reset_all_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_ALL_BRANCH:000,ST_RESET_ALL_TX_PLL_WAIT:010,ST_RESET_ALL_RX_WAIT:101,ST_RESET_ALL_TX_PLL:001,ST_RESET_ALL_RX_PLL:100,ST_RESET_ALL_RX_DP:011,ST_RESET_ALL_INIT:111,iSTATE:110" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_sequential_sm_reset_all_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtpowergood_inst_n_0),
        .D(sm_reset_all__0[2]),
        .Q(sm_reset_all[2]),
        .R(gtwiz_reset_all_sync));
  LUT4 #(
    .INIT(16'hF8B8)) 
    \FSM_sequential_sm_reset_rx[2]_i_2 
       (.I0(sm_reset_rx[0]),
        .I1(sm_reset_rx[1]),
        .I2(sm_reset_rx[2]),
        .I3(p_0_in11_out__0),
        .O(sm_reset_rx__0[2]));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \FSM_sequential_sm_reset_rx[2]_i_6 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [2]),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [3]),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [0]),
        .I3(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.rxresetdone_sync [1]),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .I5(sm_reset_rx_timer_sat),
        .O(p_0_in11_out__0));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[0]),
        .Q(sm_reset_rx[0]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[1]),
        .Q(sm_reset_rx[1]),
        .R(gtwiz_reset_rx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_RX_WAIT_LOCK:011,ST_RESET_RX_WAIT_CDR:100,ST_RESET_RX_WAIT_USERRDY:101,ST_RESET_RX_WAIT_RESETDONE:110,ST_RESET_RX_DATAPATH:010,ST_RESET_RX_PLL:001,ST_RESET_RX_BRANCH:000,ST_RESET_RX_IDLE:111" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_rx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .D(sm_reset_rx__0[2]),
        .Q(sm_reset_rx[2]),
        .R(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h2C)) 
    \FSM_sequential_sm_reset_tx[2]_i_2 
       (.I0(sm_reset_tx[0]),
        .I1(sm_reset_tx[2]),
        .I2(sm_reset_tx[1]),
        .O(sm_reset_tx__0[2]));
  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \FSM_sequential_sm_reset_tx[2]_i_4 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [2]),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [3]),
        .I2(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [0]),
        .I3(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.txresetdone_sync [1]),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .I5(sm_reset_tx_timer_sat),
        .O(gtwiz_reset_tx_done_int0__0));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[0] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[0]),
        .Q(sm_reset_tx[0]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[1] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[1]),
        .Q(sm_reset_tx[1]),
        .R(gtwiz_reset_tx_any_sync));
  (* FSM_ENCODED_STATES = "ST_RESET_TX_BRANCH:000,ST_RESET_TX_WAIT_LOCK:011,ST_RESET_TX_WAIT_USERRDY:100,ST_RESET_TX_WAIT_RESETDONE:101,ST_RESET_TX_IDLE:110,ST_RESET_TX_DATAPATH:010,ST_RESET_TX_PLL:001" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_sm_reset_tx_reg[2] 
       (.C(drpclk_in),
        .CE(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .D(sm_reset_tx__0[2]),
        .Q(sm_reset_tx[2]),
        .R(gtwiz_reset_tx_any_sync));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_82 bit_synchronizer_gtpowergood_inst
       (.E(bit_synchronizer_gtpowergood_inst_n_0),
        .\FSM_sequential_sm_reset_all_reg[0] (\FSM_sequential_sm_reset_all[2]_i_3_n_0 ),
        .\FSM_sequential_sm_reset_all_reg[0]_0 (\FSM_sequential_sm_reset_all[2]_i_4_n_0 ),
        .Q(sm_reset_all),
        .drpclk_in(drpclk_in),
        .in0(in0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_83 bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst
       (.E(bit_synchronizer_gtwiz_reset_rx_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_plllock_rx_inst_n_4),
        .\FSM_sequential_sm_reset_rx_reg[0]_0 (bit_synchronizer_rxcdrlock_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[0]_1 (sm_reset_rx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .in0(gtwiz_reset_rx_datapath_sync),
        .sm_reset_rx_pll_timer_sat(sm_reset_rx_pll_timer_sat));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_84 bit_synchronizer_gtwiz_reset_rx_pll_and_datapath_dly_inst
       (.D(sm_reset_rx__0[1:0]),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_dly(gtwiz_reset_rx_pll_and_datapath_dly),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .p_0_in11_out__0(p_0_in11_out__0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_85 bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst
       (.\FSM_sequential_sm_reset_tx[2]_i_5 (sm_reset_tx_pll_timer_clr_reg_n_0),
        .Q(sm_reset_tx[0]),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .i_in_out_reg_0(bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0),
        .in0(gtwiz_reset_tx_datapath_sync),
        .sm_reset_tx_pll_timer_sat(sm_reset_tx_pll_timer_sat));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_86 bit_synchronizer_gtwiz_reset_tx_pll_and_datapath_dly_inst
       (.D(sm_reset_tx__0[1:0]),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_pll_and_datapath_dly(gtwiz_reset_tx_pll_and_datapath_dly),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_87 bit_synchronizer_gtwiz_reset_userclk_rx_active_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_userclk_rx_active_in(gtwiz_userclk_rx_active_in),
        .rxuserrdy_out_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_88 bit_synchronizer_gtwiz_reset_userclk_tx_active_inst
       (.E(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_3),
        .\FSM_sequential_sm_reset_tx_reg[1] (bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0),
        .GTYE4_CHANNEL_TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_userclk_tx_active_in(gtwiz_userclk_tx_active_in),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat),
        .txuserrdy_out_reg(sm_reset_tx_timer_clr_reg_n_0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_89 bit_synchronizer_plllock_rx_inst
       (.\FSM_sequential_sm_reset_rx_reg[0] (bit_synchronizer_plllock_rx_inst_n_1),
        .\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_plllock_rx_inst_n_2),
        .\FSM_sequential_sm_reset_rx_reg[2]_0 (bit_synchronizer_plllock_rx_inst_n_3),
        .GTYE4_CHANNEL_GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_done_int_reg(gtwiz_reset_rx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_rx_inst_n_0),
        .i_in_out_reg_1(bit_synchronizer_plllock_rx_inst_n_4),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_clr(sm_reset_rx_cdr_to_clr),
        .sm_reset_rx_cdr_to_clr_reg(bit_synchronizer_rxcdrlock_inst_n_2),
        .sm_reset_rx_timer_clr010_out__0(sm_reset_rx_timer_clr010_out__0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0),
        .sm_reset_rx_timer_clr_reg(sm_reset_rx_timer_clr_reg_n_0),
        .sm_reset_rx_timer_sat(sm_reset_rx_timer_sat));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_90 bit_synchronizer_plllock_tx_inst
       (.\FSM_sequential_sm_reset_tx_reg[0] (bit_synchronizer_plllock_tx_inst_n_2),
        .\FSM_sequential_sm_reset_tx_reg[0]_0 (bit_synchronizer_gtwiz_reset_tx_datapath_dly_inst_n_0),
        .\FSM_sequential_sm_reset_tx_reg[2] (bit_synchronizer_plllock_tx_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .gtwiz_reset_tx_done_int0__0(gtwiz_reset_tx_done_int0__0),
        .gtwiz_reset_tx_done_int_reg(gtwiz_reset_tx_done_int_reg_n_0),
        .i_in_out_reg_0(bit_synchronizer_plllock_tx_inst_n_0),
        .i_in_out_reg_1(bit_synchronizer_plllock_tx_inst_n_3),
        .sm_reset_tx_timer_clr0__0(sm_reset_tx_timer_clr0__0),
        .sm_reset_tx_timer_clr_reg(sm_reset_tx_timer_clr_reg_n_0),
        .sm_reset_tx_timer_sat(sm_reset_tx_timer_sat));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_bit_synchronizer_91 bit_synchronizer_rxcdrlock_inst
       (.\FSM_sequential_sm_reset_rx_reg[2] (bit_synchronizer_rxcdrlock_inst_n_0),
        .\FSM_sequential_sm_reset_rx_reg[2]_0 (bit_synchronizer_rxcdrlock_inst_n_2),
        .GTYE4_CHANNEL_RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .i_in_meta_reg_0(i_in_meta_reg),
        .i_in_out_reg_0(bit_synchronizer_rxcdrlock_inst_n_1),
        .p_0_in11_out__0(p_0_in11_out__0),
        .sm_reset_rx_cdr_to_sat(sm_reset_rx_cdr_to_sat),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0));
  FDRE #(
    .INIT(1'b1)) 
    gtrxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_3),
        .Q(GTYE4_CHANNEL_GTRXRESET),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    gttxreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_2),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'hE)) 
    \gtwiz_reset_qpll0reset_out[0]_INST_0 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .I1(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(gtwiz_reset_qpll0reset_out));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'hF740)) 
    gtwiz_reset_rx_datapath_int_i_1
       (.I0(sm_reset_all[2]),
        .I1(sm_reset_all[0]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_0),
        .Q(gtwiz_reset_rx_done_int_reg_n_0),
        .R(gtwiz_reset_rx_any_sync));
  LUT4 #(
    .INIT(16'hF704)) 
    gtwiz_reset_rx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[2]),
        .I2(sm_reset_all[1]),
        .I3(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_rx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_rx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_done_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_0),
        .Q(gtwiz_reset_tx_done_int_reg_n_0),
        .R(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT4 #(
    .INIT(16'hFB02)) 
    gtwiz_reset_tx_pll_and_datapath_int_i_1
       (.I0(sm_reset_all[0]),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .O(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    gtwiz_reset_tx_pll_and_datapath_int_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(gtwiz_reset_tx_pll_and_datapath_int_i_1_n_0),
        .Q(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0),
        .R(gtwiz_reset_all_sync));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[0]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .O(GTYE4_CHANNEL_GTTXRESET[0]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[1]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .O(GTYE4_CHANNEL_GTTXRESET[1]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[2]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .O(GTYE4_CHANNEL_GTTXRESET[2]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT3 #(
    .INIT(8'h8B)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_i_1 
       (.I0(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_gttxreset_int ),
        .I1(gtpowergood_out[3]),
        .I2(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .O(GTYE4_CHANNEL_GTTXRESET[3]));
  FDRE #(
    .INIT(1'b0)) 
    pllreset_rx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    pllreset_tx_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .R(1'b0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer reset_synchronizer_gtwiz_reset_all_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_all_sync(gtwiz_reset_all_sync),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_92 reset_synchronizer_gtwiz_reset_rx_any_inst
       (.\FSM_sequential_sm_reset_rx_reg[1] (reset_synchronizer_gtwiz_reset_rx_any_inst_n_1),
        .GTYE4_CHANNEL_RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .Q(sm_reset_rx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .gtwiz_reset_rx_any_sync(gtwiz_reset_rx_any_sync),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .rst_in_out_reg_0(reset_synchronizer_gtwiz_reset_rx_any_inst_n_2),
        .rst_in_out_reg_1(gtwiz_reset_rx_datapath_int_reg_n_0),
        .rst_in_out_reg_2(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0),
        .sm_reset_rx_timer_clr0__0(sm_reset_rx_timer_clr0__0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_93 reset_synchronizer_gtwiz_reset_rx_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_datapath_in(gtwiz_reset_rx_datapath_in),
        .in0(gtwiz_reset_rx_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_datapath_int_reg_n_0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_94 reset_synchronizer_gtwiz_reset_rx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .gtwiz_reset_rx_pll_and_datapath_in(gtwiz_reset_rx_pll_and_datapath_in),
        .in0(gtwiz_reset_rx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_rx_pll_and_datapath_int_reg_n_0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_95 reset_synchronizer_gtwiz_reset_tx_any_inst
       (.\FSM_sequential_sm_reset_tx_reg[1] (reset_synchronizer_gtwiz_reset_tx_any_inst_n_1),
        .Q(sm_reset_tx),
        .drpclk_in(drpclk_in),
        .\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int (\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .gtwiz_reset_tx_any_sync(gtwiz_reset_tx_any_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_96 reset_synchronizer_gtwiz_reset_tx_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_datapath_sync));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_97 reset_synchronizer_gtwiz_reset_tx_pll_and_datapath_inst
       (.drpclk_in(drpclk_in),
        .in0(gtwiz_reset_tx_pll_and_datapath_sync),
        .rst_in_out_reg_0(gtwiz_reset_tx_pll_and_datapath_int_reg_n_0));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer reset_synchronizer_rx_done_inst
       (.gtwiz_reset_rx_done_out(gtwiz_reset_rx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_rx_done_int_reg_n_0),
        .rxusrclk2_in(rxusrclk2_in));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer_98 reset_synchronizer_tx_done_inst
       (.gtwiz_reset_tx_done_out(gtwiz_reset_tx_done_out),
        .rst_in_sync2_reg_0(gtwiz_reset_tx_done_int_reg_n_0),
        .txusrclk_in(txusrclk_in));
  board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_99 reset_synchronizer_txprogdivreset_inst
       (.GTYE4_CHANNEL_TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .drpclk_in(drpclk_in),
        .gtwiz_reset_qpll0lock_in(gtwiz_reset_qpll0lock_in));
  FDRE #(
    .INIT(1'b1)) 
    rxprogdivreset_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_rxcdrlock_inst_n_0),
        .Q(GTYE4_CHANNEL_RXPROGDIVRESET),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rxuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(reset_synchronizer_gtwiz_reset_rx_any_inst_n_2),
        .Q(GTYE4_CHANNEL_RXUSERRDY),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hEFFA200A)) 
    sm_reset_all_timer_clr_i_1
       (.I0(sm_reset_all_timer_clr_i_2_n_0),
        .I1(sm_reset_all[1]),
        .I2(sm_reset_all[2]),
        .I3(sm_reset_all[0]),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_clr_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000B0003333BB33)) 
    sm_reset_all_timer_clr_i_2
       (.I0(gtwiz_reset_rx_done_int_reg_n_0),
        .I1(sm_reset_all[2]),
        .I2(gtwiz_reset_tx_done_int_reg_n_0),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .I5(sm_reset_all[1]),
        .O(sm_reset_all_timer_clr_i_2_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_all_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_clr_i_1_n_0),
        .Q(sm_reset_all_timer_clr_reg_n_0),
        .S(gtwiz_reset_all_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_all_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_all_timer_ctr[0]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .O(\sm_reset_all_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_all_timer_ctr[1]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .O(\sm_reset_all_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_all_timer_ctr[2]_i_1 
       (.I0(sm_reset_all_timer_ctr[0]),
        .I1(sm_reset_all_timer_ctr[1]),
        .I2(sm_reset_all_timer_ctr[2]),
        .O(\sm_reset_all_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[0]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[1]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_all_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_all_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_all_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_all_timer_ctr[2]),
        .R(sm_reset_all_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_all_timer_sat_i_1
       (.I0(sm_reset_all_timer_ctr[2]),
        .I1(sm_reset_all_timer_ctr[0]),
        .I2(sm_reset_all_timer_ctr[1]),
        .I3(sm_reset_all_timer_sat),
        .I4(sm_reset_all_timer_clr_reg_n_0),
        .O(sm_reset_all_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_all_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_all_timer_sat_i_1_n_0),
        .Q(sm_reset_all_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_cdr_to_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_2),
        .Q(sm_reset_rx_cdr_to_clr),
        .S(gtwiz_reset_rx_any_sync));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_1 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[24]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I2(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ),
        .I3(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I4(sm_reset_rx_cdr_to_sat_i_3_n_0),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT5 #(
    .INIT(32'h20000000)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_3 
       (.I0(sm_reset_rx_cdr_to_sat_i_4_n_0),
        .I1(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[0]),
        .I4(sm_reset_rx_cdr_to_sat_i_6_n_0),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_4 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[18]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[16]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[11]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[10]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_cdr_to_ctr[0]_i_5 
       (.I0(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[0]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[0]_i_2 
       (.CI(1'b0),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_15 }),
        .S({sm_reset_rx_cdr_to_ctr_reg[7:1],\sm_reset_rx_cdr_to_ctr[0]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[10] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[10]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[11] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[11]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[12] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[12]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[13] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[13]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[14] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[14]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[15] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[15]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[16] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[16]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[16]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[23:16]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[17] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[17]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[18] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[18]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[19] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[19]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[1]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[20] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[20]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[21] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[21]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[22] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[22]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[23] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[23]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[24] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[24]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[24]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[16]_i_1_n_0 ),
        .CI_TOP(1'b0),
        .CO({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_CO_UNCONNECTED [7:1],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_sm_reset_rx_cdr_to_ctr_reg[24]_i_1_O_UNCONNECTED [7:2],\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_15 }),
        .S({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,sm_reset_rx_cdr_to_ctr_reg[25:24]}));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[25] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[24]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[25]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_13 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[2]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_12 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[3]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_11 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[4]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_10 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[5]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_9 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[6]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_8 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[7]),
        .R(sm_reset_rx_cdr_to_clr));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[8]),
        .R(sm_reset_rx_cdr_to_clr));
  (* ADDER_THRESHOLD = "16" *) 
  CARRY8 \sm_reset_rx_cdr_to_ctr_reg[8]_i_1 
       (.CI(\sm_reset_rx_cdr_to_ctr_reg[0]_i_2_n_0 ),
        .CI_TOP(1'b0),
        .CO({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_0 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_1 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_2 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_3 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_4 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_5 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_6 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_7 }),
        .DI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .O({\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_8 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_9 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_10 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_11 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_12 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_13 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ,\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_15 }),
        .S(sm_reset_rx_cdr_to_ctr_reg[15:8]));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_cdr_to_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_cdr_to_ctr[0]_i_1_n_0 ),
        .D(\sm_reset_rx_cdr_to_ctr_reg[8]_i_1_n_14 ),
        .Q(sm_reset_rx_cdr_to_ctr_reg[9]),
        .R(sm_reset_rx_cdr_to_clr));
  LUT4 #(
    .INIT(16'h00F1)) 
    sm_reset_rx_cdr_to_sat_i_1
       (.I0(sm_reset_rx_cdr_to_sat_i_2_n_0),
        .I1(sm_reset_rx_cdr_to_sat_i_3_n_0),
        .I2(sm_reset_rx_cdr_to_sat),
        .I3(sm_reset_rx_cdr_to_clr),
        .O(sm_reset_rx_cdr_to_sat_i_1_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBFFF)) 
    sm_reset_rx_cdr_to_sat_i_2
       (.I0(\sm_reset_rx_cdr_to_ctr[0]_i_4_n_0 ),
        .I1(sm_reset_rx_cdr_to_sat_i_4_n_0),
        .I2(sm_reset_rx_cdr_to_sat_i_5_n_0),
        .I3(sm_reset_rx_cdr_to_sat_i_6_n_0),
        .I4(sm_reset_rx_cdr_to_ctr_reg[21]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[24]),
        .O(sm_reset_rx_cdr_to_sat_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sm_reset_rx_cdr_to_sat_i_3
       (.I0(sm_reset_rx_cdr_to_sat_i_7_n_0),
        .I1(sm_reset_rx_cdr_to_ctr_reg[19]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[23]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[25]),
        .O(sm_reset_rx_cdr_to_sat_i_3_n_0));
  LUT4 #(
    .INIT(16'h1000)) 
    sm_reset_rx_cdr_to_sat_i_4
       (.I0(sm_reset_rx_cdr_to_ctr_reg[6]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[5]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[4]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[3]),
        .O(sm_reset_rx_cdr_to_sat_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h40)) 
    sm_reset_rx_cdr_to_sat_i_5
       (.I0(sm_reset_rx_cdr_to_ctr_reg[2]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[1]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[0]),
        .O(sm_reset_rx_cdr_to_sat_i_5_n_0));
  LUT6 #(
    .INIT(64'h0020000000000000)) 
    sm_reset_rx_cdr_to_sat_i_6
       (.I0(sm_reset_rx_cdr_to_ctr_reg[7]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[8]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[12]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[9]),
        .I4(sm_reset_rx_cdr_to_ctr_reg[17]),
        .I5(sm_reset_rx_cdr_to_ctr_reg[13]),
        .O(sm_reset_rx_cdr_to_sat_i_6_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    sm_reset_rx_cdr_to_sat_i_7
       (.I0(sm_reset_rx_cdr_to_ctr_reg[15]),
        .I1(sm_reset_rx_cdr_to_ctr_reg[14]),
        .I2(sm_reset_rx_cdr_to_ctr_reg[20]),
        .I3(sm_reset_rx_cdr_to_ctr_reg[22]),
        .O(sm_reset_rx_cdr_to_sat_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_cdr_to_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_cdr_to_sat_i_1_n_0),
        .Q(sm_reset_rx_cdr_to_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_rx_pll_timer_clr_i_1
       (.I0(sm_reset_rx_pll_timer_sat),
        .I1(sm_reset_rx[0]),
        .I2(sm_reset_rx[1]),
        .I3(sm_reset_rx[2]),
        .I4(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .O(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_rx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[5]),
        .O(p_0_in__1[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I2(\sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ),
        .I3(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[6]),
        .O(p_0_in__1[6]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \sm_reset_rx_pll_timer_ctr[6]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[1]),
        .O(\sm_reset_rx_pll_timer_ctr[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(p_0_in__1[7]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_rx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .O(p_0_in__1[8]));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_1 
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ),
        .I1(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_rx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[9]),
        .O(p_0_in__1[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[4]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_rx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_rx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_rx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_rx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_rx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_rx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_rx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_rx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[0]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[0]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[1]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[1]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(\sm_reset_rx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_pll_timer_ctr_reg[2]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[3]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[3]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[4]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[4]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[5]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[5]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[6]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[6]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[7]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[7]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[8]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[8]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .D(p_0_in__1[9]),
        .Q(sm_reset_rx_pll_timer_ctr_reg[9]),
        .R(sm_reset_rx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_rx_pll_timer_sat_i_1
       (.I0(\sm_reset_rx_pll_timer_ctr[9]_i_1_n_0 ),
        .I1(sm_reset_rx_pll_timer_sat),
        .I2(sm_reset_rx_pll_timer_clr_reg_n_0),
        .O(sm_reset_rx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_pll_timer_sat),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h2)) 
    sm_reset_rx_timer_clr_i_4
       (.I0(sm_reset_rx_timer_sat),
        .I1(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_clr010_out__0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_rx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_rx_inst_n_1),
        .Q(sm_reset_rx_timer_clr_reg_n_0),
        .S(gtwiz_reset_rx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_rx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_rx_timer_ctr[0]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .O(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_rx_timer_ctr[1]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .O(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_rx_timer_ctr[2]_i_1 
       (.I0(sm_reset_rx_timer_ctr[0]),
        .I1(sm_reset_rx_timer_ctr[1]),
        .I2(sm_reset_rx_timer_ctr[2]),
        .O(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[0]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[1]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_rx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(\sm_reset_rx_timer_ctr0_inferred__0/i__n_0 ),
        .D(\sm_reset_rx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_rx_timer_ctr[2]),
        .R(sm_reset_rx_timer_clr_reg_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_rx_timer_sat_i_1
       (.I0(sm_reset_rx_timer_ctr[2]),
        .I1(sm_reset_rx_timer_ctr[0]),
        .I2(sm_reset_rx_timer_ctr[1]),
        .I3(sm_reset_rx_timer_sat),
        .I4(sm_reset_rx_timer_clr_reg_n_0),
        .O(sm_reset_rx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_rx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_rx_timer_sat_i_1_n_0),
        .Q(sm_reset_rx_timer_sat),
        .R(1'b0));
  LUT5 #(
    .INIT(32'hFFF3000B)) 
    sm_reset_tx_pll_timer_clr_i_1
       (.I0(sm_reset_tx_pll_timer_sat),
        .I1(sm_reset_tx[0]),
        .I2(sm_reset_tx[1]),
        .I3(sm_reset_tx[2]),
        .I4(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_clr_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_pll_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_clr_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_pll_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_pll_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .O(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[3]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[4]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \sm_reset_tx_pll_timer_ctr[5]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[5]),
        .O(p_0_in__0[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I2(\sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ),
        .I3(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \sm_reset_tx_pll_timer_ctr[6]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[1]),
        .O(\sm_reset_tx_pll_timer_ctr[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_pll_timer_ctr[7]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \sm_reset_tx_pll_timer_ctr[8]_i_1 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .O(p_0_in__0[8]));
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_1 
       (.I0(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ),
        .I1(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(sel));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_2 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[7]),
        .I1(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ),
        .I2(sm_reset_tx_pll_timer_ctr_reg[6]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[8]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[9]),
        .O(p_0_in__0[9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEFFF)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_3 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[4]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[7]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \sm_reset_tx_pll_timer_ctr[9]_i_4 
       (.I0(sm_reset_tx_pll_timer_ctr_reg[5]),
        .I1(sm_reset_tx_pll_timer_ctr_reg[3]),
        .I2(sm_reset_tx_pll_timer_ctr_reg[0]),
        .I3(sm_reset_tx_pll_timer_ctr_reg[1]),
        .I4(sm_reset_tx_pll_timer_ctr_reg[2]),
        .I5(sm_reset_tx_pll_timer_ctr_reg[4]),
        .O(\sm_reset_tx_pll_timer_ctr[9]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[0]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[0]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[1]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[1]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(sel),
        .D(\sm_reset_tx_pll_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_pll_timer_ctr_reg[2]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[3] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[3]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[3]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[4] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[4]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[4]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[5] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[5]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[5]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[6] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[6]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[6]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[7] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[7]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[7]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[8] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[8]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[8]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_pll_timer_ctr_reg[9] 
       (.C(drpclk_in),
        .CE(sel),
        .D(p_0_in__0[9]),
        .Q(sm_reset_tx_pll_timer_ctr_reg[9]),
        .R(sm_reset_tx_pll_timer_clr_reg_n_0));
  LUT3 #(
    .INIT(8'h0D)) 
    sm_reset_tx_pll_timer_sat_i_1
       (.I0(sel),
        .I1(sm_reset_tx_pll_timer_sat),
        .I2(sm_reset_tx_pll_timer_clr_reg_n_0),
        .O(sm_reset_tx_pll_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_pll_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_pll_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_pll_timer_sat),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    sm_reset_tx_timer_clr_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_plllock_tx_inst_n_1),
        .Q(sm_reset_tx_timer_clr_reg_n_0),
        .S(gtwiz_reset_tx_any_sync));
  LUT3 #(
    .INIT(8'h7F)) 
    \sm_reset_tx_timer_ctr0_inferred__0/i_ 
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .O(p_0_in));
  LUT1 #(
    .INIT(2'h1)) 
    \sm_reset_tx_timer_ctr[0]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .O(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \sm_reset_tx_timer_ctr[1]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .O(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \sm_reset_tx_timer_ctr[2]_i_1 
       (.I0(sm_reset_tx_timer_ctr[0]),
        .I1(sm_reset_tx_timer_ctr[1]),
        .I2(sm_reset_tx_timer_ctr[2]),
        .O(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[0] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[0]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[0]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[1] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[1]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[1]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \sm_reset_tx_timer_ctr_reg[2] 
       (.C(drpclk_in),
        .CE(p_0_in),
        .D(\sm_reset_tx_timer_ctr[2]_i_1_n_0 ),
        .Q(sm_reset_tx_timer_ctr[2]),
        .R(sm_reset_tx_timer_clr_reg_n_0));
  LUT5 #(
    .INIT(32'h0000FF80)) 
    sm_reset_tx_timer_sat_i_1
       (.I0(sm_reset_tx_timer_ctr[2]),
        .I1(sm_reset_tx_timer_ctr[0]),
        .I2(sm_reset_tx_timer_ctr[1]),
        .I3(sm_reset_tx_timer_sat),
        .I4(sm_reset_tx_timer_clr_reg_n_0),
        .O(sm_reset_tx_timer_sat_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    sm_reset_tx_timer_sat_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(sm_reset_tx_timer_sat_i_1_n_0),
        .Q(sm_reset_tx_timer_sat),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    txuserrdy_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(bit_synchronizer_gtwiz_reset_userclk_tx_active_inst_n_0),
        .Q(GTYE4_CHANNEL_TXUSERRDY),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_channel" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_channel
   (\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ,
    GTYE4_CHANNEL_GTPOWERGOOD,
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ,
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ,
    gtytxn_out,
    gtytxp_out,
    GTYE4_CHANNEL_RXCDRLOCK,
    rxpmaresetdone_out,
    GTYE4_CHANNEL_RXRESETDONE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    txpmaresetdone_out,
    GTYE4_CHANNEL_TXRESETDONE,
    gtwiz_userdata_rx_out,
    rxdatavalid_out,
    rxheadervalid_out,
    txbufstatus_out,
    rxbufstatus_out,
    rxheader_out,
    rxoutclk_out,
    txoutclk_out,
    drpclk_in,
    gtrefclk0_in,
    GTYE4_CHANNEL_GTRXRESET,
    GTYE4_CHANNEL_GTTXRESET,
    gtyrxn_in,
    gtyrxp_in,
    qpll0clk_in,
    qpll0refclk_in,
    rxcdrovrden_in,
    rxgearboxslip_in,
    rxpolarity_in,
    GTYE4_CHANNEL_RXPROGDIVRESET,
    GTYE4_CHANNEL_RXUSERRDY,
    rxusrclk_in,
    rxusrclk2_in,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXPROGDIVRESET,
    GTYE4_CHANNEL_TXUSERRDY,
    txusrclk_in,
    gtwiz_userdata_tx_in,
    loopback_in,
    txheader_in,
    txsequence_in,
    lopt,
    lopt_1,
    lopt_2,
    lopt_3,
    lopt_4,
    lopt_5,
    lopt_6,
    lopt_7);
  output \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  output [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ;
  output \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ;
  output [3:0]gtytxn_out;
  output [3:0]gtytxp_out;
  output [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  output [3:0]rxpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_RXRESETDONE;
  output [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  output [3:0]txpmaresetdone_out;
  output [3:0]GTYE4_CHANNEL_TXRESETDONE;
  output [255:0]gtwiz_userdata_rx_out;
  output [3:0]rxdatavalid_out;
  output [3:0]rxheadervalid_out;
  output [3:0]txbufstatus_out;
  output [3:0]rxbufstatus_out;
  output [7:0]rxheader_out;
  output [0:0]rxoutclk_out;
  output [0:0]txoutclk_out;
  input [0:0]drpclk_in;
  input [0:0]gtrefclk0_in;
  input [0:0]GTYE4_CHANNEL_GTRXRESET;
  input [3:0]GTYE4_CHANNEL_GTTXRESET;
  input [3:0]gtyrxn_in;
  input [3:0]gtyrxp_in;
  input [0:0]qpll0clk_in;
  input [0:0]qpll0refclk_in;
  input [0:0]rxcdrovrden_in;
  input [3:0]rxgearboxslip_in;
  input [3:0]rxpolarity_in;
  input [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input [0:0]rxusrclk_in;
  input [0:0]rxusrclk2_in;
  input [3:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]GTYE4_CHANNEL_TXUSERRDY;
  input [0:0]txusrclk_in;
  input [255:0]gtwiz_userdata_tx_in;
  input [2:0]loopback_in;
  input [7:0]txheader_in;
  input [27:0]txsequence_in;
  input lopt;
  input lopt_1;
  output lopt_2;
  output lopt_3;
  input lopt_4;
  input lopt_5;
  output lopt_6;
  output lopt_7;

  wire [3:0]GTYE4_CHANNEL_GTPOWERGOOD;
  wire [0:0]GTYE4_CHANNEL_GTRXRESET;
  wire [3:0]GTYE4_CHANNEL_GTTXRESET;
  wire [3:0]GTYE4_CHANNEL_RXCDRLOCK;
  wire [0:0]GTYE4_CHANNEL_RXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_RXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [3:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [3:0]GTYE4_CHANNEL_TXRATE;
  wire [3:0]GTYE4_CHANNEL_TXRESETDONE;
  wire [0:0]GTYE4_CHANNEL_TXUSERRDY;
  wire [0:0]drpclk_in;
  wire [0:0]gtrefclk0_in;
  wire [255:0]gtwiz_userdata_rx_out;
  wire [255:0]gtwiz_userdata_tx_in;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_219 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_220 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_221 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_222 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_223 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_224 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_225 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_226 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_227 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_228 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_229 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_230 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_231 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_232 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_233 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_234 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_6 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_219 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_220 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_221 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_222 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_223 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_224 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_225 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_226 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_227 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_228 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_229 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_230 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_231 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_232 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_233 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_234 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_6 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_219 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_220 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_221 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_222 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_223 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_224 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_225 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_226 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_227 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_228 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_229 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_230 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_231 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_232 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_233 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_234 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_6 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_0 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_1 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_100 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_101 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_102 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_103 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_104 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_105 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_106 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_107 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_108 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_109 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_110 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_111 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_112 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_113 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_114 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_115 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_116 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_117 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_118 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_119 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_12 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_120 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_121 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_122 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_123 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_124 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_125 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_126 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_127 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_128 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_129 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_13 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_130 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_131 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_132 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_133 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_134 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_135 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_136 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_137 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_138 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_14 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_15 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_16 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_17 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_18 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_19 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_2 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_20 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_203 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_204 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_205 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_206 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_207 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_208 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_209 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_21 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_210 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_211 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_212 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_213 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_214 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_215 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_216 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_217 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_218 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_219 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_22 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_220 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_221 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_222 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_223 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_224 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_225 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_226 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_227 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_228 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_229 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_230 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_231 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_232 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_233 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_234 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_235 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_236 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_237 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_238 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_239 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_24 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_240 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_241 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_242 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_243 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_244 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_245 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_246 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_247 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_248 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_249 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_25 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_250 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_251 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_252 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_253 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_254 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_255 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_256 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_257 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_258 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_259 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_26 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_260 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_261 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_262 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_263 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_264 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_265 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_266 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_267 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_268 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_269 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_27 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_270 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_271 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_272 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_273 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_274 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_275 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_276 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_277 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_278 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_279 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_28 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_280 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_281 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_282 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_283 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_284 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_285 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_286 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_287 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_288 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_289 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_29 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_290 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_291 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_292 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_293 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_294 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_295 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_296 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_297 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_298 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_299 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_3 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_30 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_300 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_301 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_302 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_303 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_304 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_305 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_307 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_309 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_31 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_310 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_312 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_313 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_314 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_315 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_316 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_317 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_318 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_32 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_320 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_321 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_322 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_323 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_324 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_325 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_326 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_327 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_328 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_329 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_33 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_330 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_331 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_332 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_333 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_336 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_337 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_338 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_339 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_34 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_340 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_341 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_342 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_343 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_344 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_345 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_346 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_347 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_348 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_349 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_35 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_350 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_351 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_352 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_353 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_354 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_355 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_356 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_357 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_358 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_359 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_36 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_360 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_361 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_362 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_363 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_364 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_365 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_366 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_367 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_368 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_369 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_37 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_370 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_371 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_372 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_373 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_374 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_375 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_376 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_38 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_39 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_4 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_40 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_41 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_42 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_43 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_44 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_45 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_46 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_48 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_49 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_5 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_50 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_51 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_52 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_54 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_55 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_56 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_57 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_58 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_59 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_6 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_60 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_61 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_62 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_63 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_64 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_65 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_67 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_68 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_7 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_70 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_71 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_73 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_74 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_75 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_76 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_77 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_78 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_79 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_80 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_81 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_82 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_83 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_84 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_85 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_86 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_87 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_88 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_89 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_9 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_90 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_91 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_92 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_93 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_94 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_95 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_96 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_97 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_98 ;
  wire \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_99 ;
  wire [3:0]gtyrxn_in;
  wire [3:0]gtyrxp_in;
  wire [3:0]gtytxn_out;
  wire [3:0]gtytxp_out;
  wire [2:0]loopback_in;
  wire lopt;
  wire lopt_1;
  wire \^lopt_2 ;
  wire \^lopt_3 ;
  wire [0:0]qpll0clk_in;
  wire [0:0]qpll0refclk_in;
  wire [3:0]rxbufstatus_out;
  wire [0:0]rxcdrovrden_in;
  wire [3:0]rxdatavalid_out;
  wire [3:0]rxgearboxslip_in;
  wire [7:0]rxheader_out;
  wire [3:0]rxheadervalid_out;
  wire [0:0]rxoutclk_out;
  wire [3:0]rxpmaresetdone_out;
  wire [3:0]rxpolarity_in;
  wire [0:0]rxusrclk2_in;
  wire [0:0]rxusrclk_in;
  wire [3:0]txbufstatus_out;
  wire [7:0]txheader_in;
  wire [0:0]txoutclk_out;
  wire [3:0]txpmaresetdone_out;
  wire [27:0]txsequence_in;
  wire [0:0]txusrclk_in;
  wire xlnx_opt_;
  wire xlnx_opt__1;
  wire xlnx_opt__2;
  wire xlnx_opt__3;

  assign \^lopt_2  = lopt_4;
  assign \^lopt_3  = lopt_5;
  assign lopt_2 = xlnx_opt_;
  assign lopt_3 = xlnx_opt__1;
  assign lopt_6 = xlnx_opt__2;
  assign lopt_7 = xlnx_opt__3;
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC
       (.CE(lopt),
        .CESYNC(xlnx_opt_),
        .CLK(rxoutclk_out),
        .CLR(lopt_1),
        .CLRSYNC(xlnx_opt__1));
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT_SYNC BUFG_GT_SYNC_1
       (.CE(\^lopt_2 ),
        .CESYNC(xlnx_opt__2),
        .CLK(txoutclk_out),
        .CLR(\^lopt_3 ),
        .CLRSYNC(xlnx_opt__3));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__0 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__1 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_2__2 
       (.I0(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .O(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_0 ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(13),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(13),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(drpclk_in),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_219 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_220 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_221 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_222 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_223 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_224 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_225 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_226 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_227 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_228 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_229 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_230 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_231 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_232 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_233 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_234 }),
        .DRPEN(1'b0),
        .DRPRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_6 ),
        .DRPRST(1'b0),
        .DRPWE(1'b0),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[0]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[0]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[0]),
        .GTYRXP(gtyrxp_in[0]),
        .GTYTXN(gtytxn_out[0]),
        .GTYTXP(gtytxp_out[0]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[0],\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[0]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[63:0]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[0]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[0]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[1:0]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[0]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[0]),
        .RXPOLARITY(rxpolarity_in[0]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[0]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[0],\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[63:0]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[1:0]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[0]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[0]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[0]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[0]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[0]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[0]),
        .TXSEQUENCE(txsequence_in[6:0]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(13),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(13),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(drpclk_in),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_219 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_220 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_221 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_222 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_223 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_224 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_225 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_226 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_227 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_228 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_229 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_230 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_231 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_232 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_233 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_234 }),
        .DRPEN(1'b0),
        .DRPRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_6 ),
        .DRPRST(1'b0),
        .DRPWE(1'b0),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[1]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[1]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[1]),
        .GTYRXP(gtyrxp_in[1]),
        .GTYTXN(gtytxn_out[1]),
        .GTYTXP(gtytxp_out[1]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[1],\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[1]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[127:64]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[1]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[1]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[3:2]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[1]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[1]),
        .RXPOLARITY(rxpolarity_in[1]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[1]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[1],\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[127:64]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[3:2]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[1]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[1]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[1]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[1]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[1]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[1]),
        .TXSEQUENCE(txsequence_in[13:7]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(13),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(13),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(drpclk_in),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_219 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_220 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_221 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_222 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_223 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_224 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_225 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_226 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_227 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_228 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_229 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_230 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_231 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_232 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_233 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_234 }),
        .DRPEN(1'b0),
        .DRPRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_6 ),
        .DRPRST(1'b0),
        .DRPWE(1'b0),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[2]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[2]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[2]),
        .GTYRXP(gtyrxp_in[2]),
        .GTYTXN(gtytxn_out[2]),
        .GTYTXP(gtytxp_out[2]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[2],\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[2]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[191:128]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[2]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[2]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[5:4]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[2]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(rxoutclk_out),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[2]),
        .RXPOLARITY(rxpolarity_in[2]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[2]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[2],\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[191:128]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[5:4]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(txoutclk_out),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[2]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[2]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[2]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[2]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[2]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[2]),
        .TXSEQUENCE(txsequence_in[20:14]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_CHANNEL #(
    .ACJTAG_DEBUG_MODE(1'b0),
    .ACJTAG_MODE(1'b0),
    .ACJTAG_RESET(1'b0),
    .ADAPT_CFG0(16'h0000),
    .ADAPT_CFG1(16'hFB1C),
    .ADAPT_CFG2(16'h0000),
    .ALIGN_COMMA_DOUBLE("FALSE"),
    .ALIGN_COMMA_ENABLE(10'b0000000000),
    .ALIGN_COMMA_WORD(1),
    .ALIGN_MCOMMA_DET("FALSE"),
    .ALIGN_MCOMMA_VALUE(10'b1010000011),
    .ALIGN_PCOMMA_DET("FALSE"),
    .ALIGN_PCOMMA_VALUE(10'b0101111100),
    .A_RXOSCALRESET(1'b0),
    .A_RXPROGDIVRESET(1'b0),
    .A_RXTERMINATION(1'b1),
    .A_TXDIFFCTRL(5'b01100),
    .A_TXPROGDIVRESET(1'b0),
    .CBCC_DATA_SOURCE_SEL("ENCODED"),
    .CDR_SWAP_MODE_EN(1'b0),
    .CFOK_PWRSVE_EN(1'b1),
    .CHAN_BOND_KEEP_ALIGN("FALSE"),
    .CHAN_BOND_MAX_SKEW(1),
    .CHAN_BOND_SEQ_1_1(10'b0000000000),
    .CHAN_BOND_SEQ_1_2(10'b0000000000),
    .CHAN_BOND_SEQ_1_3(10'b0000000000),
    .CHAN_BOND_SEQ_1_4(10'b0000000000),
    .CHAN_BOND_SEQ_1_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_1(10'b0000000000),
    .CHAN_BOND_SEQ_2_2(10'b0000000000),
    .CHAN_BOND_SEQ_2_3(10'b0000000000),
    .CHAN_BOND_SEQ_2_4(10'b0000000000),
    .CHAN_BOND_SEQ_2_ENABLE(4'b1111),
    .CHAN_BOND_SEQ_2_USE("FALSE"),
    .CHAN_BOND_SEQ_LEN(1),
    .CH_HSPMUX(16'h9090),
    .CKCAL1_CFG_0(16'b0100000001000000),
    .CKCAL1_CFG_1(16'b0001000001000000),
    .CKCAL1_CFG_2(16'b0010000000001000),
    .CKCAL1_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_0(16'b0100000001000000),
    .CKCAL2_CFG_1(16'b0000000001000000),
    .CKCAL2_CFG_2(16'b0001000000000000),
    .CKCAL2_CFG_3(16'b0000000000000000),
    .CKCAL2_CFG_4(16'b0000000000000000),
    .CLK_CORRECT_USE("FALSE"),
    .CLK_COR_KEEP_IDLE("FALSE"),
    .CLK_COR_MAX_LAT(24),
    .CLK_COR_MIN_LAT(16),
    .CLK_COR_PRECEDENCE("TRUE"),
    .CLK_COR_REPEAT_WAIT(0),
    .CLK_COR_SEQ_1_1(10'b0000000000),
    .CLK_COR_SEQ_1_2(10'b0000000000),
    .CLK_COR_SEQ_1_3(10'b0000000000),
    .CLK_COR_SEQ_1_4(10'b0000000000),
    .CLK_COR_SEQ_1_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_1(10'b0000000000),
    .CLK_COR_SEQ_2_2(10'b0000000000),
    .CLK_COR_SEQ_2_3(10'b0000000000),
    .CLK_COR_SEQ_2_4(10'b0000000000),
    .CLK_COR_SEQ_2_ENABLE(4'b1111),
    .CLK_COR_SEQ_2_USE("FALSE"),
    .CLK_COR_SEQ_LEN(1),
    .CPLL_CFG0(16'h01FA),
    .CPLL_CFG1(16'h002B),
    .CPLL_CFG2(16'h0002),
    .CPLL_CFG3(16'h0000),
    .CPLL_FBDIV(2),
    .CPLL_FBDIV_45(5),
    .CPLL_INIT_CFG0(16'h02B2),
    .CPLL_LOCK_CFG(16'h01E8),
    .CPLL_REFCLK_DIV(1),
    .CTLE3_OCAP_EXT_CTRL(3'b000),
    .CTLE3_OCAP_EXT_EN(1'b0),
    .DDI_CTRL(2'b00),
    .DDI_REALIGN_WAIT(15),
    .DEC_MCOMMA_DETECT("FALSE"),
    .DEC_PCOMMA_DETECT("FALSE"),
    .DEC_VALID_COMMA_ONLY("FALSE"),
    .DELAY_ELEC(1'b0),
    .DMONITOR_CFG0(10'h000),
    .DMONITOR_CFG1(8'h00),
    .ES_CLK_PHASE_SEL(1'b0),
    .ES_CONTROL(6'b000000),
    .ES_ERRDET_EN("FALSE"),
    .ES_EYE_SCAN_EN("FALSE"),
    .ES_HORZ_OFFSET(12'h000),
    .ES_PRESCALE(5'b00000),
    .ES_QUALIFIER0(16'h0000),
    .ES_QUALIFIER1(16'h0000),
    .ES_QUALIFIER2(16'h0000),
    .ES_QUALIFIER3(16'h0000),
    .ES_QUALIFIER4(16'h0000),
    .ES_QUALIFIER5(16'h0000),
    .ES_QUALIFIER6(16'h0000),
    .ES_QUALIFIER7(16'h0000),
    .ES_QUALIFIER8(16'h0000),
    .ES_QUALIFIER9(16'h0000),
    .ES_QUAL_MASK0(16'h0000),
    .ES_QUAL_MASK1(16'h0000),
    .ES_QUAL_MASK2(16'h0000),
    .ES_QUAL_MASK3(16'h0000),
    .ES_QUAL_MASK4(16'h0000),
    .ES_QUAL_MASK5(16'h0000),
    .ES_QUAL_MASK6(16'h0000),
    .ES_QUAL_MASK7(16'h0000),
    .ES_QUAL_MASK8(16'h0000),
    .ES_QUAL_MASK9(16'h0000),
    .ES_SDATA_MASK0(16'h0000),
    .ES_SDATA_MASK1(16'h0000),
    .ES_SDATA_MASK2(16'h0000),
    .ES_SDATA_MASK3(16'h0000),
    .ES_SDATA_MASK4(16'h0000),
    .ES_SDATA_MASK5(16'h0000),
    .ES_SDATA_MASK6(16'h0000),
    .ES_SDATA_MASK7(16'h0000),
    .ES_SDATA_MASK8(16'h0000),
    .ES_SDATA_MASK9(16'h0000),
    .EYESCAN_VP_RANGE(0),
    .EYE_SCAN_SWAP_EN(1'b0),
    .FTS_DESKEW_SEQ_ENABLE(4'b1111),
    .FTS_LANE_DESKEW_CFG(4'b1111),
    .FTS_LANE_DESKEW_EN("FALSE"),
    .GEARBOX_MODE(5'b00001),
    .ISCAN_CK_PH_SEL2(1'b0),
    .LOCAL_MASTER(1'b1),
    .LPBK_BIAS_CTRL(4),
    .LPBK_EN_RCAL_B(1'b0),
    .LPBK_EXT_RCAL(4'b1000),
    .LPBK_IND_CTRL0(5),
    .LPBK_IND_CTRL1(5),
    .LPBK_IND_CTRL2(5),
    .LPBK_RG_CTRL(2),
    .OOBDIVCTL(2'b00),
    .OOB_PWRUP(1'b0),
    .PCI3_AUTO_REALIGN("OVR_1K_BLK"),
    .PCI3_PIPE_RX_ELECIDLE(1'b0),
    .PCI3_RX_ASYNC_EBUF_BYPASS(2'b00),
    .PCI3_RX_ELECIDLE_EI2_ENABLE(1'b0),
    .PCI3_RX_ELECIDLE_H2L_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_H2L_DISABLE(3'b000),
    .PCI3_RX_ELECIDLE_HI_COUNT(6'b000000),
    .PCI3_RX_ELECIDLE_LP4_DISABLE(1'b0),
    .PCI3_RX_FIFO_DISABLE(1'b0),
    .PCIE3_CLK_COR_EMPTY_THRSH(5'b00000),
    .PCIE3_CLK_COR_FULL_THRSH(6'b010000),
    .PCIE3_CLK_COR_MAX_LAT(5'b00100),
    .PCIE3_CLK_COR_MIN_LAT(5'b00000),
    .PCIE3_CLK_COR_THRSH_TIMER(6'b001000),
    .PCIE_64B_DYN_CLKSW_DIS("FALSE"),
    .PCIE_BUFG_DIV_CTRL(16'h3500),
    .PCIE_GEN4_64BIT_INT_EN("FALSE"),
    .PCIE_PLL_SEL_MODE_GEN12(2'h2),
    .PCIE_PLL_SEL_MODE_GEN3(2'h2),
    .PCIE_PLL_SEL_MODE_GEN4(2'h2),
    .PCIE_RXPCS_CFG_GEN3(16'h0AA5),
    .PCIE_RXPMA_CFG(16'h280A),
    .PCIE_TXPCS_CFG_GEN3(16'h24A4),
    .PCIE_TXPMA_CFG(16'h280A),
    .PCS_PCIE_EN("FALSE"),
    .PCS_RSVD0(16'h0000),
    .PD_TRANS_TIME_FROM_P2(12'h03C),
    .PD_TRANS_TIME_NONE_P2(8'h19),
    .PD_TRANS_TIME_TO_P2(8'h64),
    .PREIQ_FREQ_BST(3),
    .RATE_SW_USE_DRP(1'b1),
    .RCLK_SIPO_DLY_ENB(1'b0),
    .RCLK_SIPO_INV_EN(1'b0),
    .RTX_BUF_CML_CTRL(3'b111),
    .RTX_BUF_TERM_CTRL(2'b11),
    .RXBUFRESET_TIME(5'b00011),
    .RXBUF_ADDR_MODE("FAST"),
    .RXBUF_EIDLE_HI_CNT(4'b1000),
    .RXBUF_EIDLE_LO_CNT(4'b0000),
    .RXBUF_EN("TRUE"),
    .RXBUF_RESET_ON_CB_CHANGE("TRUE"),
    .RXBUF_RESET_ON_COMMAALIGN("FALSE"),
    .RXBUF_RESET_ON_EIDLE("FALSE"),
    .RXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .RXBUF_THRESH_OVFLW(49),
    .RXBUF_THRESH_OVRD("TRUE"),
    .RXBUF_THRESH_UNDFLW(7),
    .RXCDRFREQRESET_TIME(5'b00001),
    .RXCDRPHRESET_TIME(5'b00001),
    .RXCDR_CFG0(16'h0003),
    .RXCDR_CFG0_GEN3(16'h0003),
    .RXCDR_CFG1(16'h0000),
    .RXCDR_CFG1_GEN3(16'h0000),
    .RXCDR_CFG2(16'h01E9),
    .RXCDR_CFG2_GEN2(10'h269),
    .RXCDR_CFG2_GEN3(16'h0269),
    .RXCDR_CFG2_GEN4(16'h0164),
    .RXCDR_CFG3(16'h0010),
    .RXCDR_CFG3_GEN2(6'h10),
    .RXCDR_CFG3_GEN3(16'h0010),
    .RXCDR_CFG3_GEN4(16'h0010),
    .RXCDR_CFG4(16'h5CF6),
    .RXCDR_CFG4_GEN3(16'h5CF6),
    .RXCDR_CFG5(16'hB46B),
    .RXCDR_CFG5_GEN3(16'h146B),
    .RXCDR_FR_RESET_ON_EIDLE(1'b0),
    .RXCDR_HOLD_DURING_EIDLE(1'b0),
    .RXCDR_LOCK_CFG0(16'h2201),
    .RXCDR_LOCK_CFG1(16'h9FFF),
    .RXCDR_LOCK_CFG2(16'h0000),
    .RXCDR_LOCK_CFG3(16'h0000),
    .RXCDR_LOCK_CFG4(16'h0000),
    .RXCDR_PH_RESET_ON_EIDLE(1'b0),
    .RXCFOK_CFG0(16'h0000),
    .RXCFOK_CFG1(16'h8015),
    .RXCFOK_CFG2(16'h02AE),
    .RXCKCAL1_IQ_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_I_LOOP_RST_CFG(16'h0004),
    .RXCKCAL1_Q_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_DX_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_D_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_S_LOOP_RST_CFG(16'h0004),
    .RXCKCAL2_X_LOOP_RST_CFG(16'h0004),
    .RXDFELPMRESET_TIME(7'b0001111),
    .RXDFELPM_KL_CFG0(16'h0000),
    .RXDFELPM_KL_CFG1(16'hA082),
    .RXDFELPM_KL_CFG2(16'h0100),
    .RXDFE_CFG0(16'h0A00),
    .RXDFE_CFG1(16'h0000),
    .RXDFE_GC_CFG0(16'h0000),
    .RXDFE_GC_CFG1(16'h8000),
    .RXDFE_GC_CFG2(16'hFFE0),
    .RXDFE_H2_CFG0(16'h0000),
    .RXDFE_H2_CFG1(16'h0002),
    .RXDFE_H3_CFG0(16'h0000),
    .RXDFE_H3_CFG1(16'h8002),
    .RXDFE_H4_CFG0(16'h0000),
    .RXDFE_H4_CFG1(16'h8002),
    .RXDFE_H5_CFG0(16'h0000),
    .RXDFE_H5_CFG1(16'h8002),
    .RXDFE_H6_CFG0(16'h0000),
    .RXDFE_H6_CFG1(16'h8002),
    .RXDFE_H7_CFG0(16'h0000),
    .RXDFE_H7_CFG1(16'h8002),
    .RXDFE_H8_CFG0(16'h0000),
    .RXDFE_H8_CFG1(16'h8002),
    .RXDFE_H9_CFG0(16'h0000),
    .RXDFE_H9_CFG1(16'h8002),
    .RXDFE_HA_CFG0(16'h0000),
    .RXDFE_HA_CFG1(16'h8002),
    .RXDFE_HB_CFG0(16'h0000),
    .RXDFE_HB_CFG1(16'h8002),
    .RXDFE_HC_CFG0(16'h0000),
    .RXDFE_HC_CFG1(16'h8002),
    .RXDFE_HD_CFG0(16'h0000),
    .RXDFE_HD_CFG1(16'h8002),
    .RXDFE_HE_CFG0(16'h0000),
    .RXDFE_HE_CFG1(16'h8002),
    .RXDFE_HF_CFG0(16'h0000),
    .RXDFE_HF_CFG1(16'h8002),
    .RXDFE_KH_CFG0(16'h8000),
    .RXDFE_KH_CFG1(16'hFE00),
    .RXDFE_KH_CFG2(16'h281C),
    .RXDFE_KH_CFG3(16'h4120),
    .RXDFE_OS_CFG0(16'h2000),
    .RXDFE_OS_CFG1(16'h8000),
    .RXDFE_UT_CFG0(16'h0000),
    .RXDFE_UT_CFG1(16'h0003),
    .RXDFE_UT_CFG2(16'h0000),
    .RXDFE_VP_CFG0(16'h0000),
    .RXDFE_VP_CFG1(16'h0033),
    .RXDLY_CFG(16'h0010),
    .RXDLY_LCFG(16'h0030),
    .RXELECIDLE_CFG("SIGCFG_4"),
    .RXGBOX_FIFO_INIT_RD_ADDR(3),
    .RXGEARBOX_EN("TRUE"),
    .RXISCANRESET_TIME(5'b00001),
    .RXLPM_CFG(16'h0000),
    .RXLPM_GC_CFG(16'hF800),
    .RXLPM_KH_CFG0(16'h0000),
    .RXLPM_KH_CFG1(16'hA002),
    .RXLPM_OS_CFG0(16'h0000),
    .RXLPM_OS_CFG1(16'h8002),
    .RXOOB_CFG(9'b000000110),
    .RXOOB_CLK_CFG("PMA"),
    .RXOSCALRESET_TIME(5'b00011),
    .RXOUT_DIV(1),
    .RXPCSRESET_TIME(5'b00011),
    .RXPHBEACON_CFG(16'h0000),
    .RXPHDLY_CFG(16'h2070),
    .RXPHSAMP_CFG(16'h2100),
    .RXPHSLIP_CFG(16'h9933),
    .RXPH_MONITOR_SEL(5'b00000),
    .RXPI_CFG0(16'h3006),
    .RXPI_CFG1(16'b0000000000000000),
    .RXPMACLK_SEL("DATA"),
    .RXPMARESET_TIME(5'b00011),
    .RXPRBS_ERR_LOOPBACK(1'b0),
    .RXPRBS_LINKACQ_CNT(15),
    .RXREFCLKDIV2_SEL(1'b0),
    .RXSLIDE_AUTO_WAIT(7),
    .RXSLIDE_MODE("OFF"),
    .RXSYNC_MULTILANE(1'b1),
    .RXSYNC_OVRD(1'b0),
    .RXSYNC_SKIP_DA(1'b0),
    .RX_AFE_CM_EN(1'b0),
    .RX_BIAS_CFG0(16'h12B0),
    .RX_BUFFER_CFG(6'b000000),
    .RX_CAPFF_SARC_ENB(1'b0),
    .RX_CLK25_DIV(13),
    .RX_CLKMUX_EN(1'b1),
    .RX_CLK_SLIP_OVRD(5'b00000),
    .RX_CM_BUF_CFG(4'b1010),
    .RX_CM_BUF_PD(1'b0),
    .RX_CM_SEL(3),
    .RX_CM_TRIM(10),
    .RX_CTLE_PWR_SAVING(1'b0),
    .RX_CTLE_RES_CTRL(4'b0000),
    .RX_DATA_WIDTH(64),
    .RX_DDI_SEL(6'b000000),
    .RX_DEFER_RESET_BUF_EN("TRUE"),
    .RX_DEGEN_CTRL(3'b111),
    .RX_DFELPM_CFG0(10),
    .RX_DFELPM_CFG1(1'b1),
    .RX_DFELPM_KLKH_AGC_STUP_EN(1'b1),
    .RX_DFE_AGC_CFG1(4),
    .RX_DFE_KL_LPM_KH_CFG0(3),
    .RX_DFE_KL_LPM_KH_CFG1(2),
    .RX_DFE_KL_LPM_KL_CFG0(2'b11),
    .RX_DFE_KL_LPM_KL_CFG1(2),
    .RX_DFE_LPM_HOLD_DURING_EIDLE(1'b0),
    .RX_DISPERR_SEQ_MATCH("TRUE"),
    .RX_DIVRESET_TIME(5'b00001),
    .RX_EN_CTLE_RCAL_B(1'b0),
    .RX_EN_SUM_RCAL_B(0),
    .RX_EYESCAN_VS_CODE(7'b0000000),
    .RX_EYESCAN_VS_NEG_DIR(1'b0),
    .RX_EYESCAN_VS_RANGE(2'b10),
    .RX_EYESCAN_VS_UT_SIGN(1'b0),
    .RX_FABINT_USRCLK_FLOP(1'b0),
    .RX_I2V_FILTER_EN(1'b1),
    .RX_INT_DATAWIDTH(2),
    .RX_PMA_POWER_SAVE(1'b0),
    .RX_PMA_RSV0(16'h002F),
    .RX_PROGDIV_CFG(0.000000),
    .RX_PROGDIV_RATE(16'h0001),
    .RX_RESLOAD_CTRL(4'b0000),
    .RX_RESLOAD_OVRD(1'b0),
    .RX_SAMPLE_PERIOD(3'b111),
    .RX_SIG_VALID_DLY(11),
    .RX_SUM_DEGEN_AVTT_OVERITE(1),
    .RX_SUM_DFETAPREP_EN(1'b0),
    .RX_SUM_IREF_TUNE(4'b0000),
    .RX_SUM_PWR_SAVING(0),
    .RX_SUM_RES_CTRL(4'b0000),
    .RX_SUM_VCMTUNE(4'b1001),
    .RX_SUM_VCM_BIAS_TUNE_EN(1'b1),
    .RX_SUM_VCM_OVWR(1'b0),
    .RX_SUM_VREF_TUNE(3'b100),
    .RX_TUNE_AFE_OS(2'b10),
    .RX_VREG_CTRL(3'b010),
    .RX_VREG_PDB(1'b1),
    .RX_WIDEMODE_CDR(2'b10),
    .RX_WIDEMODE_CDR_GEN3(2'b00),
    .RX_WIDEMODE_CDR_GEN4(2'b01),
    .RX_XCLK_SEL("RXDES"),
    .RX_XMODE_SEL(1'b0),
    .SAMPLE_CLK_PHASE(1'b0),
    .SAS_12G_MODE(1'b0),
    .SATA_BURST_SEQ_LEN(4'b1111),
    .SATA_BURST_VAL(3'b100),
    .SATA_CPLL_CFG("VCO_3000MHZ"),
    .SATA_EIDLE_VAL(3'b100),
    .SHOW_REALIGN_COMMA("TRUE"),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RECEIVER_DETECT_PASS("TRUE"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .SIM_TX_EIDLE_DRIVE_LEVEL("Z"),
    .SRSTMODE(1'b0),
    .TAPDLY_SET_TX(2'h0),
    .TERM_RCAL_CFG(15'b100001000000010),
    .TERM_RCAL_OVRD(3'b001),
    .TRANS_TIME_RATE(8'h0E),
    .TST_RSV0(8'h00),
    .TST_RSV1(8'h00),
    .TXBUF_EN("TRUE"),
    .TXBUF_RESET_ON_RATE_CHANGE("TRUE"),
    .TXDLY_CFG(16'h8010),
    .TXDLY_LCFG(16'h0030),
    .TXDRV_FREQBAND(3),
    .TXFE_CFG0(16'b0000001111000110),
    .TXFE_CFG1(16'b1111100000000000),
    .TXFE_CFG2(16'b1111100000000000),
    .TXFE_CFG3(16'b1111100000000000),
    .TXFIFO_ADDR_CFG("LOW"),
    .TXGBOX_FIFO_INIT_RD_ADDR(4),
    .TXGEARBOX_EN("TRUE"),
    .TXOUT_DIV(1),
    .TXPCSRESET_TIME(5'b00011),
    .TXPHDLY_CFG0(16'h6070),
    .TXPHDLY_CFG1(16'h000E),
    .TXPH_CFG(16'h0723),
    .TXPH_CFG2(16'h0000),
    .TXPH_MONITOR_SEL(5'b00000),
    .TXPI_CFG0(16'b0011000000000000),
    .TXPI_CFG1(16'b0000000000000000),
    .TXPI_GRAY_SEL(1'b0),
    .TXPI_INVSTROBE_SEL(1'b0),
    .TXPI_PPM(1'b0),
    .TXPI_PPM_CFG(8'b00000000),
    .TXPI_SYNFREQ_PPM(3'b001),
    .TXPMARESET_TIME(5'b00011),
    .TXREFCLKDIV2_SEL(1'b0),
    .TXSWBST_BST(1),
    .TXSWBST_EN(1),
    .TXSWBST_MAG(4),
    .TXSYNC_MULTILANE(1'b1),
    .TXSYNC_OVRD(1'b0),
    .TXSYNC_SKIP_DA(1'b0),
    .TX_CLK25_DIV(13),
    .TX_CLKMUX_EN(1'b1),
    .TX_DATA_WIDTH(64),
    .TX_DCC_LOOP_RST_CFG(16'h0004),
    .TX_DEEMPH0(6'b000000),
    .TX_DEEMPH1(6'b000000),
    .TX_DEEMPH2(6'b000000),
    .TX_DEEMPH3(6'b000000),
    .TX_DIVRESET_TIME(5'b00001),
    .TX_DRIVE_MODE("DIRECT"),
    .TX_EIDLE_ASSERT_DELAY(3'b100),
    .TX_EIDLE_DEASSERT_DELAY(3'b011),
    .TX_FABINT_USRCLK_FLOP(1'b0),
    .TX_FIFO_BYP_EN(1'b0),
    .TX_IDLE_DATA_ZERO(1'b0),
    .TX_INT_DATAWIDTH(2),
    .TX_LOOPBACK_DRIVE_HIZ("FALSE"),
    .TX_MAINCURSOR_SEL(1'b0),
    .TX_MARGIN_FULL_0(7'b1011000),
    .TX_MARGIN_FULL_1(7'b1010111),
    .TX_MARGIN_FULL_2(7'b1010101),
    .TX_MARGIN_FULL_3(7'b1010011),
    .TX_MARGIN_FULL_4(7'b1010001),
    .TX_MARGIN_LOW_0(7'b1001100),
    .TX_MARGIN_LOW_1(7'b1001011),
    .TX_MARGIN_LOW_2(7'b1001000),
    .TX_MARGIN_LOW_3(7'b1000010),
    .TX_MARGIN_LOW_4(7'b1000000),
    .TX_PHICAL_CFG0(16'h0020),
    .TX_PHICAL_CFG1(16'h0040),
    .TX_PI_BIASSET(3),
    .TX_PMADATA_OPT(1'b0),
    .TX_PMA_POWER_SAVE(1'b0),
    .TX_PMA_RSV0(16'h0000),
    .TX_PMA_RSV1(16'h0000),
    .TX_PROGCLK_SEL("PREPI"),
    .TX_PROGDIV_CFG(0.000000),
    .TX_PROGDIV_RATE(16'h0001),
    .TX_RXDETECT_CFG(14'h0032),
    .TX_RXDETECT_REF(5),
    .TX_SAMPLE_PERIOD(3'b111),
    .TX_SW_MEAS(2'b00),
    .TX_VREG_CTRL(3'b011),
    .TX_VREG_PDB(1'b1),
    .TX_VREG_VREFSEL(2'b10),
    .TX_XCLK_SEL("TXOUT"),
    .USB_BOTH_BURST_IDLE(1'b0),
    .USB_BURSTMAX_U3WAKE(7'b1111111),
    .USB_BURSTMIN_U3WAKE(7'b1100011),
    .USB_CLK_COR_EQ_EN(1'b0),
    .USB_EXT_CNTL(1'b1),
    .USB_IDLEMAX_POLLING(10'b1010111011),
    .USB_IDLEMIN_POLLING(10'b0100101011),
    .USB_LFPSPING_BURST(9'b000000101),
    .USB_LFPSPOLLING_BURST(9'b000110001),
    .USB_LFPSPOLLING_IDLE_MS(9'b000000100),
    .USB_LFPSU1EXIT_BURST(9'b000011101),
    .USB_LFPSU2LPEXIT_BURST_MS(9'b001100011),
    .USB_LFPSU3WAKE_BURST_MS(9'b111110011),
    .USB_LFPS_TPERIOD(4'b0011),
    .USB_LFPS_TPERIOD_ACCURATE(1'b1),
    .USB_MODE(1'b0),
    .USB_PCIE_ERR_REP_DIS(1'b0),
    .USB_PING_SATA_MAX_INIT(21),
    .USB_PING_SATA_MIN_INIT(12),
    .USB_POLL_SATA_MAX_BURST(8),
    .USB_POLL_SATA_MIN_BURST(4),
    .USB_RAW_ELEC(1'b0),
    .USB_RXIDLE_P0_CTRL(1'b1),
    .USB_TXIDLE_TUNE_ENABLE(1'b1),
    .USB_U1_SATA_MAX_WAKE(7),
    .USB_U1_SATA_MIN_WAKE(4),
    .USB_U2_SAS_MAX_COM(64),
    .USB_U2_SAS_MIN_COM(36),
    .USE_PCS_CLK_PHASE_SEL(1'b0),
    .Y_ALL_MODE(1'b0)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST 
       (.BUFGTCE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_0 ),
        .BUFGTCEMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_313 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_314 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_315 }),
        .BUFGTDIV({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_368 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_369 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_370 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_371 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_372 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_373 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_374 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_375 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_376 }),
        .BUFGTRESET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_1 ),
        .BUFGTRSTMASK({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_316 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_317 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_318 }),
        .CDRSTEPDIR(1'b0),
        .CDRSTEPSQ(1'b0),
        .CDRSTEPSX(1'b0),
        .CFGRESET(1'b0),
        .CLKRSVD0(1'b0),
        .CLKRSVD1(1'b0),
        .CPLLFBCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_2 ),
        .CPLLFREQLOCK(1'b0),
        .CPLLLOCK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_3 ),
        .CPLLLOCKDETCLK(1'b0),
        .CPLLLOCKEN(1'b0),
        .CPLLPD(1'b1),
        .CPLLREFCLKLOST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_4 ),
        .CPLLREFCLKSEL({1'b0,1'b0,1'b1}),
        .CPLLRESET(1'b1),
        .DMONFIFORESET(1'b0),
        .DMONITORCLK(1'b0),
        .DMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_203 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_204 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_205 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_206 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_207 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_208 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_209 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_210 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_211 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_212 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_213 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_214 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_215 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_216 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_217 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_218 }),
        .DMONITOROUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_5 ),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(drpclk_in),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_219 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_220 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_221 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_222 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_223 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_224 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_225 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_226 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_227 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_228 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_229 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_230 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_231 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_232 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_233 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_234 }),
        .DRPEN(1'b0),
        .DRPRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_6 ),
        .DRPRST(1'b0),
        .DRPWE(1'b0),
        .EYESCANDATAERROR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_7 ),
        .EYESCANRESET(1'b0),
        .EYESCANTRIGGER(1'b0),
        .FREQOS(1'b0),
        .GTGREFCLK(1'b0),
        .GTNORTHREFCLK0(1'b0),
        .GTNORTHREFCLK1(1'b0),
        .GTPOWERGOOD(GTYE4_CHANNEL_GTPOWERGOOD[3]),
        .GTREFCLK0(gtrefclk0_in),
        .GTREFCLK1(1'b0),
        .GTREFCLKMONITOR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_9 ),
        .GTRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .GTRXRESET(GTYE4_CHANNEL_GTRXRESET),
        .GTRXRESETSEL(1'b0),
        .GTSOUTHREFCLK0(1'b0),
        .GTSOUTHREFCLK1(1'b0),
        .GTTXRESET(GTYE4_CHANNEL_GTTXRESET[3]),
        .GTTXRESETSEL(1'b0),
        .GTYRXN(gtyrxn_in[3]),
        .GTYRXP(gtyrxp_in[3]),
        .GTYTXN(gtytxn_out[3]),
        .GTYTXP(gtytxp_out[3]),
        .INCPCTRL(1'b0),
        .LOOPBACK(loopback_in),
        .PCIEEQRXEQADAPTDONE(1'b0),
        .PCIERATEGEN3(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_12 ),
        .PCIERATEIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_13 ),
        .PCIERATEQPLLPD({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_299 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_300 }),
        .PCIERATEQPLLRESET({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_301 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_302 }),
        .PCIERSTIDLE(1'b0),
        .PCIERSTTXSYNCSTART(1'b0),
        .PCIESYNCTXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_14 ),
        .PCIEUSERGEN3RDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_15 ),
        .PCIEUSERPHYSTATUSRST(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_16 ),
        .PCIEUSERRATEDONE(1'b0),
        .PCIEUSERRATESTART(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_17 ),
        .PCSRSVDIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCSRSVDOUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_235 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_236 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_237 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_238 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_239 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_240 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_241 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_242 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_243 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_244 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_245 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_246 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_247 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_248 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_249 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_250 }),
        .PHYSTATUS(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_18 ),
        .PINRSRVDAS({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_251 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_252 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_253 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_254 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_255 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_256 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_257 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_258 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_259 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_260 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_261 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_262 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_263 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_264 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_265 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_266 }),
        .POWERPRESENT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_19 ),
        .QPLL0CLK(qpll0clk_in),
        .QPLL0FREQLOCK(1'b0),
        .QPLL0REFCLK(qpll0refclk_in),
        .QPLL1CLK(1'b0),
        .QPLL1FREQLOCK(1'b0),
        .QPLL1REFCLK(1'b0),
        .RESETEXCEPTION(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_20 ),
        .RESETOVRD(1'b0),
        .RX8B10BEN(1'b0),
        .RXAFECFOKEN(1'b1),
        .RXBUFRESET(1'b0),
        .RXBUFSTATUS({rxbufstatus_out[3],\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_320 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_321 }),
        .RXBYTEISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_21 ),
        .RXBYTEREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_22 ),
        .RXCDRFREQRESET(1'b0),
        .RXCDRHOLD(1'b0),
        .RXCDRLOCK(GTYE4_CHANNEL_RXCDRLOCK[3]),
        .RXCDROVRDEN(rxcdrovrden_in),
        .RXCDRPHDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_24 ),
        .RXCDRRESET(1'b0),
        .RXCHANBONDSEQ(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_25 ),
        .RXCHANISALIGNED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_26 ),
        .RXCHANREALIGN(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_27 ),
        .RXCHBONDEN(1'b0),
        .RXCHBONDI({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCHBONDLEVEL({1'b0,1'b0,1'b0}),
        .RXCHBONDMASTER(1'b0),
        .RXCHBONDO({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_325 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_326 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_327 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_328 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_329 }),
        .RXCHBONDSLAVE(1'b0),
        .RXCKCALDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_28 ),
        .RXCKCALRESET(1'b0),
        .RXCKCALSTART({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RXCLKCORCNT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_303 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_304 }),
        .RXCOMINITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_29 ),
        .RXCOMMADET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_30 ),
        .RXCOMMADETEN(1'b0),
        .RXCOMSASDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_31 ),
        .RXCOMWAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_32 ),
        .RXCTRL0({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_267 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_268 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_269 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_270 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_271 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_272 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_273 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_274 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_275 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_276 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_277 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_278 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_279 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_280 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_281 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_282 }),
        .RXCTRL1({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_283 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_284 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_285 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_286 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_287 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_288 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_289 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_290 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_291 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_292 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_293 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_294 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_295 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_296 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_297 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_298 }),
        .RXCTRL2({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_336 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_337 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_338 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_339 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_340 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_341 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_342 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_343 }),
        .RXCTRL3({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_344 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_345 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_346 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_347 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_348 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_349 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_350 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_351 }),
        .RXDATA({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_75 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_76 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_77 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_78 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_79 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_80 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_81 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_82 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_83 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_84 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_85 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_86 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_87 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_88 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_89 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_90 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_91 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_92 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_93 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_94 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_95 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_96 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_97 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_98 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_99 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_100 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_101 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_102 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_103 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_104 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_105 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_106 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_107 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_108 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_109 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_110 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_111 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_112 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_113 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_114 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_115 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_116 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_117 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_118 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_119 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_120 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_121 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_122 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_123 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_124 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_125 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_126 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_127 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_128 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_129 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_130 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_131 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_132 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_133 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_134 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_135 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_136 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_137 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_138 ,gtwiz_userdata_rx_out[255:192]}),
        .RXDATAEXTENDRSVD({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_352 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_353 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_354 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_355 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_356 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_357 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_358 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_359 }),
        .RXDATAVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_305 ,rxdatavalid_out[3]}),
        .RXDFEAGCHOLD(1'b0),
        .RXDFEAGCOVRDEN(1'b0),
        .RXDFECFOKFCNUM({1'b1,1'b1,1'b0,1'b1}),
        .RXDFECFOKFEN(1'b0),
        .RXDFECFOKFPULSE(1'b0),
        .RXDFECFOKHOLD(1'b0),
        .RXDFECFOKOVREN(1'b0),
        .RXDFEKHHOLD(1'b0),
        .RXDFEKHOVRDEN(1'b0),
        .RXDFELFHOLD(1'b0),
        .RXDFELFOVRDEN(1'b0),
        .RXDFELPMRESET(1'b0),
        .RXDFETAP10HOLD(1'b0),
        .RXDFETAP10OVRDEN(1'b0),
        .RXDFETAP11HOLD(1'b0),
        .RXDFETAP11OVRDEN(1'b0),
        .RXDFETAP12HOLD(1'b0),
        .RXDFETAP12OVRDEN(1'b0),
        .RXDFETAP13HOLD(1'b0),
        .RXDFETAP13OVRDEN(1'b0),
        .RXDFETAP14HOLD(1'b0),
        .RXDFETAP14OVRDEN(1'b0),
        .RXDFETAP15HOLD(1'b0),
        .RXDFETAP15OVRDEN(1'b0),
        .RXDFETAP2HOLD(1'b0),
        .RXDFETAP2OVRDEN(1'b0),
        .RXDFETAP3HOLD(1'b0),
        .RXDFETAP3OVRDEN(1'b0),
        .RXDFETAP4HOLD(1'b0),
        .RXDFETAP4OVRDEN(1'b0),
        .RXDFETAP5HOLD(1'b0),
        .RXDFETAP5OVRDEN(1'b0),
        .RXDFETAP6HOLD(1'b0),
        .RXDFETAP6OVRDEN(1'b0),
        .RXDFETAP7HOLD(1'b0),
        .RXDFETAP7OVRDEN(1'b0),
        .RXDFETAP8HOLD(1'b0),
        .RXDFETAP8OVRDEN(1'b0),
        .RXDFETAP9HOLD(1'b0),
        .RXDFETAP9OVRDEN(1'b0),
        .RXDFEUTHOLD(1'b0),
        .RXDFEUTOVRDEN(1'b0),
        .RXDFEVPHOLD(1'b0),
        .RXDFEVPOVRDEN(1'b0),
        .RXDFEXYDEN(1'b1),
        .RXDLYBYPASS(1'b1),
        .RXDLYEN(1'b0),
        .RXDLYOVRDEN(1'b0),
        .RXDLYSRESET(1'b0),
        .RXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_33 ),
        .RXELECIDLE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_34 ),
        .RXELECIDLEMODE({1'b1,1'b1}),
        .RXEQTRAINING(1'b0),
        .RXGEARBOXSLIP(rxgearboxslip_in[3]),
        .RXHEADER({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_330 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_331 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_332 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_333 ,rxheader_out[7:6]}),
        .RXHEADERVALID({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_307 ,rxheadervalid_out[3]}),
        .RXLATCLK(1'b0),
        .RXLFPSTRESETDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_35 ),
        .RXLFPSU2LPEXITDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_36 ),
        .RXLFPSU3WAKEDET(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_37 ),
        .RXLPMEN(1'b0),
        .RXLPMGCHOLD(1'b0),
        .RXLPMGCOVRDEN(1'b0),
        .RXLPMHFHOLD(1'b0),
        .RXLPMHFOVRDEN(1'b0),
        .RXLPMLFHOLD(1'b0),
        .RXLPMLFKLOVRDEN(1'b0),
        .RXLPMOSHOLD(1'b0),
        .RXLPMOSOVRDEN(1'b0),
        .RXMCOMMAALIGNEN(1'b0),
        .RXMONITOROUT({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_360 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_361 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_362 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_363 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_364 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_365 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_366 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_367 }),
        .RXMONITORSEL({1'b0,1'b0}),
        .RXOOBRESET(1'b0),
        .RXOSCALRESET(1'b0),
        .RXOSHOLD(1'b0),
        .RXOSINTDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_38 ),
        .RXOSINTSTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_39 ),
        .RXOSINTSTROBEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_40 ),
        .RXOSINTSTROBESTARTED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_41 ),
        .RXOSOVRDEN(1'b0),
        .RXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_42 ),
        .RXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_43 ),
        .RXOUTCLKPCS(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_44 ),
        .RXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .RXPCOMMAALIGNEN(1'b0),
        .RXPCSRESET(1'b0),
        .RXPD({1'b0,1'b0}),
        .RXPHALIGN(1'b0),
        .RXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_45 ),
        .RXPHALIGNEN(1'b0),
        .RXPHALIGNERR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_46 ),
        .RXPHDLYPD(1'b1),
        .RXPHDLYRESET(1'b0),
        .RXPLLCLKSEL({1'b1,1'b1}),
        .RXPMARESET(1'b0),
        .RXPMARESETDONE(rxpmaresetdone_out[3]),
        .RXPOLARITY(rxpolarity_in[3]),
        .RXPRBSCNTRESET(1'b0),
        .RXPRBSERR(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_48 ),
        .RXPRBSLOCKED(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_49 ),
        .RXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .RXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_50 ),
        .RXPROGDIVRESET(GTYE4_CHANNEL_RXPROGDIVRESET),
        .RXRATE({1'b0,1'b0,1'b0}),
        .RXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_51 ),
        .RXRATEMODE(1'b0),
        .RXRECCLKOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_52 ),
        .RXRESETDONE(GTYE4_CHANNEL_RXRESETDONE[3]),
        .RXSLIDE(1'b0),
        .RXSLIDERDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_54 ),
        .RXSLIPDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_55 ),
        .RXSLIPOUTCLK(1'b0),
        .RXSLIPOUTCLKRDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_56 ),
        .RXSLIPPMA(1'b0),
        .RXSLIPPMARDY(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_57 ),
        .RXSTARTOFSEQ({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_309 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_310 }),
        .RXSTATUS({\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_322 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_323 ,\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_324 }),
        .RXSYNCALLIN(1'b0),
        .RXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_58 ),
        .RXSYNCIN(1'b0),
        .RXSYNCMODE(1'b0),
        .RXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_59 ),
        .RXSYSCLKSEL({1'b1,1'b0}),
        .RXTERMINATION(1'b0),
        .RXUSERRDY(GTYE4_CHANNEL_RXUSERRDY),
        .RXUSRCLK(rxusrclk_in),
        .RXUSRCLK2(rxusrclk2_in),
        .RXVALID(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_60 ),
        .SIGVALIDCLK(1'b0),
        .TSTIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BBYPASS({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TX8B10BEN(1'b0),
        .TXBUFSTATUS({txbufstatus_out[3],\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_312 }),
        .TXCOMFINISH(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_61 ),
        .TXCOMINIT(1'b0),
        .TXCOMSAS(1'b0),
        .TXCOMWAKE(1'b0),
        .TXCTRL0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXCTRL2({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,gtwiz_userdata_tx_in[255:192]}),
        .TXDATAEXTENDRSVD({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXDCCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_62 ),
        .TXDCCFORCESTART(1'b0),
        .TXDCCRESET(1'b0),
        .TXDEEMPH({1'b0,1'b0}),
        .TXDETECTRX(1'b0),
        .TXDIFFCTRL({1'b0,1'b1,1'b0,1'b0,1'b0}),
        .TXDLYBYPASS(1'b1),
        .TXDLYEN(1'b0),
        .TXDLYHOLD(1'b0),
        .TXDLYOVRDEN(1'b0),
        .TXDLYSRESET(1'b0),
        .TXDLYSRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_63 ),
        .TXDLYUPDOWN(1'b0),
        .TXELECIDLE(1'b0),
        .TXHEADER({1'b0,1'b0,1'b0,1'b0,txheader_in[7:6]}),
        .TXINHIBIT(1'b0),
        .TXLATCLK(1'b0),
        .TXLFPSTRESET(1'b0),
        .TXLFPSU2LPEXIT(1'b0),
        .TXLFPSU3WAKE(1'b0),
        .TXMAINCURSOR({1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b0}),
        .TXMARGIN({1'b0,1'b0,1'b0}),
        .TXMUXDCDEXHOLD(1'b0),
        .TXMUXDCDORWREN(1'b0),
        .TXONESZEROS(1'b0),
        .TXOUTCLK(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_64 ),
        .TXOUTCLKFABRIC(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_65 ),
        .TXOUTCLKPCS(GTYE4_CHANNEL_TXOUTCLKPCS[3]),
        .TXOUTCLKSEL({1'b0,1'b1,1'b0}),
        .TXPCSRESET(1'b0),
        .TXPD({1'b0,1'b0}),
        .TXPDELECIDLEMODE(1'b0),
        .TXPHALIGN(1'b0),
        .TXPHALIGNDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_67 ),
        .TXPHALIGNEN(1'b0),
        .TXPHDLYPD(1'b1),
        .TXPHDLYRESET(1'b0),
        .TXPHDLYTSTCLK(1'b0),
        .TXPHINIT(1'b0),
        .TXPHINITDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_68 ),
        .TXPHOVRDEN(1'b0),
        .TXPIPPMEN(1'b0),
        .TXPIPPMOVRDEN(1'b0),
        .TXPIPPMPD(1'b0),
        .TXPIPPMSEL(1'b1),
        .TXPIPPMSTEPSIZE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPISOPD(GTYE4_CHANNEL_TXRATE[3]),
        .TXPLLCLKSEL({1'b1,1'b1}),
        .TXPMARESET(1'b0),
        .TXPMARESETDONE(txpmaresetdone_out[3]),
        .TXPOLARITY(1'b0),
        .TXPOSTCURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRBSFORCEERR(1'b0),
        .TXPRBSSEL({1'b0,1'b0,1'b0,1'b0}),
        .TXPRECURSOR({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .TXPRGDIVRESETDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_70 ),
        .TXPROGDIVRESET(GTYE4_CHANNEL_TXPROGDIVRESET),
        .TXRATE({1'b0,1'b0,GTYE4_CHANNEL_TXRATE[3]}),
        .TXRATEDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_71 ),
        .TXRATEMODE(GTYE4_CHANNEL_TXRATE[3]),
        .TXRESETDONE(GTYE4_CHANNEL_TXRESETDONE[3]),
        .TXSEQUENCE(txsequence_in[27:21]),
        .TXSWING(1'b0),
        .TXSYNCALLIN(1'b0),
        .TXSYNCDONE(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_73 ),
        .TXSYNCIN(1'b0),
        .TXSYNCMODE(1'b0),
        .TXSYNCOUT(\gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_n_74 ),
        .TXSYSCLKSEL({1'b1,1'b0}),
        .TXUSERRDY(GTYE4_CHANNEL_TXUSERRDY),
        .TXUSRCLK(txusrclk_in),
        .TXUSRCLK2(txusrclk_in));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_common" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_common
   (gt_qplllock_quad1_out,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_qpllrefclklost_quad1_out,
    gt_refclk1_out,
    init_clk,
    gtwiz_reset_qpll0reset_out);
  output gt_qplllock_quad1_out;
  output gt_qpllclk_quad1_out;
  output gt_qpllrefclk_quad1_out;
  output gt_qpllrefclklost_quad1_out;
  input gt_refclk1_out;
  input init_clk;
  input [0:0]gtwiz_reset_qpll0reset_out;

  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_qpllrefclklost_quad1_out;
  wire gt_refclk1_out;
  wire [0:0]gtwiz_reset_qpll0reset_out;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_0 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_1 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_10 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_100 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_101 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_102 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_103 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_104 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_105 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_106 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_107 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_108 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_109 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_11 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_110 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_111 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_112 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_113 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_114 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_115 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_116 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_117 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_118 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_119 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_12 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_120 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_121 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_122 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_123 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_124 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_125 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_126 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_127 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_128 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_129 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_13 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_130 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_131 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_132 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_133 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_134 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_135 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_136 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_137 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_138 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_139 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_14 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_15 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_16 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_17 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_18 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_19 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_20 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_21 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_22 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_23 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_24 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_25 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_26 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_27 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_28 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_29 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_30 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_31 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_32 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_33 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_34 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_35 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_36 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_37 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_38 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_39 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_40 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_41 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_42 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_43 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_44 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_45 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_46 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_47 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_48 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_49 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_50 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_51 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_52 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_53 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_54 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_55 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_56 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_57 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_58 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_59 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_6 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_60 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_61 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_62 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_63 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_64 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_65 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_66 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_67 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_68 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_69 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_7 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_70 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_71 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_72 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_73 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_74 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_75 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_76 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_77 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_78 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_79 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_8 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_80 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_81 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_82 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_83 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_84 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_85 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_86 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_87 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_88 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_89 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_9 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_90 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_91 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_92 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_93 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_94 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_95 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_96 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_97 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_98 ;
  wire \gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_99 ;
  wire init_clk;

  (* BOX_TYPE = "PRIMITIVE" *) 
  GTYE4_COMMON #(
    .AEN_QPLL0_FBDIV(1'b1),
    .AEN_QPLL1_FBDIV(1'b1),
    .AEN_SDM0TOGGLE(1'b0),
    .AEN_SDM1TOGGLE(1'b0),
    .A_SDM0TOGGLE(1'b0),
    .A_SDM1DATA_HIGH(9'b000000000),
    .A_SDM1DATA_LOW(16'b0000000000000000),
    .A_SDM1TOGGLE(1'b0),
    .BIAS_CFG0(16'h0000),
    .BIAS_CFG1(16'h0000),
    .BIAS_CFG2(16'h0524),
    .BIAS_CFG3(16'h0041),
    .BIAS_CFG4(16'h0010),
    .BIAS_CFG_RSVD(16'h0000),
    .COMMON_CFG0(16'h0000),
    .COMMON_CFG1(16'h0000),
    .POR_CFG(16'h0000),
    .PPF0_CFG(16'h0800),
    .PPF1_CFG(16'h0600),
    .QPLL0CLKOUT_RATE("FULL"),
    .QPLL0_CFG0(16'h331C),
    .QPLL0_CFG1(16'hD038),
    .QPLL0_CFG1_G3(16'hD038),
    .QPLL0_CFG2(16'h87C1),
    .QPLL0_CFG2_G3(16'h87C1),
    .QPLL0_CFG3(16'h0120),
    .QPLL0_CFG4(16'h0084),
    .QPLL0_CP(10'b0011111111),
    .QPLL0_CP_G3(10'b0000001111),
    .QPLL0_FBDIV(40),
    .QPLL0_FBDIV_G3(160),
    .QPLL0_INIT_CFG0(16'h02B2),
    .QPLL0_INIT_CFG1(8'h00),
    .QPLL0_LOCK_CFG(16'h25E8),
    .QPLL0_LOCK_CFG_G3(16'h25E8),
    .QPLL0_LPF(10'b1101111111),
    .QPLL0_LPF_G3(10'b0111010101),
    .QPLL0_PCI_EN(1'b0),
    .QPLL0_RATE_SW_USE_DRP(1'b1),
    .QPLL0_REFCLK_DIV(1),
    .QPLL0_SDM_CFG0(16'h0080),
    .QPLL0_SDM_CFG1(16'h0000),
    .QPLL0_SDM_CFG2(16'h0000),
    .QPLL1CLKOUT_RATE("HALF"),
    .QPLL1_CFG0(16'h331C),
    .QPLL1_CFG1(16'hD038),
    .QPLL1_CFG1_G3(16'hD038),
    .QPLL1_CFG2(16'h0FC3),
    .QPLL1_CFG2_G3(16'h0FC3),
    .QPLL1_CFG3(16'h0120),
    .QPLL1_CFG4(16'h0002),
    .QPLL1_CP(10'b0011111111),
    .QPLL1_CP_G3(10'b0001111111),
    .QPLL1_FBDIV(66),
    .QPLL1_FBDIV_G3(80),
    .QPLL1_INIT_CFG0(16'h02B2),
    .QPLL1_INIT_CFG1(8'h00),
    .QPLL1_LOCK_CFG(16'h25E8),
    .QPLL1_LOCK_CFG_G3(16'h25E8),
    .QPLL1_LPF(10'b1000011111),
    .QPLL1_LPF_G3(10'b0111010100),
    .QPLL1_PCI_EN(1'b0),
    .QPLL1_RATE_SW_USE_DRP(1'b1),
    .QPLL1_REFCLK_DIV(1),
    .QPLL1_SDM_CFG0(16'h0080),
    .QPLL1_SDM_CFG1(16'h0000),
    .QPLL1_SDM_CFG2(16'h0000),
    .RSVD_ATTR0(16'h0000),
    .RSVD_ATTR1(16'h0000),
    .RSVD_ATTR2(16'h0000),
    .RSVD_ATTR3(16'h0000),
    .RXRECCLKOUT0_SEL(2'b00),
    .RXRECCLKOUT1_SEL(2'b00),
    .SARC_ENB(1'b0),
    .SARC_SEL(1'b0),
    .SDM0INITSEED0_0(16'b0000000100010001),
    .SDM0INITSEED0_1(9'b000010001),
    .SDM1INITSEED0_0(16'b0000000100010001),
    .SDM1INITSEED0_1(9'b000010001),
    .SIM_DEVICE("ULTRASCALE_PLUS"),
    .SIM_MODE("FAST"),
    .SIM_RESET_SPEEDUP("TRUE"),
    .UB_CFG0(16'h0000),
    .UB_CFG1(16'h0000),
    .UB_CFG2(16'h0000),
    .UB_CFG3(16'h0000),
    .UB_CFG4(16'h0000),
    .UB_CFG5(16'h0400),
    .UB_CFG6(16'h0000)) 
    \gtye4_common_gen.GTYE4_COMMON_PRIM_INST 
       (.BGBYPASSB(1'b1),
        .BGMONITORENB(1'b1),
        .BGPDB(1'b1),
        .BGRCALOVRD({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .BGRCALOVRDENB(1'b1),
        .DRPADDR({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPCLK(1'b0),
        .DRPDI({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .DRPDO({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_48 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_49 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_50 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_51 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_52 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_53 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_54 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_55 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_56 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_57 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_58 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_59 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_60 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_61 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_62 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_63 }),
        .DRPEN(1'b0),
        .DRPRDY(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_0 ),
        .DRPWE(1'b0),
        .GTGREFCLK0(1'b0),
        .GTGREFCLK1(1'b0),
        .GTNORTHREFCLK00(1'b0),
        .GTNORTHREFCLK01(1'b0),
        .GTNORTHREFCLK10(1'b0),
        .GTNORTHREFCLK11(1'b0),
        .GTREFCLK00(gt_refclk1_out),
        .GTREFCLK01(1'b0),
        .GTREFCLK10(1'b0),
        .GTREFCLK11(1'b0),
        .GTSOUTHREFCLK00(1'b0),
        .GTSOUTHREFCLK01(1'b0),
        .GTSOUTHREFCLK10(1'b0),
        .GTSOUTHREFCLK11(1'b0),
        .PCIERATEQPLL0({1'b0,1'b0,1'b0}),
        .PCIERATEQPLL1({1'b0,1'b0,1'b0}),
        .PMARSVD0({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PMARSVDOUT0({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_108 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_109 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_110 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_111 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_112 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_113 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_114 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_115 }),
        .PMARSVDOUT1({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_116 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_117 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_118 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_119 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_120 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_121 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_122 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_123 }),
        .QPLL0CLKRSVD0(1'b0),
        .QPLL0CLKRSVD1(1'b0),
        .QPLL0FBCLKLOST(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_1 ),
        .QPLL0FBDIV({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLL0LOCK(gt_qplllock_quad1_out),
        .QPLL0LOCKDETCLK(init_clk),
        .QPLL0LOCKEN(1'b1),
        .QPLL0OUTCLK(gt_qpllclk_quad1_out),
        .QPLL0OUTREFCLK(gt_qpllrefclk_quad1_out),
        .QPLL0PD(1'b0),
        .QPLL0REFCLKLOST(gt_qpllrefclklost_quad1_out),
        .QPLL0REFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLL0RESET(gtwiz_reset_qpll0reset_out),
        .QPLL1CLKRSVD0(1'b0),
        .QPLL1CLKRSVD1(1'b0),
        .QPLL1FBCLKLOST(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_6 ),
        .QPLL1FBDIV({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLL1LOCK(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_7 ),
        .QPLL1LOCKDETCLK(1'b0),
        .QPLL1LOCKEN(1'b0),
        .QPLL1OUTCLK(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_8 ),
        .QPLL1OUTREFCLK(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_9 ),
        .QPLL1PD(1'b1),
        .QPLL1REFCLKLOST(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_10 ),
        .QPLL1REFCLKSEL({1'b0,1'b0,1'b1}),
        .QPLL1RESET(1'b1),
        .QPLLDMONITOR0({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_124 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_125 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_126 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_127 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_128 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_129 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_130 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_131 }),
        .QPLLDMONITOR1({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_132 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_133 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_134 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_135 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_136 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_137 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_138 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_139 }),
        .QPLLRSVD1({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD2({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD3({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .QPLLRSVD4({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .RCALENB(1'b1),
        .REFCLKOUTMONITOR0(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_11 ),
        .REFCLKOUTMONITOR1(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_12 ),
        .RXRECCLK0SEL({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_96 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_97 }),
        .RXRECCLK1SEL({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_98 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_99 }),
        .SDM0DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .SDM0FINALOUT({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_100 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_101 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_102 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_103 }),
        .SDM0RESET(1'b0),
        .SDM0TESTDATA({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_18 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_19 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_20 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_21 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_22 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_23 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_24 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_25 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_26 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_27 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_28 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_29 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_30 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_31 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_32 }),
        .SDM0TOGGLE(1'b0),
        .SDM0WIDTH({1'b0,1'b0}),
        .SDM1DATA({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .SDM1FINALOUT({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_104 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_105 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_106 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_107 }),
        .SDM1RESET(1'b0),
        .SDM1TESTDATA({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_33 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_34 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_35 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_36 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_37 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_38 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_39 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_40 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_41 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_42 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_43 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_44 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_45 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_46 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_47 }),
        .SDM1TOGGLE(1'b0),
        .SDM1WIDTH({1'b0,1'b0}),
        .UBCFGSTREAMEN(1'b0),
        .UBDADDR({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_64 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_65 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_66 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_67 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_68 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_69 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_70 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_71 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_72 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_73 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_74 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_75 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_76 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_77 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_78 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_79 }),
        .UBDEN(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_13 ),
        .UBDI({\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_80 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_81 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_82 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_83 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_84 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_85 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_86 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_87 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_88 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_89 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_90 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_91 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_92 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_93 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_94 ,\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_95 }),
        .UBDO({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .UBDRDY(1'b0),
        .UBDWE(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_14 ),
        .UBENABLE(1'b0),
        .UBGPI({1'b0,1'b0}),
        .UBINTR({1'b0,1'b0}),
        .UBIOLMBRST(1'b0),
        .UBMBRST(1'b0),
        .UBMDMCAPTURE(1'b0),
        .UBMDMDBGRST(1'b0),
        .UBMDMDBGUPDATE(1'b0),
        .UBMDMREGEN({1'b0,1'b0,1'b0,1'b0}),
        .UBMDMSHIFT(1'b0),
        .UBMDMSYSRST(1'b0),
        .UBMDMTCK(1'b0),
        .UBMDMTDI(1'b0),
        .UBMDMTDO(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_15 ),
        .UBRSVDOUT(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_16 ),
        .UBTXUART(\gtye4_common_gen.GTYE4_COMMON_PRIM_INST_n_17 ));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__2 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[0].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_72
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__0 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__0_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__0 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__0_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_73
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__1_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1__0 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__1_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1__0_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[2].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_gtye4_delay_powergood_74
   (out,
    GTYE4_CHANNEL_TXRATE,
    GTYE4_CHANNEL_TXOUTCLKPCS,
    \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 );
  output out;
  output [0:0]GTYE4_CHANNEL_TXRATE;
  input [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  input \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;

  wire [0:0]GTYE4_CHANNEL_TXOUTCLKPCS;
  wire [0:0]GTYE4_CHANNEL_TXRATE;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.int_pwr_on_fsm ;
  wire \gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [4:0]\gen_powergood_delay.intclk_rrst_n_r ;
  wire \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ;
  wire \gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ;
  (* RTL_KEEP = "true" *) (* async_reg = "true" *) (* shreg_extract = "no" *) wire \gen_powergood_delay.pwr_on_fsm ;
  (* async_reg = "true" *) (* shreg_extract = "no" *) wire [8:0]\gen_powergood_delay.wait_cnt ;
  wire \gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ;
  wire \gen_powergood_delay.wait_cnt[8]_i_1_n_0 ;

  assign out = \gen_powergood_delay.pwr_on_fsm ;
  LUT2 #(
    .INIT(4'hE)) 
    \gen_powergood_delay.int_pwr_on_fsm_i_1__2 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .I1(\gen_powergood_delay.wait_cnt [7]),
        .O(\gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.int_pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.int_pwr_on_fsm_i_1__2_n_0 ),
        .Q(\gen_powergood_delay.int_pwr_on_fsm ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2 
       (.I0(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(1'b1),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [0]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [1]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [2]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.intclk_rrst_n_r_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .CLR(\gen_powergood_delay.intclk_rrst_n_r_reg[4]_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [3]),
        .Q(\gen_powergood_delay.intclk_rrst_n_r [4]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE #(
    .INIT(1'b0)) 
    \gen_powergood_delay.pwr_on_fsm_reg 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(1'b1),
        .D(\gen_powergood_delay.int_pwr_on_fsm ),
        .Q(\gen_powergood_delay.pwr_on_fsm ),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h7)) 
    \gen_powergood_delay.wait_cnt[0]_i_1__2 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .I1(\gen_powergood_delay.int_pwr_on_fsm ),
        .O(\gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gen_powergood_delay.wait_cnt[8]_i_1 
       (.I0(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .O(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[0] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.wait_cnt[0]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.intclk_rrst_n_r [4]),
        .Q(\gen_powergood_delay.wait_cnt [0]),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[1] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [0]),
        .Q(\gen_powergood_delay.wait_cnt [1]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[2] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [1]),
        .Q(\gen_powergood_delay.wait_cnt [2]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[3] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [2]),
        .Q(\gen_powergood_delay.wait_cnt [3]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[4] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [3]),
        .Q(\gen_powergood_delay.wait_cnt [4]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[5] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [4]),
        .Q(\gen_powergood_delay.wait_cnt [5]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[6] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [5]),
        .Q(\gen_powergood_delay.wait_cnt [6]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[7] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [6]),
        .Q(\gen_powergood_delay.wait_cnt [7]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* SHREG_EXTRACT = "no" *) 
  FDRE \gen_powergood_delay.wait_cnt_reg[8] 
       (.C(GTYE4_CHANNEL_TXOUTCLKPCS),
        .CE(\gen_powergood_delay.intclk_rrst_n_r[4]_i_1__2_n_0 ),
        .D(\gen_powergood_delay.wait_cnt [7]),
        .Q(\gen_powergood_delay.wait_cnt [8]),
        .R(\gen_powergood_delay.wait_cnt[8]_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \gtye4_channel_gen.gen_gtye4_channel_inst[3].GTYE4_CHANNEL_PRIM_INST_i_2 
       (.I0(\gen_powergood_delay.pwr_on_fsm ),
        .O(GTYE4_CHANNEL_TXRATE));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer
   (gtwiz_reset_rx_done_out,
    rxusrclk2_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_rx_done_out;
  input [0:0]rxusrclk2_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_rx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]rxusrclk2_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_rx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(rxusrclk2_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_inv_synchronizer_98
   (gtwiz_reset_tx_done_out,
    txusrclk_in,
    rst_in_sync2_reg_0);
  output [0:0]gtwiz_reset_tx_done_out;
  input [0:0]txusrclk_in;
  input rst_in_sync2_reg_0;

  wire [0:0]gtwiz_reset_tx_done_out;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_i_1__0_n_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  wire rst_in_sync2_reg_0;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire [0:0]txusrclk_in;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(1'b1),
        .Q(rst_in_meta));
  LUT1 #(
    .INIT(2'h1)) 
    rst_in_out_i_1__0
       (.I0(rst_in_sync2_reg_0),
        .O(rst_in_out_i_1__0_n_0));
  FDCE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync3),
        .Q(gtwiz_reset_tx_done_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_meta),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(txusrclk_in),
        .CE(1'b1),
        .CLR(rst_in_out_i_1__0_n_0),
        .D(rst_in_sync2),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer
   (gtwiz_reset_all_sync,
    drpclk_in,
    gtwiz_reset_rx_pll_and_datapath_in);
  output gtwiz_reset_all_sync;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire gtwiz_reset_all_sync;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(gtwiz_reset_all_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_pll_and_datapath_in),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_92
   (gtwiz_reset_rx_any_sync,
    \FSM_sequential_sm_reset_rx_reg[1] ,
    rst_in_out_reg_0,
    drpclk_in,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ,
    sm_reset_rx_timer_clr0__0,
    GTYE4_CHANNEL_RXUSERRDY,
    rst_in_out_reg_1,
    gtwiz_reset_rx_datapath_in,
    gtwiz_reset_rx_pll_and_datapath_in,
    rst_in_out_reg_2);
  output gtwiz_reset_rx_any_sync;
  output \FSM_sequential_sm_reset_rx_reg[1] ;
  output rst_in_out_reg_0;
  input [0:0]drpclk_in;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  input sm_reset_rx_timer_clr0__0;
  input [0:0]GTYE4_CHANNEL_RXUSERRDY;
  input rst_in_out_reg_1;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  input rst_in_out_reg_2;

  wire \FSM_sequential_sm_reset_rx_reg[1] ;
  wire [0:0]GTYE4_CHANNEL_RXUSERRDY;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ;
  wire gtwiz_reset_rx_any;
  wire gtwiz_reset_rx_any_sync;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  wire rst_in_out_reg_1;
  wire rst_in_out_reg_2;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;
  wire sm_reset_rx_timer_clr0__0;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_rx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_rx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_rx_int ),
        .O(\FSM_sequential_sm_reset_rx_reg[1] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    rst_in_meta_i_1
       (.I0(rst_in_out_reg_1),
        .I1(gtwiz_reset_rx_datapath_in),
        .I2(gtwiz_reset_rx_pll_and_datapath_in),
        .I3(rst_in_out_reg_2),
        .O(gtwiz_reset_rx_any));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(gtwiz_reset_rx_any),
        .Q(gtwiz_reset_rx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(gtwiz_reset_rx_any),
        .Q(rst_in_sync3));
  LUT6 #(
    .INIT(64'hFFFFFAAF00400000)) 
    rxuserrdy_out_i_1
       (.I0(gtwiz_reset_rx_any_sync),
        .I1(sm_reset_rx_timer_clr0__0),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(GTYE4_CHANNEL_RXUSERRDY),
        .O(rst_in_out_reg_0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_93
   (in0,
    drpclk_in,
    gtwiz_reset_rx_datapath_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_rx_datapath_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_datapath_in;
  wire in0;
  wire rst_in0_1;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__1
       (.I0(gtwiz_reset_rx_datapath_in),
        .I1(rst_in_out_reg_0),
        .O(rst_in0_1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0_1),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0_1),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0_1),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0_1),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0_1),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_94
   (in0,
    drpclk_in,
    rst_in_out_reg_0,
    gtwiz_reset_rx_pll_and_datapath_in);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [0:0]gtwiz_reset_rx_pll_and_datapath_in;

  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_rx_pll_and_datapath_in;
  wire in0;
  wire p_0_in_0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT2 #(
    .INIT(4'hE)) 
    rst_in_meta_i_1__0
       (.I0(rst_in_out_reg_0),
        .I1(gtwiz_reset_rx_pll_and_datapath_in),
        .O(p_0_in_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(p_0_in_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(p_0_in_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(p_0_in_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(p_0_in_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(p_0_in_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_95
   (gtwiz_reset_tx_any_sync,
    \FSM_sequential_sm_reset_tx_reg[1] ,
    drpclk_in,
    rst_in_out_reg_0,
    Q,
    \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int );
  output gtwiz_reset_tx_any_sync;
  output \FSM_sequential_sm_reset_tx_reg[1] ;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;
  input [2:0]Q;
  input \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;

  wire \FSM_sequential_sm_reset_tx_reg[1] ;
  wire [2:0]Q;
  wire [0:0]drpclk_in;
  wire \gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ;
  wire gtwiz_reset_tx_any_sync;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT5 #(
    .INIT(32'hFFDF0010)) 
    pllreset_tx_out_i_1
       (.I0(Q[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(gtwiz_reset_tx_any_sync),
        .I4(\gen_gtwizard_gtye4.gen_reset_controller_internal.gen_single_instance.gtwiz_reset_pllreset_tx_int ),
        .O(\FSM_sequential_sm_reset_tx_reg[1] ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(gtwiz_reset_tx_any_sync));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_96
   (in0,
    drpclk_in);
  output in0;
  input [0:0]drpclk_in;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .Q(rst_in_meta),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .Q(in0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .Q(rst_in_sync1),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .Q(rst_in_sync2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .Q(rst_in_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_97
   (in0,
    drpclk_in,
    rst_in_out_reg_0);
  output in0;
  input [0:0]drpclk_in;
  input rst_in_out_reg_0;

  wire [0:0]drpclk_in;
  wire in0;
  (* async_reg = "true" *) wire rst_in_meta;
  wire rst_in_out_reg_0;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in_out_reg_0),
        .Q(in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in_out_reg_0),
        .Q(rst_in_sync3));
endmodule

(* ORIG_REF_NAME = "gtwizard_ultrascale_v1_7_10_reset_synchronizer" *) 
module board_aurora_64b66b_0_2_gtwizard_ultrascale_v1_7_10_reset_synchronizer_99
   (GTYE4_CHANNEL_TXPROGDIVRESET,
    drpclk_in,
    gtwiz_reset_qpll0lock_in);
  output [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  input [0:0]drpclk_in;
  input [0:0]gtwiz_reset_qpll0lock_in;

  wire [0:0]GTYE4_CHANNEL_TXPROGDIVRESET;
  wire [0:0]drpclk_in;
  wire [0:0]gtwiz_reset_qpll0lock_in;
  wire rst_in0;
  (* async_reg = "true" *) wire rst_in_meta;
  (* async_reg = "true" *) wire rst_in_sync1;
  (* async_reg = "true" *) wire rst_in_sync2;
  (* async_reg = "true" *) wire rst_in_sync3;

  LUT1 #(
    .INIT(2'h1)) 
    rst_in_meta_i_1__2
       (.I0(gtwiz_reset_qpll0lock_in),
        .O(rst_in0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_meta_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_in0),
        .Q(rst_in_meta));
  FDPE #(
    .INIT(1'b0)) 
    rst_in_out_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync3),
        .PRE(rst_in0),
        .Q(GTYE4_CHANNEL_TXPROGDIVRESET));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync1_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_meta),
        .PRE(rst_in0),
        .Q(rst_in_sync1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync2_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync1),
        .PRE(rst_in0),
        .Q(rst_in_sync2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE #(
    .INIT(1'b0)) 
    rst_in_sync3_reg
       (.C(drpclk_in),
        .CE(1'b1),
        .D(rst_in_sync2),
        .PRE(rst_in0),
        .Q(rst_in_sync3));
endmodule

module board_aurora_64b66b_0_2_rst_sync
   (D,
    pma_init,
    init_clk);
  output [0:0]D;
  input pma_init;
  input init_clk;

  wire [0:0]D;
  wire init_clk;
  wire pma_init;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(pma_init),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(D),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_0
   (D,
    reset_pb,
    stg4_reg_0);
  output [0:0]D;
  input reset_pb;
  input stg4_reg_0;

  wire [0:0]D;
  wire reset_pb;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg4_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(reset_pb),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4),
        .Q(D),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_1
   (SS,
    in0,
    stg5_reg_0);
  output [0:0]SS;
  input in0;
  input stg5_reg_0;

  wire [0:0]SS;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SS),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_100
   (stg5_reg_0,
    TX_HEADER_1_reg,
    stg5_reg_1,
    stg5_reg_2,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg5_reg_3,
    D,
    txdatavalid_symgen_i_lane3,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 );
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  output [0:0]stg5_reg_1;
  output stg5_reg_2;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg5_reg_3;
  input [0:0]D;
  input txdatavalid_symgen_i_lane3;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;

  wire [0:0]D;
  wire \TX_DATA[55]_i_3_n_0 ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire [0:0]stg5_reg_1;
  wire stg5_reg_2;
  wire stg5_reg_3;
  wire txdatavalid_symgen_i_lane3;

  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \TX_DATA[53]_i_2__2 
       (.I0(stg5_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .O(stg5_reg_2));
  LUT6 #(
    .INIT(64'h5555000055553000)) 
    \TX_DATA[55]_i_2 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA[55]_i_3_n_0 ),
        .I2(\TX_DATA_reg[55] ),
        .I3(TX_HEADER_1_reg_0),
        .I4(gen_cc_i),
        .I5(gen_ch_bond_i),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \TX_DATA[55]_i_3 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA_reg[55]_0 ),
        .I2(\TX_DATA_reg[55]_1 ),
        .O(\TX_DATA[55]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEEE2E)) 
    TX_HEADER_1_i_1__2
       (.I0(D),
        .I1(txdatavalid_symgen_i_lane3),
        .I2(TX_HEADER_1_reg_0),
        .I3(gen_cc_i),
        .I4(gen_ch_bond_i),
        .I5(stg5_reg_0),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_106
   (stg5_reg_0,
    TX_HEADER_1_reg,
    stg5_reg_1,
    stg5_reg_2,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg4_reg_0,
    D,
    txdatavalid_symgen_i_lane2,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 );
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  output [0:0]stg5_reg_1;
  output stg5_reg_2;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg4_reg_0;
  input [0:0]D;
  input txdatavalid_symgen_i_lane2;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;

  wire [0:0]D;
  wire \TX_DATA[55]_i_3__0_n_0 ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire [0:0]stg5_reg_1;
  wire stg5_reg_2;
  wire txdatavalid_symgen_i_lane2;

  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \TX_DATA[53]_i_2__1 
       (.I0(stg5_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .O(stg5_reg_2));
  LUT6 #(
    .INIT(64'h5555000055553000)) 
    \TX_DATA[55]_i_2__0 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA[55]_i_3__0_n_0 ),
        .I2(\TX_DATA_reg[55] ),
        .I3(TX_HEADER_1_reg_0),
        .I4(gen_cc_i),
        .I5(gen_ch_bond_i),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \TX_DATA[55]_i_3__0 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA_reg[55]_0 ),
        .I2(\TX_DATA_reg[55]_1 ),
        .O(\TX_DATA[55]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEEE2E)) 
    TX_HEADER_1_i_1__1
       (.I0(D),
        .I1(txdatavalid_symgen_i_lane2),
        .I2(TX_HEADER_1_reg_0),
        .I3(gen_cc_i),
        .I4(gen_ch_bond_i),
        .I5(stg5_reg_0),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_112
   (stg5_reg_0,
    TX_HEADER_1_reg,
    stg5_reg_1,
    stg5_reg_2,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg5_reg_3,
    D,
    txdatavalid_symgen_i_lane1,
    TX_HEADER_1_reg_0,
    gen_cc_i,
    gen_ch_bond_i,
    \TX_DATA_reg[55] ,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 );
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  output [0:0]stg5_reg_1;
  output stg5_reg_2;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg5_reg_3;
  input [0:0]D;
  input txdatavalid_symgen_i_lane1;
  input TX_HEADER_1_reg_0;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input [0:0]\TX_DATA_reg[55] ;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;

  wire [0:0]D;
  wire \TX_DATA[55]_i_3__1_n_0 ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire [0:0]stg5_reg_1;
  wire stg5_reg_2;
  wire stg5_reg_3;
  wire txdatavalid_symgen_i_lane1;

  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \TX_DATA[53]_i_2__0 
       (.I0(stg5_reg_0),
        .I1(gen_cc_i),
        .I2(gen_ch_bond_i),
        .O(stg5_reg_2));
  LUT6 #(
    .INIT(64'h5555000055553000)) 
    \TX_DATA[55]_i_2__1 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA[55]_i_3__1_n_0 ),
        .I2(\TX_DATA_reg[55] ),
        .I3(TX_HEADER_1_reg_0),
        .I4(gen_cc_i),
        .I5(gen_ch_bond_i),
        .O(stg5_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \TX_DATA[55]_i_3__1 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA_reg[55]_0 ),
        .I2(\TX_DATA_reg[55]_1 ),
        .O(\TX_DATA[55]_i_3__1_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEEEEE2E)) 
    TX_HEADER_1_i_1__0
       (.I0(D),
        .I1(txdatavalid_symgen_i_lane1),
        .I2(TX_HEADER_1_reg_0),
        .I3(gen_cc_i),
        .I4(gen_ch_bond_i),
        .I5(stg5_reg_0),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_3),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_118
   (stg5_reg_0,
    TX_HEADER_1_reg,
    stg5_reg_1,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg4_reg_0,
    D,
    txdatavalid_symgen_i,
    gen_cc_i,
    gen_ch_bond_i,
    TX_HEADER_1_reg_0,
    \TX_DATA_reg[55] ,
    \TX_DATA_reg[55]_0 ,
    \TX_DATA_reg[55]_1 );
  output stg5_reg_0;
  output TX_HEADER_1_reg;
  output [0:0]stg5_reg_1;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg4_reg_0;
  input [0:0]D;
  input txdatavalid_symgen_i;
  input [0:0]gen_cc_i;
  input [0:0]gen_ch_bond_i;
  input TX_HEADER_1_reg_0;
  input [0:0]\TX_DATA_reg[55] ;
  input \TX_DATA_reg[55]_0 ;
  input \TX_DATA_reg[55]_1 ;

  wire [0:0]D;
  wire \TX_DATA[55]_i_3__2_n_0 ;
  wire [0:0]\TX_DATA_reg[55] ;
  wire \TX_DATA_reg[55]_0 ;
  wire \TX_DATA_reg[55]_1 ;
  wire TX_HEADER_1_reg;
  wire TX_HEADER_1_reg_0;
  wire [0:0]gen_cc_i;
  wire [0:0]gen_ch_bond_i;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire [0:0]stg5_reg_1;
  wire txdatavalid_symgen_i;

  LUT6 #(
    .INIT(64'h5500553055005500)) 
    \TX_DATA[55]_i_2__2 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA[55]_i_3__2_n_0 ),
        .I2(\TX_DATA_reg[55] ),
        .I3(gen_cc_i),
        .I4(gen_ch_bond_i),
        .I5(TX_HEADER_1_reg_0),
        .O(stg5_reg_1));
  LUT3 #(
    .INIT(8'hBF)) 
    \TX_DATA[55]_i_3__2 
       (.I0(stg5_reg_0),
        .I1(\TX_DATA_reg[55]_0 ),
        .I2(\TX_DATA_reg[55]_1 ),
        .O(\TX_DATA[55]_i_3__2_n_0 ));
  LUT6 #(
    .INIT(64'h00000000EEE2EEEE)) 
    TX_HEADER_1_i_1
       (.I0(D),
        .I1(txdatavalid_symgen_i),
        .I2(gen_cc_i),
        .I3(gen_ch_bond_i),
        .I4(TX_HEADER_1_reg_0),
        .I5(stg5_reg_0),
        .O(TX_HEADER_1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_5
   (link_reset_sync,
    link_reset_out,
    stg4_reg_0);
  output link_reset_sync;
  input link_reset_out;
  input stg4_reg_0;

  wire link_reset_out;
  wire link_reset_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(link_reset_out),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(link_reset_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_6
   (power_down_sync,
    power_down,
    stg5_reg_0);
  output power_down_sync;
  input power_down;
  input stg5_reg_0;

  wire power_down;
  wire power_down_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(power_down),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(power_down_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync_7
   (fsm_resetdone_sync,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg5_reg_0);
  output fsm_resetdone_sync;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg5_reg_0;

  wire fsm_resetdone_sync;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_sync),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized0
   (stg3_reg_0,
    out,
    stg2_reg_0);
  output stg3_reg_0;
  input out;
  input stg2_reg_0;

  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg2_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  assign stg3_reg_0 = stg3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(out),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg2_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized0_26
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized0_27
   (stg3_reg_0,
    out,
    stg3_reg_1,
    FSM_RESETDONE_j_reg);
  output stg3_reg_0;
  input out;
  input stg3_reg_1;
  input FSM_RESETDONE_j_reg;

  wire FSM_RESETDONE_j_reg;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire stg3_reg_1;

  LUT2 #(
    .INIT(4'h8)) 
    prmry_in_inferred_i_1__0
       (.I0(stg3),
        .I1(FSM_RESETDONE_j_reg),
        .O(stg3_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(out),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized0_28
   (out,
    gtwiz_userclk_rx_usrclk_out);
  input out;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire out;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(out),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1
   (E,
    in0,
    init_clk,
    Q,
    \FSM_onehot_cdr_reset_fsm_r_reg[0] );
  output [0:0]E;
  input in0;
  input init_clk;
  input [2:0]Q;
  input \FSM_onehot_cdr_reset_fsm_r_reg[0] ;

  wire [0:0]E;
  wire \FSM_onehot_cdr_reset_fsm_r_reg[0] ;
  wire [2:0]Q;
  wire blocksync_all_lanes_instableclk;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \FSM_onehot_cdr_reset_fsm_r[2]_i_2 
       (.I0(Q[1]),
        .I1(\FSM_onehot_cdr_reset_fsm_r_reg[0] ),
        .I2(blocksync_all_lanes_instableclk),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(E));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(blocksync_all_lanes_instableclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_29
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire allow_block_sync_propagation_inrxclk;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT1 #(
    .INIT(2'h1)) 
    rxlossofsync_out_q_i_1
       (.I0(allow_block_sync_propagation_inrxclk),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(allow_block_sync_propagation_inrxclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_30
   (fsm_resetdone_to_new_gtx_rx_comb,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output fsm_resetdone_to_new_gtx_rx_comb;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire fsm_resetdone_to_new_gtx_rx_comb;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_new_gtx_rx_comb),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_31
   (fsm_resetdone_initclk,
    SR,
    in0,
    init_clk,
    \hard_err_cntr_r_reg[7] ,
    reset_initclk,
    out,
    \hard_err_cntr_r_reg[7]_0 );
  output fsm_resetdone_initclk;
  output [0:0]SR;
  input in0;
  input init_clk;
  input \hard_err_cntr_r_reg[7] ;
  input reset_initclk;
  input out;
  input \hard_err_cntr_r_reg[7]_0 ;

  wire [0:0]SR;
  wire fsm_resetdone_initclk;
  wire \hard_err_cntr_r_reg[7] ;
  wire \hard_err_cntr_r_reg[7]_0 ;
  wire in0;
  wire init_clk;
  wire out;
  wire reset_initclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  LUT5 #(
    .INIT(32'hFFFFAAFB)) 
    \hard_err_cntr_r[7]_i_1 
       (.I0(\hard_err_cntr_r_reg[7] ),
        .I1(fsm_resetdone_initclk),
        .I2(reset_initclk),
        .I3(out),
        .I4(\hard_err_cntr_r_reg[7]_0 ),
        .O(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_32
   (SR,
    in0,
    stg4_reg_0);
  output [0:0]SR;
  input in0;
  input stg4_reg_0;

  wire [0:0]SR;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(SR),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_33
   (reset_initclk,
    \dly_gt_rst_r_reg[18] ,
    \dly_gt_rst_r_reg[18]_0 ,
    \dly_gt_rst_r_reg[18]_1 ,
    \dly_gt_rst_r_reg[18]_2 ,
    SR,
    init_clk,
    \count_for_reset_r_reg[23] ,
    out,
    fsm_resetdone_initclk,
    \count_for_reset_r_reg[23]_0 ,
    valid_btf_detect_dlyd1,
    valid_btf_detect_dlyd1_0,
    valid_btf_detect_dlyd1_1,
    valid_btf_detect_dlyd1_2);
  output reset_initclk;
  output \dly_gt_rst_r_reg[18] ;
  output \dly_gt_rst_r_reg[18]_0 ;
  output \dly_gt_rst_r_reg[18]_1 ;
  output \dly_gt_rst_r_reg[18]_2 ;
  input [0:0]SR;
  input init_clk;
  input \count_for_reset_r_reg[23] ;
  input out;
  input fsm_resetdone_initclk;
  input \count_for_reset_r_reg[23]_0 ;
  input valid_btf_detect_dlyd1;
  input valid_btf_detect_dlyd1_0;
  input valid_btf_detect_dlyd1_1;
  input valid_btf_detect_dlyd1_2;

  wire [0:0]SR;
  wire \count_for_reset_r_reg[23] ;
  wire \count_for_reset_r_reg[23]_0 ;
  wire \dly_gt_rst_r_reg[18] ;
  wire \dly_gt_rst_r_reg[18]_0 ;
  wire \dly_gt_rst_r_reg[18]_1 ;
  wire \dly_gt_rst_r_reg[18]_2 ;
  wire fsm_resetdone_initclk;
  wire init_clk;
  wire out;
  wire reset_initclk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire valid_btf_detect_dlyd1;
  wire valid_btf_detect_dlyd1_0;
  wire valid_btf_detect_dlyd1_1;
  wire valid_btf_detect_dlyd1_2;

  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1 
       (.I0(\count_for_reset_r_reg[23] ),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23]_0 ),
        .I5(valid_btf_detect_dlyd1),
        .O(\dly_gt_rst_r_reg[18] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__0 
       (.I0(\count_for_reset_r_reg[23] ),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23]_0 ),
        .I5(valid_btf_detect_dlyd1_0),
        .O(\dly_gt_rst_r_reg[18]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__1 
       (.I0(\count_for_reset_r_reg[23] ),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23]_0 ),
        .I5(valid_btf_detect_dlyd1_1),
        .O(\dly_gt_rst_r_reg[18]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFBABB)) 
    \count_for_reset_r[0]_i_1__2 
       (.I0(\count_for_reset_r_reg[23] ),
        .I1(out),
        .I2(reset_initclk),
        .I3(fsm_resetdone_initclk),
        .I4(\count_for_reset_r_reg[23]_0 ),
        .I5(valid_btf_detect_dlyd1_2),
        .O(\dly_gt_rst_r_reg[18]_2 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(SR),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(reset_initclk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_34
   (fsm_resetdone_to_rxreset_in,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output fsm_resetdone_to_rxreset_in;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire fsm_resetdone_to_rxreset_in;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fsm_resetdone_to_rxreset_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_35
   (in0,
    E,
    init_clk);
  output in0;
  input [0:0]E;
  input init_clk;

  wire [0:0]E;
  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(E),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg4),
        .Q(in0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_37
   (stg5_reg_0,
    in0,
    stg5_reg_1);
  output stg5_reg_0;
  input in0;
  input stg5_reg_1;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;
  wire stg5_reg_1;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_1),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_38
   (cbcc_only_reset_rd_clk,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg5_reg_0);
  output cbcc_only_reset_rd_clk;
  input [0:0]stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg5_reg_0;

  wire cbcc_only_reset_rd_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire [0:0]stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4;
  wire stg5_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg5_reg_0),
        .CE(1'b1),
        .D(stg4),
        .Q(cbcc_only_reset_rd_clk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_39
   (stg5_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0);
  output stg5_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;

  wire fifo_reset_wr_sync3;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_n_0;
  wire stg5_reg_0;

  LUT2 #(
    .INIT(4'hE)) 
    prmry_in_inferred_i_1
       (.I0(fifo_reset_wr_sync3),
        .I1(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .O(stg5_reg_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(fifo_reset_wr_sync3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_40
   (stg3_reg_0,
    in0,
    stg3_reg_1);
  output stg3_reg_0;
  input in0;
  input stg3_reg_1;

  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;
  wire stg3_reg_1;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg3_reg_1),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_rd_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(stg3_reg_1),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_41
   (stg3_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg3_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_wr_clk/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_42
   (stg5,
    rd_stg1_reg,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg4_reg_0,
    rd_stg1);
  output stg5;
  output rd_stg1_reg;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg4_reg_0;
  input rd_stg1;

  wire rd_stg1;
  wire rd_stg1_reg;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg4_reg_0;
  wire stg4_reg_n_0;
  wire stg5;

  LUT2 #(
    .INIT(4'hE)) 
    cbcc_reset_cbstg2_rd_clk_i_1
       (.I0(rd_stg1),
        .I1(stg5),
        .O(rd_stg1_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg4_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg3),
        .Q(stg4_reg_n_0),
        .R(1'b0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg5_reg
       (.C(stg4_reg_0),
        .CE(1'b1),
        .D(stg4_reg_n_0),
        .Q(stg5),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_45
   (stg3_reg_0,
    in0,
    init_clk);
  output stg3_reg_0;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane3_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_49
   (stg3_reg_0,
    in0,
    init_clk);
  output stg3_reg_0;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane2_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_54
   (stg3_reg_0,
    in0,
    init_clk);
  output stg3_reg_0;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_lane1_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized1_65
   (stg3_reg_0,
    in0,
    init_clk);
  output stg3_reg_0;
  input in0;
  input init_clk;

  wire in0;
  wire init_clk;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg3_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(init_clk),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/cbcc_gtx0_i/u_rst_sync_btf_sync/stg5_reg_srl2 " *) 
  SRL16E #(
    .INIT(16'h0003)) 
    stg5_reg_srl2
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(init_clk),
        .D(stg3),
        .Q(stg3_reg_0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized2
   (stg11_reg_0,
    in0,
    gtwiz_userclk_rx_usrclk_out);
  output stg11_reg_0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;

  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  wire stg10_reg_srl7_n_0;
  wire stg11_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;

  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_user_clk/stg10_reg_srl7 " *) 
  SRL16E #(
    .INIT(16'h007F)) 
    stg10_reg_srl7
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg10_reg_srl7_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg11_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg10_reg_srl7_n_0),
        .Q(stg11_reg_0),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized3
   (fifo_reset_comb_user_clk_int,
    dbg_srst_assert0,
    in0,
    gtwiz_userclk_rx_usrclk_out,
    dbg_srst_assert_reg);
  output fifo_reset_comb_user_clk_int;
  output dbg_srst_assert0;
  input in0;
  input gtwiz_userclk_rx_usrclk_out;
  input dbg_srst_assert_reg;

  wire dbg_srst_assert0;
  wire dbg_srst_assert_reg;
  wire fifo_reset_comb_user_clk_int;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  wire stg20_reg_srl17_n_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire NLW_stg20_reg_srl17_Q31_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    dbg_srst_assert_i_1
       (.I0(dbg_srst_assert_reg),
        .I1(fifo_reset_comb_user_clk_int),
        .O(dbg_srst_assert0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(in0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_fifo_reset_comb_user_clk_in/stg20_reg_srl17 " *) 
  SRLC32E #(
    .INIT(32'h0001FFFF)) 
    stg20_reg_srl17
       (.A({1'b1,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg20_reg_srl17_n_0),
        .Q31(NLW_stg20_reg_srl17_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg21_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg20_reg_srl17_n_0),
        .Q(fifo_reset_comb_user_clk_int),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized4
   (cbcc_fifo_reset_to_fifo_wr_clk,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    gtwiz_userclk_rx_usrclk_out,
    cbcc_fifo_reset_to_fifo_wr_clk_dlyd,
    in0,
    cbc_wr_if_reset_reg);
  output cbcc_fifo_reset_to_fifo_wr_clk;
  output cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input gtwiz_userclk_rx_usrclk_out;
  input cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  input in0;
  input cbc_wr_if_reset_reg;

  wire cbc_wr_if_reset_reg;
  wire cbcc_fifo_reset_to_fifo_wr_clk;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg;
  wire gtwiz_userclk_rx_usrclk_out;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg8_reg_srl5_n_0;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_wr_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_wr_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_wr_clk),
        .I2(in0),
        .I3(cbc_wr_if_reset_reg),
        .O(cbcc_fifo_reset_to_fifo_wr_clk_dlyd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_wr_clk/stg8_reg_srl5 " *) 
  SRL16E #(
    .INIT(16'h001F)) 
    stg8_reg_srl5
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(gtwiz_userclk_rx_usrclk_out),
        .D(stg3),
        .Q(stg8_reg_srl5_n_0));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg9_reg
       (.C(gtwiz_userclk_rx_usrclk_out),
        .CE(1'b1),
        .D(stg8_reg_srl5_n_0),
        .Q(cbcc_fifo_reset_to_fifo_wr_clk),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "board_aurora_64b66b_0_2_rst_sync" *) 
module board_aurora_64b66b_0_2_rst_sync__parameterized5
   (cbcc_fifo_reset_to_fifo_rd_clk,
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg,
    stg1_board_aurora_64b66b_0_2_cdc_to_reg_0,
    stg31_reg_0,
    cbcc_fifo_reset_to_fifo_rd_clk_dlyd,
    in0);
  output cbcc_fifo_reset_to_fifo_rd_clk;
  output cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg;
  input stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  input stg31_reg_0;
  input cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  input in0;

  wire cbcc_fifo_reset_to_fifo_rd_clk;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd;
  wire cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg;
  wire in0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg1_board_aurora_64b66b_0_2_cdc_to;
  wire stg1_board_aurora_64b66b_0_2_cdc_to_reg_0;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg2;
  (* async_reg = "true" *) (* shift_extract = "{no}" *) wire stg3;
  wire stg30_reg_srl27_n_0;
  wire stg31_reg_0;
  wire NLW_stg30_reg_srl27_Q31_UNCONNECTED;

  LUT4 #(
    .INIT(16'hFFD0)) 
    cbc_rd_if_reset_i_1
       (.I0(cbcc_fifo_reset_to_fifo_rd_clk_dlyd),
        .I1(cbcc_fifo_reset_to_fifo_rd_clk),
        .I2(in0),
        .I3(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .O(cbcc_fifo_reset_to_fifo_rd_clk_dlyd_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg1_board_aurora_64b66b_0_2_cdc_to_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to_reg_0),
        .Q(stg1_board_aurora_64b66b_0_2_cdc_to),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg2_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg1_board_aurora_64b66b_0_2_cdc_to),
        .Q(stg2),
        .R(1'b0));
  (* srl_name = "inst/\board_aurora_64b66b_0_2_core_i/board_aurora_64b66b_0_2_wrapper_i/common_reset_cbcc_i/u_rst_sync_reset_to_fifo_rd_clk/stg30_reg_srl27 " *) 
  SRLC32E #(
    .INIT(32'h07FFFFFF)) 
    stg30_reg_srl27
       (.A({1'b1,1'b1,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(stg31_reg_0),
        .D(stg3),
        .Q(stg30_reg_srl27_n_0),
        .Q31(NLW_stg30_reg_srl27_Q31_UNCONNECTED));
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg31_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg30_reg_srl27_n_0),
        .Q(cbcc_fifo_reset_to_fifo_rd_clk),
        .R(1'b0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* shift_extract = "{no}" *) 
  FDRE #(
    .INIT(1'b1)) 
    stg3_reg
       (.C(stg31_reg_0),
        .CE(1'b1),
        .D(stg2),
        .Q(stg3),
        .R(1'b0));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) 
module board_aurora_64b66b_0_2_support
   (s_axi_tx_tdata,
    s_axi_tx_tvalid,
    s_axi_tx_tready,
    m_axi_rx_tdata,
    m_axi_rx_tvalid,
    rxp,
    rxn,
    txp,
    txn,
    hard_err,
    soft_err,
    channel_up,
    lane_up,
    user_clk_out,
    sync_clk_out,
    reset_pb,
    gt_rxcdrovrden_in,
    power_down,
    loopback,
    pma_init,
    gt0_drpdo,
    gt0_drprdy,
    gt1_drpdo,
    gt1_drprdy,
    gt2_drpdo,
    gt2_drprdy,
    gt3_drpdo,
    gt3_drprdy,
    gt0_drpaddr,
    gt0_drpdi,
    gt0_drpen,
    gt0_drpwe,
    gt1_drpaddr,
    gt1_drpdi,
    gt1_drpen,
    gt1_drpwe,
    gt2_drpaddr,
    gt2_drpdi,
    gt2_drpen,
    gt2_drpwe,
    gt3_drpaddr,
    gt3_drpdi,
    gt3_drpen,
    gt3_drpwe,
    init_clk,
    link_reset_out,
    gt_pll_lock,
    sys_reset_out,
    gt_reset_out,
    gt_refclk1_p,
    gt_refclk1_n,
    gt_refclk1_out,
    gt_powergood,
    gt_qpllclk_quad1_out,
    gt_qpllrefclk_quad1_out,
    gt_qplllock_quad1_out,
    gt_qpllrefclklost_quad1_out,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    tx_out_clk);
  input [0:255]s_axi_tx_tdata;
  input s_axi_tx_tvalid;
  output s_axi_tx_tready;
  output [0:255]m_axi_rx_tdata;
  output m_axi_rx_tvalid;
  input [0:3]rxp;
  input [0:3]rxn;
  output [0:3]txp;
  output [0:3]txn;
  output hard_err;
  output soft_err;
  output channel_up;
  output [0:3]lane_up;
  output user_clk_out;
  output sync_clk_out;
  input reset_pb;
  input gt_rxcdrovrden_in;
  input power_down;
  input [2:0]loopback;
  input pma_init;
  output [15:0]gt0_drpdo;
  output gt0_drprdy;
  output [15:0]gt1_drpdo;
  output gt1_drprdy;
  output [15:0]gt2_drpdo;
  output gt2_drprdy;
  output [15:0]gt3_drpdo;
  output gt3_drprdy;
  input [9:0]gt0_drpaddr;
  input [15:0]gt0_drpdi;
  input gt0_drpen;
  input gt0_drpwe;
  input [9:0]gt1_drpaddr;
  input [15:0]gt1_drpdi;
  input gt1_drpen;
  input gt1_drpwe;
  input [9:0]gt2_drpaddr;
  input [15:0]gt2_drpdi;
  input gt2_drpen;
  input gt2_drpwe;
  input [9:0]gt3_drpaddr;
  input [15:0]gt3_drpdi;
  input gt3_drpen;
  input gt3_drpwe;
  input init_clk;
  output link_reset_out;
  output gt_pll_lock;
  output sys_reset_out;
  output gt_reset_out;
  input gt_refclk1_p;
  input gt_refclk1_n;
  output gt_refclk1_out;
  output [3:0]gt_powergood;
  output gt_qpllclk_quad1_out;
  output gt_qpllrefclk_quad1_out;
  output gt_qplllock_quad1_out;
  output gt_qpllrefclklost_quad1_out;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  output tx_out_clk;

  wire \<const0> ;
  wire board_aurora_64b66b_0_2_core_i_n_26;
  wire channel_up;
  wire gt_pll_lock;
  wire [3:0]gt_powergood;
  wire gt_qpllclk_quad1_out;
  wire gt_qplllock_quad1_out;
  wire gt_qpllrefclk_quad1_out;
  wire gt_qpllrefclklost_quad1_out;
  wire gt_refclk1_n;
  wire gt_refclk1_out;
  wire gt_refclk1_p;
  wire gt_reset_out;
  wire gt_reset_sync_n_0;
  wire gt_rxcdrovrden_in;
  wire gt_to_common_qpllreset_i;
  wire hard_err;
  wire init_clk;
  wire [0:3]lane_up;
  wire link_reset_out;
  wire [2:0]loopback;
  wire lopt;
  wire lopt_1;
  wire lopt_2;
  wire [0:255]m_axi_rx_tdata;
  wire m_axi_rx_tvalid;
  wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire pma_init;
  wire power_down;
  wire reset_pb;
  wire [0:3]rxn;
  wire [0:3]rxp;
  wire [0:255]s_axi_tx_tdata;
  wire s_axi_tx_tready;
  wire s_axi_tx_tvalid;
  wire soft_err;
  wire stg5;
  wire sys_reset_out;
  wire sysreset_from_support;
  wire tx_out_clk;
  wire [0:3]txn;
  wire [0:3]txp;
  wire user_clk_out;
  wire NLW_IBUFDS_GTE4_refclk1_ODIV2_UNCONNECTED;

  assign gt0_drpdo[15] = \<const0> ;
  assign gt0_drpdo[14] = \<const0> ;
  assign gt0_drpdo[13] = \<const0> ;
  assign gt0_drpdo[12] = \<const0> ;
  assign gt0_drpdo[11] = \<const0> ;
  assign gt0_drpdo[10] = \<const0> ;
  assign gt0_drpdo[9] = \<const0> ;
  assign gt0_drpdo[8] = \<const0> ;
  assign gt0_drpdo[7] = \<const0> ;
  assign gt0_drpdo[6] = \<const0> ;
  assign gt0_drpdo[5] = \<const0> ;
  assign gt0_drpdo[4] = \<const0> ;
  assign gt0_drpdo[3] = \<const0> ;
  assign gt0_drpdo[2] = \<const0> ;
  assign gt0_drpdo[1] = \<const0> ;
  assign gt0_drpdo[0] = \<const0> ;
  assign gt0_drprdy = \<const0> ;
  assign gt1_drpdo[15] = \<const0> ;
  assign gt1_drpdo[14] = \<const0> ;
  assign gt1_drpdo[13] = \<const0> ;
  assign gt1_drpdo[12] = \<const0> ;
  assign gt1_drpdo[11] = \<const0> ;
  assign gt1_drpdo[10] = \<const0> ;
  assign gt1_drpdo[9] = \<const0> ;
  assign gt1_drpdo[8] = \<const0> ;
  assign gt1_drpdo[7] = \<const0> ;
  assign gt1_drpdo[6] = \<const0> ;
  assign gt1_drpdo[5] = \<const0> ;
  assign gt1_drpdo[4] = \<const0> ;
  assign gt1_drpdo[3] = \<const0> ;
  assign gt1_drpdo[2] = \<const0> ;
  assign gt1_drpdo[1] = \<const0> ;
  assign gt1_drpdo[0] = \<const0> ;
  assign gt1_drprdy = \<const0> ;
  assign gt2_drpdo[15] = \<const0> ;
  assign gt2_drpdo[14] = \<const0> ;
  assign gt2_drpdo[13] = \<const0> ;
  assign gt2_drpdo[12] = \<const0> ;
  assign gt2_drpdo[11] = \<const0> ;
  assign gt2_drpdo[10] = \<const0> ;
  assign gt2_drpdo[9] = \<const0> ;
  assign gt2_drpdo[8] = \<const0> ;
  assign gt2_drpdo[7] = \<const0> ;
  assign gt2_drpdo[6] = \<const0> ;
  assign gt2_drpdo[5] = \<const0> ;
  assign gt2_drpdo[4] = \<const0> ;
  assign gt2_drpdo[3] = \<const0> ;
  assign gt2_drpdo[2] = \<const0> ;
  assign gt2_drpdo[1] = \<const0> ;
  assign gt2_drpdo[0] = \<const0> ;
  assign gt2_drprdy = \<const0> ;
  assign gt3_drpdo[15] = \<const0> ;
  assign gt3_drpdo[14] = \<const0> ;
  assign gt3_drpdo[13] = \<const0> ;
  assign gt3_drpdo[12] = \<const0> ;
  assign gt3_drpdo[11] = \<const0> ;
  assign gt3_drpdo[10] = \<const0> ;
  assign gt3_drpdo[9] = \<const0> ;
  assign gt3_drpdo[8] = \<const0> ;
  assign gt3_drpdo[7] = \<const0> ;
  assign gt3_drpdo[6] = \<const0> ;
  assign gt3_drpdo[5] = \<const0> ;
  assign gt3_drpdo[4] = \<const0> ;
  assign gt3_drpdo[3] = \<const0> ;
  assign gt3_drpdo[2] = \<const0> ;
  assign gt3_drpdo[1] = \<const0> ;
  assign gt3_drpdo[0] = \<const0> ;
  assign gt3_drprdy = \<const0> ;
  assign sync_clk_out = user_clk_out;
  GND GND
       (.G(\<const0> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  IBUFDS_GTE4 #(
    .REFCLK_EN_TX_PATH(1'b0),
    .REFCLK_HROW_CK_SEL(2'b00),
    .REFCLK_ICNTL_RX(2'b00)) 
    IBUFDS_GTE4_refclk1
       (.CEB(1'b0),
        .I(gt_refclk1_p),
        .IB(gt_refclk1_n),
        .O(gt_refclk1_out),
        .ODIV2(NLW_IBUFDS_GTE4_refclk1_ODIV2_UNCONNECTED));
  board_aurora_64b66b_0_2_core board_aurora_64b66b_0_2_core_i
       (.CHANNEL_UP_RX_IF_reg(channel_up),
        .SYSTEM_RESET_reg(sys_reset_out),
        .\TX_PE_DATA_V_reg[0] (user_clk_out),
        .gt_pll_lock(gt_pll_lock),
        .gt_powergood(gt_powergood),
        .gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gt_rxcdrovrden_in(gt_rxcdrovrden_in),
        .gtwiz_reset_qpll0reset_out(gt_to_common_qpllreset_i),
        .\gtye4_channel_gen.gen_gtye4_channel_inst[1].GTYE4_CHANNEL_PRIM_INST (board_aurora_64b66b_0_2_core_i_n_26),
        .hard_err(hard_err),
        .init_clk(init_clk),
        .lane_up_flop_i(lane_up[0]),
        .lane_up_flop_i_0(lane_up[1]),
        .lane_up_flop_i_1(lane_up[2]),
        .lane_up_flop_i_2(lane_up[3]),
        .link_reset_out(link_reset_out),
        .loopback(loopback),
        .lopt(lopt),
        .lopt_1(board_aurora_64b66b_0_2_core_i_n_26),
        .lopt_2(lopt_1),
        .lopt_3(lopt_2),
        .m_axi_rx_tdata(m_axi_rx_tdata),
        .m_axi_rx_tvalid(m_axi_rx_tvalid),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .power_down(power_down),
        .rst_in_out_reg(gt_reset_out),
        .rxn(rxn),
        .rxp(rxp),
        .s_axi_tx_tdata(s_axi_tx_tdata),
        .s_axi_tx_tready(s_axi_tx_tready),
        .s_axi_tx_tvalid(s_axi_tx_tvalid),
        .soft_err(soft_err),
        .sysreset_from_support(sysreset_from_support),
        .tx_out_clk(tx_out_clk),
        .txn(txn),
        .txp(txp));
  board_aurora_64b66b_0_2_CLOCK_MODULE clock_module_i
       (.\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst (user_clk_out),
        .\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 (board_aurora_64b66b_0_2_core_i_n_26),
        .lopt(lopt),
        .lopt_1(lopt_1),
        .lopt_2(lopt_2),
        .mmcm_not_locked_out(mmcm_not_locked_out),
        .mmcm_not_locked_out2(mmcm_not_locked_out2),
        .tx_out_clk(tx_out_clk));
  board_aurora_64b66b_0_2_rst_sync gt_reset_sync
       (.D(gt_reset_sync_n_0),
        .init_clk(init_clk),
        .pma_init(pma_init));
  board_aurora_64b66b_0_2_rst_sync_0 reset_pb_sync
       (.D(stg5),
        .reset_pb(reset_pb),
        .stg4_reg_0(user_clk_out));
  board_aurora_64b66b_0_2_SUPPORT_RESET_LOGIC support_reset_logic_i
       (.D(stg5),
        .\debounce_gt_rst_r_reg[0]_0 (gt_reset_sync_n_0),
        .gt_reset_out(gt_reset_out),
        .init_clk(init_clk),
        .stg5_reg(user_clk_out),
        .sysreset_from_support(sysreset_from_support));
  board_aurora_64b66b_0_2_gt_common_wrapper ultrascale_gt_common_1
       (.gt_qpllclk_quad1_out(gt_qpllclk_quad1_out),
        .gt_qplllock_quad1_out(gt_qplllock_quad1_out),
        .gt_qpllrefclk_quad1_out(gt_qpllrefclk_quad1_out),
        .gt_qpllrefclklost_quad1_out(gt_qpllrefclklost_quad1_out),
        .gt_refclk1_out(gt_refclk1_out),
        .gtwiz_reset_qpll0reset_out(gt_to_common_qpllreset_i),
        .init_clk(init_clk));
endmodule

(* DowngradeIPIdentifiedWarnings = "yes" *) (* P_CONTENTS = "0" *) (* P_FREQ_RATIO_SOURCE_TO_USRCLK = "1" *) 
(* P_FREQ_RATIO_USRCLK_TO_USRCLK2 = "1" *) (* P_USRCLK2_DIV = "3'b000" *) (* P_USRCLK2_INT_DIV = "0" *) 
(* P_USRCLK_DIV = "3'b000" *) (* P_USRCLK_INT_DIV = "0" *) (* keep_hierarchy = "soft" *) 
module board_aurora_64b66b_0_2_ultrascale_rx_userclk
   (gtwiz_reset_clk_freerun_in,
    gtwiz_userclk_rx_srcclk_in,
    gtwiz_userclk_rx_reset_in,
    gtwiz_userclk_rx_usrclk_out,
    gtwiz_userclk_rx_usrclk2_out,
    gtwiz_userclk_rx_active_out,
    lopt,
    lopt_1,
    lopt_2);
  input gtwiz_reset_clk_freerun_in;
  input gtwiz_userclk_rx_srcclk_in;
  input gtwiz_userclk_rx_reset_in;
  output gtwiz_userclk_rx_usrclk_out;
  output gtwiz_userclk_rx_usrclk2_out;
  output gtwiz_userclk_rx_active_out;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_board_aurora_64b66b_0_2_cdc_to ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ;
  wire gtwiz_userclk_rx_active_out;
  wire gtwiz_userclk_rx_reset_in;
  wire gtwiz_userclk_rx_srcclk_in;
  wire gtwiz_userclk_rx_usrclk2_out;
  wire \^lopt ;
  wire \^lopt_1 ;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign gtwiz_userclk_rx_usrclk_out = gtwiz_userclk_rx_usrclk2_out;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    \gen_gtwiz_userclk_rx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(gtwiz_userclk_rx_srcclk_in),
        .O(gtwiz_userclk_rx_usrclk2_out));
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.gtwiz_userclk_rx_active_out_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ),
        .Q(gtwiz_userclk_rx_active_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_board_aurora_64b66b_0_2_cdc_to_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(1'b1),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_board_aurora_64b66b_0_2_cdc_to ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2_reg 
       (.C(gtwiz_userclk_rx_usrclk2_out),
        .CE(1'b1),
        .CLR(gtwiz_userclk_rx_reset_in),
        .D(\gen_gtwiz_userclk_rx_main.rx_active_board_aurora_64b66b_0_2_cdc_to ),
        .Q(\gen_gtwiz_userclk_rx_main.rx_active_cdc_to_stg2 ));
endmodule

module board_aurora_64b66b_0_2_ultrascale_tx_userclk
   (\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ,
    mmcm_not_locked_out,
    mmcm_not_locked_out2,
    \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ,
    tx_out_clk,
    lopt,
    lopt_1,
    lopt_2);
  output \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  output mmcm_not_locked_out;
  output mmcm_not_locked_out2;
  input \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ;
  input tx_out_clk;
  output lopt;
  input lopt_1;
  input lopt_2;

  wire \<const1> ;
  wire \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ;
  wire \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_tx_main.tx_active_board_aurora_64b66b_0_2_cdc_to ;
  (* async_reg = "true" *) wire \gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ;
  wire \^lopt ;
  wire \^lopt_1 ;
  (* async_reg = "true" *) wire mmcm_not_locked_out;
  wire mmcm_not_locked_out2;
  wire tx_out_clk;

  assign \^lopt  = lopt_1;
  assign \^lopt_1  = lopt_2;
  assign lopt = \<const1> ;
  VCC VCC
       (.P(\<const1> ));
  (* BOX_TYPE = "PRIMITIVE" *) 
  (* OPT_MODIFIED = "MLO" *) 
  BUFG_GT #(
    .SIM_DEVICE("ULTRASCALE"),
    .STARTUP_SYNC("FALSE")) 
    \gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst 
       (.CE(\^lopt ),
        .CEMASK(1'b0),
        .CLR(\^lopt_1 ),
        .CLRMASK(1'b0),
        .DIV({1'b0,1'b0,1'b0}),
        .I(tx_out_clk),
        .O(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.gtwiz_userclk_tx_active_out_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ),
        .D(\gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ),
        .Q(mmcm_not_locked_out));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.tx_active_board_aurora_64b66b_0_2_cdc_to_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ),
        .D(1'b1),
        .Q(\gen_gtwiz_userclk_tx_main.tx_active_board_aurora_64b66b_0_2_cdc_to ));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2_reg 
       (.C(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_0 ),
        .CE(1'b1),
        .CLR(\gen_gtwiz_userclk_tx_main.bufg_gt_usrclk_inst_1 ),
        .D(\gen_gtwiz_userclk_tx_main.tx_active_board_aurora_64b66b_0_2_cdc_to ),
        .Q(\gen_gtwiz_userclk_tx_main.tx_active_cdc_to_stg2 ));
  LUT1 #(
    .INIT(2'h1)) 
    mmcm_not_locked_out2_INST_0
       (.I0(mmcm_not_locked_out),
        .O(mmcm_not_locked_out2));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2021.1"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
qsH+0xVeIy6Vv34SDZ9xCV3CDYw7f9WBctc/PzukbtVJ7nBFwS4nDrTimVYr75P82Ott++fhdYED
fiPmEFqDaO8Tznx/cWmCJ4ZP05v5Nj5W0U1qbHMG2yoFI9+F69cU0GpYqgA2+Y5Ti9b4hGQsWvcM
yhhfCa1edN3SBWRnFRs=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
0AA96L6mkfzFLHzENNUCWacibTZcR2GBTVeQ7nHqU0RuzjZ/ng1W7eKq+ZSRYUwvLBeooaP2bho0
NxvQ9fH6tLhvfxxixoFJAHQUJ5OaTp58EDbkbps4xeWeUIC4tRYbtMOftt6/ipETmIqpW5AEVAVu
Pzh+URS6hYqT+sTXy3NyftONmOfBwjSiBGXIrAQykvXzGznLomop8nG5Rk6KEp7QKBb1QBKuo5ac
WUlrcQeazYGT9e+IxkEj663HXlwpHt57hGMFvG5c/m/TUNM7U3+QkUGnraHB3eK8ef+BPQwB+UxT
tbqybLiI15Ji917Zu300vD0PyUgUO70Pz4T2Ag==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
AWC9efBEWc3npQy1sZO1mYozfHm7h0KkPmaqKLNMAT36grvYnSzknIaLx4K4PBujZpKAdpQtZCYB
dTLm1wLEUKzvkOmJvpvSO/uR3NgWcAq5irDiRtidu7wq62gmpi9GbXKlyUT9beGHMnziPxH7rSvf
DsP6DYpKjM7TW5JEHG8=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
Xj/SRfNq7Y7WSKYhPYCR5X6TJyjjaAPRuL1Yj6HNY4MmXTrIMcZbvkC+xyUPfokbjwn5OivIXe35
iOTM+yfNznh10Mt3q3kvKMxpLFu5ajHxa+e7j7b2eMUllJnfkhY2bLRa28zEzkOEJpEcoq02s/gJ
LnQmArXs08Hp5vdCc48JR3MJv6k5lnmYCDe1uEFjk+XndNi6bsXOozI9UHqF6gJjxODBiHBnKYFF
G1x1um/giZLrVF30Aeosdaz7n8moxcneVeuCpdcIgpssOvD/MkxVFlIE12ho6Bwv07eAmaPHQCbM
xgEFDdBQ/vgQSn1a2MXp9XxZGWnD7Nlxa4gXRA==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
GJ7pQGVdwW35U4S1lEMXX63eg7rNbwCnU2jJSI6OReBcl7zsX9GbcmETg7x3c3jm6X8b6hjaEJp7
F1E4gb2f4q1dYBabm93wpGLk0IUZORcrndHagTupA0pWFUpCFQy8QbJEV/4s6RohK12m9hpmfLTW
qpsTByO9Ur+loN0x2Mz1nC9omizaaLcKNd67Ly7OVzCaWRu3pReKvC2C7BxItx5uJBLixpS85+9i
jVv3lg+fFSbGIXLzum8fbnF8li+UeIe1QFLuVGeRbptfEV93evj9SGczbbvWR+cgvMphX6jJRGP8
w4pxM671JEBBuWHdMwmQ7JbHdYEH2vVJWRlxuw==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_01", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
O26ycpEDdE5uO4UM6C9j0VMvr7AUcEJkRnunnb7zYX+R2nq1myxxCCQd0noQHCLHgGHMf/1JHdKr
H4E0HKilo78fKRK3mmUSQGkahzuaM7eMqtIigzdN0vUylH29MMjcGfpY76S95Epmi/xHFmLhnEIQ
wZ+flyDZPb/KuyYisKxqiHTgfwLIER4r0h2VINcuNXDyXAyRPpebJjLIIzziHqJV0bVPTa3NNqmC
db33qaZmv2eNmHk5kBTaIUu4Nz/jnjJiDSPkQ7Jq8stRCwBJUu2tf8ht1XRx40Yp0fMB5QhlGtfc
LFIajKgDBa5TnZnCts5V7c3LfARnv3Du8jvRaA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
MGoFTkgKNm+rPfjz/31xF84Dii2IDyHbzedd6JdhNZvPcYY0tSo/nWkpHrcKTCxxgGuK4FG1m93o
xZrxPhJF0mduRf5HstV1aYNozBP9m98oT57a9j/evly3pFehQF51IyxHpPOvge/lGhNJAf7p+d9e
DivxEF2uxaoya/4yh5GLdbgaeA75sJpoRU+YyOBuCIXBFMr1yLmZQmgEwlsj10tfV4Qb5utf7dNL
aMMJ9+/F219AARxNPIxYgnWNX9PTqS7IDDDWndxCHpPRuCFSGch/Ka/ajezkevYLndwrY/+tSerg
quCEXGpTnwO2dIbTn/RVOFc0x9BSNEYIh4H42g==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
aGAamGAsbCwS+Wkn8lIrdk4LHEqpaIdgKgYHoGKoL1cr6PyDA3oM+dk0chkNHz6QZeq1TC5Rm3Pt
85kufNeAkVWIRzG7TaRzEYjCT+dZhlyrQpPPZH5gJTkfGdgrnBU299dFjdgbugNFPsyWrCwRxxZt
qQb2zXcM0wE4Hsn1Uz8dLvnzoQ3AhXpdVEJnKLA/KaLML7LtxWE3a/VgmZ/a5qHpCCBHFockUlXw
eEXX+YwSH4Ek5WoyJ1m/lFbadJGmrukVGPZ17aALmkKru3KHulooQ5arzADKj6RzmnPQJC/cPfBk
omsg5FPh0/rpdiJqdwPGqHns9XqUlhul6ZybeNMuxrk8PQXhGLTbvOU/00ahh6AANbP4T9jh7Di7
OED5NGAk8blFgieTMFLd+YiSedcMgvU8vcHZ+PW+dulX2fFdMXtsCjY5YyjygP9Z1eaAmkuJUkG3
Wgnq3+5iQ/F1vRZwOt6UvqhWRMjs1rwPnXmFFcTba3424BUgBmWyHHXT

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
ZpNMrZYqJeLHXjZeb0d6EBaAKf8FC5LgIj0jJqt7SEzPKFECnsL19o47OBvYgLrxcLeAxdRb3fUK
ILYZbvBD7IQiG8UuHpkvnyEc3IpVIGh/Cdm14jHhu0XLkKU9T24y1ImHEat1IVVkMjWiCD+yF96Q
h+uGSLZNoYT3N9Sp5Pctg1ngeJ8imoiJlHV7bRr2ZQySZiqBAhjTj5t9SIAJ9Ou7Ea0GrqOAJ7Tu
zFcuj8hzoJZv50SaI8VW52N9lCo1utDigtsl95KaLf1Bb5Oh0zbrsVttGwDtACmQbxfvTQtrz2Yb
YXDEpn9milXQJBYP40DtVNVA+BonajGITKWyVg==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 222672)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
